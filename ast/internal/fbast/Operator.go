// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package fbast

type Operator = int8

const (
	OperatorInvalidOperator          Operator = 0
	OperatorMultiplicationOperator   Operator = 1
	OperatorDivisionOperator         Operator = 2
	OperatorModuloOperator           Operator = 3
	OperatorPowerOperator            Operator = 4
	OperatorAdditionOperator         Operator = 5
	OperatorSubtractionOperator      Operator = 6
	OperatorLessThanEqualOperator    Operator = 7
	OperatorLessThanOperator         Operator = 8
	OperatorGreaterThanEqualOperator Operator = 9
	OperatorGreaterThanOperator      Operator = 10
	OperatorStartsWithOperator       Operator = 11
	OperatorInOperator               Operator = 12
	OperatorNotOperator              Operator = 13
	OperatorExistsOperator           Operator = 14
	OperatorNotEmptyOperator         Operator = 15
	OperatorEmptyOperator            Operator = 16
	OperatorEqualOperator            Operator = 17
	OperatorNotEqualOperator         Operator = 18
	OperatorRegexpMatchOperator      Operator = 19
	OperatorNotRegexpMatchOperator   Operator = 20
)

var EnumNamesOperator = map[Operator]string{
	OperatorInvalidOperator:          "InvalidOperator",
	OperatorMultiplicationOperator:   "MultiplicationOperator",
	OperatorDivisionOperator:         "DivisionOperator",
	OperatorModuloOperator:           "ModuloOperator",
	OperatorPowerOperator:            "PowerOperator",
	OperatorAdditionOperator:         "AdditionOperator",
	OperatorSubtractionOperator:      "SubtractionOperator",
	OperatorLessThanEqualOperator:    "LessThanEqualOperator",
	OperatorLessThanOperator:         "LessThanOperator",
	OperatorGreaterThanEqualOperator: "GreaterThanEqualOperator",
	OperatorGreaterThanOperator:      "GreaterThanOperator",
	OperatorStartsWithOperator:       "StartsWithOperator",
	OperatorInOperator:               "InOperator",
	OperatorNotOperator:              "NotOperator",
	OperatorExistsOperator:           "ExistsOperator",
	OperatorNotEmptyOperator:         "NotEmptyOperator",
	OperatorEmptyOperator:            "EmptyOperator",
	OperatorEqualOperator:            "EqualOperator",
	OperatorNotEqualOperator:         "NotEqualOperator",
	OperatorRegexpMatchOperator:      "RegexpMatchOperator",
	OperatorNotRegexpMatchOperator:   "NotRegexpMatchOperator",
}
