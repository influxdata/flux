// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package fbast

type OperatorKind = int8

const (
	OperatorKindMultiplicationOperator   OperatorKind = 0
	OperatorKindDivisionOperator         OperatorKind = 1
	OperatorKindModuloOperator           OperatorKind = 2
	OperatorKindPowerOperator            OperatorKind = 3
	OperatorKindAdditionOperator         OperatorKind = 4
	OperatorKindSubtractionOperator      OperatorKind = 5
	OperatorKindLessThanEqualOperator    OperatorKind = 6
	OperatorKindLessThanOperator         OperatorKind = 7
	OperatorKindGreaterThanEqualOperator OperatorKind = 8
	OperatorKindGreaterThanOperator      OperatorKind = 9
	OperatorKindStartsWithOperator       OperatorKind = 10
	OperatorKindInOperator               OperatorKind = 11
	OperatorKindNotOperator              OperatorKind = 12
	OperatorKindExistsOperator           OperatorKind = 13
	OperatorKindNotEmptyOperator         OperatorKind = 14
	OperatorKindEmptyOperator            OperatorKind = 15
	OperatorKindEqualOperator            OperatorKind = 16
	OperatorKindNotEqualOperator         OperatorKind = 17
	OperatorKindRegexpMatchOperator      OperatorKind = 18
	OperatorKindNotRegexpMatchOperator   OperatorKind = 19
)

var EnumNamesOperatorKind = map[OperatorKind]string{
	OperatorKindMultiplicationOperator:   "MultiplicationOperator",
	OperatorKindDivisionOperator:         "DivisionOperator",
	OperatorKindModuloOperator:           "ModuloOperator",
	OperatorKindPowerOperator:            "PowerOperator",
	OperatorKindAdditionOperator:         "AdditionOperator",
	OperatorKindSubtractionOperator:      "SubtractionOperator",
	OperatorKindLessThanEqualOperator:    "LessThanEqualOperator",
	OperatorKindLessThanOperator:         "LessThanOperator",
	OperatorKindGreaterThanEqualOperator: "GreaterThanEqualOperator",
	OperatorKindGreaterThanOperator:      "GreaterThanOperator",
	OperatorKindStartsWithOperator:       "StartsWithOperator",
	OperatorKindInOperator:               "InOperator",
	OperatorKindNotOperator:              "NotOperator",
	OperatorKindExistsOperator:           "ExistsOperator",
	OperatorKindNotEmptyOperator:         "NotEmptyOperator",
	OperatorKindEmptyOperator:            "EmptyOperator",
	OperatorKindEqualOperator:            "EqualOperator",
	OperatorKindNotEqualOperator:         "NotEqualOperator",
	OperatorKindRegexpMatchOperator:      "RegexpMatchOperator",
	OperatorKindNotRegexpMatchOperator:   "NotRegexpMatchOperator",
}
