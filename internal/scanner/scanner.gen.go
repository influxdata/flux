//line scanner.rl:1
package scanner

import "github.com/influxdata/flux/internal/token"

//line scanner.rl:118

//line scanner.gen.go:13
var _flux_actions []byte = []byte{
	0, 1, 0, 1, 1, 1, 2, 1, 4,
	1, 5, 1, 8, 1, 9, 1, 10,
	1, 11, 1, 12, 1, 13, 1, 14,
	1, 36, 1, 37, 1, 38, 1, 39,
	1, 40, 1, 41, 1, 42, 1, 43,
	1, 44, 1, 45, 1, 46, 1, 47,
	1, 48, 1, 49, 1, 50, 1, 51,
	1, 52, 1, 53, 1, 54, 1, 55,
	1, 56, 1, 57, 1, 58, 1, 59,
	1, 60, 1, 61, 1, 62, 1, 63,
	1, 64, 1, 65, 1, 66, 1, 67,
	1, 68, 1, 69, 1, 70, 1, 71,
	1, 72, 2, 0, 1, 2, 0, 35,
	2, 2, 3, 2, 5, 6, 2, 5,
	7, 2, 5, 15, 2, 5, 16, 2,
	5, 17, 2, 5, 18, 2, 5, 19,
	2, 5, 20, 2, 5, 21, 2, 5,
	22, 2, 5, 23, 2, 5, 24, 2,
	5, 25, 2, 5, 26, 2, 5, 27,
	2, 5, 28, 2, 5, 29, 2, 5,
	30, 2, 5, 31, 2, 5, 32, 2,
	5, 33, 2, 5, 34,
}

var _flux_key_offsets []int16 = []int16{
	0, 0, 2, 5, 11, 17, 23, 26,
	29, 33, 35, 37, 38, 40, 42, 44,
	46, 47, 49, 51, 52, 54, 56, 58,
	60, 61, 63, 65, 68, 77, 88, 89,
	90, 93, 99, 99, 101, 103, 112, 119,
	127, 128, 130, 132, 136, 141, 150, 154,
	160, 171, 173, 175, 177, 182, 209, 213,
	223, 238, 252, 270, 283, 299, 307, 323,
	336, 357, 365, 379, 388, 402, 413, 425,
	435, 444, 453, 455, 458, 479, 485, 486,
	492, 500, 549, 554, 560, 564, 569, 571,
	573, 575, 582, 590, 597, 600, 604, 608,
	610, 612, 616, 620, 624, 630, 638, 642,
	648, 650, 652, 654, 660, 664, 668, 670,
	672, 676, 679, 683, 685, 689, 693, 703,
	708, 722, 738, 740, 742, 758, 763, 765,
	767, 769, 773, 777, 779, 783, 787, 797,
	807, 808, 819, 827, 830, 833, 837, 841,
	843, 846, 848, 848, 851, 853, 878, 880,
	886, 891, 893, 897, 901, 903, 908, 910,
	914, 916, 918, 920, 923, 925, 946, 948,
	950, 952, 963, 969, 971, 973, 975, 977,
	981, 985, 987, 989, 993, 995, 1003, 1011,
	1028, 1038, 1042, 1044, 1046, 1050, 1052, 1056,
	1058, 1062, 1067, 1069, 1078, 1082, 1092, 1098,
	1100, 1102, 1116, 1117, 1127, 1128, 1136, 1143,
	1145, 1148, 1150, 1152, 1154, 1157, 1160, 1163,
	1165, 1169, 1170, 1173, 1176, 1180, 1183, 1186,
	1195, 1204, 1207, 1284, 1288, 1290, 1291, 1292,
	1304, 1305, 1309, 1314, 1317, 1322, 1334, 1346,
	1358, 1371, 1383, 1385, 1388, 1389, 1432, 1476,
	1520, 1564, 1608, 1652, 1696, 1740, 1784, 1830,
	1874, 1918, 1962, 2006, 2050, 2094, 2138, 2182,
	2226, 2272, 2316, 2360, 2404, 2448, 2492, 2536,
	2581, 2625, 2669, 2713, 2757, 2801, 2845, 2889,
	2933, 2977, 3021, 3065, 3109, 3153, 3197, 3241,
	3286, 3330, 3374, 3418, 3462, 3467, 3471, 3474,
}

var _flux_trans_keys []byte = []byte{
	61, 126, 10, 34, 92, 34, 92, 110,
	114, 116, 120, 48, 57, 65, 70, 97,
	102, 48, 57, 65, 70, 97, 102, 46,
	48, 57, 46, 48, 57, 45, 46, 48,
	57, 48, 57, 48, 57, 45, 48, 57,
	48, 57, 48, 57, 48, 57, 58, 48,
	57, 48, 57, 58, 48, 57, 48, 57,
	48, 57, 48, 57, 58, 48, 57, 48,
	57, 46, 48, 57, 100, 104, 109, 110,
	115, 117, 119, 121, 194, 100, 104, 109,
	110, 115, 117, 119, 121, 194, 48, 57,
	115, 181, 170, 181, 186, 128, 150, 152,
	182, 184, 255, 192, 255, 128, 255, 173,
	130, 133, 146, 159, 165, 171, 175, 255,
	133, 176, 180, 182, 183, 186, 189, 134,
	140, 136, 138, 142, 161, 163, 255, 182,
	130, 137, 164, 176, 151, 152, 154, 160,
	190, 136, 175, 192, 255, 135, 129, 130,
	132, 133, 144, 170, 176, 178, 144, 154,
	161, 191, 128, 151, 153, 158, 174, 255,
	148, 157, 160, 169, 172, 176, 185, 189,
	190, 192, 255, 144, 191, 141, 255, 178,
	255, 186, 138, 170, 180, 181, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189,
	190, 129, 185, 189, 255, 141, 143, 145,
	151, 164, 176, 179, 186, 192, 255, 178,
	129, 131, 133, 140, 143, 144, 147, 168,
	170, 176, 182, 185, 189, 255, 141, 158,
	133, 134, 137, 138, 143, 150, 152, 155,
	164, 175, 178, 255, 129, 131, 133, 138,
	143, 144, 147, 168, 170, 176, 178, 179,
	181, 182, 184, 185, 190, 255, 157, 131,
	134, 137, 138, 141, 144, 146, 152, 159,
	175, 182, 255, 129, 131, 133, 141, 143,
	145, 147, 168, 170, 176, 178, 179, 181,
	185, 189, 255, 134, 138, 141, 143, 145,
	159, 164, 255, 129, 131, 133, 140, 143,
	144, 147, 168, 170, 176, 178, 179, 181,
	185, 189, 191, 177, 128, 132, 135, 136,
	139, 140, 150, 151, 156, 157, 159, 163,
	156, 130, 131, 133, 138, 142, 144, 146,
	149, 153, 154, 158, 159, 163, 164, 168,
	170, 174, 185, 190, 191, 144, 151, 128,
	130, 134, 136, 138, 140, 129, 131, 133,
	140, 142, 144, 146, 168, 170, 179, 181,
	185, 189, 255, 133, 137, 151, 141, 148,
	154, 159, 164, 255, 130, 131, 133, 140,
	142, 144, 146, 168, 170, 179, 181, 185,
	189, 191, 158, 128, 132, 134, 136, 138,
	140, 149, 150, 160, 163, 130, 131, 133,
	140, 142, 144, 146, 168, 170, 185, 189,
	255, 133, 137, 141, 150, 152, 159, 164,
	185, 192, 255, 189, 130, 131, 133, 150,
	154, 177, 179, 187, 150, 128, 134, 143,
	148, 152, 159, 178, 179, 129, 186, 141,
	128, 134, 132, 138, 141, 165, 167, 129,
	130, 135, 136, 148, 151, 153, 159, 161,
	163, 170, 171, 173, 185, 187, 189, 134,
	141, 128, 132, 156, 157, 128, 128, 135,
	137, 172, 177, 191, 128, 129, 136, 139,
	144, 151, 153, 188, 128, 129, 130, 131,
	133, 134, 135, 137, 138, 139, 140, 141,
	142, 143, 144, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 164, 165, 166,
	167, 168, 172, 173, 174, 176, 177, 180,
	181, 182, 184, 188, 189, 190, 191, 132,
	136, 145, 152, 185, 187, 184, 128, 182,
	187, 191, 144, 162, 165, 168, 174, 255,
	135, 141, 143, 159, 187, 134, 143, 189,
	255, 154, 158, 163, 167, 186, 255, 137,
	151, 153, 142, 143, 158, 159, 137, 177,
	142, 143, 182, 183, 191, 255, 128, 130,
	133, 136, 150, 152, 255, 145, 150, 151,
	155, 158, 160, 255, 128, 143, 160, 255,
	181, 255, 129, 255, 173, 174, 183, 255,
	129, 154, 160, 255, 171, 173, 177, 255,
	128, 140, 142, 147, 160, 179, 128, 147,
	160, 172, 174, 176, 178, 179, 128, 179,
	182, 255, 137, 150, 152, 155, 157, 255,
	160, 255, 184, 255, 128, 170, 128, 156,
	160, 171, 176, 184, 144, 173, 176, 180,
	128, 169, 176, 255, 138, 255, 128, 155,
	128, 179, 181, 255, 132, 140, 255, 128,
	169, 174, 175, 128, 181, 141, 143, 154,
	189, 150, 151, 158, 159, 152, 154, 156,
	158, 134, 135, 142, 143, 190, 255, 190,
	128, 180, 182, 188, 130, 132, 134, 140,
	144, 147, 150, 155, 160, 172, 178, 180,
	182, 188, 129, 130, 132, 133, 134, 146,
	147, 176, 177, 178, 179, 180, 181, 182,
	183, 184, 177, 191, 144, 148, 130, 135,
	149, 164, 166, 168, 138, 147, 153, 157,
	170, 173, 175, 185, 188, 191, 142, 133,
	137, 160, 255, 137, 255, 182, 255, 170,
	255, 128, 174, 176, 255, 159, 176, 190,
	255, 165, 255, 128, 165, 176, 255, 166,
	174, 176, 255, 128, 150, 160, 166, 168,
	174, 176, 182, 184, 190, 128, 134, 136,
	142, 144, 150, 152, 158, 160, 191, 175,
	128, 129, 130, 131, 132, 133, 134, 135,
	144, 145, 255, 133, 135, 161, 169, 177,
	181, 184, 188, 160, 151, 156, 187, 192,
	255, 133, 173, 177, 255, 143, 159, 184,
	255, 176, 191, 182, 183, 184, 182, 255,
	191, 192, 255, 132, 255, 128, 146, 148,
	152, 153, 154, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 168, 169, 176,
	129, 145, 149, 151, 177, 255, 141, 255,
	141, 143, 160, 169, 172, 255, 191, 128,
	159, 162, 174, 128, 151, 151, 159, 162,
	255, 137, 138, 141, 255, 187, 255, 130,
	134, 139, 168, 255, 128, 179, 138, 170,
	176, 255, 147, 255, 128, 182, 128, 141,
	158, 159, 255, 164, 255, 164, 168, 169,
	171, 172, 173, 174, 175, 180, 181, 182,
	183, 185, 186, 187, 188, 189, 190, 191,
	165, 179, 174, 175, 171, 175, 154, 255,
	190, 128, 134, 147, 151, 157, 168, 170,
	182, 184, 188, 128, 129, 131, 132, 134,
	255, 147, 255, 190, 255, 144, 255, 144,
	145, 136, 175, 188, 255, 176, 180, 182,
	255, 189, 255, 161, 186, 129, 154, 166,
	255, 191, 255, 130, 135, 138, 143, 146,
	151, 154, 156, 144, 146, 157, 160, 170,
	175, 161, 169, 128, 129, 130, 131, 133,
	138, 139, 140, 141, 142, 143, 144, 145,
	146, 160, 164, 168, 128, 139, 141, 166,
	168, 186, 188, 189, 191, 255, 142, 143,
	158, 255, 187, 255, 128, 180, 128, 156,
	160, 255, 145, 255, 128, 158, 176, 255,
	139, 255, 128, 157, 160, 255, 144, 132,
	135, 150, 255, 158, 255, 136, 188, 191,
	128, 133, 138, 181, 183, 184, 128, 149,
	160, 185, 128, 131, 133, 134, 140, 147,
	149, 151, 153, 179, 128, 141, 144, 145,
	129, 140, 175, 255, 163, 255, 144, 145,
	146, 147, 148, 149, 154, 155, 156, 157,
	158, 159, 150, 153, 149, 157, 173, 186,
	188, 160, 161, 163, 164, 167, 168, 132,
	134, 149, 157, 186, 139, 140, 191, 255,
	134, 128, 132, 138, 144, 146, 255, 166,
	167, 129, 155, 187, 149, 181, 143, 175,
	137, 169, 131, 140, 255, 128, 129, 255,
	155, 156, 255, 151, 255, 160, 168, 161,
	167, 62, 10, 47, 92, 10, 47, 92,
	10, 47, 92, 120, 10, 47, 92, 10,
	47, 92, 10, 47, 92, 48, 57, 65,
	70, 97, 102, 10, 47, 92, 48, 57,
	65, 70, 97, 102, 10, 47, 92, 10,
	32, 33, 34, 37, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 58, 60, 61,
	62, 91, 93, 95, 97, 98, 101, 105,
	110, 111, 112, 114, 116, 123, 124, 125,
	194, 195, 198, 199, 203, 205, 206, 207,
	210, 212, 213, 214, 215, 216, 217, 219,
	220, 221, 222, 223, 224, 225, 226, 227,
	228, 233, 234, 237, 239, 240, 9, 13,
	49, 57, 65, 90, 99, 122, 196, 202,
	208, 218, 229, 236, 10, 32, 9, 13,
	48, 57, 47, 10, 46, 100, 104, 109,
	110, 115, 117, 119, 121, 194, 48, 57,
	84, 43, 45, 46, 90, 43, 45, 90,
	48, 57, 48, 49, 57, 48, 111, 115,
	49, 57, 46, 100, 104, 109, 110, 115,
	117, 119, 121, 194, 48, 57, 46, 100,
	104, 109, 110, 115, 117, 119, 121, 194,
	48, 57, 46, 100, 104, 109, 110, 115,
	117, 119, 121, 194, 48, 57, 45, 46,
	100, 104, 109, 110, 115, 117, 119, 121,
	194, 48, 57, 46, 100, 104, 109, 110,
	115, 117, 119, 121, 194, 48, 57, 45,
	61, 61, 62, 126, 61, 95, 194, 195,
	198, 199, 203, 205, 206, 207, 210, 212,
	213, 214, 215, 216, 217, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 233,
	234, 237, 239, 240, 48, 57, 65, 90,
	97, 122, 196, 202, 208, 218, 229, 236,
	95, 110, 194, 195, 198, 199, 203, 205,
	206, 207, 210, 212, 213, 214, 215, 216,
	217, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 233, 234, 237, 239, 240,
	48, 57, 65, 90, 97, 122, 196, 202,
	208, 218, 229, 236, 95, 100, 194, 195,
	198, 199, 203, 205, 206, 207, 210, 212,
	213, 214, 215, 216, 217, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 233,
	234, 237, 239, 240, 48, 57, 65, 90,
	97, 122, 196, 202, 208, 218, 229, 236,
	95, 117, 194, 195, 198, 199, 203, 205,
	206, 207, 210, 212, 213, 214, 215, 216,
	217, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 233, 234, 237, 239, 240,
	48, 57, 65, 90, 97, 122, 196, 202,
	208, 218, 229, 236, 95, 105, 194, 195,
	198, 199, 203, 205, 206, 207, 210, 212,
	213, 214, 215, 216, 217, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 233,
	234, 237, 239, 240, 48, 57, 65, 90,
	97, 122, 196, 202, 208, 218, 229, 236,
	95, 108, 194, 195, 198, 199, 203, 205,
	206, 207, 210, 212, 213, 214, 215, 216,
	217, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 233, 234, 237, 239, 240,
	48, 57, 65, 90, 97, 122, 196, 202,
	208, 218, 229, 236, 95, 116, 194, 195,
	198, 199, 203, 205, 206, 207, 210, 212,
	213, 214, 215, 216, 217, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 233,
	234, 237, 239, 240, 48, 57, 65, 90,
	97, 122, 196, 202, 208, 218, 229, 236,
	95, 105, 194, 195, 198, 199, 203, 205,
	206, 207, 210, 212, 213, 214, 215, 216,
	217, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 233, 234, 237, 239, 240,
	48, 57, 65, 90, 97, 122, 196, 202,
	208, 218, 229, 236, 95, 110, 194, 195,
	198, 199, 203, 205, 206, 207, 210, 212,
	213, 214, 215, 216, 217, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 233,
	234, 237, 239, 240, 48, 57, 65, 90,
	97, 122, 196, 202, 208, 218, 229, 236,
	95, 108, 109, 120, 194, 195, 198, 199,
	203, 205, 206, 207, 210, 212, 213, 214,
	215, 216, 217, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 233, 234, 237,
	239, 240, 48, 57, 65, 90, 97, 122,
	196, 202, 208, 218, 229, 236, 95, 115,
	194, 195, 198, 199, 203, 205, 206, 207,
	210, 212, 213, 214, 215, 216, 217, 219,
	220, 221, 222, 223, 224, 225, 226, 227,
	228, 233, 234, 237, 239, 240, 48, 57,
	65, 90, 97, 122, 196, 202, 208, 218,
	229, 236, 95, 101, 194, 195, 198, 199,
	203, 205, 206, 207, 210, 212, 213, 214,
	215, 216, 217, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 233, 234, 237,
	239, 240, 48, 57, 65, 90, 97, 122,
	196, 202, 208, 218, 229, 236, 95, 112,
	194, 195, 198, 199, 203, 205, 206, 207,
	210, 212, 213, 214, 215, 216, 217, 219,
	220, 221, 222, 223, 224, 225, 226, 227,
	228, 233, 234, 237, 239, 240, 48, 57,
	65, 90, 97, 122, 196, 202, 208, 218,
	229, 236, 95, 116, 194, 195, 198, 199,
	203, 205, 206, 207, 210, 212, 213, 214,
	215, 216, 217, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 233, 234, 237,
	239, 240, 48, 57, 65, 90, 97, 122,
	196, 202, 208, 218, 229, 236, 95, 121,
	194, 195, 198, 199, 203, 205, 206, 207,
	210, 212, 213, 214, 215, 216, 217, 219,
	220, 221, 222, 223, 224, 225, 226, 227,
	228, 233, 234, 237, 239, 240, 48, 57,
	65, 90, 97, 122, 196, 202, 208, 218,
	229, 236, 95, 105, 194, 195, 198, 199,
	203, 205, 206, 207, 210, 212, 213, 214,
	215, 216, 217, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 233, 234, 237,
	239, 240, 48, 57, 65, 90, 97, 122,
	196, 202, 208, 218, 229, 236, 95, 115,
	194, 195, 198, 199, 203, 205, 206, 207,
	210, 212, 213, 214, 215, 216, 217, 219,
	220, 221, 222, 223, 224, 225, 226, 227,
	228, 233, 234, 237, 239, 240, 48, 57,
	65, 90, 97, 122, 196, 202, 208, 218,
	229, 236, 95, 116, 194, 195, 198, 199,
	203, 205, 206, 207, 210, 212, 213, 214,
	215, 216, 217, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 233, 234, 237,
	239, 240, 48, 57, 65, 90, 97, 122,
	196, 202, 208, 218, 229, 236, 95, 115,
	194, 195, 198, 199, 203, 205, 206, 207,
	210, 212, 213, 214, 215, 216, 217, 219,
	220, 221, 222, 223, 224, 225, 226, 227,
	228, 233, 234, 237, 239, 240, 48, 57,
	65, 90, 97, 122, 196, 202, 208, 218,
	229, 236, 95, 102, 109, 110, 194, 195,
	198, 199, 203, 205, 206, 207, 210, 212,
	213, 214, 215, 216, 217, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 233,
	234, 237, 239, 240, 48, 57, 65, 90,
	97, 122, 196, 202, 208, 218, 229, 236,
	95, 112, 194, 195, 198, 199, 203, 205,
	206, 207, 210, 212, 213, 214, 215, 216,
	217, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 233, 234, 237, 239, 240,
	48, 57, 65, 90, 97, 122, 196, 202,
	208, 218, 229, 236, 95, 111, 194, 195,
	198, 199, 203, 205, 206, 207, 210, 212,
	213, 214, 215, 216, 217, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 233,
	234, 237, 239, 240, 48, 57, 65, 90,
	97, 122, 196, 202, 208, 218, 229, 236,
	95, 114, 194, 195, 198, 199, 203, 205,
	206, 207, 210, 212, 213, 214, 215, 216,
	217, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 233, 234, 237, 239, 240,
	48, 57, 65, 90, 97, 122, 196, 202,
	208, 218, 229, 236, 95, 116, 194, 195,
	198, 199, 203, 205, 206, 207, 210, 212,
	213, 214, 215, 216, 217, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 233,
	234, 237, 239, 240, 48, 57, 65, 90,
	97, 122, 196, 202, 208, 218, 229, 236,
	95, 111, 194, 195, 198, 199, 203, 205,
	206, 207, 210, 212, 213, 214, 215, 216,
	217, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 233, 234, 237, 239, 240,
	48, 57, 65, 90, 97, 122, 196, 202,
	208, 218, 229, 236, 95, 116, 194, 195,
	198, 199, 203, 205, 206, 207, 210, 212,
	213, 214, 215, 216, 217, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 233,
	234, 237, 239, 240, 48, 57, 65, 90,
	97, 122, 196, 202, 208, 218, 229, 236,
	95, 112, 114, 194, 195, 198, 199, 203,
	205, 206, 207, 210, 212, 213, 214, 215,
	216, 217, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 233, 234, 237, 239,
	240, 48, 57, 65, 90, 97, 122, 196,
	202, 208, 218, 229, 236, 95, 116, 194,
	195, 198, 199, 203, 205, 206, 207, 210,
	212, 213, 214, 215, 216, 217, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228,
	233, 234, 237, 239, 240, 48, 57, 65,
	90, 97, 122, 196, 202, 208, 218, 229,
	236, 95, 105, 194, 195, 198, 199, 203,
	205, 206, 207, 210, 212, 213, 214, 215,
	216, 217, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 233, 234, 237, 239,
	240, 48, 57, 65, 90, 97, 122, 196,
	202, 208, 218, 229, 236, 95, 111, 194,
	195, 198, 199, 203, 205, 206, 207, 210,
	212, 213, 214, 215, 216, 217, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228,
	233, 234, 237, 239, 240, 48, 57, 65,
	90, 97, 122, 196, 202, 208, 218, 229,
	236, 95, 110, 194, 195, 198, 199, 203,
	205, 206, 207, 210, 212, 213, 214, 215,
	216, 217, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 233, 234, 237, 239,
	240, 48, 57, 65, 90, 97, 122, 196,
	202, 208, 218, 229, 236, 95, 97, 194,
	195, 198, 199, 203, 205, 206, 207, 210,
	212, 213, 214, 215, 216, 217, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228,
	233, 234, 237, 239, 240, 48, 57, 65,
	90, 98, 122, 196, 202, 208, 218, 229,
	236, 95, 99, 194, 195, 198, 199, 203,
	205, 206, 207, 210, 212, 213, 214, 215,
	216, 217, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 233, 234, 237, 239,
	240, 48, 57, 65, 90, 97, 122, 196,
	202, 208, 218, 229, 236, 95, 107, 194,
	195, 198, 199, 203, 205, 206, 207, 210,
	212, 213, 214, 215, 216, 217, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228,
	233, 234, 237, 239, 240, 48, 57, 65,
	90, 97, 122, 196, 202, 208, 218, 229,
	236, 95, 97, 194, 195, 198, 199, 203,
	205, 206, 207, 210, 212, 213, 214, 215,
	216, 217, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 233, 234, 237, 239,
	240, 48, 57, 65, 90, 98, 122, 196,
	202, 208, 218, 229, 236, 95, 103, 194,
	195, 198, 199, 203, 205, 206, 207, 210,
	212, 213, 214, 215, 216, 217, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228,
	233, 234, 237, 239, 240, 48, 57, 65,
	90, 97, 122, 196, 202, 208, 218, 229,
	236, 95, 101, 194, 195, 198, 199, 203,
	205, 206, 207, 210, 212, 213, 214, 215,
	216, 217, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 233, 234, 237, 239,
	240, 48, 57, 65, 90, 97, 122, 196,
	202, 208, 218, 229, 236, 95, 101, 194,
	195, 198, 199, 203, 205, 206, 207, 210,
	212, 213, 214, 215, 216, 217, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228,
	233, 234, 237, 239, 240, 48, 57, 65,
	90, 97, 122, 196, 202, 208, 218, 229,
	236, 95, 116, 194, 195, 198, 199, 203,
	205, 206, 207, 210, 212, 213, 214, 215,
	216, 217, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 233, 234, 237, 239,
	240, 48, 57, 65, 90, 97, 122, 196,
	202, 208, 218, 229, 236, 95, 117, 194,
	195, 198, 199, 203, 205, 206, 207, 210,
	212, 213, 214, 215, 216, 217, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228,
	233, 234, 237, 239, 240, 48, 57, 65,
	90, 97, 122, 196, 202, 208, 218, 229,
	236, 95, 114, 194, 195, 198, 199, 203,
	205, 206, 207, 210, 212, 213, 214, 215,
	216, 217, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 233, 234, 237, 239,
	240, 48, 57, 65, 90, 97, 122, 196,
	202, 208, 218, 229, 236, 95, 110, 194,
	195, 198, 199, 203, 205, 206, 207, 210,
	212, 213, 214, 215, 216, 217, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228,
	233, 234, 237, 239, 240, 48, 57, 65,
	90, 97, 122, 196, 202, 208, 218, 229,
	236, 95, 101, 104, 194, 195, 198, 199,
	203, 205, 206, 207, 210, 212, 213, 214,
	215, 216, 217, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 233, 234, 237,
	239, 240, 48, 57, 65, 90, 97, 122,
	196, 202, 208, 218, 229, 236, 95, 115,
	194, 195, 198, 199, 203, 205, 206, 207,
	210, 212, 213, 214, 215, 216, 217, 219,
	220, 221, 222, 223, 224, 225, 226, 227,
	228, 233, 234, 237, 239, 240, 48, 57,
	65, 90, 97, 122, 196, 202, 208, 218,
	229, 236, 95, 116, 194, 195, 198, 199,
	203, 205, 206, 207, 210, 212, 213, 214,
	215, 216, 217, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 233, 234, 237,
	239, 240, 48, 57, 65, 90, 97, 122,
	196, 202, 208, 218, 229, 236, 95, 101,
	194, 195, 198, 199, 203, 205, 206, 207,
	210, 212, 213, 214, 215, 216, 217, 219,
	220, 221, 222, 223, 224, 225, 226, 227,
	228, 233, 234, 237, 239, 240, 48, 57,
	65, 90, 97, 122, 196, 202, 208, 218,
	229, 236, 95, 110, 194, 195, 198, 199,
	203, 205, 206, 207, 210, 212, 213, 214,
	215, 216, 217, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 233, 234, 237,
	239, 240, 48, 57, 65, 90, 97, 122,
	196, 202, 208, 218, 229, 236, 10, 32,
	47, 9, 13, 10, 32, 9, 13, 10,
	47, 92, 10, 47, 92,
}

var _flux_single_lengths []byte = []byte{
	0, 2, 3, 6, 0, 0, 1, 1,
	2, 0, 0, 1, 0, 0, 0, 0,
	1, 0, 0, 1, 0, 0, 0, 0,
	1, 0, 0, 1, 9, 9, 1, 1,
	3, 0, 0, 0, 0, 1, 1, 2,
	1, 0, 0, 0, 1, 1, 0, 0,
	1, 0, 0, 0, 1, 27, 0, 0,
	1, 2, 0, 1, 0, 2, 0, 1,
	1, 2, 0, 3, 0, 1, 0, 2,
	1, 1, 0, 1, 5, 2, 1, 0,
	0, 43, 1, 0, 0, 1, 0, 0,
	0, 3, 2, 1, 1, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 1, 0, 0, 0, 0, 4, 1,
	0, 16, 2, 0, 6, 1, 0, 0,
	0, 0, 2, 0, 0, 0, 0, 0,
	1, 9, 0, 1, 1, 0, 0, 0,
	3, 0, 0, 1, 0, 19, 0, 0,
	1, 0, 0, 0, 0, 3, 0, 0,
	0, 0, 0, 1, 0, 19, 0, 0,
	0, 1, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 6, 17,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 1, 0, 3, 0, 0, 4, 0,
	0, 12, 1, 4, 1, 4, 1, 0,
	3, 2, 2, 2, 1, 1, 1, 0,
	2, 1, 3, 3, 4, 3, 3, 3,
	3, 3, 63, 2, 0, 1, 1, 10,
	1, 4, 3, 1, 3, 10, 10, 10,
	11, 10, 2, 3, 1, 31, 32, 32,
	32, 32, 32, 32, 32, 32, 34, 32,
	32, 32, 32, 32, 32, 32, 32, 32,
	34, 32, 32, 32, 32, 32, 32, 33,
	32, 32, 32, 32, 32, 32, 32, 32,
	32, 32, 32, 32, 32, 32, 32, 33,
	32, 32, 32, 32, 3, 2, 3, 3,
}

var _flux_range_lengths []byte = []byte{
	0, 0, 0, 0, 3, 3, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 1,
	0, 1, 1, 0, 1, 1, 1, 1,
	0, 1, 1, 1, 0, 1, 0, 0,
	0, 3, 0, 1, 1, 4, 3, 3,
	0, 1, 1, 2, 2, 4, 2, 3,
	5, 1, 1, 1, 2, 0, 2, 5,
	7, 6, 9, 6, 8, 3, 8, 6,
	10, 3, 7, 3, 7, 5, 6, 4,
	4, 4, 1, 1, 8, 2, 0, 3,
	4, 3, 2, 3, 2, 2, 1, 1,
	1, 2, 3, 3, 1, 2, 2, 1,
	1, 2, 2, 2, 3, 4, 2, 3,
	1, 1, 1, 3, 2, 2, 1, 1,
	2, 1, 2, 1, 2, 2, 3, 2,
	7, 0, 0, 1, 5, 2, 1, 1,
	1, 2, 1, 1, 2, 2, 5, 5,
	0, 1, 4, 1, 1, 2, 2, 1,
	0, 1, 0, 1, 1, 3, 1, 3,
	2, 1, 2, 2, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 5, 3, 1, 1, 1, 1, 2,
	2, 1, 1, 2, 1, 4, 1, 0,
	5, 2, 1, 1, 2, 1, 2, 1,
	2, 2, 1, 3, 2, 5, 1, 1,
	1, 1, 0, 3, 0, 2, 3, 1,
	0, 0, 0, 0, 1, 1, 1, 1,
	1, 0, 0, 0, 0, 0, 0, 3,
	3, 0, 7, 1, 1, 0, 0, 1,
	0, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 0, 0, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 1, 1, 0, 0,
}

var _flux_index_offsets []int16 = []int16{
	0, 0, 3, 7, 14, 18, 22, 25,
	28, 32, 34, 36, 38, 40, 42, 44,
	46, 48, 50, 52, 54, 56, 58, 60,
	62, 64, 66, 68, 71, 81, 92, 94,
	96, 100, 104, 105, 107, 109, 115, 120,
	126, 128, 130, 132, 135, 139, 145, 148,
	152, 159, 161, 163, 165, 169, 197, 200,
	206, 215, 224, 234, 242, 251, 257, 266,
	274, 286, 292, 300, 307, 315, 322, 329,
	336, 342, 348, 350, 353, 367, 372, 374,
	378, 383, 430, 434, 438, 441, 445, 447,
	449, 451, 457, 463, 468, 471, 474, 477,
	479, 481, 484, 487, 490, 494, 499, 502,
	506, 508, 510, 512, 516, 519, 522, 524,
	526, 529, 532, 535, 537, 540, 543, 551,
	555, 563, 580, 583, 585, 597, 601, 603,
	605, 607, 610, 614, 616, 619, 622, 628,
	634, 636, 647, 652, 655, 658, 661, 664,
	666, 670, 672, 673, 676, 678, 701, 703,
	707, 711, 713, 716, 719, 721, 726, 728,
	731, 733, 735, 737, 740, 742, 763, 765,
	767, 769, 776, 780, 782, 784, 786, 788,
	791, 794, 796, 798, 801, 803, 808, 816,
	834, 840, 843, 845, 847, 850, 852, 855,
	857, 860, 864, 866, 873, 876, 882, 888,
	890, 892, 906, 908, 916, 918, 925, 930,
	932, 936, 939, 942, 945, 948, 951, 954,
	956, 960, 962, 966, 970, 975, 979, 983,
	990, 997, 1001, 1072, 1076, 1078, 1080, 1082,
	1094, 1096, 1101, 1106, 1109, 1114, 1126, 1138,
	1150, 1163, 1175, 1178, 1182, 1184, 1222, 1261,
	1300, 1339, 1378, 1417, 1456, 1495, 1534, 1575,
	1614, 1653, 1692, 1731, 1770, 1809, 1848, 1887,
	1926, 1967, 2006, 2045, 2084, 2123, 2162, 2201,
	2241, 2280, 2319, 2358, 2397, 2436, 2475, 2514,
	2553, 2592, 2631, 2670, 2709, 2748, 2787, 2826,
	2866, 2905, 2944, 2983, 3022, 3027, 3031, 3035,
}

var _flux_indicies []int16 = []int16{
	0, 2, 1, 4, 5, 6, 3, 3,
	3, 3, 3, 3, 7, 1, 8, 8,
	8, 1, 3, 3, 3, 1, 10, 11,
	9, 10, 12, 9, 13, 10, 14, 9,
	15, 9, 16, 9, 17, 9, 18, 9,
	19, 9, 21, 20, 22, 20, 23, 20,
	24, 20, 25, 20, 26, 20, 27, 20,
	28, 20, 29, 20, 30, 20, 31, 20,
	32, 20, 33, 20, 10, 14, 9, 35,
	35, 36, 37, 35, 37, 35, 35, 38,
	34, 35, 35, 36, 37, 35, 37, 35,
	35, 38, 39, 34, 35, 40, 37, 40,
	41, 41, 41, 40, 41, 41, 41, 40,
	41, 40, 41, 41, 40, 40, 40, 40,
	40, 40, 41, 41, 41, 41, 41, 40,
	41, 41, 41, 41, 41, 40, 40, 41,
	40, 41, 40, 41, 40, 40, 41, 40,
	40, 40, 41, 41, 41, 41, 41, 41,
	40, 41, 41, 40, 41, 41, 41, 40,
	40, 40, 40, 40, 40, 40, 41, 41,
	40, 41, 40, 40, 41, 41, 41, 41,
	40, 42, 43, 44, 45, 46, 47, 48,
	49, 50, 51, 52, 53, 54, 55, 56,
	57, 58, 59, 60, 61, 62, 63, 64,
	65, 66, 67, 68, 40, 41, 41, 40,
	40, 40, 40, 40, 40, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 41,
	41, 41, 41, 41, 41, 41, 41, 41,
	41, 40, 40, 40, 40, 40, 40, 40,
	40, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 40, 40, 40, 40, 40, 40,
	41, 41, 41, 41, 41, 41, 41, 41,
	41, 40, 41, 41, 41, 41, 41, 41,
	41, 40, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 40, 41, 41,
	41, 41, 41, 40, 41, 41, 41, 41,
	41, 41, 41, 40, 40, 40, 40, 40,
	40, 40, 41, 41, 41, 41, 41, 41,
	41, 41, 40, 41, 41, 41, 41, 41,
	41, 40, 41, 41, 41, 41, 41, 41,
	40, 40, 40, 40, 40, 40, 40, 41,
	41, 41, 41, 41, 41, 40, 41, 41,
	41, 41, 41, 40, 41, 40, 41, 41,
	40, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 40, 41,
	41, 41, 41, 40, 41, 40, 41, 41,
	41, 40, 41, 41, 41, 41, 40, 69,
	70, 71, 72, 74, 75, 76, 77, 78,
	79, 80, 81, 82, 83, 84, 86, 87,
	88, 89, 90, 91, 92, 93, 94, 95,
	96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 73, 85, 106, 73, 107, 108,
	109, 110, 73, 85, 85, 40, 41, 41,
	41, 40, 41, 41, 41, 40, 40, 40,
	41, 40, 40, 40, 41, 40, 41, 40,
	41, 40, 41, 40, 40, 40, 40, 40,
	41, 40, 40, 40, 40, 40, 41, 41,
	41, 41, 41, 40, 40, 40, 41, 40,
	40, 41, 41, 41, 40, 40, 41, 41,
	40, 40, 40, 41, 41, 41, 40, 40,
	40, 41, 41, 41, 41, 40, 41, 41,
	41, 41, 40, 41, 41, 40, 40, 40,
	40, 41, 41, 40, 40, 41, 41, 40,
	41, 41, 41, 40, 41, 41, 40, 41,
	41, 40, 40, 41, 41, 40, 41, 41,
	40, 40, 40, 41, 41, 41, 40, 41,
	40, 41, 41, 40, 40, 40, 41, 40,
	40, 40, 40, 40, 40, 40, 41, 41,
	41, 41, 40, 41, 41, 41, 41, 41,
	41, 41, 40, 111, 112, 113, 114, 115,
	116, 117, 118, 119, 73, 120, 121, 122,
	123, 124, 125, 40, 41, 41, 40, 41,
	40, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 40, 41, 41, 41,
	40, 40, 41, 41, 40, 40, 41, 41,
	41, 40, 40, 40, 40, 41, 40, 41,
	41, 41, 40, 40, 40, 41, 41, 41,
	41, 41, 41, 40, 41, 41, 41, 41,
	41, 40, 41, 40, 126, 84, 127, 128,
	129, 85, 130, 131, 73, 85, 40, 41,
	41, 41, 41, 40, 40, 40, 41, 40,
	40, 41, 41, 41, 40, 40, 40, 41,
	41, 40, 132, 40, 73, 85, 40, 41,
	85, 133, 40, 85, 40, 41, 73, 134,
	73, 135, 136, 137, 138, 85, 139, 140,
	141, 142, 73, 133, 143, 144, 145, 146,
	73, 85, 85, 85, 40, 40, 41, 40,
	40, 40, 41, 41, 41, 41, 40, 41,
	40, 41, 41, 40, 40, 40, 41, 41,
	40, 40, 40, 40, 40, 41, 41, 40,
	41, 41, 40, 40, 41, 41, 40, 41,
	40, 147, 40, 85, 40, 41, 73, 148,
	149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 85, 160, 161, 162, 163,
	164, 85, 40, 40, 41, 40, 41, 40,
	41, 41, 41, 41, 41, 41, 41, 40,
	41, 41, 41, 40, 41, 40, 40, 41,
	41, 40, 40, 41, 40, 40, 41, 41,
	41, 40, 40, 41, 41, 40, 41, 41,
	40, 40, 41, 41, 41, 41, 41, 40,
	165, 166, 167, 168, 170, 171, 169, 40,
	172, 173, 73, 174, 175, 176, 177, 178,
	179, 180, 181, 73, 85, 182, 183, 184,
	185, 40, 41, 41, 41, 41, 41, 40,
	40, 40, 41, 40, 41, 41, 40, 41,
	41, 40, 40, 41, 41, 41, 40, 40,
	41, 41, 41, 40, 40, 40, 40, 41,
	40, 41, 41, 41, 41, 41, 41, 41,
	40, 41, 41, 40, 41, 41, 41, 41,
	41, 40, 73, 186, 73, 187, 85, 40,
	40, 41, 40, 41, 73, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198,
	85, 40, 40, 41, 40, 40, 40, 40,
	40, 40, 40, 41, 40, 41, 40, 40,
	40, 40, 40, 40, 41, 41, 41, 41,
	41, 40, 40, 41, 40, 40, 40, 41,
	40, 40, 41, 40, 40, 41, 40, 40,
	41, 40, 40, 41, 73, 85, 40, 199,
	40, 85, 40, 41, 73, 182, 85, 40,
	200, 1, 203, 204, 205, 202, 203, 206,
	205, 202, 203, 206, 208, 209, 202, 203,
	206, 210, 202, 203, 206, 205, 202, 203,
	204, 205, 211, 211, 211, 202, 203, 204,
	205, 212, 212, 212, 202, 203, 204, 205,
	202, 214, 213, 215, 3, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 227,
	228, 229, 230, 231, 232, 41, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242,
	243, 244, 245, 246, 106, 73, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256,
	257, 258, 259, 260, 153, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 271,
	213, 226, 41, 41, 85, 85, 169, 1,
	214, 213, 213, 272, 10, 40, 274, 273,
	276, 274, 10, 35, 35, 36, 37, 35,
	37, 35, 35, 38, 278, 277, 280, 279,
	281, 281, 282, 33, 279, 281, 281, 33,
	282, 279, 284, 39, 283, 284, 35, 35,
	39, 283, 10, 35, 35, 36, 37, 35,
	37, 35, 35, 38, 285, 277, 10, 35,
	35, 36, 37, 35, 37, 35, 35, 38,
	286, 277, 10, 35, 35, 36, 37, 35,
	37, 35, 35, 38, 287, 277, 13, 10,
	35, 35, 36, 37, 35, 37, 35, 35,
	38, 288, 277, 10, 35, 35, 36, 37,
	35, 37, 35, 35, 38, 288, 277, 290,
	291, 289, 293, 294, 295, 292, 297, 296,
	41, 245, 246, 106, 73, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257,
	258, 259, 260, 153, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 271, 41,
	41, 41, 85, 85, 169, 40, 41, 299,
	245, 246, 106, 73, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 153, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 271, 41, 41,
	41, 85, 85, 169, 298, 41, 300, 245,
	246, 106, 73, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257, 258, 259,
	260, 153, 261, 262, 263, 264, 265, 266,
	267, 268, 269, 270, 271, 41, 41, 41,
	85, 85, 169, 298, 41, 301, 245, 246,
	106, 73, 247, 248, 249, 250, 251, 252,
	253, 254, 255, 256, 257, 258, 259, 260,
	153, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 271, 41, 41, 41, 85,
	85, 169, 298, 41, 302, 245, 246, 106,
	73, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 257, 258, 259, 260, 153,
	261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 41, 41, 41, 85, 85,
	169, 298, 41, 303, 245, 246, 106, 73,
	247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 257, 258, 259, 260, 153, 261,
	262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 41, 41, 41, 85, 85, 169,
	298, 41, 304, 245, 246, 106, 73, 247,
	248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 258, 259, 260, 153, 261, 262,
	263, 264, 265, 266, 267, 268, 269, 270,
	271, 41, 41, 41, 85, 85, 169, 298,
	41, 305, 245, 246, 106, 73, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256,
	257, 258, 259, 260, 153, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 271,
	41, 41, 41, 85, 85, 169, 298, 41,
	306, 245, 246, 106, 73, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257,
	258, 259, 260, 153, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 271, 41,
	41, 41, 85, 85, 169, 298, 41, 307,
	308, 309, 245, 246, 106, 73, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256,
	257, 258, 259, 260, 153, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 271,
	41, 41, 41, 85, 85, 169, 298, 41,
	310, 245, 246, 106, 73, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257,
	258, 259, 260, 153, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 271, 41,
	41, 41, 85, 85, 169, 298, 41, 311,
	245, 246, 106, 73, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 153, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 271, 41, 41,
	41, 85, 85, 169, 298, 41, 312, 245,
	246, 106, 73, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257, 258, 259,
	260, 153, 261, 262, 263, 264, 265, 266,
	267, 268, 269, 270, 271, 41, 41, 41,
	85, 85, 169, 298, 41, 313, 245, 246,
	106, 73, 247, 248, 249, 250, 251, 252,
	253, 254, 255, 256, 257, 258, 259, 260,
	153, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 271, 41, 41, 41, 85,
	85, 169, 298, 41, 314, 245, 246, 106,
	73, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 257, 258, 259, 260, 153,
	261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 41, 41, 41, 85, 85,
	169, 298, 41, 315, 245, 246, 106, 73,
	247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 257, 258, 259, 260, 153, 261,
	262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 41, 41, 41, 85, 85, 169,
	298, 41, 316, 245, 246, 106, 73, 247,
	248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 258, 259, 260, 153, 261, 262,
	263, 264, 265, 266, 267, 268, 269, 270,
	271, 41, 41, 41, 85, 85, 169, 298,
	41, 317, 245, 246, 106, 73, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256,
	257, 258, 259, 260, 153, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 271,
	41, 41, 41, 85, 85, 169, 298, 41,
	318, 245, 246, 106, 73, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257,
	258, 259, 260, 153, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 271, 41,
	41, 41, 85, 85, 169, 298, 41, 319,
	320, 321, 245, 246, 106, 73, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256,
	257, 258, 259, 260, 153, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 271,
	41, 41, 41, 85, 85, 169, 298, 41,
	322, 245, 246, 106, 73, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257,
	258, 259, 260, 153, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 271, 41,
	41, 41, 85, 85, 169, 298, 41, 323,
	245, 246, 106, 73, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 153, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 271, 41, 41,
	41, 85, 85, 169, 298, 41, 324, 245,
	246, 106, 73, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257, 258, 259,
	260, 153, 261, 262, 263, 264, 265, 266,
	267, 268, 269, 270, 271, 41, 41, 41,
	85, 85, 169, 298, 41, 325, 245, 246,
	106, 73, 247, 248, 249, 250, 251, 252,
	253, 254, 255, 256, 257, 258, 259, 260,
	153, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 271, 41, 41, 41, 85,
	85, 169, 298, 41, 326, 245, 246, 106,
	73, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 257, 258, 259, 260, 153,
	261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 41, 41, 41, 85, 85,
	169, 298, 41, 327, 245, 246, 106, 73,
	247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 257, 258, 259, 260, 153, 261,
	262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 41, 41, 41, 85, 85, 169,
	298, 41, 328, 329, 245, 246, 106, 73,
	247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 257, 258, 259, 260, 153, 261,
	262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 41, 41, 41, 85, 85, 169,
	298, 41, 330, 245, 246, 106, 73, 247,
	248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 258, 259, 260, 153, 261, 262,
	263, 264, 265, 266, 267, 268, 269, 270,
	271, 41, 41, 41, 85, 85, 169, 298,
	41, 331, 245, 246, 106, 73, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256,
	257, 258, 259, 260, 153, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 271,
	41, 41, 41, 85, 85, 169, 298, 41,
	332, 245, 246, 106, 73, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257,
	258, 259, 260, 153, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 271, 41,
	41, 41, 85, 85, 169, 298, 41, 333,
	245, 246, 106, 73, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 153, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 271, 41, 41,
	41, 85, 85, 169, 298, 41, 334, 245,
	246, 106, 73, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257, 258, 259,
	260, 153, 261, 262, 263, 264, 265, 266,
	267, 268, 269, 270, 271, 41, 41, 41,
	85, 85, 169, 298, 41, 335, 245, 246,
	106, 73, 247, 248, 249, 250, 251, 252,
	253, 254, 255, 256, 257, 258, 259, 260,
	153, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 271, 41, 41, 41, 85,
	85, 169, 298, 41, 336, 245, 246, 106,
	73, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 257, 258, 259, 260, 153,
	261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 41, 41, 41, 85, 85,
	169, 298, 41, 337, 245, 246, 106, 73,
	247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 257, 258, 259, 260, 153, 261,
	262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 41, 41, 41, 85, 85, 169,
	298, 41, 338, 245, 246, 106, 73, 247,
	248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 258, 259, 260, 153, 261, 262,
	263, 264, 265, 266, 267, 268, 269, 270,
	271, 41, 41, 41, 85, 85, 169, 298,
	41, 339, 245, 246, 106, 73, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256,
	257, 258, 259, 260, 153, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 271,
	41, 41, 41, 85, 85, 169, 298, 41,
	340, 245, 246, 106, 73, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257,
	258, 259, 260, 153, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 271, 41,
	41, 41, 85, 85, 169, 298, 41, 341,
	245, 246, 106, 73, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 153, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 271, 41, 41,
	41, 85, 85, 169, 298, 41, 342, 245,
	246, 106, 73, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257, 258, 259,
	260, 153, 261, 262, 263, 264, 265, 266,
	267, 268, 269, 270, 271, 41, 41, 41,
	85, 85, 169, 298, 41, 343, 245, 246,
	106, 73, 247, 248, 249, 250, 251, 252,
	253, 254, 255, 256, 257, 258, 259, 260,
	153, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 271, 41, 41, 41, 85,
	85, 169, 298, 41, 344, 245, 246, 106,
	73, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 257, 258, 259, 260, 153,
	261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 41, 41, 41, 85, 85,
	169, 298, 41, 345, 346, 245, 246, 106,
	73, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 257, 258, 259, 260, 153,
	261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 41, 41, 41, 85, 85,
	169, 298, 41, 347, 245, 246, 106, 73,
	247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 257, 258, 259, 260, 153, 261,
	262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 41, 41, 41, 85, 85, 169,
	298, 41, 348, 245, 246, 106, 73, 247,
	248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 258, 259, 260, 153, 261, 262,
	263, 264, 265, 266, 267, 268, 269, 270,
	271, 41, 41, 41, 85, 85, 169, 298,
	41, 349, 245, 246, 106, 73, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256,
	257, 258, 259, 260, 153, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 271,
	41, 41, 41, 85, 85, 169, 298, 41,
	350, 245, 246, 106, 73, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257,
	258, 259, 260, 153, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 271, 41,
	41, 41, 85, 85, 169, 298, 353, 352,
	354, 352, 351, 353, 352, 352, 355, 203,
	356, 357, 202, 203, 204, 205, 202,
}

var _flux_trans_targs []int16 = []int16{
	226, 0, 226, 2, 2, 226, 3, 4,
	5, 226, 228, 7, 8, 9, 27, 10,
	11, 12, 13, 232, 226, 15, 16, 17,
	18, 19, 20, 21, 233, 23, 24, 25,
	26, 226, 226, 235, 236, 30, 31, 29,
	226, 245, 54, 55, 56, 57, 58, 59,
	60, 61, 62, 63, 64, 65, 66, 67,
	68, 69, 70, 71, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 82, 83, 84,
	85, 36, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 34, 97, 98,
	99, 100, 101, 102, 103, 104, 105, 106,
	107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 35, 117, 118, 119, 120, 122,
	123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 138, 139,
	140, 141, 142, 143, 145, 148, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 164, 166, 167, 168, 169,
	170, 51, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 183, 198, 201,
	213, 146, 214, 216, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 199, 200, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 215,
	226, 292, 218, 218, 292, 219, 295, 292,
	221, 223, 222, 224, 225, 227, 227, 1,
	226, 226, 226, 226, 226, 226, 226, 228,
	229, 231, 237, 226, 242, 243, 244, 226,
	226, 246, 248, 254, 264, 269, 271, 276,
	282, 287, 226, 217, 226, 32, 33, 37,
	38, 39, 40, 41, 42, 43, 44, 45,
	46, 47, 48, 49, 50, 52, 53, 81,
	121, 137, 144, 147, 149, 163, 165, 182,
	226, 226, 230, 226, 226, 226, 6, 226,
	14, 22, 234, 226, 28, 238, 239, 240,
	241, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 247, 245, 249, 250, 251,
	252, 253, 245, 255, 257, 260, 256, 245,
	258, 259, 245, 261, 262, 263, 245, 245,
	265, 245, 266, 267, 268, 245, 270, 245,
	272, 245, 273, 274, 275, 245, 277, 278,
	279, 280, 281, 245, 283, 284, 285, 286,
	245, 288, 290, 289, 245, 291, 245, 292,
	293, 293, 294, 292, 292, 220, 292,
}

var _flux_trans_actions []byte = []byte{
	43, 0, 47, 0, 1, 27, 0, 0,
	0, 91, 165, 0, 0, 0, 0, 0,
	0, 0, 0, 9, 95, 0, 0, 0,
	0, 0, 0, 0, 9, 0, 0, 0,
	0, 25, 93, 168, 168, 0, 0, 0,
	97, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	67, 23, 0, 1, 11, 0, 108, 21,
	0, 0, 0, 0, 0, 3, 99, 0,
	35, 53, 55, 33, 29, 69, 31, 171,
	0, 162, 162, 65, 0, 0, 0, 57,
	59, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 61, 0, 63, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	89, 81, 0, 71, 102, 75, 0, 79,
	0, 0, 9, 77, 0, 162, 162, 162,
	162, 83, 51, 39, 87, 37, 49, 45,
	85, 41, 73, 159, 114, 159, 159, 159,
	159, 159, 141, 159, 159, 159, 159, 153,
	159, 159, 123, 159, 159, 159, 156, 147,
	159, 126, 159, 159, 159, 129, 159, 120,
	159, 117, 159, 159, 159, 138, 159, 159,
	159, 159, 159, 132, 159, 159, 159, 159,
	135, 159, 159, 159, 144, 159, 150, 13,
	3, 99, 111, 17, 19, 0, 15,
}

var _flux_to_state_actions []byte = []byte{
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 105, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 5, 0, 0, 0,
}

var _flux_from_state_actions []byte = []byte{
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 7, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 7, 0, 0, 0,
}

var _flux_eof_trans []int16 = []int16{
	0, 0, 0, 0, 0, 0, 10, 10,
	10, 10, 10, 10, 10, 10, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 10, 35, 35, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41,
	41, 0, 202, 202, 208, 208, 208, 208,
	208, 208, 0, 273, 41, 274, 276, 278,
	280, 280, 280, 284, 284, 278, 278, 278,
	278, 278, 290, 293, 297, 41, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 0, 356, 357, 359,
}

const flux_start int = 226
const flux_first_final int = 226
const flux_error int = 0

const flux_en_main_with_regex int = 292
const flux_en_main int = 226

//line scanner.rl:121

func (s *Scanner) exec(cs int) int {

//line scanner.rl:124

//line scanner.rl:125

//line scanner.rl:126

//line scanner.rl:127

//line scanner.rl:128

//line scanner.rl:129
	var act int

//line scanner.gen.go:1261
	{
		(s.ts) = 0
		(s.te) = 0
		act = 0
	}

//line scanner.rl:131

//line scanner.gen.go:1270
	{
		var _klen int
		var _trans int
		var _acts int
		var _nacts uint
		var _keys int
		if (s.p) == (s.pe) {
			goto _test_eof
		}
		if cs == 0 {
			goto _out
		}
	_resume:
		_acts = int(_flux_from_state_actions[cs])
		_nacts = uint(_flux_actions[_acts])
		_acts++
		for ; _nacts > 0; _nacts-- {
			_acts++
			switch _flux_actions[_acts-1] {
			case 4:
//line NONE:1
				(s.ts) = (s.p)

//line scanner.gen.go:1293
			}
		}

		_keys = int(_flux_key_offsets[cs])
		_trans = int(_flux_index_offsets[cs])

		_klen = int(_flux_single_lengths[cs])
		if _klen > 0 {
			_lower := int(_keys)
			var _mid int
			_upper := int(_keys + _klen - 1)
			for {
				if _upper < _lower {
					break
				}

				_mid = _lower + ((_upper - _lower) >> 1)
				switch {
				case (s.data)[(s.p)] < _flux_trans_keys[_mid]:
					_upper = _mid - 1
				case (s.data)[(s.p)] > _flux_trans_keys[_mid]:
					_lower = _mid + 1
				default:
					_trans += int(_mid - int(_keys))
					goto _match
				}
			}
			_keys += _klen
			_trans += _klen
		}

		_klen = int(_flux_range_lengths[cs])
		if _klen > 0 {
			_lower := int(_keys)
			var _mid int
			_upper := int(_keys + (_klen << 1) - 2)
			for {
				if _upper < _lower {
					break
				}

				_mid = _lower + (((_upper - _lower) >> 1) & ^1)
				switch {
				case (s.data)[(s.p)] < _flux_trans_keys[_mid]:
					_upper = _mid - 2
				case (s.data)[(s.p)] > _flux_trans_keys[_mid+1]:
					_lower = _mid + 2
				default:
					_trans += int((_mid - int(_keys)) >> 1)
					goto _match
				}
			}
			_trans += _klen
		}

	_match:
		_trans = int(_flux_indicies[_trans])
	_eof_trans:
		cs = int(_flux_trans_targs[_trans])

		if _flux_trans_actions[_trans] == 0 {
			goto _again
		}

		_acts = int(_flux_trans_actions[_trans])
		_nacts = uint(_flux_actions[_acts])
		_acts++
		for ; _nacts > 0; _nacts-- {
			_acts++
			switch _flux_actions[_acts-1] {
			case 0:
//line scanner.rl:10
				s.f.AddLine((s.p) + 1)
			case 1:
//line scanner.rl:41

				s.checkpoint = s.p

			case 5:
//line NONE:1
				(s.te) = (s.p) + 1

			case 6:
//line scanner.rl:53
				act = 1
			case 7:
//line scanner.rl:59
				act = 3
			case 8:
//line scanner.rl:53
				(s.te) = (s.p) + 1
				{
					s.token = token.REGEX
					(s.p)++
					goto _out
				}
			case 9:
//line scanner.rl:59
				(s.te) = (s.p) + 1
				{
					(s.p)--
					cs = 226
					goto _again
				}
			case 10:
//line scanner.rl:53
				(s.te) = (s.p)
				(s.p)--
				{
					s.token = token.REGEX
					(s.p)++
					goto _out
				}
			case 11:
//line scanner.rl:56
				(s.te) = (s.p)
				(s.p)--

			case 12:
//line scanner.rl:59
				(s.te) = (s.p)
				(s.p)--
				{
					(s.p)--
					cs = 226
					goto _again
				}
			case 13:
//line scanner.rl:59
				(s.p) = (s.te) - 1
				{
					(s.p)--
					cs = 226
					goto _again
				}
			case 14:
//line NONE:1
				switch act {
				case 1:
					{
						(s.p) = (s.te) - 1
						s.token = token.REGEX
						(s.p)++
						goto _out
					}
				case 3:
					{
						(s.p) = (s.te) - 1
						(s.p)--
						cs = 226
						goto _again
					}
				}

			case 15:
//line scanner.rl:66
				act = 5
			case 16:
//line scanner.rl:67
				act = 6
			case 17:
//line scanner.rl:68
				act = 7
			case 18:
//line scanner.rl:69
				act = 8
			case 19:
//line scanner.rl:70
				act = 9
			case 20:
//line scanner.rl:71
				act = 10
			case 21:
//line scanner.rl:72
				act = 11
			case 22:
//line scanner.rl:73
				act = 12
			case 23:
//line scanner.rl:74
				act = 13
			case 24:
//line scanner.rl:75
				act = 14
			case 25:
//line scanner.rl:76
				act = 15
			case 26:
//line scanner.rl:77
				act = 16
			case 27:
//line scanner.rl:78
				act = 17
			case 28:
//line scanner.rl:79
				act = 18
			case 29:
//line scanner.rl:80
				act = 19
			case 30:
//line scanner.rl:82
				act = 20
			case 31:
//line scanner.rl:83
				act = 21
			case 32:
//line scanner.rl:84
				act = 22
			case 33:
//line scanner.rl:85
				act = 23
			case 34:
//line scanner.rl:114
				act = 51
			case 35:
//line scanner.rl:64
				(s.te) = (s.p) + 1
				{
					s.token = token.COMMENT
					(s.p)++
					goto _out
				}
			case 36:
//line scanner.rl:86
				(s.te) = (s.p) + 1
				{
					s.token = token.TIME
					(s.p)++
					goto _out
				}
			case 37:
//line scanner.rl:87
				(s.te) = (s.p) + 1
				{
					s.token = token.STRING
					(s.p)++
					goto _out
				}
			case 38:
//line scanner.rl:89
				(s.te) = (s.p) + 1
				{
					s.token = token.ADD
					(s.p)++
					goto _out
				}
			case 39:
//line scanner.rl:90
				(s.te) = (s.p) + 1
				{
					s.token = token.SUB
					(s.p)++
					goto _out
				}
			case 40:
//line scanner.rl:91
				(s.te) = (s.p) + 1
				{
					s.token = token.MUL
					(s.p)++
					goto _out
				}
			case 41:
//line scanner.rl:93
				(s.te) = (s.p) + 1
				{
					s.token = token.MOD
					(s.p)++
					goto _out
				}
			case 42:
//line scanner.rl:94
				(s.te) = (s.p) + 1
				{
					s.token = token.EQ
					(s.p)++
					goto _out
				}
			case 43:
//line scanner.rl:97
				(s.te) = (s.p) + 1
				{
					s.token = token.LTE
					(s.p)++
					goto _out
				}
			case 44:
//line scanner.rl:98
				(s.te) = (s.p) + 1
				{
					s.token = token.GTE
					(s.p)++
					goto _out
				}
			case 45:
//line scanner.rl:99
				(s.te) = (s.p) + 1
				{
					s.token = token.NEQ
					(s.p)++
					goto _out
				}
			case 46:
//line scanner.rl:100
				(s.te) = (s.p) + 1
				{
					s.token = token.REGEXEQ
					(s.p)++
					goto _out
				}
			case 47:
//line scanner.rl:101
				(s.te) = (s.p) + 1
				{
					s.token = token.REGEXNEQ
					(s.p)++
					goto _out
				}
			case 48:
//line scanner.rl:103
				(s.te) = (s.p) + 1
				{
					s.token = token.ARROW
					(s.p)++
					goto _out
				}
			case 49:
//line scanner.rl:104
				(s.te) = (s.p) + 1
				{
					s.token = token.PIPE_RECEIVE
					(s.p)++
					goto _out
				}
			case 50:
//line scanner.rl:105
				(s.te) = (s.p) + 1
				{
					s.token = token.LPAREN
					(s.p)++
					goto _out
				}
			case 51:
//line scanner.rl:106
				(s.te) = (s.p) + 1
				{
					s.token = token.RPAREN
					(s.p)++
					goto _out
				}
			case 52:
//line scanner.rl:107
				(s.te) = (s.p) + 1
				{
					s.token = token.LBRACK
					(s.p)++
					goto _out
				}
			case 53:
//line scanner.rl:108
				(s.te) = (s.p) + 1
				{
					s.token = token.RBRACK
					(s.p)++
					goto _out
				}
			case 54:
//line scanner.rl:109
				(s.te) = (s.p) + 1
				{
					s.token = token.LBRACE
					(s.p)++
					goto _out
				}
			case 55:
//line scanner.rl:110
				(s.te) = (s.p) + 1
				{
					s.token = token.RBRACE
					(s.p)++
					goto _out
				}
			case 56:
//line scanner.rl:111
				(s.te) = (s.p) + 1
				{
					s.token = token.COLON
					(s.p)++
					goto _out
				}
			case 57:
//line scanner.rl:112
				(s.te) = (s.p) + 1
				{
					s.token = token.PIPE_FORWARD
					(s.p)++
					goto _out
				}
			case 58:
//line scanner.rl:113
				(s.te) = (s.p) + 1
				{
					s.token = token.COMMA
					(s.p)++
					goto _out
				}
			case 59:
//line scanner.rl:64
				(s.te) = (s.p)
				(s.p)--
				{
					s.token = token.COMMENT
					(s.p)++
					goto _out
				}
			case 60:
//line scanner.rl:82
				(s.te) = (s.p)
				(s.p)--
				{
					s.token = token.IDENT
					(s.p)++
					goto _out
				}
			case 61:
//line scanner.rl:83
				(s.te) = (s.p)
				(s.p)--
				{
					s.token = token.INT
					(s.p)++
					goto _out
				}
			case 62:
//line scanner.rl:85
				(s.te) = (s.p)
				(s.p)--
				{
					s.token = token.DURATION
					(s.p)++
					goto _out
				}
			case 63:
//line scanner.rl:86
				(s.te) = (s.p)
				(s.p)--
				{
					s.token = token.TIME
					(s.p)++
					goto _out
				}
			case 64:
//line scanner.rl:92
				(s.te) = (s.p)
				(s.p)--
				{
					s.token = token.DIV
					(s.p)++
					goto _out
				}
			case 65:
//line scanner.rl:95
				(s.te) = (s.p)
				(s.p)--
				{
					s.token = token.LT
					(s.p)++
					goto _out
				}
			case 66:
//line scanner.rl:96
				(s.te) = (s.p)
				(s.p)--
				{
					s.token = token.GT
					(s.p)++
					goto _out
				}
			case 67:
//line scanner.rl:102
				(s.te) = (s.p)
				(s.p)--
				{
					s.token = token.ASSIGN
					(s.p)++
					goto _out
				}
			case 68:
//line scanner.rl:116
				(s.te) = (s.p)
				(s.p)--

			case 69:
//line scanner.rl:83
				(s.p) = (s.te) - 1
				{
					s.token = token.INT
					(s.p)++
					goto _out
				}
			case 70:
//line scanner.rl:85
				(s.p) = (s.te) - 1
				{
					s.token = token.DURATION
					(s.p)++
					goto _out
				}
			case 71:
//line scanner.rl:86
				(s.p) = (s.te) - 1
				{
					s.token = token.TIME
					(s.p)++
					goto _out
				}
			case 72:
//line NONE:1
				switch act {
				case 0:
					{
						cs = 0
						goto _again
					}
				case 5:
					{
						(s.p) = (s.te) - 1
						s.token = token.AND
						(s.p)++
						goto _out
					}
				case 6:
					{
						(s.p) = (s.te) - 1
						s.token = token.OR
						(s.p)++
						goto _out
					}
				case 7:
					{
						(s.p) = (s.te) - 1
						s.token = token.NOT
						(s.p)++
						goto _out
					}
				case 8:
					{
						(s.p) = (s.te) - 1
						s.token = token.EMPTY
						(s.p)++
						goto _out
					}
				case 9:
					{
						(s.p) = (s.te) - 1
						s.token = token.IN
						(s.p)++
						goto _out
					}
				case 10:
					{
						(s.p) = (s.te) - 1
						s.token = token.IMPORT
						(s.p)++
						goto _out
					}
				case 11:
					{
						(s.p) = (s.te) - 1
						s.token = token.PACKAGE
						(s.p)++
						goto _out
					}
				case 12:
					{
						(s.p) = (s.te) - 1
						s.token = token.RETURN
						(s.p)++
						goto _out
					}
				case 13:
					{
						(s.p) = (s.te) - 1
						s.token = token.OPTION
						(s.p)++
						goto _out
					}
				case 14:
					{
						(s.p) = (s.te) - 1
						s.token = token.BUILTIN
						(s.p)++
						goto _out
					}
				case 15:
					{
						(s.p) = (s.te) - 1
						s.token = token.TEST
						(s.p)++
						goto _out
					}
				case 16:
					{
						(s.p) = (s.te) - 1
						s.token = token.IF
						(s.p)++
						goto _out
					}
				case 17:
					{
						(s.p) = (s.te) - 1
						s.token = token.THEN
						(s.p)++
						goto _out
					}
				case 18:
					{
						(s.p) = (s.te) - 1
						s.token = token.ELSE
						(s.p)++
						goto _out
					}
				case 19:
					{
						(s.p) = (s.te) - 1
						s.token = token.EXISTS
						(s.p)++
						goto _out
					}
				case 20:
					{
						(s.p) = (s.te) - 1
						s.token = token.IDENT
						(s.p)++
						goto _out
					}
				case 21:
					{
						(s.p) = (s.te) - 1
						s.token = token.INT
						(s.p)++
						goto _out
					}
				case 22:
					{
						(s.p) = (s.te) - 1
						s.token = token.FLOAT
						(s.p)++
						goto _out
					}
				case 23:
					{
						(s.p) = (s.te) - 1
						s.token = token.DURATION
						(s.p)++
						goto _out
					}
				case 51:
					{
						(s.p) = (s.te) - 1
						s.token = token.DOT
						(s.p)++
						goto _out
					}
				}

//line scanner.gen.go:1777
			}
		}

	_again:
		_acts = int(_flux_to_state_actions[cs])
		_nacts = uint(_flux_actions[_acts])
		_acts++
		for ; _nacts > 0; _nacts-- {
			_acts++
			switch _flux_actions[_acts-1] {
			case 2:
//line NONE:1
				(s.ts) = 0

			case 3:
//line NONE:1
				act = 0

//line scanner.gen.go:1795
			}
		}

		if cs == 0 {
			goto _out
		}
		(s.p)++
		if (s.p) != (s.pe) {
			goto _resume
		}
	_test_eof:
		{
		}
		if (s.p) == (s.eof) {
			if _flux_eof_trans[cs] > 0 {
				_trans = int(_flux_eof_trans[cs] - 1)
				goto _eof_trans
			}
		}

	_out:
		{
		}
	}

//line scanner.rl:132
	return cs
}
