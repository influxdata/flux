//line scanner.rl:1
package scanner

import "github.com/influxdata/flux/internal/token"

//line scanner.rl:128

//line scanner.gen.go:13
var _flux_actions []byte = []byte{
	0, 1, 0, 1, 1, 1, 2, 1, 4,
	1, 5, 1, 8, 1, 9, 1, 10,
	1, 11, 1, 12, 1, 13, 1, 14,
	1, 36, 1, 37, 1, 38, 1, 39,
	1, 40, 1, 41, 1, 42, 1, 43,
	1, 44, 1, 45, 1, 46, 1, 47,
	1, 48, 1, 49, 1, 50, 1, 51,
	1, 52, 1, 53, 1, 54, 1, 55,
	1, 56, 1, 57, 1, 58, 1, 59,
	1, 60, 1, 61, 1, 62, 1, 63,
	1, 64, 1, 65, 1, 66, 1, 67,
	1, 68, 1, 69, 1, 70, 1, 71,
	1, 72, 1, 73, 1, 74, 1, 75,
	1, 77, 1, 78, 1, 79, 1, 80,
	1, 81, 2, 0, 1, 2, 0, 35,
	2, 2, 3, 2, 5, 6, 2, 5,
	7, 2, 5, 15, 2, 5, 16, 2,
	5, 17, 2, 5, 18, 2, 5, 19,
	2, 5, 20, 2, 5, 21, 2, 5,
	22, 2, 5, 23, 2, 5, 24, 2,
	5, 25, 2, 5, 26, 2, 5, 27,
	2, 5, 28, 2, 5, 29, 2, 5,
	30, 2, 5, 31, 2, 5, 32, 2,
	5, 33, 2, 5, 34, 2, 5, 76,
	3, 5, 0, 76,
}

var _flux_key_offsets []int16 = []int16{
	0, 0, 2, 6, 9, 16, 17, 23,
	29, 32, 35, 39, 41, 43, 44, 46,
	48, 50, 52, 53, 55, 57, 58, 60,
	62, 64, 66, 67, 69, 71, 74, 83,
	94, 95, 96, 99, 105, 105, 107, 109,
	118, 125, 133, 134, 136, 138, 142, 147,
	156, 160, 166, 177, 179, 181, 183, 188,
	215, 219, 229, 244, 258, 276, 289, 305,
	313, 329, 342, 363, 371, 385, 394, 408,
	419, 431, 441, 450, 459, 461, 464, 485,
	491, 492, 498, 506, 555, 560, 566, 570,
	575, 577, 579, 581, 588, 596, 603, 606,
	610, 614, 616, 618, 622, 626, 630, 636,
	644, 648, 654, 656, 658, 660, 666, 670,
	674, 676, 678, 682, 685, 689, 691, 695,
	699, 709, 714, 728, 744, 746, 748, 764,
	769, 771, 773, 775, 779, 783, 785, 789,
	793, 803, 813, 814, 825, 833, 836, 839,
	843, 847, 849, 852, 854, 854, 857, 859,
	884, 886, 892, 897, 899, 903, 907, 909,
	914, 916, 920, 922, 924, 926, 929, 931,
	952, 954, 956, 958, 969, 975, 977, 979,
	981, 983, 987, 991, 993, 995, 999, 1001,
	1009, 1017, 1034, 1044, 1048, 1050, 1052, 1056,
	1058, 1062, 1064, 1068, 1073, 1075, 1084, 1088,
	1098, 1104, 1106, 1108, 1122, 1123, 1133, 1134,
	1142, 1149, 1151, 1154, 1156, 1158, 1160, 1163,
	1166, 1169, 1171, 1175, 1176, 1179, 1182, 1186,
	1189, 1192, 1201, 1210, 1213, 1215, 1222, 1223,
	1229, 1235, 1237, 1315, 1319, 1323, 1325, 1326,
	1327, 1339, 1340, 1344, 1349, 1352, 1357, 1369,
	1381, 1393, 1406, 1418, 1420, 1423, 1424, 1467,
	1511, 1555, 1599, 1643, 1687, 1731, 1775, 1819,
	1865, 1909, 1953, 1997, 2041, 2085, 2129, 2173,
	2217, 2261, 2307, 2351, 2395, 2439, 2483, 2527,
	2571, 2616, 2660, 2704, 2748, 2792, 2836, 2880,
	2924, 2968, 3012, 3056, 3100, 3144, 3188, 3232,
	3276, 3321, 3365, 3409, 3453, 3497, 3502, 3506,
	3509, 3512, 3516,
}

var _flux_trans_keys []byte = []byte{
	61, 126, 10, 34, 36, 92, 10, 34,
	123, 34, 36, 92, 110, 114, 116, 120,
	123, 48, 57, 65, 70, 97, 102, 48,
	57, 65, 70, 97, 102, 46, 48, 57,
	46, 48, 57, 45, 46, 48, 57, 48,
	57, 48, 57, 45, 48, 57, 48, 57,
	48, 57, 48, 57, 58, 48, 57, 48,
	57, 58, 48, 57, 48, 57, 48, 57,
	48, 57, 58, 48, 57, 48, 57, 46,
	48, 57, 100, 104, 109, 110, 115, 117,
	119, 121, 194, 100, 104, 109, 110, 115,
	117, 119, 121, 194, 48, 57, 115, 181,
	170, 181, 186, 128, 150, 152, 182, 184,
	255, 192, 255, 128, 255, 173, 130, 133,
	146, 159, 165, 171, 175, 255, 133, 176,
	180, 182, 183, 186, 189, 134, 140, 136,
	138, 142, 161, 163, 255, 182, 130, 137,
	164, 176, 151, 152, 154, 160, 190, 136,
	175, 192, 255, 135, 129, 130, 132, 133,
	144, 170, 176, 178, 144, 154, 161, 191,
	128, 151, 153, 158, 174, 255, 148, 157,
	160, 169, 172, 176, 185, 189, 190, 192,
	255, 144, 191, 141, 255, 178, 255, 186,
	138, 170, 180, 181, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 129,
	185, 189, 255, 141, 143, 145, 151, 164,
	176, 179, 186, 192, 255, 178, 129, 131,
	133, 140, 143, 144, 147, 168, 170, 176,
	182, 185, 189, 255, 141, 158, 133, 134,
	137, 138, 143, 150, 152, 155, 164, 175,
	178, 255, 129, 131, 133, 138, 143, 144,
	147, 168, 170, 176, 178, 179, 181, 182,
	184, 185, 190, 255, 157, 131, 134, 137,
	138, 141, 144, 146, 152, 159, 175, 182,
	255, 129, 131, 133, 141, 143, 145, 147,
	168, 170, 176, 178, 179, 181, 185, 189,
	255, 134, 138, 141, 143, 145, 159, 164,
	255, 129, 131, 133, 140, 143, 144, 147,
	168, 170, 176, 178, 179, 181, 185, 189,
	191, 177, 128, 132, 135, 136, 139, 140,
	150, 151, 156, 157, 159, 163, 156, 130,
	131, 133, 138, 142, 144, 146, 149, 153,
	154, 158, 159, 163, 164, 168, 170, 174,
	185, 190, 191, 144, 151, 128, 130, 134,
	136, 138, 140, 129, 131, 133, 140, 142,
	144, 146, 168, 170, 179, 181, 185, 189,
	255, 133, 137, 151, 141, 148, 154, 159,
	164, 255, 130, 131, 133, 140, 142, 144,
	146, 168, 170, 179, 181, 185, 189, 191,
	158, 128, 132, 134, 136, 138, 140, 149,
	150, 160, 163, 130, 131, 133, 140, 142,
	144, 146, 168, 170, 185, 189, 255, 133,
	137, 141, 150, 152, 159, 164, 185, 192,
	255, 189, 130, 131, 133, 150, 154, 177,
	179, 187, 150, 128, 134, 143, 148, 152,
	159, 178, 179, 129, 186, 141, 128, 134,
	132, 138, 141, 165, 167, 129, 130, 135,
	136, 148, 151, 153, 159, 161, 163, 170,
	171, 173, 185, 187, 189, 134, 141, 128,
	132, 156, 157, 128, 128, 135, 137, 172,
	177, 191, 128, 129, 136, 139, 144, 151,
	153, 188, 128, 129, 130, 131, 133, 134,
	135, 137, 138, 139, 140, 141, 142, 143,
	144, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 164, 165, 166, 167, 168,
	172, 173, 174, 176, 177, 180, 181, 182,
	184, 188, 189, 190, 191, 132, 136, 145,
	152, 185, 187, 184, 128, 182, 187, 191,
	144, 162, 165, 168, 174, 255, 135, 141,
	143, 159, 187, 134, 143, 189, 255, 154,
	158, 163, 167, 186, 255, 137, 151, 153,
	142, 143, 158, 159, 137, 177, 142, 143,
	182, 183, 191, 255, 128, 130, 133, 136,
	150, 152, 255, 145, 150, 151, 155, 158,
	160, 255, 128, 143, 160, 255, 181, 255,
	129, 255, 173, 174, 183, 255, 129, 154,
	160, 255, 171, 173, 177, 255, 128, 140,
	142, 147, 160, 179, 128, 147, 160, 172,
	174, 176, 178, 179, 128, 179, 182, 255,
	137, 150, 152, 155, 157, 255, 160, 255,
	184, 255, 128, 170, 128, 156, 160, 171,
	176, 184, 144, 173, 176, 180, 128, 169,
	176, 255, 138, 255, 128, 155, 128, 179,
	181, 255, 132, 140, 255, 128, 169, 174,
	175, 128, 181, 141, 143, 154, 189, 150,
	151, 158, 159, 152, 154, 156, 158, 134,
	135, 142, 143, 190, 255, 190, 128, 180,
	182, 188, 130, 132, 134, 140, 144, 147,
	150, 155, 160, 172, 178, 180, 182, 188,
	129, 130, 132, 133, 134, 146, 147, 176,
	177, 178, 179, 180, 181, 182, 183, 184,
	177, 191, 144, 148, 130, 135, 149, 164,
	166, 168, 138, 147, 153, 157, 170, 173,
	175, 185, 188, 191, 142, 133, 137, 160,
	255, 137, 255, 182, 255, 170, 255, 128,
	174, 176, 255, 159, 176, 190, 255, 165,
	255, 128, 165, 176, 255, 166, 174, 176,
	255, 128, 150, 160, 166, 168, 174, 176,
	182, 184, 190, 128, 134, 136, 142, 144,
	150, 152, 158, 160, 191, 175, 128, 129,
	130, 131, 132, 133, 134, 135, 144, 145,
	255, 133, 135, 161, 169, 177, 181, 184,
	188, 160, 151, 156, 187, 192, 255, 133,
	173, 177, 255, 143, 159, 184, 255, 176,
	191, 182, 183, 184, 182, 255, 191, 192,
	255, 132, 255, 128, 146, 148, 152, 153,
	154, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 168, 169, 176, 129, 145,
	149, 151, 177, 255, 141, 255, 141, 143,
	160, 169, 172, 255, 191, 128, 159, 162,
	174, 128, 151, 151, 159, 162, 255, 137,
	138, 141, 255, 187, 255, 130, 134, 139,
	168, 255, 128, 179, 138, 170, 176, 255,
	147, 255, 128, 182, 128, 141, 158, 159,
	255, 164, 255, 164, 168, 169, 171, 172,
	173, 174, 175, 180, 181, 182, 183, 185,
	186, 187, 188, 189, 190, 191, 165, 179,
	174, 175, 171, 175, 154, 255, 190, 128,
	134, 147, 151, 157, 168, 170, 182, 184,
	188, 128, 129, 131, 132, 134, 255, 147,
	255, 190, 255, 144, 255, 144, 145, 136,
	175, 188, 255, 176, 180, 182, 255, 189,
	255, 161, 186, 129, 154, 166, 255, 191,
	255, 130, 135, 138, 143, 146, 151, 154,
	156, 144, 146, 157, 160, 170, 175, 161,
	169, 128, 129, 130, 131, 133, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 160,
	164, 168, 128, 139, 141, 166, 168, 186,
	188, 189, 191, 255, 142, 143, 158, 255,
	187, 255, 128, 180, 128, 156, 160, 255,
	145, 255, 128, 158, 176, 255, 139, 255,
	128, 157, 160, 255, 144, 132, 135, 150,
	255, 158, 255, 136, 188, 191, 128, 133,
	138, 181, 183, 184, 128, 149, 160, 185,
	128, 131, 133, 134, 140, 147, 149, 151,
	153, 179, 128, 141, 144, 145, 129, 140,
	175, 255, 163, 255, 144, 145, 146, 147,
	148, 149, 154, 155, 156, 157, 158, 159,
	150, 153, 149, 157, 173, 186, 188, 160,
	161, 163, 164, 167, 168, 132, 134, 149,
	157, 186, 139, 140, 191, 255, 134, 128,
	132, 138, 144, 146, 255, 166, 167, 129,
	155, 187, 149, 181, 143, 175, 137, 169,
	131, 140, 255, 128, 129, 255, 155, 156,
	255, 151, 255, 160, 168, 161, 167, 62,
	10, 47, 92, 10, 47, 92, 10, 47,
	92, 120, 10, 47, 92, 10, 47, 92,
	10, 47, 92, 48, 57, 65, 70, 97,
	102, 10, 47, 92, 48, 57, 65, 70,
	97, 102, 10, 47, 92, 10, 123, 34,
	36, 92, 110, 114, 116, 120, 123, 48,
	57, 65, 70, 97, 102, 48, 57, 65,
	70, 97, 102, 10, 123, 10, 32, 33,
	34, 37, 40, 41, 42, 43, 44, 45,
	46, 47, 48, 58, 60, 61, 62, 91,
	93, 94, 95, 97, 98, 101, 105, 110,
	111, 112, 114, 116, 123, 124, 125, 194,
	195, 198, 199, 203, 205, 206, 207, 210,
	212, 213, 214, 215, 216, 217, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228,
	233, 234, 237, 239, 240, 9, 13, 49,
	57, 65, 90, 99, 122, 196, 202, 208,
	218, 229, 236, 10, 32, 9, 13, 10,
	34, 36, 92, 48, 57, 47, 10, 46,
	100, 104, 109, 110, 115, 117, 119, 121,
	194, 48, 57, 84, 43, 45, 46, 90,
	43, 45, 90, 48, 57, 48, 49, 57,
	48, 111, 115, 49, 57, 46, 100, 104,
	109, 110, 115, 117, 119, 121, 194, 48,
	57, 46, 100, 104, 109, 110, 115, 117,
	119, 121, 194, 48, 57, 46, 100, 104,
	109, 110, 115, 117, 119, 121, 194, 48,
	57, 45, 46, 100, 104, 109, 110, 115,
	117, 119, 121, 194, 48, 57, 46, 100,
	104, 109, 110, 115, 117, 119, 121, 194,
	48, 57, 45, 61, 61, 62, 126, 61,
	95, 194, 195, 198, 199, 203, 205, 206,
	207, 210, 212, 213, 214, 215, 216, 217,
	219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 233, 234, 237, 239, 240, 48,
	57, 65, 90, 97, 122, 196, 202, 208,
	218, 229, 236, 95, 110, 194, 195, 198,
	199, 203, 205, 206, 207, 210, 212, 213,
	214, 215, 216, 217, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 233, 234,
	237, 239, 240, 48, 57, 65, 90, 97,
	122, 196, 202, 208, 218, 229, 236, 95,
	100, 194, 195, 198, 199, 203, 205, 206,
	207, 210, 212, 213, 214, 215, 216, 217,
	219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 233, 234, 237, 239, 240, 48,
	57, 65, 90, 97, 122, 196, 202, 208,
	218, 229, 236, 95, 117, 194, 195, 198,
	199, 203, 205, 206, 207, 210, 212, 213,
	214, 215, 216, 217, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 233, 234,
	237, 239, 240, 48, 57, 65, 90, 97,
	122, 196, 202, 208, 218, 229, 236, 95,
	105, 194, 195, 198, 199, 203, 205, 206,
	207, 210, 212, 213, 214, 215, 216, 217,
	219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 233, 234, 237, 239, 240, 48,
	57, 65, 90, 97, 122, 196, 202, 208,
	218, 229, 236, 95, 108, 194, 195, 198,
	199, 203, 205, 206, 207, 210, 212, 213,
	214, 215, 216, 217, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 233, 234,
	237, 239, 240, 48, 57, 65, 90, 97,
	122, 196, 202, 208, 218, 229, 236, 95,
	116, 194, 195, 198, 199, 203, 205, 206,
	207, 210, 212, 213, 214, 215, 216, 217,
	219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 233, 234, 237, 239, 240, 48,
	57, 65, 90, 97, 122, 196, 202, 208,
	218, 229, 236, 95, 105, 194, 195, 198,
	199, 203, 205, 206, 207, 210, 212, 213,
	214, 215, 216, 217, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 233, 234,
	237, 239, 240, 48, 57, 65, 90, 97,
	122, 196, 202, 208, 218, 229, 236, 95,
	110, 194, 195, 198, 199, 203, 205, 206,
	207, 210, 212, 213, 214, 215, 216, 217,
	219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 233, 234, 237, 239, 240, 48,
	57, 65, 90, 97, 122, 196, 202, 208,
	218, 229, 236, 95, 108, 109, 120, 194,
	195, 198, 199, 203, 205, 206, 207, 210,
	212, 213, 214, 215, 216, 217, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228,
	233, 234, 237, 239, 240, 48, 57, 65,
	90, 97, 122, 196, 202, 208, 218, 229,
	236, 95, 115, 194, 195, 198, 199, 203,
	205, 206, 207, 210, 212, 213, 214, 215,
	216, 217, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 233, 234, 237, 239,
	240, 48, 57, 65, 90, 97, 122, 196,
	202, 208, 218, 229, 236, 95, 101, 194,
	195, 198, 199, 203, 205, 206, 207, 210,
	212, 213, 214, 215, 216, 217, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228,
	233, 234, 237, 239, 240, 48, 57, 65,
	90, 97, 122, 196, 202, 208, 218, 229,
	236, 95, 112, 194, 195, 198, 199, 203,
	205, 206, 207, 210, 212, 213, 214, 215,
	216, 217, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 233, 234, 237, 239,
	240, 48, 57, 65, 90, 97, 122, 196,
	202, 208, 218, 229, 236, 95, 116, 194,
	195, 198, 199, 203, 205, 206, 207, 210,
	212, 213, 214, 215, 216, 217, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228,
	233, 234, 237, 239, 240, 48, 57, 65,
	90, 97, 122, 196, 202, 208, 218, 229,
	236, 95, 121, 194, 195, 198, 199, 203,
	205, 206, 207, 210, 212, 213, 214, 215,
	216, 217, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 233, 234, 237, 239,
	240, 48, 57, 65, 90, 97, 122, 196,
	202, 208, 218, 229, 236, 95, 105, 194,
	195, 198, 199, 203, 205, 206, 207, 210,
	212, 213, 214, 215, 216, 217, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228,
	233, 234, 237, 239, 240, 48, 57, 65,
	90, 97, 122, 196, 202, 208, 218, 229,
	236, 95, 115, 194, 195, 198, 199, 203,
	205, 206, 207, 210, 212, 213, 214, 215,
	216, 217, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 233, 234, 237, 239,
	240, 48, 57, 65, 90, 97, 122, 196,
	202, 208, 218, 229, 236, 95, 116, 194,
	195, 198, 199, 203, 205, 206, 207, 210,
	212, 213, 214, 215, 216, 217, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228,
	233, 234, 237, 239, 240, 48, 57, 65,
	90, 97, 122, 196, 202, 208, 218, 229,
	236, 95, 115, 194, 195, 198, 199, 203,
	205, 206, 207, 210, 212, 213, 214, 215,
	216, 217, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 233, 234, 237, 239,
	240, 48, 57, 65, 90, 97, 122, 196,
	202, 208, 218, 229, 236, 95, 102, 109,
	110, 194, 195, 198, 199, 203, 205, 206,
	207, 210, 212, 213, 214, 215, 216, 217,
	219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 233, 234, 237, 239, 240, 48,
	57, 65, 90, 97, 122, 196, 202, 208,
	218, 229, 236, 95, 112, 194, 195, 198,
	199, 203, 205, 206, 207, 210, 212, 213,
	214, 215, 216, 217, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 233, 234,
	237, 239, 240, 48, 57, 65, 90, 97,
	122, 196, 202, 208, 218, 229, 236, 95,
	111, 194, 195, 198, 199, 203, 205, 206,
	207, 210, 212, 213, 214, 215, 216, 217,
	219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 233, 234, 237, 239, 240, 48,
	57, 65, 90, 97, 122, 196, 202, 208,
	218, 229, 236, 95, 114, 194, 195, 198,
	199, 203, 205, 206, 207, 210, 212, 213,
	214, 215, 216, 217, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 233, 234,
	237, 239, 240, 48, 57, 65, 90, 97,
	122, 196, 202, 208, 218, 229, 236, 95,
	116, 194, 195, 198, 199, 203, 205, 206,
	207, 210, 212, 213, 214, 215, 216, 217,
	219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 233, 234, 237, 239, 240, 48,
	57, 65, 90, 97, 122, 196, 202, 208,
	218, 229, 236, 95, 111, 194, 195, 198,
	199, 203, 205, 206, 207, 210, 212, 213,
	214, 215, 216, 217, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 233, 234,
	237, 239, 240, 48, 57, 65, 90, 97,
	122, 196, 202, 208, 218, 229, 236, 95,
	116, 194, 195, 198, 199, 203, 205, 206,
	207, 210, 212, 213, 214, 215, 216, 217,
	219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 233, 234, 237, 239, 240, 48,
	57, 65, 90, 97, 122, 196, 202, 208,
	218, 229, 236, 95, 112, 114, 194, 195,
	198, 199, 203, 205, 206, 207, 210, 212,
	213, 214, 215, 216, 217, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 233,
	234, 237, 239, 240, 48, 57, 65, 90,
	97, 122, 196, 202, 208, 218, 229, 236,
	95, 116, 194, 195, 198, 199, 203, 205,
	206, 207, 210, 212, 213, 214, 215, 216,
	217, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 233, 234, 237, 239, 240,
	48, 57, 65, 90, 97, 122, 196, 202,
	208, 218, 229, 236, 95, 105, 194, 195,
	198, 199, 203, 205, 206, 207, 210, 212,
	213, 214, 215, 216, 217, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 233,
	234, 237, 239, 240, 48, 57, 65, 90,
	97, 122, 196, 202, 208, 218, 229, 236,
	95, 111, 194, 195, 198, 199, 203, 205,
	206, 207, 210, 212, 213, 214, 215, 216,
	217, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 233, 234, 237, 239, 240,
	48, 57, 65, 90, 97, 122, 196, 202,
	208, 218, 229, 236, 95, 110, 194, 195,
	198, 199, 203, 205, 206, 207, 210, 212,
	213, 214, 215, 216, 217, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 233,
	234, 237, 239, 240, 48, 57, 65, 90,
	97, 122, 196, 202, 208, 218, 229, 236,
	95, 97, 194, 195, 198, 199, 203, 205,
	206, 207, 210, 212, 213, 214, 215, 216,
	217, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 233, 234, 237, 239, 240,
	48, 57, 65, 90, 98, 122, 196, 202,
	208, 218, 229, 236, 95, 99, 194, 195,
	198, 199, 203, 205, 206, 207, 210, 212,
	213, 214, 215, 216, 217, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 233,
	234, 237, 239, 240, 48, 57, 65, 90,
	97, 122, 196, 202, 208, 218, 229, 236,
	95, 107, 194, 195, 198, 199, 203, 205,
	206, 207, 210, 212, 213, 214, 215, 216,
	217, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 233, 234, 237, 239, 240,
	48, 57, 65, 90, 97, 122, 196, 202,
	208, 218, 229, 236, 95, 97, 194, 195,
	198, 199, 203, 205, 206, 207, 210, 212,
	213, 214, 215, 216, 217, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 233,
	234, 237, 239, 240, 48, 57, 65, 90,
	98, 122, 196, 202, 208, 218, 229, 236,
	95, 103, 194, 195, 198, 199, 203, 205,
	206, 207, 210, 212, 213, 214, 215, 216,
	217, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 233, 234, 237, 239, 240,
	48, 57, 65, 90, 97, 122, 196, 202,
	208, 218, 229, 236, 95, 101, 194, 195,
	198, 199, 203, 205, 206, 207, 210, 212,
	213, 214, 215, 216, 217, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 233,
	234, 237, 239, 240, 48, 57, 65, 90,
	97, 122, 196, 202, 208, 218, 229, 236,
	95, 101, 194, 195, 198, 199, 203, 205,
	206, 207, 210, 212, 213, 214, 215, 216,
	217, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 233, 234, 237, 239, 240,
	48, 57, 65, 90, 97, 122, 196, 202,
	208, 218, 229, 236, 95, 116, 194, 195,
	198, 199, 203, 205, 206, 207, 210, 212,
	213, 214, 215, 216, 217, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 233,
	234, 237, 239, 240, 48, 57, 65, 90,
	97, 122, 196, 202, 208, 218, 229, 236,
	95, 117, 194, 195, 198, 199, 203, 205,
	206, 207, 210, 212, 213, 214, 215, 216,
	217, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 233, 234, 237, 239, 240,
	48, 57, 65, 90, 97, 122, 196, 202,
	208, 218, 229, 236, 95, 114, 194, 195,
	198, 199, 203, 205, 206, 207, 210, 212,
	213, 214, 215, 216, 217, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 233,
	234, 237, 239, 240, 48, 57, 65, 90,
	97, 122, 196, 202, 208, 218, 229, 236,
	95, 110, 194, 195, 198, 199, 203, 205,
	206, 207, 210, 212, 213, 214, 215, 216,
	217, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 233, 234, 237, 239, 240,
	48, 57, 65, 90, 97, 122, 196, 202,
	208, 218, 229, 236, 95, 101, 104, 194,
	195, 198, 199, 203, 205, 206, 207, 210,
	212, 213, 214, 215, 216, 217, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228,
	233, 234, 237, 239, 240, 48, 57, 65,
	90, 97, 122, 196, 202, 208, 218, 229,
	236, 95, 115, 194, 195, 198, 199, 203,
	205, 206, 207, 210, 212, 213, 214, 215,
	216, 217, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 233, 234, 237, 239,
	240, 48, 57, 65, 90, 97, 122, 196,
	202, 208, 218, 229, 236, 95, 116, 194,
	195, 198, 199, 203, 205, 206, 207, 210,
	212, 213, 214, 215, 216, 217, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228,
	233, 234, 237, 239, 240, 48, 57, 65,
	90, 97, 122, 196, 202, 208, 218, 229,
	236, 95, 101, 194, 195, 198, 199, 203,
	205, 206, 207, 210, 212, 213, 214, 215,
	216, 217, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 233, 234, 237, 239,
	240, 48, 57, 65, 90, 97, 122, 196,
	202, 208, 218, 229, 236, 95, 110, 194,
	195, 198, 199, 203, 205, 206, 207, 210,
	212, 213, 214, 215, 216, 217, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228,
	233, 234, 237, 239, 240, 48, 57, 65,
	90, 97, 122, 196, 202, 208, 218, 229,
	236, 10, 32, 47, 9, 13, 10, 32,
	9, 13, 10, 47, 92, 10, 47, 92,
	10, 34, 36, 92, 10, 34, 36, 92,
}

var _flux_single_lengths []byte = []byte{
	0, 2, 4, 3, 7, 1, 0, 0,
	1, 1, 2, 0, 0, 1, 0, 0,
	0, 0, 1, 0, 0, 1, 0, 0,
	0, 0, 1, 0, 0, 1, 9, 9,
	1, 1, 3, 0, 0, 0, 0, 1,
	1, 2, 1, 0, 0, 0, 1, 1,
	0, 0, 1, 0, 0, 0, 1, 27,
	0, 0, 1, 2, 0, 1, 0, 2,
	0, 1, 1, 2, 0, 3, 0, 1,
	0, 2, 1, 1, 0, 1, 5, 2,
	1, 0, 0, 43, 1, 0, 0, 1,
	0, 0, 0, 3, 2, 1, 1, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1, 0, 0, 0, 0,
	4, 1, 0, 16, 2, 0, 6, 1,
	0, 0, 0, 0, 2, 0, 0, 0,
	0, 0, 1, 9, 0, 1, 1, 0,
	0, 0, 3, 0, 0, 1, 0, 19,
	0, 0, 1, 0, 0, 0, 0, 3,
	0, 0, 0, 0, 0, 1, 0, 19,
	0, 0, 0, 1, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	6, 17, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1, 0, 3, 0, 0,
	4, 0, 0, 12, 1, 4, 1, 4,
	1, 0, 3, 2, 2, 2, 1, 1,
	1, 0, 2, 1, 3, 3, 4, 3,
	3, 3, 3, 3, 2, 7, 1, 0,
	0, 2, 64, 2, 4, 0, 1, 1,
	10, 1, 4, 3, 1, 3, 10, 10,
	10, 11, 10, 2, 3, 1, 31, 32,
	32, 32, 32, 32, 32, 32, 32, 34,
	32, 32, 32, 32, 32, 32, 32, 32,
	32, 34, 32, 32, 32, 32, 32, 32,
	33, 32, 32, 32, 32, 32, 32, 32,
	32, 32, 32, 32, 32, 32, 32, 32,
	33, 32, 32, 32, 32, 3, 2, 3,
	3, 4, 4,
}

var _flux_range_lengths []byte = []byte{
	0, 0, 0, 0, 0, 0, 3, 3,
	1, 1, 1, 1, 1, 0, 1, 1,
	1, 1, 0, 1, 1, 0, 1, 1,
	1, 1, 0, 1, 1, 1, 0, 1,
	0, 0, 0, 3, 0, 1, 1, 4,
	3, 3, 0, 1, 1, 2, 2, 4,
	2, 3, 5, 1, 1, 1, 2, 0,
	2, 5, 7, 6, 9, 6, 8, 3,
	8, 6, 10, 3, 7, 3, 7, 5,
	6, 4, 4, 4, 1, 1, 8, 2,
	0, 3, 4, 3, 2, 3, 2, 2,
	1, 1, 1, 2, 3, 3, 1, 2,
	2, 1, 1, 2, 2, 2, 3, 4,
	2, 3, 1, 1, 1, 3, 2, 2,
	1, 1, 2, 1, 2, 1, 2, 2,
	3, 2, 7, 0, 0, 1, 5, 2,
	1, 1, 1, 2, 1, 1, 2, 2,
	5, 5, 0, 1, 4, 1, 1, 2,
	2, 1, 0, 1, 0, 1, 1, 3,
	1, 3, 2, 1, 2, 2, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 5, 3, 1, 1, 1,
	1, 2, 2, 1, 1, 2, 1, 4,
	1, 0, 5, 2, 1, 1, 2, 1,
	2, 1, 2, 2, 1, 3, 2, 5,
	1, 1, 1, 1, 0, 3, 0, 2,
	3, 1, 0, 0, 0, 0, 1, 1,
	1, 1, 1, 0, 0, 0, 0, 0,
	0, 3, 3, 0, 0, 0, 0, 3,
	3, 0, 7, 1, 0, 1, 0, 0,
	1, 0, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 0, 0, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 1, 1, 0,
	0, 0, 0,
}

var _flux_index_offsets []int16 = []int16{
	0, 0, 3, 8, 12, 20, 22, 26,
	30, 33, 36, 40, 42, 44, 46, 48,
	50, 52, 54, 56, 58, 60, 62, 64,
	66, 68, 70, 72, 74, 76, 79, 89,
	100, 102, 104, 108, 112, 113, 115, 117,
	123, 128, 134, 136, 138, 140, 143, 147,
	153, 156, 160, 167, 169, 171, 173, 177,
	205, 208, 214, 223, 232, 242, 250, 259,
	265, 274, 282, 294, 300, 308, 315, 323,
	330, 337, 344, 350, 356, 358, 361, 375,
	380, 382, 386, 391, 438, 442, 446, 449,
	453, 455, 457, 459, 465, 471, 476, 479,
	482, 485, 487, 489, 492, 495, 498, 502,
	507, 510, 514, 516, 518, 520, 524, 527,
	530, 532, 534, 537, 540, 543, 545, 548,
	551, 559, 563, 571, 588, 591, 593, 605,
	609, 611, 613, 615, 618, 622, 624, 627,
	630, 636, 642, 644, 655, 660, 663, 666,
	669, 672, 674, 678, 680, 681, 684, 686,
	709, 711, 715, 719, 721, 724, 727, 729,
	734, 736, 739, 741, 743, 745, 748, 750,
	771, 773, 775, 777, 784, 788, 790, 792,
	794, 796, 799, 802, 804, 806, 809, 811,
	816, 824, 842, 848, 851, 853, 855, 858,
	860, 863, 865, 868, 872, 874, 881, 884,
	890, 896, 898, 900, 914, 916, 924, 926,
	933, 938, 940, 944, 947, 950, 953, 956,
	959, 962, 964, 968, 970, 974, 978, 983,
	987, 991, 998, 1005, 1009, 1012, 1020, 1022,
	1026, 1030, 1033, 1105, 1109, 1114, 1116, 1118,
	1120, 1132, 1134, 1139, 1144, 1147, 1152, 1164,
	1176, 1188, 1201, 1213, 1216, 1220, 1222, 1260,
	1299, 1338, 1377, 1416, 1455, 1494, 1533, 1572,
	1613, 1652, 1691, 1730, 1769, 1808, 1847, 1886,
	1925, 1964, 2005, 2044, 2083, 2122, 2161, 2200,
	2239, 2279, 2318, 2357, 2396, 2435, 2474, 2513,
	2552, 2591, 2630, 2669, 2708, 2747, 2786, 2825,
	2864, 2904, 2943, 2982, 3021, 3060, 3065, 3069,
	3073, 3077, 3082,
}

var _flux_indicies []int16 = []int16{
	0, 2, 1, 5, 6, 7, 8, 4,
	5, 6, 3, 4, 4, 9, 4, 4,
	4, 4, 10, 3, 4, 3, 11, 11,
	11, 3, 4, 4, 4, 3, 13, 14,
	12, 13, 15, 12, 16, 13, 17, 12,
	18, 12, 19, 12, 20, 12, 21, 12,
	22, 12, 24, 23, 25, 23, 26, 23,
	27, 23, 28, 23, 29, 23, 30, 23,
	31, 23, 32, 23, 33, 23, 34, 23,
	35, 23, 36, 23, 13, 17, 12, 38,
	38, 39, 40, 38, 40, 38, 38, 41,
	37, 38, 38, 39, 40, 38, 40, 38,
	38, 41, 42, 37, 38, 43, 40, 43,
	44, 44, 44, 43, 44, 44, 44, 43,
	44, 43, 44, 44, 43, 43, 43, 43,
	43, 43, 44, 44, 44, 44, 44, 43,
	44, 44, 44, 44, 44, 43, 43, 44,
	43, 44, 43, 44, 43, 43, 44, 43,
	43, 43, 44, 44, 44, 44, 44, 44,
	43, 44, 44, 43, 44, 44, 44, 43,
	43, 43, 43, 43, 43, 43, 44, 44,
	43, 44, 43, 43, 44, 44, 44, 44,
	43, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59,
	60, 61, 62, 63, 64, 65, 66, 67,
	68, 69, 70, 71, 43, 44, 44, 43,
	43, 43, 43, 43, 43, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 43, 43,
	43, 43, 43, 43, 43, 43, 43, 44,
	44, 44, 44, 44, 44, 44, 44, 44,
	44, 43, 43, 43, 43, 43, 43, 43,
	43, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 43, 43, 43, 43, 43, 43,
	44, 44, 44, 44, 44, 44, 44, 44,
	44, 43, 44, 44, 44, 44, 44, 44,
	44, 43, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 43, 44, 44,
	44, 44, 44, 43, 44, 44, 44, 44,
	44, 44, 44, 43, 43, 43, 43, 43,
	43, 43, 44, 44, 44, 44, 44, 44,
	44, 44, 43, 44, 44, 44, 44, 44,
	44, 43, 44, 44, 44, 44, 44, 44,
	43, 43, 43, 43, 43, 43, 43, 44,
	44, 44, 44, 44, 44, 43, 44, 44,
	44, 44, 44, 43, 44, 43, 44, 44,
	43, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 43, 44,
	44, 44, 44, 43, 44, 43, 44, 44,
	44, 43, 44, 44, 44, 44, 43, 72,
	73, 74, 75, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 89, 90,
	91, 92, 93, 94, 95, 96, 97, 98,
	99, 100, 101, 102, 103, 104, 105, 106,
	107, 108, 76, 88, 109, 76, 110, 111,
	112, 113, 76, 88, 88, 43, 44, 44,
	44, 43, 44, 44, 44, 43, 43, 43,
	44, 43, 43, 43, 44, 43, 44, 43,
	44, 43, 44, 43, 43, 43, 43, 43,
	44, 43, 43, 43, 43, 43, 44, 44,
	44, 44, 44, 43, 43, 43, 44, 43,
	43, 44, 44, 44, 43, 43, 44, 44,
	43, 43, 43, 44, 44, 44, 43, 43,
	43, 44, 44, 44, 44, 43, 44, 44,
	44, 44, 43, 44, 44, 43, 43, 43,
	43, 44, 44, 43, 43, 44, 44, 43,
	44, 44, 44, 43, 44, 44, 43, 44,
	44, 43, 43, 44, 44, 43, 44, 44,
	43, 43, 43, 44, 44, 44, 43, 44,
	43, 44, 44, 43, 43, 43, 44, 43,
	43, 43, 43, 43, 43, 43, 44, 44,
	44, 44, 43, 44, 44, 44, 44, 44,
	44, 44, 43, 114, 115, 116, 117, 118,
	119, 120, 121, 122, 76, 123, 124, 125,
	126, 127, 128, 43, 44, 44, 43, 44,
	43, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 43, 44, 44, 44,
	43, 43, 44, 44, 43, 43, 44, 44,
	44, 43, 43, 43, 43, 44, 43, 44,
	44, 44, 43, 43, 43, 44, 44, 44,
	44, 44, 44, 43, 44, 44, 44, 44,
	44, 43, 44, 43, 129, 87, 130, 131,
	132, 88, 133, 134, 76, 88, 43, 44,
	44, 44, 44, 43, 43, 43, 44, 43,
	43, 44, 44, 44, 43, 43, 43, 44,
	44, 43, 135, 43, 76, 88, 43, 44,
	88, 136, 43, 88, 43, 44, 76, 137,
	76, 138, 139, 140, 141, 88, 142, 143,
	144, 145, 76, 136, 146, 147, 148, 149,
	76, 88, 88, 88, 43, 43, 44, 43,
	43, 43, 44, 44, 44, 44, 43, 44,
	43, 44, 44, 43, 43, 43, 44, 44,
	43, 43, 43, 43, 43, 44, 44, 43,
	44, 44, 43, 43, 44, 44, 43, 44,
	43, 150, 43, 88, 43, 44, 76, 151,
	152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 88, 163, 164, 165, 166,
	167, 88, 43, 43, 44, 43, 44, 43,
	44, 44, 44, 44, 44, 44, 44, 43,
	44, 44, 44, 43, 44, 43, 43, 44,
	44, 43, 43, 44, 43, 43, 44, 44,
	44, 43, 43, 44, 44, 43, 44, 44,
	43, 43, 44, 44, 44, 44, 44, 43,
	168, 169, 170, 171, 173, 174, 172, 43,
	175, 176, 76, 177, 178, 179, 180, 181,
	182, 183, 184, 76, 88, 185, 186, 187,
	188, 43, 44, 44, 44, 44, 44, 43,
	43, 43, 44, 43, 44, 44, 43, 44,
	44, 43, 43, 44, 44, 44, 43, 43,
	44, 44, 44, 43, 43, 43, 43, 44,
	43, 44, 44, 44, 44, 44, 44, 44,
	43, 44, 44, 43, 44, 44, 44, 44,
	44, 43, 76, 189, 76, 190, 88, 43,
	43, 44, 43, 44, 76, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201,
	88, 43, 43, 44, 43, 43, 43, 43,
	43, 43, 43, 44, 43, 44, 43, 43,
	43, 43, 43, 43, 44, 44, 44, 44,
	44, 43, 43, 44, 43, 43, 43, 44,
	43, 43, 44, 43, 43, 44, 43, 43,
	44, 43, 43, 44, 76, 88, 43, 202,
	43, 88, 43, 44, 76, 185, 88, 43,
	203, 1, 206, 207, 208, 205, 206, 209,
	208, 205, 206, 209, 211, 212, 205, 206,
	209, 213, 205, 206, 209, 208, 205, 206,
	207, 208, 214, 214, 214, 205, 206, 207,
	208, 215, 215, 215, 205, 206, 207, 208,
	205, 218, 216, 217, 217, 220, 217, 217,
	217, 217, 221, 219, 217, 219, 222, 222,
	222, 219, 217, 217, 217, 219, 218, 223,
	217, 225, 224, 226, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 239,
	240, 241, 242, 243, 244, 245, 44, 246,
	247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 257, 258, 259, 109, 76, 260,
	261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 156, 274, 275,
	276, 277, 278, 279, 280, 281, 282, 283,
	284, 224, 238, 44, 44, 88, 88, 172,
	1, 225, 224, 224, 285, 5, 6, 7,
	8, 4, 13, 43, 288, 287, 290, 288,
	13, 38, 38, 39, 40, 38, 40, 38,
	38, 41, 292, 291, 294, 293, 295, 295,
	296, 36, 293, 295, 295, 36, 296, 293,
	298, 42, 297, 298, 38, 38, 42, 297,
	13, 38, 38, 39, 40, 38, 40, 38,
	38, 41, 299, 291, 13, 38, 38, 39,
	40, 38, 40, 38, 38, 41, 300, 291,
	13, 38, 38, 39, 40, 38, 40, 38,
	38, 41, 301, 291, 16, 13, 38, 38,
	39, 40, 38, 40, 38, 38, 41, 302,
	291, 13, 38, 38, 39, 40, 38, 40,
	38, 38, 41, 302, 291, 304, 305, 303,
	307, 308, 309, 306, 311, 310, 44, 258,
	259, 109, 76, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 271, 272,
	273, 156, 274, 275, 276, 277, 278, 279,
	280, 281, 282, 283, 284, 44, 44, 44,
	88, 88, 172, 43, 44, 313, 258, 259,
	109, 76, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 271, 272, 273,
	156, 274, 275, 276, 277, 278, 279, 280,
	281, 282, 283, 284, 44, 44, 44, 88,
	88, 172, 312, 44, 314, 258, 259, 109,
	76, 260, 261, 262, 263, 264, 265, 266,
	267, 268, 269, 270, 271, 272, 273, 156,
	274, 275, 276, 277, 278, 279, 280, 281,
	282, 283, 284, 44, 44, 44, 88, 88,
	172, 312, 44, 315, 258, 259, 109, 76,
	260, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 271, 272, 273, 156, 274,
	275, 276, 277, 278, 279, 280, 281, 282,
	283, 284, 44, 44, 44, 88, 88, 172,
	312, 44, 316, 258, 259, 109, 76, 260,
	261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 156, 274, 275,
	276, 277, 278, 279, 280, 281, 282, 283,
	284, 44, 44, 44, 88, 88, 172, 312,
	44, 317, 258, 259, 109, 76, 260, 261,
	262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 156, 274, 275, 276,
	277, 278, 279, 280, 281, 282, 283, 284,
	44, 44, 44, 88, 88, 172, 312, 44,
	318, 258, 259, 109, 76, 260, 261, 262,
	263, 264, 265, 266, 267, 268, 269, 270,
	271, 272, 273, 156, 274, 275, 276, 277,
	278, 279, 280, 281, 282, 283, 284, 44,
	44, 44, 88, 88, 172, 312, 44, 319,
	258, 259, 109, 76, 260, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 271,
	272, 273, 156, 274, 275, 276, 277, 278,
	279, 280, 281, 282, 283, 284, 44, 44,
	44, 88, 88, 172, 312, 44, 320, 258,
	259, 109, 76, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 271, 272,
	273, 156, 274, 275, 276, 277, 278, 279,
	280, 281, 282, 283, 284, 44, 44, 44,
	88, 88, 172, 312, 44, 321, 322, 323,
	258, 259, 109, 76, 260, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 271,
	272, 273, 156, 274, 275, 276, 277, 278,
	279, 280, 281, 282, 283, 284, 44, 44,
	44, 88, 88, 172, 312, 44, 324, 258,
	259, 109, 76, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 271, 272,
	273, 156, 274, 275, 276, 277, 278, 279,
	280, 281, 282, 283, 284, 44, 44, 44,
	88, 88, 172, 312, 44, 325, 258, 259,
	109, 76, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 271, 272, 273,
	156, 274, 275, 276, 277, 278, 279, 280,
	281, 282, 283, 284, 44, 44, 44, 88,
	88, 172, 312, 44, 326, 258, 259, 109,
	76, 260, 261, 262, 263, 264, 265, 266,
	267, 268, 269, 270, 271, 272, 273, 156,
	274, 275, 276, 277, 278, 279, 280, 281,
	282, 283, 284, 44, 44, 44, 88, 88,
	172, 312, 44, 327, 258, 259, 109, 76,
	260, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 271, 272, 273, 156, 274,
	275, 276, 277, 278, 279, 280, 281, 282,
	283, 284, 44, 44, 44, 88, 88, 172,
	312, 44, 328, 258, 259, 109, 76, 260,
	261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 156, 274, 275,
	276, 277, 278, 279, 280, 281, 282, 283,
	284, 44, 44, 44, 88, 88, 172, 312,
	44, 329, 258, 259, 109, 76, 260, 261,
	262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 156, 274, 275, 276,
	277, 278, 279, 280, 281, 282, 283, 284,
	44, 44, 44, 88, 88, 172, 312, 44,
	330, 258, 259, 109, 76, 260, 261, 262,
	263, 264, 265, 266, 267, 268, 269, 270,
	271, 272, 273, 156, 274, 275, 276, 277,
	278, 279, 280, 281, 282, 283, 284, 44,
	44, 44, 88, 88, 172, 312, 44, 331,
	258, 259, 109, 76, 260, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 271,
	272, 273, 156, 274, 275, 276, 277, 278,
	279, 280, 281, 282, 283, 284, 44, 44,
	44, 88, 88, 172, 312, 44, 332, 258,
	259, 109, 76, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 271, 272,
	273, 156, 274, 275, 276, 277, 278, 279,
	280, 281, 282, 283, 284, 44, 44, 44,
	88, 88, 172, 312, 44, 333, 334, 335,
	258, 259, 109, 76, 260, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 271,
	272, 273, 156, 274, 275, 276, 277, 278,
	279, 280, 281, 282, 283, 284, 44, 44,
	44, 88, 88, 172, 312, 44, 336, 258,
	259, 109, 76, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 271, 272,
	273, 156, 274, 275, 276, 277, 278, 279,
	280, 281, 282, 283, 284, 44, 44, 44,
	88, 88, 172, 312, 44, 337, 258, 259,
	109, 76, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 271, 272, 273,
	156, 274, 275, 276, 277, 278, 279, 280,
	281, 282, 283, 284, 44, 44, 44, 88,
	88, 172, 312, 44, 338, 258, 259, 109,
	76, 260, 261, 262, 263, 264, 265, 266,
	267, 268, 269, 270, 271, 272, 273, 156,
	274, 275, 276, 277, 278, 279, 280, 281,
	282, 283, 284, 44, 44, 44, 88, 88,
	172, 312, 44, 339, 258, 259, 109, 76,
	260, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 271, 272, 273, 156, 274,
	275, 276, 277, 278, 279, 280, 281, 282,
	283, 284, 44, 44, 44, 88, 88, 172,
	312, 44, 340, 258, 259, 109, 76, 260,
	261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 156, 274, 275,
	276, 277, 278, 279, 280, 281, 282, 283,
	284, 44, 44, 44, 88, 88, 172, 312,
	44, 341, 258, 259, 109, 76, 260, 261,
	262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 156, 274, 275, 276,
	277, 278, 279, 280, 281, 282, 283, 284,
	44, 44, 44, 88, 88, 172, 312, 44,
	342, 343, 258, 259, 109, 76, 260, 261,
	262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 156, 274, 275, 276,
	277, 278, 279, 280, 281, 282, 283, 284,
	44, 44, 44, 88, 88, 172, 312, 44,
	344, 258, 259, 109, 76, 260, 261, 262,
	263, 264, 265, 266, 267, 268, 269, 270,
	271, 272, 273, 156, 274, 275, 276, 277,
	278, 279, 280, 281, 282, 283, 284, 44,
	44, 44, 88, 88, 172, 312, 44, 345,
	258, 259, 109, 76, 260, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 271,
	272, 273, 156, 274, 275, 276, 277, 278,
	279, 280, 281, 282, 283, 284, 44, 44,
	44, 88, 88, 172, 312, 44, 346, 258,
	259, 109, 76, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 271, 272,
	273, 156, 274, 275, 276, 277, 278, 279,
	280, 281, 282, 283, 284, 44, 44, 44,
	88, 88, 172, 312, 44, 347, 258, 259,
	109, 76, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 271, 272, 273,
	156, 274, 275, 276, 277, 278, 279, 280,
	281, 282, 283, 284, 44, 44, 44, 88,
	88, 172, 312, 44, 348, 258, 259, 109,
	76, 260, 261, 262, 263, 264, 265, 266,
	267, 268, 269, 270, 271, 272, 273, 156,
	274, 275, 276, 277, 278, 279, 280, 281,
	282, 283, 284, 44, 44, 44, 88, 88,
	172, 312, 44, 349, 258, 259, 109, 76,
	260, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 271, 272, 273, 156, 274,
	275, 276, 277, 278, 279, 280, 281, 282,
	283, 284, 44, 44, 44, 88, 88, 172,
	312, 44, 350, 258, 259, 109, 76, 260,
	261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 156, 274, 275,
	276, 277, 278, 279, 280, 281, 282, 283,
	284, 44, 44, 44, 88, 88, 172, 312,
	44, 351, 258, 259, 109, 76, 260, 261,
	262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 156, 274, 275, 276,
	277, 278, 279, 280, 281, 282, 283, 284,
	44, 44, 44, 88, 88, 172, 312, 44,
	352, 258, 259, 109, 76, 260, 261, 262,
	263, 264, 265, 266, 267, 268, 269, 270,
	271, 272, 273, 156, 274, 275, 276, 277,
	278, 279, 280, 281, 282, 283, 284, 44,
	44, 44, 88, 88, 172, 312, 44, 353,
	258, 259, 109, 76, 260, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 271,
	272, 273, 156, 274, 275, 276, 277, 278,
	279, 280, 281, 282, 283, 284, 44, 44,
	44, 88, 88, 172, 312, 44, 354, 258,
	259, 109, 76, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 271, 272,
	273, 156, 274, 275, 276, 277, 278, 279,
	280, 281, 282, 283, 284, 44, 44, 44,
	88, 88, 172, 312, 44, 355, 258, 259,
	109, 76, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 271, 272, 273,
	156, 274, 275, 276, 277, 278, 279, 280,
	281, 282, 283, 284, 44, 44, 44, 88,
	88, 172, 312, 44, 356, 258, 259, 109,
	76, 260, 261, 262, 263, 264, 265, 266,
	267, 268, 269, 270, 271, 272, 273, 156,
	274, 275, 276, 277, 278, 279, 280, 281,
	282, 283, 284, 44, 44, 44, 88, 88,
	172, 312, 44, 357, 258, 259, 109, 76,
	260, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 271, 272, 273, 156, 274,
	275, 276, 277, 278, 279, 280, 281, 282,
	283, 284, 44, 44, 44, 88, 88, 172,
	312, 44, 358, 258, 259, 109, 76, 260,
	261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 156, 274, 275,
	276, 277, 278, 279, 280, 281, 282, 283,
	284, 44, 44, 44, 88, 88, 172, 312,
	44, 359, 360, 258, 259, 109, 76, 260,
	261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 156, 274, 275,
	276, 277, 278, 279, 280, 281, 282, 283,
	284, 44, 44, 44, 88, 88, 172, 312,
	44, 361, 258, 259, 109, 76, 260, 261,
	262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 156, 274, 275, 276,
	277, 278, 279, 280, 281, 282, 283, 284,
	44, 44, 44, 88, 88, 172, 312, 44,
	362, 258, 259, 109, 76, 260, 261, 262,
	263, 264, 265, 266, 267, 268, 269, 270,
	271, 272, 273, 156, 274, 275, 276, 277,
	278, 279, 280, 281, 282, 283, 284, 44,
	44, 44, 88, 88, 172, 312, 44, 363,
	258, 259, 109, 76, 260, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 271,
	272, 273, 156, 274, 275, 276, 277, 278,
	279, 280, 281, 282, 283, 284, 44, 44,
	44, 88, 88, 172, 312, 44, 364, 258,
	259, 109, 76, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 271, 272,
	273, 156, 274, 275, 276, 277, 278, 279,
	280, 281, 282, 283, 284, 44, 44, 44,
	88, 88, 172, 312, 367, 366, 368, 366,
	365, 367, 366, 366, 369, 206, 370, 371,
	205, 206, 207, 208, 205, 218, 373, 374,
	375, 217, 218, 376, 377, 375, 217,
}

var _flux_trans_targs []int16 = []int16{
	234, 0, 234, 234, 2, 2, 234, 3,
	4, 5, 6, 7, 234, 237, 9, 10,
	11, 29, 12, 13, 14, 15, 241, 234,
	17, 18, 19, 20, 21, 22, 23, 242,
	25, 26, 27, 28, 234, 234, 244, 245,
	32, 33, 31, 234, 254, 56, 57, 58,
	59, 60, 61, 62, 63, 64, 65, 66,
	67, 68, 69, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 81, 82,
	84, 85, 86, 87, 38, 88, 89, 90,
	91, 92, 93, 94, 95, 96, 97, 98,
	36, 99, 100, 101, 102, 103, 104, 105,
	106, 107, 108, 109, 110, 111, 112, 113,
	114, 115, 116, 117, 118, 37, 119, 120,
	121, 122, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137,
	138, 140, 141, 142, 143, 144, 145, 147,
	150, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 166, 168,
	169, 170, 171, 172, 53, 173, 174, 175,
	176, 177, 178, 179, 180, 181, 182, 183,
	185, 200, 203, 215, 148, 216, 218, 186,
	187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 201, 202, 204,
	205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 217, 234, 301, 220, 220, 301,
	221, 304, 301, 223, 225, 224, 226, 227,
	305, 306, 306, 305, 230, 231, 232, 305,
	235, 235, 1, 236, 234, 234, 234, 234,
	234, 234, 234, 237, 238, 240, 246, 234,
	251, 252, 253, 234, 234, 234, 255, 257,
	263, 273, 278, 280, 285, 291, 296, 234,
	219, 234, 34, 35, 39, 40, 41, 42,
	43, 44, 45, 46, 47, 48, 49, 50,
	51, 52, 54, 55, 83, 123, 139, 146,
	149, 151, 165, 167, 184, 234, 234, 234,
	239, 234, 234, 234, 8, 234, 16, 24,
	243, 234, 30, 247, 248, 249, 250, 234,
	234, 234, 234, 234, 234, 234, 234, 234,
	234, 256, 254, 258, 259, 260, 261, 262,
	254, 264, 266, 269, 265, 254, 267, 268,
	254, 270, 271, 272, 254, 254, 274, 254,
	275, 276, 277, 254, 279, 254, 281, 254,
	282, 283, 284, 254, 286, 287, 288, 289,
	290, 254, 292, 293, 294, 295, 254, 297,
	299, 298, 254, 300, 254, 301, 302, 302,
	303, 301, 301, 222, 301, 305, 233, 229,
	305, 228,
}

var _flux_trans_actions []byte = []byte{
	45, 0, 49, 101, 0, 1, 27, 0,
	0, 0, 0, 0, 95, 181, 0, 0,
	0, 0, 0, 0, 0, 0, 9, 99,
	0, 0, 0, 0, 0, 0, 0, 9,
	0, 0, 0, 0, 25, 97, 184, 184,
	0, 0, 0, 103, 175, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 69, 23, 0, 1, 11,
	0, 124, 21, 0, 0, 0, 0, 0,
	111, 190, 193, 113, 0, 0, 0, 105,
	3, 115, 0, 9, 35, 55, 57, 33,
	29, 71, 31, 187, 0, 178, 178, 67,
	0, 0, 0, 59, 61, 37, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 63,
	0, 65, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 93, 91, 83,
	0, 73, 118, 77, 0, 81, 0, 0,
	9, 79, 0, 178, 178, 178, 178, 85,
	53, 41, 89, 39, 51, 47, 87, 43,
	75, 175, 130, 175, 175, 175, 175, 175,
	157, 175, 175, 175, 175, 169, 175, 175,
	139, 175, 175, 175, 172, 163, 175, 142,
	175, 175, 175, 145, 175, 136, 175, 133,
	175, 175, 175, 154, 175, 175, 175, 175,
	175, 148, 175, 175, 175, 175, 151, 175,
	175, 175, 160, 175, 166, 13, 3, 115,
	127, 17, 19, 0, 15, 107, 0, 0,
	109, 0,
}

var _flux_to_state_actions []byte = []byte{
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 121, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 5, 0, 0,
	0, 121, 0,
}

var _flux_from_state_actions []byte = []byte{
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 7, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 7, 0, 0,
	0, 7, 0,
}

var _flux_eof_trans []int16 = []int16{
	0, 0, 4, 4, 4, 4, 4, 4,
	13, 13, 13, 13, 13, 13, 13, 13,
	24, 24, 24, 24, 24, 24, 24, 24,
	24, 24, 24, 24, 24, 13, 38, 38,
	44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 0, 205, 205, 211, 211,
	211, 211, 211, 211, 217, 220, 220, 220,
	220, 0, 0, 286, 287, 44, 288, 290,
	292, 294, 294, 294, 298, 298, 292, 292,
	292, 292, 292, 304, 307, 311, 44, 313,
	313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 0, 370, 371,
	373, 0, 377,
}

const flux_start int = 234
const flux_first_final int = 234
const flux_error int = 0

const flux_en_main_with_regex int = 301
const flux_en_main int = 234
const flux_en_string_expr int = 305

//line scanner.rl:131

func (s *Scanner) exec(cs int) int {

//line scanner.rl:134

//line scanner.rl:135

//line scanner.rl:136

//line scanner.rl:137

//line scanner.rl:138

//line scanner.rl:139
	var act int

//line scanner.gen.go:1297
	{
		(s.ts) = 0
		(s.te) = 0
		act = 0
	}

//line scanner.rl:141

//line scanner.gen.go:1306
	{
		var _klen int
		var _trans int
		var _acts int
		var _nacts uint
		var _keys int
		if (s.p) == (s.pe) {
			goto _test_eof
		}
		if cs == 0 {
			goto _out
		}
	_resume:
		_acts = int(_flux_from_state_actions[cs])
		_nacts = uint(_flux_actions[_acts])
		_acts++
		for ; _nacts > 0; _nacts-- {
			_acts++
			switch _flux_actions[_acts-1] {
			case 4:
//line NONE:1
				(s.ts) = (s.p)

//line scanner.gen.go:1329
			}
		}

		_keys = int(_flux_key_offsets[cs])
		_trans = int(_flux_index_offsets[cs])

		_klen = int(_flux_single_lengths[cs])
		if _klen > 0 {
			_lower := int(_keys)
			var _mid int
			_upper := int(_keys + _klen - 1)
			for {
				if _upper < _lower {
					break
				}

				_mid = _lower + ((_upper - _lower) >> 1)
				switch {
				case (s.data)[(s.p)] < _flux_trans_keys[_mid]:
					_upper = _mid - 1
				case (s.data)[(s.p)] > _flux_trans_keys[_mid]:
					_lower = _mid + 1
				default:
					_trans += int(_mid - int(_keys))
					goto _match
				}
			}
			_keys += _klen
			_trans += _klen
		}

		_klen = int(_flux_range_lengths[cs])
		if _klen > 0 {
			_lower := int(_keys)
			var _mid int
			_upper := int(_keys + (_klen << 1) - 2)
			for {
				if _upper < _lower {
					break
				}

				_mid = _lower + (((_upper - _lower) >> 1) & ^1)
				switch {
				case (s.data)[(s.p)] < _flux_trans_keys[_mid]:
					_upper = _mid - 2
				case (s.data)[(s.p)] > _flux_trans_keys[_mid+1]:
					_lower = _mid + 2
				default:
					_trans += int((_mid - int(_keys)) >> 1)
					goto _match
				}
			}
			_trans += _klen
		}

	_match:
		_trans = int(_flux_indicies[_trans])
	_eof_trans:
		cs = int(_flux_trans_targs[_trans])

		if _flux_trans_actions[_trans] == 0 {
			goto _again
		}

		_acts = int(_flux_trans_actions[_trans])
		_nacts = uint(_flux_actions[_acts])
		_acts++
		for ; _nacts > 0; _nacts-- {
			_acts++
			switch _flux_actions[_acts-1] {
			case 0:
//line scanner.rl:10
				s.f.AddLine((s.p) + 1)
			case 1:
//line scanner.rl:42

				s.checkpoint = s.p

			case 5:
//line NONE:1
				(s.te) = (s.p) + 1

			case 6:
//line scanner.rl:54
				act = 1
			case 7:
//line scanner.rl:60
				act = 3
			case 8:
//line scanner.rl:54
				(s.te) = (s.p) + 1
				{
					s.token = token.REGEX
					(s.p)++
					goto _out
				}
			case 9:
//line scanner.rl:60
				(s.te) = (s.p) + 1
				{
					(s.p)--
					cs = 234
					goto _again
				}
			case 10:
//line scanner.rl:54
				(s.te) = (s.p)
				(s.p)--
				{
					s.token = token.REGEX
					(s.p)++
					goto _out
				}
			case 11:
//line scanner.rl:57
				(s.te) = (s.p)
				(s.p)--

			case 12:
//line scanner.rl:60
				(s.te) = (s.p)
				(s.p)--
				{
					(s.p)--
					cs = 234
					goto _again
				}
			case 13:
//line scanner.rl:60
				(s.p) = (s.te) - 1
				{
					(s.p)--
					cs = 234
					goto _again
				}
			case 14:
//line NONE:1
				switch act {
				case 1:
					{
						(s.p) = (s.te) - 1
						s.token = token.REGEX
						(s.p)++
						goto _out
					}
				case 3:
					{
						(s.p) = (s.te) - 1
						(s.p)--
						cs = 234
						goto _again
					}
				}

			case 15:
//line scanner.rl:67
				act = 5
			case 16:
//line scanner.rl:68
				act = 6
			case 17:
//line scanner.rl:69
				act = 7
			case 18:
//line scanner.rl:70
				act = 8
			case 19:
//line scanner.rl:71
				act = 9
			case 20:
//line scanner.rl:72
				act = 10
			case 21:
//line scanner.rl:73
				act = 11
			case 22:
//line scanner.rl:74
				act = 12
			case 23:
//line scanner.rl:75
				act = 13
			case 24:
//line scanner.rl:76
				act = 14
			case 25:
//line scanner.rl:77
				act = 15
			case 26:
//line scanner.rl:78
				act = 16
			case 27:
//line scanner.rl:79
				act = 17
			case 28:
//line scanner.rl:80
				act = 18
			case 29:
//line scanner.rl:81
				act = 19
			case 30:
//line scanner.rl:83
				act = 20
			case 31:
//line scanner.rl:84
				act = 21
			case 32:
//line scanner.rl:85
				act = 22
			case 33:
//line scanner.rl:86
				act = 23
			case 34:
//line scanner.rl:116
				act = 52
			case 35:
//line scanner.rl:65
				(s.te) = (s.p) + 1
				{
					s.token = token.COMMENT
					(s.p)++
					goto _out
				}
			case 36:
//line scanner.rl:87
				(s.te) = (s.p) + 1
				{
					s.token = token.TIME
					(s.p)++
					goto _out
				}
			case 37:
//line scanner.rl:88
				(s.te) = (s.p) + 1
				{
					s.token = token.STRING
					(s.p)++
					goto _out
				}
			case 38:
//line scanner.rl:90
				(s.te) = (s.p) + 1
				{
					s.token = token.ADD
					(s.p)++
					goto _out
				}
			case 39:
//line scanner.rl:91
				(s.te) = (s.p) + 1
				{
					s.token = token.SUB
					(s.p)++
					goto _out
				}
			case 40:
//line scanner.rl:92
				(s.te) = (s.p) + 1
				{
					s.token = token.MUL
					(s.p)++
					goto _out
				}
			case 41:
//line scanner.rl:94
				(s.te) = (s.p) + 1
				{
					s.token = token.MOD
					(s.p)++
					goto _out
				}
			case 42:
//line scanner.rl:95
				(s.te) = (s.p) + 1
				{
					s.token = token.POW
					(s.p)++
					goto _out
				}
			case 43:
//line scanner.rl:96
				(s.te) = (s.p) + 1
				{
					s.token = token.EQ
					(s.p)++
					goto _out
				}
			case 44:
//line scanner.rl:99
				(s.te) = (s.p) + 1
				{
					s.token = token.LTE
					(s.p)++
					goto _out
				}
			case 45:
//line scanner.rl:100
				(s.te) = (s.p) + 1
				{
					s.token = token.GTE
					(s.p)++
					goto _out
				}
			case 46:
//line scanner.rl:101
				(s.te) = (s.p) + 1
				{
					s.token = token.NEQ
					(s.p)++
					goto _out
				}
			case 47:
//line scanner.rl:102
				(s.te) = (s.p) + 1
				{
					s.token = token.REGEXEQ
					(s.p)++
					goto _out
				}
			case 48:
//line scanner.rl:103
				(s.te) = (s.p) + 1
				{
					s.token = token.REGEXNEQ
					(s.p)++
					goto _out
				}
			case 49:
//line scanner.rl:105
				(s.te) = (s.p) + 1
				{
					s.token = token.ARROW
					(s.p)++
					goto _out
				}
			case 50:
//line scanner.rl:106
				(s.te) = (s.p) + 1
				{
					s.token = token.PIPE_RECEIVE
					(s.p)++
					goto _out
				}
			case 51:
//line scanner.rl:107
				(s.te) = (s.p) + 1
				{
					s.token = token.LPAREN
					(s.p)++
					goto _out
				}
			case 52:
//line scanner.rl:108
				(s.te) = (s.p) + 1
				{
					s.token = token.RPAREN
					(s.p)++
					goto _out
				}
			case 53:
//line scanner.rl:109
				(s.te) = (s.p) + 1
				{
					s.token = token.LBRACK
					(s.p)++
					goto _out
				}
			case 54:
//line scanner.rl:110
				(s.te) = (s.p) + 1
				{
					s.token = token.RBRACK
					(s.p)++
					goto _out
				}
			case 55:
//line scanner.rl:111
				(s.te) = (s.p) + 1
				{
					s.token = token.LBRACE
					(s.p)++
					goto _out
				}
			case 56:
//line scanner.rl:112
				(s.te) = (s.p) + 1
				{
					s.token = token.RBRACE
					(s.p)++
					goto _out
				}
			case 57:
//line scanner.rl:113
				(s.te) = (s.p) + 1
				{
					s.token = token.COLON
					(s.p)++
					goto _out
				}
			case 58:
//line scanner.rl:114
				(s.te) = (s.p) + 1
				{
					s.token = token.PIPE_FORWARD
					(s.p)++
					goto _out
				}
			case 59:
//line scanner.rl:115
				(s.te) = (s.p) + 1
				{
					s.token = token.COMMA
					(s.p)++
					goto _out
				}
			case 60:
//line scanner.rl:65
				(s.te) = (s.p)
				(s.p)--
				{
					s.token = token.COMMENT
					(s.p)++
					goto _out
				}
			case 61:
//line scanner.rl:83
				(s.te) = (s.p)
				(s.p)--
				{
					s.token = token.IDENT
					(s.p)++
					goto _out
				}
			case 62:
//line scanner.rl:84
				(s.te) = (s.p)
				(s.p)--
				{
					s.token = token.INT
					(s.p)++
					goto _out
				}
			case 63:
//line scanner.rl:86
				(s.te) = (s.p)
				(s.p)--
				{
					s.token = token.DURATION
					(s.p)++
					goto _out
				}
			case 64:
//line scanner.rl:87
				(s.te) = (s.p)
				(s.p)--
				{
					s.token = token.TIME
					(s.p)++
					goto _out
				}
			case 65:
//line scanner.rl:93
				(s.te) = (s.p)
				(s.p)--
				{
					s.token = token.DIV
					(s.p)++
					goto _out
				}
			case 66:
//line scanner.rl:97
				(s.te) = (s.p)
				(s.p)--
				{
					s.token = token.LT
					(s.p)++
					goto _out
				}
			case 67:
//line scanner.rl:98
				(s.te) = (s.p)
				(s.p)--
				{
					s.token = token.GT
					(s.p)++
					goto _out
				}
			case 68:
//line scanner.rl:104
				(s.te) = (s.p)
				(s.p)--
				{
					s.token = token.ASSIGN
					(s.p)++
					goto _out
				}
			case 69:
//line scanner.rl:117
				(s.te) = (s.p)
				(s.p)--
				{
					s.token = token.QUOTE
					(s.p)++
					goto _out
				}
			case 70:
//line scanner.rl:119
				(s.te) = (s.p)
				(s.p)--

			case 71:
//line scanner.rl:84
				(s.p) = (s.te) - 1
				{
					s.token = token.INT
					(s.p)++
					goto _out
				}
			case 72:
//line scanner.rl:86
				(s.p) = (s.te) - 1
				{
					s.token = token.DURATION
					(s.p)++
					goto _out
				}
			case 73:
//line scanner.rl:87
				(s.p) = (s.te) - 1
				{
					s.token = token.TIME
					(s.p)++
					goto _out
				}
			case 74:
//line scanner.rl:117
				(s.p) = (s.te) - 1
				{
					s.token = token.QUOTE
					(s.p)++
					goto _out
				}
			case 75:
//line NONE:1
				switch act {
				case 0:
					{
						cs = 0
						goto _again
					}
				case 5:
					{
						(s.p) = (s.te) - 1
						s.token = token.AND
						(s.p)++
						goto _out
					}
				case 6:
					{
						(s.p) = (s.te) - 1
						s.token = token.OR
						(s.p)++
						goto _out
					}
				case 7:
					{
						(s.p) = (s.te) - 1
						s.token = token.NOT
						(s.p)++
						goto _out
					}
				case 8:
					{
						(s.p) = (s.te) - 1
						s.token = token.EMPTY
						(s.p)++
						goto _out
					}
				case 9:
					{
						(s.p) = (s.te) - 1
						s.token = token.IN
						(s.p)++
						goto _out
					}
				case 10:
					{
						(s.p) = (s.te) - 1
						s.token = token.IMPORT
						(s.p)++
						goto _out
					}
				case 11:
					{
						(s.p) = (s.te) - 1
						s.token = token.PACKAGE
						(s.p)++
						goto _out
					}
				case 12:
					{
						(s.p) = (s.te) - 1
						s.token = token.RETURN
						(s.p)++
						goto _out
					}
				case 13:
					{
						(s.p) = (s.te) - 1
						s.token = token.OPTION
						(s.p)++
						goto _out
					}
				case 14:
					{
						(s.p) = (s.te) - 1
						s.token = token.BUILTIN
						(s.p)++
						goto _out
					}
				case 15:
					{
						(s.p) = (s.te) - 1
						s.token = token.TEST
						(s.p)++
						goto _out
					}
				case 16:
					{
						(s.p) = (s.te) - 1
						s.token = token.IF
						(s.p)++
						goto _out
					}
				case 17:
					{
						(s.p) = (s.te) - 1
						s.token = token.THEN
						(s.p)++
						goto _out
					}
				case 18:
					{
						(s.p) = (s.te) - 1
						s.token = token.ELSE
						(s.p)++
						goto _out
					}
				case 19:
					{
						(s.p) = (s.te) - 1
						s.token = token.EXISTS
						(s.p)++
						goto _out
					}
				case 20:
					{
						(s.p) = (s.te) - 1
						s.token = token.IDENT
						(s.p)++
						goto _out
					}
				case 21:
					{
						(s.p) = (s.te) - 1
						s.token = token.INT
						(s.p)++
						goto _out
					}
				case 22:
					{
						(s.p) = (s.te) - 1
						s.token = token.FLOAT
						(s.p)++
						goto _out
					}
				case 23:
					{
						(s.p) = (s.te) - 1
						s.token = token.DURATION
						(s.p)++
						goto _out
					}
				case 52:
					{
						(s.p) = (s.te) - 1
						s.token = token.DOT
						(s.p)++
						goto _out
					}
				}

			case 76:
//line scanner.rl:126
				act = 57
			case 77:
//line scanner.rl:124
				(s.te) = (s.p) + 1
				{
					s.token = token.STRINGEXPR
					(s.p)++
					goto _out
				}
			case 78:
//line scanner.rl:125
				(s.te) = (s.p) + 1
				{
					s.token = token.QUOTE
					(s.p)++
					goto _out
				}
			case 79:
//line scanner.rl:126
				(s.te) = (s.p)
				(s.p)--
				{
					s.token = token.TEXT
					(s.p)++
					goto _out
				}
			case 80:
//line scanner.rl:126
				(s.p) = (s.te) - 1
				{
					s.token = token.TEXT
					(s.p)++
					goto _out
				}
			case 81:
//line NONE:1
				switch act {
				case 0:
					{
						cs = 0
						goto _again
					}
				case 57:
					{
						(s.p) = (s.te) - 1
						s.token = token.TEXT
						(s.p)++
						goto _out
					}
				}

//line scanner.gen.go:1866
			}
		}

	_again:
		_acts = int(_flux_to_state_actions[cs])
		_nacts = uint(_flux_actions[_acts])
		_acts++
		for ; _nacts > 0; _nacts-- {
			_acts++
			switch _flux_actions[_acts-1] {
			case 2:
//line NONE:1
				(s.ts) = 0

			case 3:
//line NONE:1
				act = 0

//line scanner.gen.go:1884
			}
		}

		if cs == 0 {
			goto _out
		}
		(s.p)++
		if (s.p) != (s.pe) {
			goto _resume
		}
	_test_eof:
		{
		}
		if (s.p) == (s.eof) {
			if _flux_eof_trans[cs] > 0 {
				_trans = int(_flux_eof_trans[cs] - 1)
				goto _eof_trans
			}
		}

	_out:
		{
		}
	}

//line scanner.rl:142
	return cs
}
