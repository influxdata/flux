// DO NOT EDIT: This file is autogenerated via the builtin command.

package dict

import (
	ast "github.com/influxdata/flux/ast"
	runtime "github.com/influxdata/flux/runtime"
)

func init() {
	runtime.RegisterPackage(pkgAST)
}

var pkgAST = &ast.Package{
	BaseNode: ast.BaseNode{
		Errors: nil,
		Loc:    nil,
	},
	Files: []*ast.File{&ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 15,
					Line:   19,
				},
				File:   "dict.flux",
				Source: "package dict\n\n// fromList will convert an array of key/value pairs\n// into a dictionary.\nbuiltin fromList : (pairs: [{ key: K, value: V }]) => [K: V] where K: Comparable\n\n// get will retrieve a value from a dictionary. If there is no\n// key in the dictionary, the default value will be returned.\nbuiltin get : (dict: [K: V], key: K, default: V) => V where K: Comparable\n\n// insert will insert a key/value pair into the dictionary\n// and return a new dictionary with that value inserted.\n// If the key already exists in the dictionary, it will\n// be overwritten.\nbuiltin insert : (dict: [K: V], key: K, value: V) => [K: V] where K: Comparable\n\n// remove will remove a key/value pair from the dictionary\n// and return a new dictionary with that value removed.\nbuiltin remove",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   5,
					},
					File:   "dict.flux",
					Source: "builtin fromList",
					Start: ast.Position{
						Column: 1,
						Line:   5,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   5,
						},
						File:   "dict.flux",
						Source: "fromList",
						Start: ast.Position{
							Column: 9,
							Line:   5,
						},
					},
				},
				Name: "fromList",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 81,
							Line:   5,
						},
						File:   "dict.flux",
						Source: "(pairs: [{ key: K, value: V }]) => [K: V] where K: Comparable",
						Start: ast.Position{
							Column: 20,
							Line:   5,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{&ast.TypeConstraint{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 81,
								Line:   5,
							},
							File:   "dict.flux",
							Source: "K: Comparable",
							Start: ast.Position{
								Column: 68,
								Line:   5,
							},
						},
					},
					Kinds: []*ast.Identifier{&ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 81,
									Line:   5,
								},
								File:   "dict.flux",
								Source: "Comparable",
								Start: ast.Position{
									Column: 71,
									Line:   5,
								},
							},
						},
						Name: "Comparable",
					}},
					Tvar: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 69,
									Line:   5,
								},
								File:   "dict.flux",
								Source: "K",
								Start: ast.Position{
									Column: 68,
									Line:   5,
								},
							},
						},
						Name: "K",
					},
				}},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 61,
								Line:   5,
							},
							File:   "dict.flux",
							Source: "(pairs: [{ key: K, value: V }]) => [K: V]",
							Start: ast.Position{
								Column: 20,
								Line:   5,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 50,
									Line:   5,
								},
								File:   "dict.flux",
								Source: "pairs: [{ key: K, value: V }]",
								Start: ast.Position{
									Column: 21,
									Line:   5,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 26,
										Line:   5,
									},
									File:   "dict.flux",
									Source: "pairs",
									Start: ast.Position{
										Column: 21,
										Line:   5,
									},
								},
							},
							Name: "pairs",
						},
						Ty: &ast.ArrayType{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 50,
										Line:   5,
									},
									File:   "dict.flux",
									Source: "[{ key: K, value: V }]",
									Start: ast.Position{
										Column: 28,
										Line:   5,
									},
								},
							},
							ElementType: &ast.RecordType{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 49,
											Line:   5,
										},
										File:   "dict.flux",
										Source: "{ key: K, value: V }",
										Start: ast.Position{
											Column: 29,
											Line:   5,
										},
									},
								},
								Properties: []*ast.PropertyType{&ast.PropertyType{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 37,
												Line:   5,
											},
											File:   "dict.flux",
											Source: "key: K",
											Start: ast.Position{
												Column: 31,
												Line:   5,
											},
										},
									},
									Name: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 34,
													Line:   5,
												},
												File:   "dict.flux",
												Source: "key",
												Start: ast.Position{
													Column: 31,
													Line:   5,
												},
											},
										},
										Name: "key",
									},
									Ty: &ast.TvarType{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 37,
													Line:   5,
												},
												File:   "dict.flux",
												Source: "K",
												Start: ast.Position{
													Column: 36,
													Line:   5,
												},
											},
										},
										ID: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 37,
														Line:   5,
													},
													File:   "dict.flux",
													Source: "K",
													Start: ast.Position{
														Column: 36,
														Line:   5,
													},
												},
											},
											Name: "K",
										},
									},
								}, &ast.PropertyType{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 47,
												Line:   5,
											},
											File:   "dict.flux",
											Source: "value: V",
											Start: ast.Position{
												Column: 39,
												Line:   5,
											},
										},
									},
									Name: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 44,
													Line:   5,
												},
												File:   "dict.flux",
												Source: "value",
												Start: ast.Position{
													Column: 39,
													Line:   5,
												},
											},
										},
										Name: "value",
									},
									Ty: &ast.TvarType{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 47,
													Line:   5,
												},
												File:   "dict.flux",
												Source: "V",
												Start: ast.Position{
													Column: 46,
													Line:   5,
												},
											},
										},
										ID: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 47,
														Line:   5,
													},
													File:   "dict.flux",
													Source: "V",
													Start: ast.Position{
														Column: 46,
														Line:   5,
													},
												},
											},
											Name: "V",
										},
									},
								}},
								Tvar: nil,
							},
						},
					}},
					Return: &ast.DictType{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 61,
									Line:   5,
								},
								File:   "dict.flux",
								Source: "[K: V]",
								Start: ast.Position{
									Column: 55,
									Line:   5,
								},
							},
						},
						KeyType: &ast.TvarType{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 57,
										Line:   5,
									},
									File:   "dict.flux",
									Source: "K",
									Start: ast.Position{
										Column: 56,
										Line:   5,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 57,
											Line:   5,
										},
										File:   "dict.flux",
										Source: "K",
										Start: ast.Position{
											Column: 56,
											Line:   5,
										},
									},
								},
								Name: "K",
							},
						},
						ValueType: &ast.TvarType{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 60,
										Line:   5,
									},
									File:   "dict.flux",
									Source: "V",
									Start: ast.Position{
										Column: 59,
										Line:   5,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 60,
											Line:   5,
										},
										File:   "dict.flux",
										Source: "V",
										Start: ast.Position{
											Column: 59,
											Line:   5,
										},
									},
								},
								Name: "V",
							},
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 12,
						Line:   9,
					},
					File:   "dict.flux",
					Source: "builtin get",
					Start: ast.Position{
						Column: 1,
						Line:   9,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 12,
							Line:   9,
						},
						File:   "dict.flux",
						Source: "get",
						Start: ast.Position{
							Column: 9,
							Line:   9,
						},
					},
				},
				Name: "get",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 74,
							Line:   9,
						},
						File:   "dict.flux",
						Source: "(dict: [K: V], key: K, default: V) => V where K: Comparable",
						Start: ast.Position{
							Column: 15,
							Line:   9,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{&ast.TypeConstraint{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 74,
								Line:   9,
							},
							File:   "dict.flux",
							Source: "K: Comparable",
							Start: ast.Position{
								Column: 61,
								Line:   9,
							},
						},
					},
					Kinds: []*ast.Identifier{&ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 74,
									Line:   9,
								},
								File:   "dict.flux",
								Source: "Comparable",
								Start: ast.Position{
									Column: 64,
									Line:   9,
								},
							},
						},
						Name: "Comparable",
					}},
					Tvar: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 62,
									Line:   9,
								},
								File:   "dict.flux",
								Source: "K",
								Start: ast.Position{
									Column: 61,
									Line:   9,
								},
							},
						},
						Name: "K",
					},
				}},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 54,
								Line:   9,
							},
							File:   "dict.flux",
							Source: "(dict: [K: V], key: K, default: V) => V",
							Start: ast.Position{
								Column: 15,
								Line:   9,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 28,
									Line:   9,
								},
								File:   "dict.flux",
								Source: "dict: [K: V]",
								Start: ast.Position{
									Column: 16,
									Line:   9,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 20,
										Line:   9,
									},
									File:   "dict.flux",
									Source: "dict",
									Start: ast.Position{
										Column: 16,
										Line:   9,
									},
								},
							},
							Name: "dict",
						},
						Ty: &ast.DictType{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 28,
										Line:   9,
									},
									File:   "dict.flux",
									Source: "[K: V]",
									Start: ast.Position{
										Column: 22,
										Line:   9,
									},
								},
							},
							KeyType: &ast.TvarType{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 24,
											Line:   9,
										},
										File:   "dict.flux",
										Source: "K",
										Start: ast.Position{
											Column: 23,
											Line:   9,
										},
									},
								},
								ID: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 24,
												Line:   9,
											},
											File:   "dict.flux",
											Source: "K",
											Start: ast.Position{
												Column: 23,
												Line:   9,
											},
										},
									},
									Name: "K",
								},
							},
							ValueType: &ast.TvarType{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 27,
											Line:   9,
										},
										File:   "dict.flux",
										Source: "V",
										Start: ast.Position{
											Column: 26,
											Line:   9,
										},
									},
								},
								ID: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 27,
												Line:   9,
											},
											File:   "dict.flux",
											Source: "V",
											Start: ast.Position{
												Column: 26,
												Line:   9,
											},
										},
									},
									Name: "V",
								},
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 36,
									Line:   9,
								},
								File:   "dict.flux",
								Source: "key: K",
								Start: ast.Position{
									Column: 30,
									Line:   9,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 33,
										Line:   9,
									},
									File:   "dict.flux",
									Source: "key",
									Start: ast.Position{
										Column: 30,
										Line:   9,
									},
								},
							},
							Name: "key",
						},
						Ty: &ast.TvarType{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 36,
										Line:   9,
									},
									File:   "dict.flux",
									Source: "K",
									Start: ast.Position{
										Column: 35,
										Line:   9,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 36,
											Line:   9,
										},
										File:   "dict.flux",
										Source: "K",
										Start: ast.Position{
											Column: 35,
											Line:   9,
										},
									},
								},
								Name: "K",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 48,
									Line:   9,
								},
								File:   "dict.flux",
								Source: "default: V",
								Start: ast.Position{
									Column: 38,
									Line:   9,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 45,
										Line:   9,
									},
									File:   "dict.flux",
									Source: "default",
									Start: ast.Position{
										Column: 38,
										Line:   9,
									},
								},
							},
							Name: "default",
						},
						Ty: &ast.TvarType{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 48,
										Line:   9,
									},
									File:   "dict.flux",
									Source: "V",
									Start: ast.Position{
										Column: 47,
										Line:   9,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 48,
											Line:   9,
										},
										File:   "dict.flux",
										Source: "V",
										Start: ast.Position{
											Column: 47,
											Line:   9,
										},
									},
								},
								Name: "V",
							},
						},
					}},
					Return: &ast.TvarType{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 54,
									Line:   9,
								},
								File:   "dict.flux",
								Source: "V",
								Start: ast.Position{
									Column: 53,
									Line:   9,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 54,
										Line:   9,
									},
									File:   "dict.flux",
									Source: "V",
									Start: ast.Position{
										Column: 53,
										Line:   9,
									},
								},
							},
							Name: "V",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 15,
						Line:   15,
					},
					File:   "dict.flux",
					Source: "builtin insert",
					Start: ast.Position{
						Column: 1,
						Line:   15,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 15,
							Line:   15,
						},
						File:   "dict.flux",
						Source: "insert",
						Start: ast.Position{
							Column: 9,
							Line:   15,
						},
					},
				},
				Name: "insert",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 80,
							Line:   15,
						},
						File:   "dict.flux",
						Source: "(dict: [K: V], key: K, value: V) => [K: V] where K: Comparable",
						Start: ast.Position{
							Column: 18,
							Line:   15,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{&ast.TypeConstraint{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 80,
								Line:   15,
							},
							File:   "dict.flux",
							Source: "K: Comparable",
							Start: ast.Position{
								Column: 67,
								Line:   15,
							},
						},
					},
					Kinds: []*ast.Identifier{&ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 80,
									Line:   15,
								},
								File:   "dict.flux",
								Source: "Comparable",
								Start: ast.Position{
									Column: 70,
									Line:   15,
								},
							},
						},
						Name: "Comparable",
					}},
					Tvar: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 68,
									Line:   15,
								},
								File:   "dict.flux",
								Source: "K",
								Start: ast.Position{
									Column: 67,
									Line:   15,
								},
							},
						},
						Name: "K",
					},
				}},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 60,
								Line:   15,
							},
							File:   "dict.flux",
							Source: "(dict: [K: V], key: K, value: V) => [K: V]",
							Start: ast.Position{
								Column: 18,
								Line:   15,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 31,
									Line:   15,
								},
								File:   "dict.flux",
								Source: "dict: [K: V]",
								Start: ast.Position{
									Column: 19,
									Line:   15,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 23,
										Line:   15,
									},
									File:   "dict.flux",
									Source: "dict",
									Start: ast.Position{
										Column: 19,
										Line:   15,
									},
								},
							},
							Name: "dict",
						},
						Ty: &ast.DictType{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 31,
										Line:   15,
									},
									File:   "dict.flux",
									Source: "[K: V]",
									Start: ast.Position{
										Column: 25,
										Line:   15,
									},
								},
							},
							KeyType: &ast.TvarType{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 27,
											Line:   15,
										},
										File:   "dict.flux",
										Source: "K",
										Start: ast.Position{
											Column: 26,
											Line:   15,
										},
									},
								},
								ID: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 27,
												Line:   15,
											},
											File:   "dict.flux",
											Source: "K",
											Start: ast.Position{
												Column: 26,
												Line:   15,
											},
										},
									},
									Name: "K",
								},
							},
							ValueType: &ast.TvarType{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 30,
											Line:   15,
										},
										File:   "dict.flux",
										Source: "V",
										Start: ast.Position{
											Column: 29,
											Line:   15,
										},
									},
								},
								ID: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 30,
												Line:   15,
											},
											File:   "dict.flux",
											Source: "V",
											Start: ast.Position{
												Column: 29,
												Line:   15,
											},
										},
									},
									Name: "V",
								},
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 39,
									Line:   15,
								},
								File:   "dict.flux",
								Source: "key: K",
								Start: ast.Position{
									Column: 33,
									Line:   15,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 36,
										Line:   15,
									},
									File:   "dict.flux",
									Source: "key",
									Start: ast.Position{
										Column: 33,
										Line:   15,
									},
								},
							},
							Name: "key",
						},
						Ty: &ast.TvarType{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 39,
										Line:   15,
									},
									File:   "dict.flux",
									Source: "K",
									Start: ast.Position{
										Column: 38,
										Line:   15,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 39,
											Line:   15,
										},
										File:   "dict.flux",
										Source: "K",
										Start: ast.Position{
											Column: 38,
											Line:   15,
										},
									},
								},
								Name: "K",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 49,
									Line:   15,
								},
								File:   "dict.flux",
								Source: "value: V",
								Start: ast.Position{
									Column: 41,
									Line:   15,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 46,
										Line:   15,
									},
									File:   "dict.flux",
									Source: "value",
									Start: ast.Position{
										Column: 41,
										Line:   15,
									},
								},
							},
							Name: "value",
						},
						Ty: &ast.TvarType{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 49,
										Line:   15,
									},
									File:   "dict.flux",
									Source: "V",
									Start: ast.Position{
										Column: 48,
										Line:   15,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 49,
											Line:   15,
										},
										File:   "dict.flux",
										Source: "V",
										Start: ast.Position{
											Column: 48,
											Line:   15,
										},
									},
								},
								Name: "V",
							},
						},
					}},
					Return: &ast.DictType{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 60,
									Line:   15,
								},
								File:   "dict.flux",
								Source: "[K: V]",
								Start: ast.Position{
									Column: 54,
									Line:   15,
								},
							},
						},
						KeyType: &ast.TvarType{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 56,
										Line:   15,
									},
									File:   "dict.flux",
									Source: "K",
									Start: ast.Position{
										Column: 55,
										Line:   15,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 56,
											Line:   15,
										},
										File:   "dict.flux",
										Source: "K",
										Start: ast.Position{
											Column: 55,
											Line:   15,
										},
									},
								},
								Name: "K",
							},
						},
						ValueType: &ast.TvarType{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 59,
										Line:   15,
									},
									File:   "dict.flux",
									Source: "V",
									Start: ast.Position{
										Column: 58,
										Line:   15,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 59,
											Line:   15,
										},
										File:   "dict.flux",
										Source: "V",
										Start: ast.Position{
											Column: 58,
											Line:   15,
										},
									},
								},
								Name: "V",
							},
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 15,
						Line:   19,
					},
					File:   "dict.flux",
					Source: "builtin remove",
					Start: ast.Position{
						Column: 1,
						Line:   19,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 15,
							Line:   19,
						},
						File:   "dict.flux",
						Source: "remove",
						Start: ast.Position{
							Column: 9,
							Line:   19,
						},
					},
				},
				Name: "remove",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 70,
							Line:   19,
						},
						File:   "dict.flux",
						Source: "(dict: [K: V], key: K) => [K: V] where K: Comparable",
						Start: ast.Position{
							Column: 18,
							Line:   19,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{&ast.TypeConstraint{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 70,
								Line:   19,
							},
							File:   "dict.flux",
							Source: "K: Comparable",
							Start: ast.Position{
								Column: 57,
								Line:   19,
							},
						},
					},
					Kinds: []*ast.Identifier{&ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 70,
									Line:   19,
								},
								File:   "dict.flux",
								Source: "Comparable",
								Start: ast.Position{
									Column: 60,
									Line:   19,
								},
							},
						},
						Name: "Comparable",
					}},
					Tvar: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 58,
									Line:   19,
								},
								File:   "dict.flux",
								Source: "K",
								Start: ast.Position{
									Column: 57,
									Line:   19,
								},
							},
						},
						Name: "K",
					},
				}},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 50,
								Line:   19,
							},
							File:   "dict.flux",
							Source: "(dict: [K: V], key: K) => [K: V]",
							Start: ast.Position{
								Column: 18,
								Line:   19,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 31,
									Line:   19,
								},
								File:   "dict.flux",
								Source: "dict: [K: V]",
								Start: ast.Position{
									Column: 19,
									Line:   19,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 23,
										Line:   19,
									},
									File:   "dict.flux",
									Source: "dict",
									Start: ast.Position{
										Column: 19,
										Line:   19,
									},
								},
							},
							Name: "dict",
						},
						Ty: &ast.DictType{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 31,
										Line:   19,
									},
									File:   "dict.flux",
									Source: "[K: V]",
									Start: ast.Position{
										Column: 25,
										Line:   19,
									},
								},
							},
							KeyType: &ast.TvarType{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 27,
											Line:   19,
										},
										File:   "dict.flux",
										Source: "K",
										Start: ast.Position{
											Column: 26,
											Line:   19,
										},
									},
								},
								ID: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 27,
												Line:   19,
											},
											File:   "dict.flux",
											Source: "K",
											Start: ast.Position{
												Column: 26,
												Line:   19,
											},
										},
									},
									Name: "K",
								},
							},
							ValueType: &ast.TvarType{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 30,
											Line:   19,
										},
										File:   "dict.flux",
										Source: "V",
										Start: ast.Position{
											Column: 29,
											Line:   19,
										},
									},
								},
								ID: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 30,
												Line:   19,
											},
											File:   "dict.flux",
											Source: "V",
											Start: ast.Position{
												Column: 29,
												Line:   19,
											},
										},
									},
									Name: "V",
								},
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 39,
									Line:   19,
								},
								File:   "dict.flux",
								Source: "key: K",
								Start: ast.Position{
									Column: 33,
									Line:   19,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 36,
										Line:   19,
									},
									File:   "dict.flux",
									Source: "key",
									Start: ast.Position{
										Column: 33,
										Line:   19,
									},
								},
							},
							Name: "key",
						},
						Ty: &ast.TvarType{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 39,
										Line:   19,
									},
									File:   "dict.flux",
									Source: "K",
									Start: ast.Position{
										Column: 38,
										Line:   19,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 39,
											Line:   19,
										},
										File:   "dict.flux",
										Source: "K",
										Start: ast.Position{
											Column: 38,
											Line:   19,
										},
									},
								},
								Name: "K",
							},
						},
					}},
					Return: &ast.DictType{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 50,
									Line:   19,
								},
								File:   "dict.flux",
								Source: "[K: V]",
								Start: ast.Position{
									Column: 44,
									Line:   19,
								},
							},
						},
						KeyType: &ast.TvarType{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 46,
										Line:   19,
									},
									File:   "dict.flux",
									Source: "K",
									Start: ast.Position{
										Column: 45,
										Line:   19,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 46,
											Line:   19,
										},
										File:   "dict.flux",
										Source: "K",
										Start: ast.Position{
											Column: 45,
											Line:   19,
										},
									},
								},
								Name: "K",
							},
						},
						ValueType: &ast.TvarType{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 49,
										Line:   19,
									},
									File:   "dict.flux",
									Source: "V",
									Start: ast.Position{
										Column: 48,
										Line:   19,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 49,
											Line:   19,
										},
										File:   "dict.flux",
										Source: "V",
										Start: ast.Position{
											Column: 48,
											Line:   19,
										},
									},
								},
								Name: "V",
							},
						},
					},
				},
			},
		}},
		Imports:  nil,
		Metadata: "parser-type=rust",
		Name:     "dict.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 13,
						Line:   1,
					},
					File:   "dict.flux",
					Source: "package dict",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 13,
							Line:   1,
						},
						File:   "dict.flux",
						Source: "dict",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "dict",
			},
		},
	}},
	Package: "dict",
	Path:    "dict",
}
