// DO NOT EDIT: This file is autogenerated via the builtin command.

package influxdb

import (
	ast "github.com/influxdata/flux/ast"
	runtime "github.com/influxdata/flux/runtime"
)

func init() {
	runtime.RegisterPackage(pkgAST)
}

var pkgAST = &ast.Package{
	BaseNode: ast.BaseNode{
		Comments: nil,
		Errors:   nil,
		Loc:      nil,
	},
	Files: []*ast.File{&ast.File{
		BaseNode: ast.BaseNode{
			Comments: nil,
			Errors:   nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 20,
					Line:   45,
				},
				File:   "influxdb.flux",
				Source: "package influxdb\n\n\nbuiltin from : (\n    ?bucket: string,\n    ?bucketID: string,\n    ?org: string,\n    ?orgID: string,\n    ?host: string,\n    ?token: string,\n) => [{B with _measurement: string, _field: string, _time: time, _value: A}]\n\nbuiltin to : (\n    <-tables: [A],\n    ?bucket: string,\n    ?bucketID: string,\n    ?org: string,\n    ?orgID: string,\n    ?host: string,\n    ?token: string,\n    ?timeColumn: string,\n    ?measurementColumn: string,\n    ?tagColumns: [string],\n    ?fieldFn: (r: A) => B,\n) => [A] where\n    A: Record,\n    B: Record\n\nbuiltin buckets : (\n    ?org: string,\n    ?orgID: string,\n    ?host: string,\n    ?token: string,\n) => [{\n    name: string,\n    id: string,\n    organizationID: string,\n    retentionPolicy: string,\n    retentionPeriod: int,\n}]\n\n// cardinality will return the cardinality of data for a given bucket.\n// If a predicate is specified, then the cardinality only includes series\n// that match the predicate.\nbuiltin cardinality",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 13,
						Line:   4,
					},
					File:   "influxdb.flux",
					Source: "builtin from",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 13,
							Line:   4,
						},
						File:   "influxdb.flux",
						Source: "from",
						Start: ast.Position{
							Column: 9,
							Line:   4,
						},
					},
				},
				Name: "from",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 77,
							Line:   11,
						},
						File:   "influxdb.flux",
						Source: "(\n    ?bucket: string,\n    ?bucketID: string,\n    ?org: string,\n    ?orgID: string,\n    ?host: string,\n    ?token: string,\n) => [{B with _measurement: string, _field: string, _time: time, _value: A}]",
						Start: ast.Position{
							Column: 16,
							Line:   4,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 77,
								Line:   11,
							},
							File:   "influxdb.flux",
							Source: "(\n    ?bucket: string,\n    ?bucketID: string,\n    ?org: string,\n    ?orgID: string,\n    ?host: string,\n    ?token: string,\n) => [{B with _measurement: string, _field: string, _time: time, _value: A}]",
							Start: ast.Position{
								Column: 16,
								Line:   4,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 20,
									Line:   5,
								},
								File:   "influxdb.flux",
								Source: "?bucket: string",
								Start: ast.Position{
									Column: 5,
									Line:   5,
								},
							},
						},
						Kind: "Optional",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 12,
										Line:   5,
									},
									File:   "influxdb.flux",
									Source: "bucket",
									Start: ast.Position{
										Column: 6,
										Line:   5,
									},
								},
							},
							Name: "bucket",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 20,
										Line:   5,
									},
									File:   "influxdb.flux",
									Source: "string",
									Start: ast.Position{
										Column: 14,
										Line:   5,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 20,
											Line:   5,
										},
										File:   "influxdb.flux",
										Source: "string",
										Start: ast.Position{
											Column: 14,
											Line:   5,
										},
									},
								},
								Name: "string",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 22,
									Line:   6,
								},
								File:   "influxdb.flux",
								Source: "?bucketID: string",
								Start: ast.Position{
									Column: 5,
									Line:   6,
								},
							},
						},
						Kind: "Optional",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 14,
										Line:   6,
									},
									File:   "influxdb.flux",
									Source: "bucketID",
									Start: ast.Position{
										Column: 6,
										Line:   6,
									},
								},
							},
							Name: "bucketID",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 22,
										Line:   6,
									},
									File:   "influxdb.flux",
									Source: "string",
									Start: ast.Position{
										Column: 16,
										Line:   6,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 22,
											Line:   6,
										},
										File:   "influxdb.flux",
										Source: "string",
										Start: ast.Position{
											Column: 16,
											Line:   6,
										},
									},
								},
								Name: "string",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 17,
									Line:   7,
								},
								File:   "influxdb.flux",
								Source: "?org: string",
								Start: ast.Position{
									Column: 5,
									Line:   7,
								},
							},
						},
						Kind: "Optional",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 9,
										Line:   7,
									},
									File:   "influxdb.flux",
									Source: "org",
									Start: ast.Position{
										Column: 6,
										Line:   7,
									},
								},
							},
							Name: "org",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 17,
										Line:   7,
									},
									File:   "influxdb.flux",
									Source: "string",
									Start: ast.Position{
										Column: 11,
										Line:   7,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 17,
											Line:   7,
										},
										File:   "influxdb.flux",
										Source: "string",
										Start: ast.Position{
											Column: 11,
											Line:   7,
										},
									},
								},
								Name: "string",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 19,
									Line:   8,
								},
								File:   "influxdb.flux",
								Source: "?orgID: string",
								Start: ast.Position{
									Column: 5,
									Line:   8,
								},
							},
						},
						Kind: "Optional",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 11,
										Line:   8,
									},
									File:   "influxdb.flux",
									Source: "orgID",
									Start: ast.Position{
										Column: 6,
										Line:   8,
									},
								},
							},
							Name: "orgID",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 19,
										Line:   8,
									},
									File:   "influxdb.flux",
									Source: "string",
									Start: ast.Position{
										Column: 13,
										Line:   8,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 19,
											Line:   8,
										},
										File:   "influxdb.flux",
										Source: "string",
										Start: ast.Position{
											Column: 13,
											Line:   8,
										},
									},
								},
								Name: "string",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 18,
									Line:   9,
								},
								File:   "influxdb.flux",
								Source: "?host: string",
								Start: ast.Position{
									Column: 5,
									Line:   9,
								},
							},
						},
						Kind: "Optional",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 10,
										Line:   9,
									},
									File:   "influxdb.flux",
									Source: "host",
									Start: ast.Position{
										Column: 6,
										Line:   9,
									},
								},
							},
							Name: "host",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 18,
										Line:   9,
									},
									File:   "influxdb.flux",
									Source: "string",
									Start: ast.Position{
										Column: 12,
										Line:   9,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 18,
											Line:   9,
										},
										File:   "influxdb.flux",
										Source: "string",
										Start: ast.Position{
											Column: 12,
											Line:   9,
										},
									},
								},
								Name: "string",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 19,
									Line:   10,
								},
								File:   "influxdb.flux",
								Source: "?token: string",
								Start: ast.Position{
									Column: 5,
									Line:   10,
								},
							},
						},
						Kind: "Optional",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 11,
										Line:   10,
									},
									File:   "influxdb.flux",
									Source: "token",
									Start: ast.Position{
										Column: 6,
										Line:   10,
									},
								},
							},
							Name: "token",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 19,
										Line:   10,
									},
									File:   "influxdb.flux",
									Source: "string",
									Start: ast.Position{
										Column: 13,
										Line:   10,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 19,
											Line:   10,
										},
										File:   "influxdb.flux",
										Source: "string",
										Start: ast.Position{
											Column: 13,
											Line:   10,
										},
									},
								},
								Name: "string",
							},
						},
					}},
					Return: &ast.ArrayType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 77,
									Line:   11,
								},
								File:   "influxdb.flux",
								Source: "[{B with _measurement: string, _field: string, _time: time, _value: A}]",
								Start: ast.Position{
									Column: 6,
									Line:   11,
								},
							},
						},
						ElementType: &ast.RecordType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 76,
										Line:   11,
									},
									File:   "influxdb.flux",
									Source: "{B with _measurement: string, _field: string, _time: time, _value: A}",
									Start: ast.Position{
										Column: 7,
										Line:   11,
									},
								},
							},
							Properties: []*ast.PropertyType{&ast.PropertyType{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 35,
											Line:   11,
										},
										File:   "influxdb.flux",
										Source: "_measurement: string",
										Start: ast.Position{
											Column: 15,
											Line:   11,
										},
									},
								},
								Name: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 27,
												Line:   11,
											},
											File:   "influxdb.flux",
											Source: "_measurement",
											Start: ast.Position{
												Column: 15,
												Line:   11,
											},
										},
									},
									Name: "_measurement",
								},
								Ty: &ast.NamedType{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 35,
												Line:   11,
											},
											File:   "influxdb.flux",
											Source: "string",
											Start: ast.Position{
												Column: 29,
												Line:   11,
											},
										},
									},
									ID: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 35,
													Line:   11,
												},
												File:   "influxdb.flux",
												Source: "string",
												Start: ast.Position{
													Column: 29,
													Line:   11,
												},
											},
										},
										Name: "string",
									},
								},
							}, &ast.PropertyType{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 51,
											Line:   11,
										},
										File:   "influxdb.flux",
										Source: "_field: string",
										Start: ast.Position{
											Column: 37,
											Line:   11,
										},
									},
								},
								Name: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 43,
												Line:   11,
											},
											File:   "influxdb.flux",
											Source: "_field",
											Start: ast.Position{
												Column: 37,
												Line:   11,
											},
										},
									},
									Name: "_field",
								},
								Ty: &ast.NamedType{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 51,
												Line:   11,
											},
											File:   "influxdb.flux",
											Source: "string",
											Start: ast.Position{
												Column: 45,
												Line:   11,
											},
										},
									},
									ID: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 51,
													Line:   11,
												},
												File:   "influxdb.flux",
												Source: "string",
												Start: ast.Position{
													Column: 45,
													Line:   11,
												},
											},
										},
										Name: "string",
									},
								},
							}, &ast.PropertyType{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 64,
											Line:   11,
										},
										File:   "influxdb.flux",
										Source: "_time: time",
										Start: ast.Position{
											Column: 53,
											Line:   11,
										},
									},
								},
								Name: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 58,
												Line:   11,
											},
											File:   "influxdb.flux",
											Source: "_time",
											Start: ast.Position{
												Column: 53,
												Line:   11,
											},
										},
									},
									Name: "_time",
								},
								Ty: &ast.NamedType{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 64,
												Line:   11,
											},
											File:   "influxdb.flux",
											Source: "time",
											Start: ast.Position{
												Column: 60,
												Line:   11,
											},
										},
									},
									ID: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 64,
													Line:   11,
												},
												File:   "influxdb.flux",
												Source: "time",
												Start: ast.Position{
													Column: 60,
													Line:   11,
												},
											},
										},
										Name: "time",
									},
								},
							}, &ast.PropertyType{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 75,
											Line:   11,
										},
										File:   "influxdb.flux",
										Source: "_value: A",
										Start: ast.Position{
											Column: 66,
											Line:   11,
										},
									},
								},
								Name: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 72,
												Line:   11,
											},
											File:   "influxdb.flux",
											Source: "_value",
											Start: ast.Position{
												Column: 66,
												Line:   11,
											},
										},
									},
									Name: "_value",
								},
								Ty: &ast.TvarType{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 75,
												Line:   11,
											},
											File:   "influxdb.flux",
											Source: "A",
											Start: ast.Position{
												Column: 74,
												Line:   11,
											},
										},
									},
									ID: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 75,
													Line:   11,
												},
												File:   "influxdb.flux",
												Source: "A",
												Start: ast.Position{
													Column: 74,
													Line:   11,
												},
											},
										},
										Name: "A",
									},
								},
							}},
							Tvar: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 9,
											Line:   11,
										},
										File:   "influxdb.flux",
										Source: "B",
										Start: ast.Position{
											Column: 8,
											Line:   11,
										},
									},
								},
								Name: "B",
							},
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 11,
						Line:   13,
					},
					File:   "influxdb.flux",
					Source: "builtin to",
					Start: ast.Position{
						Column: 1,
						Line:   13,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 11,
							Line:   13,
						},
						File:   "influxdb.flux",
						Source: "to",
						Start: ast.Position{
							Column: 9,
							Line:   13,
						},
					},
				},
				Name: "to",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 14,
							Line:   27,
						},
						File:   "influxdb.flux",
						Source: "(\n    <-tables: [A],\n    ?bucket: string,\n    ?bucketID: string,\n    ?org: string,\n    ?orgID: string,\n    ?host: string,\n    ?token: string,\n    ?timeColumn: string,\n    ?measurementColumn: string,\n    ?tagColumns: [string],\n    ?fieldFn: (r: A) => B,\n) => [A] where\n    A: Record,\n    B: Record",
						Start: ast.Position{
							Column: 14,
							Line:   13,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{&ast.TypeConstraint{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 14,
								Line:   26,
							},
							File:   "influxdb.flux",
							Source: "A: Record",
							Start: ast.Position{
								Column: 5,
								Line:   26,
							},
						},
					},
					Kinds: []*ast.Identifier{&ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 14,
									Line:   26,
								},
								File:   "influxdb.flux",
								Source: "Record",
								Start: ast.Position{
									Column: 8,
									Line:   26,
								},
							},
						},
						Name: "Record",
					}},
					Tvar: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 6,
									Line:   26,
								},
								File:   "influxdb.flux",
								Source: "A",
								Start: ast.Position{
									Column: 5,
									Line:   26,
								},
							},
						},
						Name: "A",
					},
				}, &ast.TypeConstraint{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 14,
								Line:   27,
							},
							File:   "influxdb.flux",
							Source: "B: Record",
							Start: ast.Position{
								Column: 5,
								Line:   27,
							},
						},
					},
					Kinds: []*ast.Identifier{&ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 14,
									Line:   27,
								},
								File:   "influxdb.flux",
								Source: "Record",
								Start: ast.Position{
									Column: 8,
									Line:   27,
								},
							},
						},
						Name: "Record",
					}},
					Tvar: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 6,
									Line:   27,
								},
								File:   "influxdb.flux",
								Source: "B",
								Start: ast.Position{
									Column: 5,
									Line:   27,
								},
							},
						},
						Name: "B",
					},
				}},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 9,
								Line:   25,
							},
							File:   "influxdb.flux",
							Source: "(\n    <-tables: [A],\n    ?bucket: string,\n    ?bucketID: string,\n    ?org: string,\n    ?orgID: string,\n    ?host: string,\n    ?token: string,\n    ?timeColumn: string,\n    ?measurementColumn: string,\n    ?tagColumns: [string],\n    ?fieldFn: (r: A) => B,\n) => [A]",
							Start: ast.Position{
								Column: 14,
								Line:   13,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 18,
									Line:   14,
								},
								File:   "influxdb.flux",
								Source: "<-tables: [A]",
								Start: ast.Position{
									Column: 5,
									Line:   14,
								},
							},
						},
						Kind: "Pipe",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 13,
										Line:   14,
									},
									File:   "influxdb.flux",
									Source: "tables",
									Start: ast.Position{
										Column: 7,
										Line:   14,
									},
								},
							},
							Name: "tables",
						},
						Ty: &ast.ArrayType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 18,
										Line:   14,
									},
									File:   "influxdb.flux",
									Source: "[A]",
									Start: ast.Position{
										Column: 15,
										Line:   14,
									},
								},
							},
							ElementType: &ast.TvarType{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 17,
											Line:   14,
										},
										File:   "influxdb.flux",
										Source: "A",
										Start: ast.Position{
											Column: 16,
											Line:   14,
										},
									},
								},
								ID: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 17,
												Line:   14,
											},
											File:   "influxdb.flux",
											Source: "A",
											Start: ast.Position{
												Column: 16,
												Line:   14,
											},
										},
									},
									Name: "A",
								},
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 20,
									Line:   15,
								},
								File:   "influxdb.flux",
								Source: "?bucket: string",
								Start: ast.Position{
									Column: 5,
									Line:   15,
								},
							},
						},
						Kind: "Optional",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 12,
										Line:   15,
									},
									File:   "influxdb.flux",
									Source: "bucket",
									Start: ast.Position{
										Column: 6,
										Line:   15,
									},
								},
							},
							Name: "bucket",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 20,
										Line:   15,
									},
									File:   "influxdb.flux",
									Source: "string",
									Start: ast.Position{
										Column: 14,
										Line:   15,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 20,
											Line:   15,
										},
										File:   "influxdb.flux",
										Source: "string",
										Start: ast.Position{
											Column: 14,
											Line:   15,
										},
									},
								},
								Name: "string",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 22,
									Line:   16,
								},
								File:   "influxdb.flux",
								Source: "?bucketID: string",
								Start: ast.Position{
									Column: 5,
									Line:   16,
								},
							},
						},
						Kind: "Optional",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 14,
										Line:   16,
									},
									File:   "influxdb.flux",
									Source: "bucketID",
									Start: ast.Position{
										Column: 6,
										Line:   16,
									},
								},
							},
							Name: "bucketID",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 22,
										Line:   16,
									},
									File:   "influxdb.flux",
									Source: "string",
									Start: ast.Position{
										Column: 16,
										Line:   16,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 22,
											Line:   16,
										},
										File:   "influxdb.flux",
										Source: "string",
										Start: ast.Position{
											Column: 16,
											Line:   16,
										},
									},
								},
								Name: "string",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 17,
									Line:   17,
								},
								File:   "influxdb.flux",
								Source: "?org: string",
								Start: ast.Position{
									Column: 5,
									Line:   17,
								},
							},
						},
						Kind: "Optional",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 9,
										Line:   17,
									},
									File:   "influxdb.flux",
									Source: "org",
									Start: ast.Position{
										Column: 6,
										Line:   17,
									},
								},
							},
							Name: "org",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 17,
										Line:   17,
									},
									File:   "influxdb.flux",
									Source: "string",
									Start: ast.Position{
										Column: 11,
										Line:   17,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 17,
											Line:   17,
										},
										File:   "influxdb.flux",
										Source: "string",
										Start: ast.Position{
											Column: 11,
											Line:   17,
										},
									},
								},
								Name: "string",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 19,
									Line:   18,
								},
								File:   "influxdb.flux",
								Source: "?orgID: string",
								Start: ast.Position{
									Column: 5,
									Line:   18,
								},
							},
						},
						Kind: "Optional",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 11,
										Line:   18,
									},
									File:   "influxdb.flux",
									Source: "orgID",
									Start: ast.Position{
										Column: 6,
										Line:   18,
									},
								},
							},
							Name: "orgID",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 19,
										Line:   18,
									},
									File:   "influxdb.flux",
									Source: "string",
									Start: ast.Position{
										Column: 13,
										Line:   18,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 19,
											Line:   18,
										},
										File:   "influxdb.flux",
										Source: "string",
										Start: ast.Position{
											Column: 13,
											Line:   18,
										},
									},
								},
								Name: "string",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 18,
									Line:   19,
								},
								File:   "influxdb.flux",
								Source: "?host: string",
								Start: ast.Position{
									Column: 5,
									Line:   19,
								},
							},
						},
						Kind: "Optional",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 10,
										Line:   19,
									},
									File:   "influxdb.flux",
									Source: "host",
									Start: ast.Position{
										Column: 6,
										Line:   19,
									},
								},
							},
							Name: "host",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 18,
										Line:   19,
									},
									File:   "influxdb.flux",
									Source: "string",
									Start: ast.Position{
										Column: 12,
										Line:   19,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 18,
											Line:   19,
										},
										File:   "influxdb.flux",
										Source: "string",
										Start: ast.Position{
											Column: 12,
											Line:   19,
										},
									},
								},
								Name: "string",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 19,
									Line:   20,
								},
								File:   "influxdb.flux",
								Source: "?token: string",
								Start: ast.Position{
									Column: 5,
									Line:   20,
								},
							},
						},
						Kind: "Optional",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 11,
										Line:   20,
									},
									File:   "influxdb.flux",
									Source: "token",
									Start: ast.Position{
										Column: 6,
										Line:   20,
									},
								},
							},
							Name: "token",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 19,
										Line:   20,
									},
									File:   "influxdb.flux",
									Source: "string",
									Start: ast.Position{
										Column: 13,
										Line:   20,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 19,
											Line:   20,
										},
										File:   "influxdb.flux",
										Source: "string",
										Start: ast.Position{
											Column: 13,
											Line:   20,
										},
									},
								},
								Name: "string",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 24,
									Line:   21,
								},
								File:   "influxdb.flux",
								Source: "?timeColumn: string",
								Start: ast.Position{
									Column: 5,
									Line:   21,
								},
							},
						},
						Kind: "Optional",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 16,
										Line:   21,
									},
									File:   "influxdb.flux",
									Source: "timeColumn",
									Start: ast.Position{
										Column: 6,
										Line:   21,
									},
								},
							},
							Name: "timeColumn",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 24,
										Line:   21,
									},
									File:   "influxdb.flux",
									Source: "string",
									Start: ast.Position{
										Column: 18,
										Line:   21,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 24,
											Line:   21,
										},
										File:   "influxdb.flux",
										Source: "string",
										Start: ast.Position{
											Column: 18,
											Line:   21,
										},
									},
								},
								Name: "string",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 31,
									Line:   22,
								},
								File:   "influxdb.flux",
								Source: "?measurementColumn: string",
								Start: ast.Position{
									Column: 5,
									Line:   22,
								},
							},
						},
						Kind: "Optional",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 23,
										Line:   22,
									},
									File:   "influxdb.flux",
									Source: "measurementColumn",
									Start: ast.Position{
										Column: 6,
										Line:   22,
									},
								},
							},
							Name: "measurementColumn",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 31,
										Line:   22,
									},
									File:   "influxdb.flux",
									Source: "string",
									Start: ast.Position{
										Column: 25,
										Line:   22,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 31,
											Line:   22,
										},
										File:   "influxdb.flux",
										Source: "string",
										Start: ast.Position{
											Column: 25,
											Line:   22,
										},
									},
								},
								Name: "string",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 26,
									Line:   23,
								},
								File:   "influxdb.flux",
								Source: "?tagColumns: [string]",
								Start: ast.Position{
									Column: 5,
									Line:   23,
								},
							},
						},
						Kind: "Optional",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 16,
										Line:   23,
									},
									File:   "influxdb.flux",
									Source: "tagColumns",
									Start: ast.Position{
										Column: 6,
										Line:   23,
									},
								},
							},
							Name: "tagColumns",
						},
						Ty: &ast.ArrayType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 26,
										Line:   23,
									},
									File:   "influxdb.flux",
									Source: "[string]",
									Start: ast.Position{
										Column: 18,
										Line:   23,
									},
								},
							},
							ElementType: &ast.NamedType{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 25,
											Line:   23,
										},
										File:   "influxdb.flux",
										Source: "string",
										Start: ast.Position{
											Column: 19,
											Line:   23,
										},
									},
								},
								ID: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 25,
												Line:   23,
											},
											File:   "influxdb.flux",
											Source: "string",
											Start: ast.Position{
												Column: 19,
												Line:   23,
											},
										},
									},
									Name: "string",
								},
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 26,
									Line:   24,
								},
								File:   "influxdb.flux",
								Source: "?fieldFn: (r: A) => B",
								Start: ast.Position{
									Column: 5,
									Line:   24,
								},
							},
						},
						Kind: "Optional",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 13,
										Line:   24,
									},
									File:   "influxdb.flux",
									Source: "fieldFn",
									Start: ast.Position{
										Column: 6,
										Line:   24,
									},
								},
							},
							Name: "fieldFn",
						},
						Ty: &ast.FunctionType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 26,
										Line:   24,
									},
									File:   "influxdb.flux",
									Source: "(r: A) => B",
									Start: ast.Position{
										Column: 15,
										Line:   24,
									},
								},
							},
							Parameters: []*ast.ParameterType{&ast.ParameterType{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 20,
											Line:   24,
										},
										File:   "influxdb.flux",
										Source: "r: A",
										Start: ast.Position{
											Column: 16,
											Line:   24,
										},
									},
								},
								Kind: "Required",
								Name: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 17,
												Line:   24,
											},
											File:   "influxdb.flux",
											Source: "r",
											Start: ast.Position{
												Column: 16,
												Line:   24,
											},
										},
									},
									Name: "r",
								},
								Ty: &ast.TvarType{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 20,
												Line:   24,
											},
											File:   "influxdb.flux",
											Source: "A",
											Start: ast.Position{
												Column: 19,
												Line:   24,
											},
										},
									},
									ID: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 20,
													Line:   24,
												},
												File:   "influxdb.flux",
												Source: "A",
												Start: ast.Position{
													Column: 19,
													Line:   24,
												},
											},
										},
										Name: "A",
									},
								},
							}},
							Return: &ast.TvarType{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 26,
											Line:   24,
										},
										File:   "influxdb.flux",
										Source: "B",
										Start: ast.Position{
											Column: 25,
											Line:   24,
										},
									},
								},
								ID: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 26,
												Line:   24,
											},
											File:   "influxdb.flux",
											Source: "B",
											Start: ast.Position{
												Column: 25,
												Line:   24,
											},
										},
									},
									Name: "B",
								},
							},
						},
					}},
					Return: &ast.ArrayType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 9,
									Line:   25,
								},
								File:   "influxdb.flux",
								Source: "[A]",
								Start: ast.Position{
									Column: 6,
									Line:   25,
								},
							},
						},
						ElementType: &ast.TvarType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 8,
										Line:   25,
									},
									File:   "influxdb.flux",
									Source: "A",
									Start: ast.Position{
										Column: 7,
										Line:   25,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 8,
											Line:   25,
										},
										File:   "influxdb.flux",
										Source: "A",
										Start: ast.Position{
											Column: 7,
											Line:   25,
										},
									},
								},
								Name: "A",
							},
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 16,
						Line:   29,
					},
					File:   "influxdb.flux",
					Source: "builtin buckets",
					Start: ast.Position{
						Column: 1,
						Line:   29,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 16,
							Line:   29,
						},
						File:   "influxdb.flux",
						Source: "buckets",
						Start: ast.Position{
							Column: 9,
							Line:   29,
						},
					},
				},
				Name: "buckets",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 3,
							Line:   40,
						},
						File:   "influxdb.flux",
						Source: "(\n    ?org: string,\n    ?orgID: string,\n    ?host: string,\n    ?token: string,\n) => [{\n    name: string,\n    id: string,\n    organizationID: string,\n    retentionPolicy: string,\n    retentionPeriod: int,\n}]",
						Start: ast.Position{
							Column: 19,
							Line:   29,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 3,
								Line:   40,
							},
							File:   "influxdb.flux",
							Source: "(\n    ?org: string,\n    ?orgID: string,\n    ?host: string,\n    ?token: string,\n) => [{\n    name: string,\n    id: string,\n    organizationID: string,\n    retentionPolicy: string,\n    retentionPeriod: int,\n}]",
							Start: ast.Position{
								Column: 19,
								Line:   29,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 17,
									Line:   30,
								},
								File:   "influxdb.flux",
								Source: "?org: string",
								Start: ast.Position{
									Column: 5,
									Line:   30,
								},
							},
						},
						Kind: "Optional",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 9,
										Line:   30,
									},
									File:   "influxdb.flux",
									Source: "org",
									Start: ast.Position{
										Column: 6,
										Line:   30,
									},
								},
							},
							Name: "org",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 17,
										Line:   30,
									},
									File:   "influxdb.flux",
									Source: "string",
									Start: ast.Position{
										Column: 11,
										Line:   30,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 17,
											Line:   30,
										},
										File:   "influxdb.flux",
										Source: "string",
										Start: ast.Position{
											Column: 11,
											Line:   30,
										},
									},
								},
								Name: "string",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 19,
									Line:   31,
								},
								File:   "influxdb.flux",
								Source: "?orgID: string",
								Start: ast.Position{
									Column: 5,
									Line:   31,
								},
							},
						},
						Kind: "Optional",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 11,
										Line:   31,
									},
									File:   "influxdb.flux",
									Source: "orgID",
									Start: ast.Position{
										Column: 6,
										Line:   31,
									},
								},
							},
							Name: "orgID",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 19,
										Line:   31,
									},
									File:   "influxdb.flux",
									Source: "string",
									Start: ast.Position{
										Column: 13,
										Line:   31,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 19,
											Line:   31,
										},
										File:   "influxdb.flux",
										Source: "string",
										Start: ast.Position{
											Column: 13,
											Line:   31,
										},
									},
								},
								Name: "string",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 18,
									Line:   32,
								},
								File:   "influxdb.flux",
								Source: "?host: string",
								Start: ast.Position{
									Column: 5,
									Line:   32,
								},
							},
						},
						Kind: "Optional",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 10,
										Line:   32,
									},
									File:   "influxdb.flux",
									Source: "host",
									Start: ast.Position{
										Column: 6,
										Line:   32,
									},
								},
							},
							Name: "host",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 18,
										Line:   32,
									},
									File:   "influxdb.flux",
									Source: "string",
									Start: ast.Position{
										Column: 12,
										Line:   32,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 18,
											Line:   32,
										},
										File:   "influxdb.flux",
										Source: "string",
										Start: ast.Position{
											Column: 12,
											Line:   32,
										},
									},
								},
								Name: "string",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 19,
									Line:   33,
								},
								File:   "influxdb.flux",
								Source: "?token: string",
								Start: ast.Position{
									Column: 5,
									Line:   33,
								},
							},
						},
						Kind: "Optional",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 11,
										Line:   33,
									},
									File:   "influxdb.flux",
									Source: "token",
									Start: ast.Position{
										Column: 6,
										Line:   33,
									},
								},
							},
							Name: "token",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 19,
										Line:   33,
									},
									File:   "influxdb.flux",
									Source: "string",
									Start: ast.Position{
										Column: 13,
										Line:   33,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 19,
											Line:   33,
										},
										File:   "influxdb.flux",
										Source: "string",
										Start: ast.Position{
											Column: 13,
											Line:   33,
										},
									},
								},
								Name: "string",
							},
						},
					}},
					Return: &ast.ArrayType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 3,
									Line:   40,
								},
								File:   "influxdb.flux",
								Source: "[{\n    name: string,\n    id: string,\n    organizationID: string,\n    retentionPolicy: string,\n    retentionPeriod: int,\n}]",
								Start: ast.Position{
									Column: 6,
									Line:   34,
								},
							},
						},
						ElementType: &ast.RecordType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 2,
										Line:   40,
									},
									File:   "influxdb.flux",
									Source: "{\n    name: string,\n    id: string,\n    organizationID: string,\n    retentionPolicy: string,\n    retentionPeriod: int,\n}",
									Start: ast.Position{
										Column: 7,
										Line:   34,
									},
								},
							},
							Properties: []*ast.PropertyType{&ast.PropertyType{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 17,
											Line:   35,
										},
										File:   "influxdb.flux",
										Source: "name: string",
										Start: ast.Position{
											Column: 5,
											Line:   35,
										},
									},
								},
								Name: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 9,
												Line:   35,
											},
											File:   "influxdb.flux",
											Source: "name",
											Start: ast.Position{
												Column: 5,
												Line:   35,
											},
										},
									},
									Name: "name",
								},
								Ty: &ast.NamedType{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 17,
												Line:   35,
											},
											File:   "influxdb.flux",
											Source: "string",
											Start: ast.Position{
												Column: 11,
												Line:   35,
											},
										},
									},
									ID: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 17,
													Line:   35,
												},
												File:   "influxdb.flux",
												Source: "string",
												Start: ast.Position{
													Column: 11,
													Line:   35,
												},
											},
										},
										Name: "string",
									},
								},
							}, &ast.PropertyType{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 15,
											Line:   36,
										},
										File:   "influxdb.flux",
										Source: "id: string",
										Start: ast.Position{
											Column: 5,
											Line:   36,
										},
									},
								},
								Name: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 7,
												Line:   36,
											},
											File:   "influxdb.flux",
											Source: "id",
											Start: ast.Position{
												Column: 5,
												Line:   36,
											},
										},
									},
									Name: "id",
								},
								Ty: &ast.NamedType{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 15,
												Line:   36,
											},
											File:   "influxdb.flux",
											Source: "string",
											Start: ast.Position{
												Column: 9,
												Line:   36,
											},
										},
									},
									ID: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 15,
													Line:   36,
												},
												File:   "influxdb.flux",
												Source: "string",
												Start: ast.Position{
													Column: 9,
													Line:   36,
												},
											},
										},
										Name: "string",
									},
								},
							}, &ast.PropertyType{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 27,
											Line:   37,
										},
										File:   "influxdb.flux",
										Source: "organizationID: string",
										Start: ast.Position{
											Column: 5,
											Line:   37,
										},
									},
								},
								Name: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 19,
												Line:   37,
											},
											File:   "influxdb.flux",
											Source: "organizationID",
											Start: ast.Position{
												Column: 5,
												Line:   37,
											},
										},
									},
									Name: "organizationID",
								},
								Ty: &ast.NamedType{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 27,
												Line:   37,
											},
											File:   "influxdb.flux",
											Source: "string",
											Start: ast.Position{
												Column: 21,
												Line:   37,
											},
										},
									},
									ID: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 27,
													Line:   37,
												},
												File:   "influxdb.flux",
												Source: "string",
												Start: ast.Position{
													Column: 21,
													Line:   37,
												},
											},
										},
										Name: "string",
									},
								},
							}, &ast.PropertyType{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 28,
											Line:   38,
										},
										File:   "influxdb.flux",
										Source: "retentionPolicy: string",
										Start: ast.Position{
											Column: 5,
											Line:   38,
										},
									},
								},
								Name: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 20,
												Line:   38,
											},
											File:   "influxdb.flux",
											Source: "retentionPolicy",
											Start: ast.Position{
												Column: 5,
												Line:   38,
											},
										},
									},
									Name: "retentionPolicy",
								},
								Ty: &ast.NamedType{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 28,
												Line:   38,
											},
											File:   "influxdb.flux",
											Source: "string",
											Start: ast.Position{
												Column: 22,
												Line:   38,
											},
										},
									},
									ID: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 28,
													Line:   38,
												},
												File:   "influxdb.flux",
												Source: "string",
												Start: ast.Position{
													Column: 22,
													Line:   38,
												},
											},
										},
										Name: "string",
									},
								},
							}, &ast.PropertyType{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 25,
											Line:   39,
										},
										File:   "influxdb.flux",
										Source: "retentionPeriod: int",
										Start: ast.Position{
											Column: 5,
											Line:   39,
										},
									},
								},
								Name: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 20,
												Line:   39,
											},
											File:   "influxdb.flux",
											Source: "retentionPeriod",
											Start: ast.Position{
												Column: 5,
												Line:   39,
											},
										},
									},
									Name: "retentionPeriod",
								},
								Ty: &ast.NamedType{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 25,
												Line:   39,
											},
											File:   "influxdb.flux",
											Source: "int",
											Start: ast.Position{
												Column: 22,
												Line:   39,
											},
										},
									},
									ID: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 25,
													Line:   39,
												},
												File:   "influxdb.flux",
												Source: "int",
												Start: ast.Position{
													Column: 22,
													Line:   39,
												},
											},
										},
										Name: "int",
									},
								},
							}},
							Tvar: nil,
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: []ast.Comment{ast.Comment{Text: "// cardinality will return the cardinality of data for a given bucket.\n"}, ast.Comment{Text: "// If a predicate is specified, then the cardinality only includes series\n"}, ast.Comment{Text: "// that match the predicate.\n"}},
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 20,
						Line:   45,
					},
					File:   "influxdb.flux",
					Source: "builtin cardinality",
					Start: ast.Position{
						Column: 1,
						Line:   45,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 20,
							Line:   45,
						},
						File:   "influxdb.flux",
						Source: "cardinality",
						Start: ast.Position{
							Column: 9,
							Line:   45,
						},
					},
				},
				Name: "cardinality",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 16,
							Line:   57,
						},
						File:   "influxdb.flux",
						Source: "(\n    ?bucket: string,\n    ?bucketID: string,\n    ?org: string,\n    ?orgID: string,\n    ?host: string,\n    ?token: string,\n    start: A,\n    ?stop: B,\n    ?predicate: (r: {T with _measurement: string, _field: string, _value: S}) => bool,\n) => [{_start: time, _stop: time, _value: int}] where\n    A: Timeable,\n    B: Timeable",
						Start: ast.Position{
							Column: 23,
							Line:   45,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{&ast.TypeConstraint{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 16,
								Line:   56,
							},
							File:   "influxdb.flux",
							Source: "A: Timeable",
							Start: ast.Position{
								Column: 5,
								Line:   56,
							},
						},
					},
					Kinds: []*ast.Identifier{&ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 16,
									Line:   56,
								},
								File:   "influxdb.flux",
								Source: "Timeable",
								Start: ast.Position{
									Column: 8,
									Line:   56,
								},
							},
						},
						Name: "Timeable",
					}},
					Tvar: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 6,
									Line:   56,
								},
								File:   "influxdb.flux",
								Source: "A",
								Start: ast.Position{
									Column: 5,
									Line:   56,
								},
							},
						},
						Name: "A",
					},
				}, &ast.TypeConstraint{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 16,
								Line:   57,
							},
							File:   "influxdb.flux",
							Source: "B: Timeable",
							Start: ast.Position{
								Column: 5,
								Line:   57,
							},
						},
					},
					Kinds: []*ast.Identifier{&ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 16,
									Line:   57,
								},
								File:   "influxdb.flux",
								Source: "Timeable",
								Start: ast.Position{
									Column: 8,
									Line:   57,
								},
							},
						},
						Name: "Timeable",
					}},
					Tvar: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 6,
									Line:   57,
								},
								File:   "influxdb.flux",
								Source: "B",
								Start: ast.Position{
									Column: 5,
									Line:   57,
								},
							},
						},
						Name: "B",
					},
				}},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 48,
								Line:   55,
							},
							File:   "influxdb.flux",
							Source: "(\n    ?bucket: string,\n    ?bucketID: string,\n    ?org: string,\n    ?orgID: string,\n    ?host: string,\n    ?token: string,\n    start: A,\n    ?stop: B,\n    ?predicate: (r: {T with _measurement: string, _field: string, _value: S}) => bool,\n) => [{_start: time, _stop: time, _value: int}]",
							Start: ast.Position{
								Column: 23,
								Line:   45,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 20,
									Line:   46,
								},
								File:   "influxdb.flux",
								Source: "?bucket: string",
								Start: ast.Position{
									Column: 5,
									Line:   46,
								},
							},
						},
						Kind: "Optional",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 12,
										Line:   46,
									},
									File:   "influxdb.flux",
									Source: "bucket",
									Start: ast.Position{
										Column: 6,
										Line:   46,
									},
								},
							},
							Name: "bucket",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 20,
										Line:   46,
									},
									File:   "influxdb.flux",
									Source: "string",
									Start: ast.Position{
										Column: 14,
										Line:   46,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 20,
											Line:   46,
										},
										File:   "influxdb.flux",
										Source: "string",
										Start: ast.Position{
											Column: 14,
											Line:   46,
										},
									},
								},
								Name: "string",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 22,
									Line:   47,
								},
								File:   "influxdb.flux",
								Source: "?bucketID: string",
								Start: ast.Position{
									Column: 5,
									Line:   47,
								},
							},
						},
						Kind: "Optional",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 14,
										Line:   47,
									},
									File:   "influxdb.flux",
									Source: "bucketID",
									Start: ast.Position{
										Column: 6,
										Line:   47,
									},
								},
							},
							Name: "bucketID",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 22,
										Line:   47,
									},
									File:   "influxdb.flux",
									Source: "string",
									Start: ast.Position{
										Column: 16,
										Line:   47,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 22,
											Line:   47,
										},
										File:   "influxdb.flux",
										Source: "string",
										Start: ast.Position{
											Column: 16,
											Line:   47,
										},
									},
								},
								Name: "string",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 17,
									Line:   48,
								},
								File:   "influxdb.flux",
								Source: "?org: string",
								Start: ast.Position{
									Column: 5,
									Line:   48,
								},
							},
						},
						Kind: "Optional",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 9,
										Line:   48,
									},
									File:   "influxdb.flux",
									Source: "org",
									Start: ast.Position{
										Column: 6,
										Line:   48,
									},
								},
							},
							Name: "org",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 17,
										Line:   48,
									},
									File:   "influxdb.flux",
									Source: "string",
									Start: ast.Position{
										Column: 11,
										Line:   48,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 17,
											Line:   48,
										},
										File:   "influxdb.flux",
										Source: "string",
										Start: ast.Position{
											Column: 11,
											Line:   48,
										},
									},
								},
								Name: "string",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 19,
									Line:   49,
								},
								File:   "influxdb.flux",
								Source: "?orgID: string",
								Start: ast.Position{
									Column: 5,
									Line:   49,
								},
							},
						},
						Kind: "Optional",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 11,
										Line:   49,
									},
									File:   "influxdb.flux",
									Source: "orgID",
									Start: ast.Position{
										Column: 6,
										Line:   49,
									},
								},
							},
							Name: "orgID",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 19,
										Line:   49,
									},
									File:   "influxdb.flux",
									Source: "string",
									Start: ast.Position{
										Column: 13,
										Line:   49,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 19,
											Line:   49,
										},
										File:   "influxdb.flux",
										Source: "string",
										Start: ast.Position{
											Column: 13,
											Line:   49,
										},
									},
								},
								Name: "string",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 18,
									Line:   50,
								},
								File:   "influxdb.flux",
								Source: "?host: string",
								Start: ast.Position{
									Column: 5,
									Line:   50,
								},
							},
						},
						Kind: "Optional",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 10,
										Line:   50,
									},
									File:   "influxdb.flux",
									Source: "host",
									Start: ast.Position{
										Column: 6,
										Line:   50,
									},
								},
							},
							Name: "host",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 18,
										Line:   50,
									},
									File:   "influxdb.flux",
									Source: "string",
									Start: ast.Position{
										Column: 12,
										Line:   50,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 18,
											Line:   50,
										},
										File:   "influxdb.flux",
										Source: "string",
										Start: ast.Position{
											Column: 12,
											Line:   50,
										},
									},
								},
								Name: "string",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 19,
									Line:   51,
								},
								File:   "influxdb.flux",
								Source: "?token: string",
								Start: ast.Position{
									Column: 5,
									Line:   51,
								},
							},
						},
						Kind: "Optional",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 11,
										Line:   51,
									},
									File:   "influxdb.flux",
									Source: "token",
									Start: ast.Position{
										Column: 6,
										Line:   51,
									},
								},
							},
							Name: "token",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 19,
										Line:   51,
									},
									File:   "influxdb.flux",
									Source: "string",
									Start: ast.Position{
										Column: 13,
										Line:   51,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 19,
											Line:   51,
										},
										File:   "influxdb.flux",
										Source: "string",
										Start: ast.Position{
											Column: 13,
											Line:   51,
										},
									},
								},
								Name: "string",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 13,
									Line:   52,
								},
								File:   "influxdb.flux",
								Source: "start: A",
								Start: ast.Position{
									Column: 5,
									Line:   52,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 10,
										Line:   52,
									},
									File:   "influxdb.flux",
									Source: "start",
									Start: ast.Position{
										Column: 5,
										Line:   52,
									},
								},
							},
							Name: "start",
						},
						Ty: &ast.TvarType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 13,
										Line:   52,
									},
									File:   "influxdb.flux",
									Source: "A",
									Start: ast.Position{
										Column: 12,
										Line:   52,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 13,
											Line:   52,
										},
										File:   "influxdb.flux",
										Source: "A",
										Start: ast.Position{
											Column: 12,
											Line:   52,
										},
									},
								},
								Name: "A",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 13,
									Line:   53,
								},
								File:   "influxdb.flux",
								Source: "?stop: B",
								Start: ast.Position{
									Column: 5,
									Line:   53,
								},
							},
						},
						Kind: "Optional",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 10,
										Line:   53,
									},
									File:   "influxdb.flux",
									Source: "stop",
									Start: ast.Position{
										Column: 6,
										Line:   53,
									},
								},
							},
							Name: "stop",
						},
						Ty: &ast.TvarType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 13,
										Line:   53,
									},
									File:   "influxdb.flux",
									Source: "B",
									Start: ast.Position{
										Column: 12,
										Line:   53,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 13,
											Line:   53,
										},
										File:   "influxdb.flux",
										Source: "B",
										Start: ast.Position{
											Column: 12,
											Line:   53,
										},
									},
								},
								Name: "B",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 86,
									Line:   54,
								},
								File:   "influxdb.flux",
								Source: "?predicate: (r: {T with _measurement: string, _field: string, _value: S}) => bool",
								Start: ast.Position{
									Column: 5,
									Line:   54,
								},
							},
						},
						Kind: "Optional",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 15,
										Line:   54,
									},
									File:   "influxdb.flux",
									Source: "predicate",
									Start: ast.Position{
										Column: 6,
										Line:   54,
									},
								},
							},
							Name: "predicate",
						},
						Ty: &ast.FunctionType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 86,
										Line:   54,
									},
									File:   "influxdb.flux",
									Source: "(r: {T with _measurement: string, _field: string, _value: S}) => bool",
									Start: ast.Position{
										Column: 17,
										Line:   54,
									},
								},
							},
							Parameters: []*ast.ParameterType{&ast.ParameterType{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 77,
											Line:   54,
										},
										File:   "influxdb.flux",
										Source: "r: {T with _measurement: string, _field: string, _value: S}",
										Start: ast.Position{
											Column: 18,
											Line:   54,
										},
									},
								},
								Kind: "Required",
								Name: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 19,
												Line:   54,
											},
											File:   "influxdb.flux",
											Source: "r",
											Start: ast.Position{
												Column: 18,
												Line:   54,
											},
										},
									},
									Name: "r",
								},
								Ty: &ast.RecordType{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 77,
												Line:   54,
											},
											File:   "influxdb.flux",
											Source: "{T with _measurement: string, _field: string, _value: S}",
											Start: ast.Position{
												Column: 21,
												Line:   54,
											},
										},
									},
									Properties: []*ast.PropertyType{&ast.PropertyType{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 49,
													Line:   54,
												},
												File:   "influxdb.flux",
												Source: "_measurement: string",
												Start: ast.Position{
													Column: 29,
													Line:   54,
												},
											},
										},
										Name: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 41,
														Line:   54,
													},
													File:   "influxdb.flux",
													Source: "_measurement",
													Start: ast.Position{
														Column: 29,
														Line:   54,
													},
												},
											},
											Name: "_measurement",
										},
										Ty: &ast.NamedType{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 49,
														Line:   54,
													},
													File:   "influxdb.flux",
													Source: "string",
													Start: ast.Position{
														Column: 43,
														Line:   54,
													},
												},
											},
											ID: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 49,
															Line:   54,
														},
														File:   "influxdb.flux",
														Source: "string",
														Start: ast.Position{
															Column: 43,
															Line:   54,
														},
													},
												},
												Name: "string",
											},
										},
									}, &ast.PropertyType{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 65,
													Line:   54,
												},
												File:   "influxdb.flux",
												Source: "_field: string",
												Start: ast.Position{
													Column: 51,
													Line:   54,
												},
											},
										},
										Name: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 57,
														Line:   54,
													},
													File:   "influxdb.flux",
													Source: "_field",
													Start: ast.Position{
														Column: 51,
														Line:   54,
													},
												},
											},
											Name: "_field",
										},
										Ty: &ast.NamedType{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 65,
														Line:   54,
													},
													File:   "influxdb.flux",
													Source: "string",
													Start: ast.Position{
														Column: 59,
														Line:   54,
													},
												},
											},
											ID: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 65,
															Line:   54,
														},
														File:   "influxdb.flux",
														Source: "string",
														Start: ast.Position{
															Column: 59,
															Line:   54,
														},
													},
												},
												Name: "string",
											},
										},
									}, &ast.PropertyType{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 76,
													Line:   54,
												},
												File:   "influxdb.flux",
												Source: "_value: S",
												Start: ast.Position{
													Column: 67,
													Line:   54,
												},
											},
										},
										Name: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 73,
														Line:   54,
													},
													File:   "influxdb.flux",
													Source: "_value",
													Start: ast.Position{
														Column: 67,
														Line:   54,
													},
												},
											},
											Name: "_value",
										},
										Ty: &ast.TvarType{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 76,
														Line:   54,
													},
													File:   "influxdb.flux",
													Source: "S",
													Start: ast.Position{
														Column: 75,
														Line:   54,
													},
												},
											},
											ID: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 76,
															Line:   54,
														},
														File:   "influxdb.flux",
														Source: "S",
														Start: ast.Position{
															Column: 75,
															Line:   54,
														},
													},
												},
												Name: "S",
											},
										},
									}},
									Tvar: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 23,
													Line:   54,
												},
												File:   "influxdb.flux",
												Source: "T",
												Start: ast.Position{
													Column: 22,
													Line:   54,
												},
											},
										},
										Name: "T",
									},
								},
							}},
							Return: &ast.NamedType{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 86,
											Line:   54,
										},
										File:   "influxdb.flux",
										Source: "bool",
										Start: ast.Position{
											Column: 82,
											Line:   54,
										},
									},
								},
								ID: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 86,
												Line:   54,
											},
											File:   "influxdb.flux",
											Source: "bool",
											Start: ast.Position{
												Column: 82,
												Line:   54,
											},
										},
									},
									Name: "bool",
								},
							},
						},
					}},
					Return: &ast.ArrayType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 48,
									Line:   55,
								},
								File:   "influxdb.flux",
								Source: "[{_start: time, _stop: time, _value: int}]",
								Start: ast.Position{
									Column: 6,
									Line:   55,
								},
							},
						},
						ElementType: &ast.RecordType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 47,
										Line:   55,
									},
									File:   "influxdb.flux",
									Source: "{_start: time, _stop: time, _value: int}",
									Start: ast.Position{
										Column: 7,
										Line:   55,
									},
								},
							},
							Properties: []*ast.PropertyType{&ast.PropertyType{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 20,
											Line:   55,
										},
										File:   "influxdb.flux",
										Source: "_start: time",
										Start: ast.Position{
											Column: 8,
											Line:   55,
										},
									},
								},
								Name: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 14,
												Line:   55,
											},
											File:   "influxdb.flux",
											Source: "_start",
											Start: ast.Position{
												Column: 8,
												Line:   55,
											},
										},
									},
									Name: "_start",
								},
								Ty: &ast.NamedType{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 20,
												Line:   55,
											},
											File:   "influxdb.flux",
											Source: "time",
											Start: ast.Position{
												Column: 16,
												Line:   55,
											},
										},
									},
									ID: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 20,
													Line:   55,
												},
												File:   "influxdb.flux",
												Source: "time",
												Start: ast.Position{
													Column: 16,
													Line:   55,
												},
											},
										},
										Name: "time",
									},
								},
							}, &ast.PropertyType{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 33,
											Line:   55,
										},
										File:   "influxdb.flux",
										Source: "_stop: time",
										Start: ast.Position{
											Column: 22,
											Line:   55,
										},
									},
								},
								Name: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 27,
												Line:   55,
											},
											File:   "influxdb.flux",
											Source: "_stop",
											Start: ast.Position{
												Column: 22,
												Line:   55,
											},
										},
									},
									Name: "_stop",
								},
								Ty: &ast.NamedType{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 33,
												Line:   55,
											},
											File:   "influxdb.flux",
											Source: "time",
											Start: ast.Position{
												Column: 29,
												Line:   55,
											},
										},
									},
									ID: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 33,
													Line:   55,
												},
												File:   "influxdb.flux",
												Source: "time",
												Start: ast.Position{
													Column: 29,
													Line:   55,
												},
											},
										},
										Name: "time",
									},
								},
							}, &ast.PropertyType{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 46,
											Line:   55,
										},
										File:   "influxdb.flux",
										Source: "_value: int",
										Start: ast.Position{
											Column: 35,
											Line:   55,
										},
									},
								},
								Name: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 41,
												Line:   55,
											},
											File:   "influxdb.flux",
											Source: "_value",
											Start: ast.Position{
												Column: 35,
												Line:   55,
											},
										},
									},
									Name: "_value",
								},
								Ty: &ast.NamedType{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 46,
												Line:   55,
											},
											File:   "influxdb.flux",
											Source: "int",
											Start: ast.Position{
												Column: 43,
												Line:   55,
											},
										},
									},
									ID: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 46,
													Line:   55,
												},
												File:   "influxdb.flux",
												Source: "int",
												Start: ast.Position{
													Column: 43,
													Line:   55,
												},
											},
										},
										Name: "int",
									},
								},
							}},
							Tvar: nil,
						},
					},
				},
			},
		}},
		Eof:      nil,
		Imports:  nil,
		Metadata: "parser-type=rust",
		Name:     "influxdb.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   1,
					},
					File:   "influxdb.flux",
					Source: "package influxdb",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   1,
						},
						File:   "influxdb.flux",
						Source: "influxdb",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "influxdb",
			},
		},
	}},
	Package: "influxdb",
	Path:    "influxdata/influxdb",
}
