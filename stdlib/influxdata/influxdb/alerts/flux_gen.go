// DO NOT EDIT: This file is autogenerated via the builtin command.

package alerts

import (
	flux "github.com/influxdata/flux"
	ast "github.com/influxdata/flux/ast"
)

func init() {
	flux.RegisterPackage(pkgAST)
}

var pkgAST = &ast.Package{
	BaseNode: ast.BaseNode{
		Errors: nil,
		Loc:    nil,
	},
	Files: []*ast.File{&ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 59,
					Line:   9,
				},
				File:   "alerts.flux",
				Source: "package alerts\n\nbuiltin check\n\nwrite = (tables=<-) => tables |> to(bucket: \"system\")\n\nfrom = () => from(bucket: \"system\")\n\nlog = (tables=<-) => tables |> to(bucket: \"notifications\")",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 14,
						Line:   3,
					},
					File:   "alerts.flux",
					Source: "builtin check",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 14,
							Line:   3,
						},
						File:   "alerts.flux",
						Source: "check",
						Start: ast.Position{
							Column: 9,
							Line:   3,
						},
					},
				},
				Name: "check",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 54,
						Line:   5,
					},
					File:   "alerts.flux",
					Source: "write = (tables=<-) => tables |> to(bucket: \"system\")",
					Start: ast.Position{
						Column: 1,
						Line:   5,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 6,
							Line:   5,
						},
						File:   "alerts.flux",
						Source: "write",
						Start: ast.Position{
							Column: 1,
							Line:   5,
						},
					},
				},
				Name: "write",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 54,
							Line:   5,
						},
						File:   "alerts.flux",
						Source: "(tables=<-) => tables |> to(bucket: \"system\")",
						Start: ast.Position{
							Column: 9,
							Line:   5,
						},
					},
				},
				Body: &ast.PipeExpression{
					Argument: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 30,
									Line:   5,
								},
								File:   "alerts.flux",
								Source: "tables",
								Start: ast.Position{
									Column: 24,
									Line:   5,
								},
							},
						},
						Name: "tables",
					},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 54,
								Line:   5,
							},
							File:   "alerts.flux",
							Source: "tables |> to(bucket: \"system\")",
							Start: ast.Position{
								Column: 24,
								Line:   5,
							},
						},
					},
					Call: &ast.CallExpression{
						Arguments: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 53,
										Line:   5,
									},
									File:   "alerts.flux",
									Source: "bucket: \"system\"",
									Start: ast.Position{
										Column: 37,
										Line:   5,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 53,
											Line:   5,
										},
										File:   "alerts.flux",
										Source: "bucket: \"system\"",
										Start: ast.Position{
											Column: 37,
											Line:   5,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 43,
												Line:   5,
											},
											File:   "alerts.flux",
											Source: "bucket",
											Start: ast.Position{
												Column: 37,
												Line:   5,
											},
										},
									},
									Name: "bucket",
								},
								Value: &ast.StringLiteral{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 53,
												Line:   5,
											},
											File:   "alerts.flux",
											Source: "\"system\"",
											Start: ast.Position{
												Column: 45,
												Line:   5,
											},
										},
									},
									Value: "system",
								},
							}},
							With: nil,
						}},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 54,
									Line:   5,
								},
								File:   "alerts.flux",
								Source: "to(bucket: \"system\")",
								Start: ast.Position{
									Column: 34,
									Line:   5,
								},
							},
						},
						Callee: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 36,
										Line:   5,
									},
									File:   "alerts.flux",
									Source: "to",
									Start: ast.Position{
										Column: 34,
										Line:   5,
									},
								},
							},
							Name: "to",
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 19,
								Line:   5,
							},
							File:   "alerts.flux",
							Source: "tables=<-",
							Start: ast.Position{
								Column: 10,
								Line:   5,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 16,
									Line:   5,
								},
								File:   "alerts.flux",
								Source: "tables",
								Start: ast.Position{
									Column: 10,
									Line:   5,
								},
							},
						},
						Name: "tables",
					},
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 19,
								Line:   5,
							},
							File:   "alerts.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 17,
								Line:   5,
							},
						},
					}},
				}},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 36,
						Line:   7,
					},
					File:   "alerts.flux",
					Source: "from = () => from(bucket: \"system\")",
					Start: ast.Position{
						Column: 1,
						Line:   7,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 5,
							Line:   7,
						},
						File:   "alerts.flux",
						Source: "from",
						Start: ast.Position{
							Column: 1,
							Line:   7,
						},
					},
				},
				Name: "from",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 36,
							Line:   7,
						},
						File:   "alerts.flux",
						Source: "() => from(bucket: \"system\")",
						Start: ast.Position{
							Column: 8,
							Line:   7,
						},
					},
				},
				Body: &ast.CallExpression{
					Arguments: []ast.Expression{&ast.ObjectExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 35,
									Line:   7,
								},
								File:   "alerts.flux",
								Source: "bucket: \"system\"",
								Start: ast.Position{
									Column: 19,
									Line:   7,
								},
							},
						},
						Properties: []*ast.Property{&ast.Property{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 35,
										Line:   7,
									},
									File:   "alerts.flux",
									Source: "bucket: \"system\"",
									Start: ast.Position{
										Column: 19,
										Line:   7,
									},
								},
							},
							Key: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 25,
											Line:   7,
										},
										File:   "alerts.flux",
										Source: "bucket",
										Start: ast.Position{
											Column: 19,
											Line:   7,
										},
									},
								},
								Name: "bucket",
							},
							Value: &ast.StringLiteral{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 35,
											Line:   7,
										},
										File:   "alerts.flux",
										Source: "\"system\"",
										Start: ast.Position{
											Column: 27,
											Line:   7,
										},
									},
								},
								Value: "system",
							},
						}},
						With: nil,
					}},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 36,
								Line:   7,
							},
							File:   "alerts.flux",
							Source: "from(bucket: \"system\")",
							Start: ast.Position{
								Column: 14,
								Line:   7,
							},
						},
					},
					Callee: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 18,
									Line:   7,
								},
								File:   "alerts.flux",
								Source: "from",
								Start: ast.Position{
									Column: 14,
									Line:   7,
								},
							},
						},
						Name: "from",
					},
				},
				Params: nil,
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 59,
						Line:   9,
					},
					File:   "alerts.flux",
					Source: "log = (tables=<-) => tables |> to(bucket: \"notifications\")",
					Start: ast.Position{
						Column: 1,
						Line:   9,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 4,
							Line:   9,
						},
						File:   "alerts.flux",
						Source: "log",
						Start: ast.Position{
							Column: 1,
							Line:   9,
						},
					},
				},
				Name: "log",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 59,
							Line:   9,
						},
						File:   "alerts.flux",
						Source: "(tables=<-) => tables |> to(bucket: \"notifications\")",
						Start: ast.Position{
							Column: 7,
							Line:   9,
						},
					},
				},
				Body: &ast.PipeExpression{
					Argument: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 28,
									Line:   9,
								},
								File:   "alerts.flux",
								Source: "tables",
								Start: ast.Position{
									Column: 22,
									Line:   9,
								},
							},
						},
						Name: "tables",
					},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 59,
								Line:   9,
							},
							File:   "alerts.flux",
							Source: "tables |> to(bucket: \"notifications\")",
							Start: ast.Position{
								Column: 22,
								Line:   9,
							},
						},
					},
					Call: &ast.CallExpression{
						Arguments: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 58,
										Line:   9,
									},
									File:   "alerts.flux",
									Source: "bucket: \"notifications\"",
									Start: ast.Position{
										Column: 35,
										Line:   9,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 58,
											Line:   9,
										},
										File:   "alerts.flux",
										Source: "bucket: \"notifications\"",
										Start: ast.Position{
											Column: 35,
											Line:   9,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 41,
												Line:   9,
											},
											File:   "alerts.flux",
											Source: "bucket",
											Start: ast.Position{
												Column: 35,
												Line:   9,
											},
										},
									},
									Name: "bucket",
								},
								Value: &ast.StringLiteral{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 58,
												Line:   9,
											},
											File:   "alerts.flux",
											Source: "\"notifications\"",
											Start: ast.Position{
												Column: 43,
												Line:   9,
											},
										},
									},
									Value: "notifications",
								},
							}},
							With: nil,
						}},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 59,
									Line:   9,
								},
								File:   "alerts.flux",
								Source: "to(bucket: \"notifications\")",
								Start: ast.Position{
									Column: 32,
									Line:   9,
								},
							},
						},
						Callee: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 34,
										Line:   9,
									},
									File:   "alerts.flux",
									Source: "to",
									Start: ast.Position{
										Column: 32,
										Line:   9,
									},
								},
							},
							Name: "to",
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 17,
								Line:   9,
							},
							File:   "alerts.flux",
							Source: "tables=<-",
							Start: ast.Position{
								Column: 8,
								Line:   9,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 14,
									Line:   9,
								},
								File:   "alerts.flux",
								Source: "tables",
								Start: ast.Position{
									Column: 8,
									Line:   9,
								},
							},
						},
						Name: "tables",
					},
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 17,
								Line:   9,
							},
							File:   "alerts.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 15,
								Line:   9,
							},
						},
					}},
				}},
			},
		}},
		Imports: nil,
		Name:    "alerts.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 15,
						Line:   1,
					},
					File:   "alerts.flux",
					Source: "package alerts",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 15,
							Line:   1,
						},
						File:   "alerts.flux",
						Source: "alerts",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "alerts",
			},
		},
	}},
	Package: "alerts",
	Path:    "influxdata/influxdb/alerts",
}
