// DO NOT EDIT: This file is autogenerated via the builtin command.

package tasks

import (
	ast "github.com/influxdata/flux/ast"
	parser "github.com/influxdata/flux/internal/parser"
)

var FluxTestPackages = []*ast.Package{&ast.Package{
	BaseNode: ast.BaseNode{
		Errors: nil,
		Loc:    nil,
	},
	Files: []*ast.File{&ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 3,
					Line:   26,
				},
				File:   "last_success_duration_no_option_test.flux",
				Source: "package tasks_test\n\nimport \"testing\"\nimport \"experimental/array\"\nimport \"influxdata/influxdb/tasks\"\n\noption now = () => 2020-09-08T09:00:00Z\n\noutData = \"\n#datatype,string,long,dateTime:RFC3339\n#group,false,false,false\n#default,_result,,\n,result,table,_time\n,,0,2020-09-07T09:00:00Z\n\"\n\nt_last_success = () =>\n\tarray.from(rows: [\n\t\t{_time: tasks.lastSuccess(orTime: -1d)},\n\t])\n\ntest _last_success = () => ({\n\tinput: t_last_success(),\n\twant: testing.loadMem(csv: outData),\n\tfn: (tables=<-) => tables,\n})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 40,
							Line:   7,
						},
						File:   "last_success_duration_no_option_test.flux",
						Source: "now = () => 2020-09-08T09:00:00Z",
						Start: ast.Position{
							Column: 8,
							Line:   7,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   7,
							},
							File:   "last_success_duration_no_option_test.flux",
							Source: "now",
							Start: ast.Position{
								Column: 8,
								Line:   7,
							},
						},
					},
					Name: "now",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 40,
								Line:   7,
							},
							File:   "last_success_duration_no_option_test.flux",
							Source: "() => 2020-09-08T09:00:00Z",
							Start: ast.Position{
								Column: 14,
								Line:   7,
							},
						},
					},
					Body: &ast.DateTimeLiteral{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 40,
									Line:   7,
								},
								File:   "last_success_duration_no_option_test.flux",
								Source: "2020-09-08T09:00:00Z",
								Start: ast.Position{
									Column: 20,
									Line:   7,
								},
							},
						},
						Value: parser.MustParseTime("2020-09-08T09:00:00Z"),
					},
					Params: []*ast.Property{},
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 40,
						Line:   7,
					},
					File:   "last_success_duration_no_option_test.flux",
					Source: "option now = () => 2020-09-08T09:00:00Z",
					Start: ast.Position{
						Column: 1,
						Line:   7,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   15,
					},
					File:   "last_success_duration_no_option_test.flux",
					Source: "outData = \"\n#datatype,string,long,dateTime:RFC3339\n#group,false,false,false\n#default,_result,,\n,result,table,_time\n,,0,2020-09-07T09:00:00Z\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   9,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 8,
							Line:   9,
						},
						File:   "last_success_duration_no_option_test.flux",
						Source: "outData",
						Start: ast.Position{
							Column: 1,
							Line:   9,
						},
					},
				},
				Name: "outData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   15,
						},
						File:   "last_success_duration_no_option_test.flux",
						Source: "\"\n#datatype,string,long,dateTime:RFC3339\n#group,false,false,false\n#default,_result,,\n,result,table,_time\n,,0,2020-09-07T09:00:00Z\n\"",
						Start: ast.Position{
							Column: 11,
							Line:   9,
						},
					},
				},
				Value: "\n#datatype,string,long,dateTime:RFC3339\n#group,false,false,false\n#default,_result,,\n,result,table,_time\n,,0,2020-09-07T09:00:00Z\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 4,
						Line:   20,
					},
					File:   "last_success_duration_no_option_test.flux",
					Source: "t_last_success = () =>\n\tarray.from(rows: [\n\t\t{_time: tasks.lastSuccess(orTime: -1d)},\n\t])",
					Start: ast.Position{
						Column: 1,
						Line:   17,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 15,
							Line:   17,
						},
						File:   "last_success_duration_no_option_test.flux",
						Source: "t_last_success",
						Start: ast.Position{
							Column: 1,
							Line:   17,
						},
					},
				},
				Name: "t_last_success",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 4,
							Line:   20,
						},
						File:   "last_success_duration_no_option_test.flux",
						Source: "() =>\n\tarray.from(rows: [\n\t\t{_time: tasks.lastSuccess(orTime: -1d)},\n\t])",
						Start: ast.Position{
							Column: 18,
							Line:   17,
						},
					},
				},
				Body: &ast.CallExpression{
					Arguments: []ast.Expression{&ast.ObjectExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 3,
									Line:   20,
								},
								File:   "last_success_duration_no_option_test.flux",
								Source: "rows: [\n\t\t{_time: tasks.lastSuccess(orTime: -1d)},\n\t]",
								Start: ast.Position{
									Column: 13,
									Line:   18,
								},
							},
						},
						Properties: []*ast.Property{&ast.Property{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 3,
										Line:   20,
									},
									File:   "last_success_duration_no_option_test.flux",
									Source: "rows: [\n\t\t{_time: tasks.lastSuccess(orTime: -1d)},\n\t]",
									Start: ast.Position{
										Column: 13,
										Line:   18,
									},
								},
							},
							Key: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 17,
											Line:   18,
										},
										File:   "last_success_duration_no_option_test.flux",
										Source: "rows",
										Start: ast.Position{
											Column: 13,
											Line:   18,
										},
									},
								},
								Name: "rows",
							},
							Value: &ast.ArrayExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 3,
											Line:   20,
										},
										File:   "last_success_duration_no_option_test.flux",
										Source: "[\n\t\t{_time: tasks.lastSuccess(orTime: -1d)},\n\t]",
										Start: ast.Position{
											Column: 19,
											Line:   18,
										},
									},
								},
								Elements: []ast.Expression{&ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 42,
												Line:   19,
											},
											File:   "last_success_duration_no_option_test.flux",
											Source: "{_time: tasks.lastSuccess(orTime: -1d)}",
											Start: ast.Position{
												Column: 3,
												Line:   19,
											},
										},
									},
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 41,
													Line:   19,
												},
												File:   "last_success_duration_no_option_test.flux",
												Source: "_time: tasks.lastSuccess(orTime: -1d)",
												Start: ast.Position{
													Column: 4,
													Line:   19,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 9,
														Line:   19,
													},
													File:   "last_success_duration_no_option_test.flux",
													Source: "_time",
													Start: ast.Position{
														Column: 4,
														Line:   19,
													},
												},
											},
											Name: "_time",
										},
										Value: &ast.CallExpression{
											Arguments: []ast.Expression{&ast.ObjectExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 40,
															Line:   19,
														},
														File:   "last_success_duration_no_option_test.flux",
														Source: "orTime: -1d",
														Start: ast.Position{
															Column: 29,
															Line:   19,
														},
													},
												},
												Properties: []*ast.Property{&ast.Property{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 40,
																Line:   19,
															},
															File:   "last_success_duration_no_option_test.flux",
															Source: "orTime: -1d",
															Start: ast.Position{
																Column: 29,
																Line:   19,
															},
														},
													},
													Key: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 35,
																	Line:   19,
																},
																File:   "last_success_duration_no_option_test.flux",
																Source: "orTime",
																Start: ast.Position{
																	Column: 29,
																	Line:   19,
																},
															},
														},
														Name: "orTime",
													},
													Value: &ast.UnaryExpression{
														Argument: &ast.DurationLiteral{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 40,
																		Line:   19,
																	},
																	File:   "last_success_duration_no_option_test.flux",
																	Source: "1d",
																	Start: ast.Position{
																		Column: 38,
																		Line:   19,
																	},
																},
															},
															Values: []ast.Duration{ast.Duration{
																Magnitude: int64(1),
																Unit:      "d",
															}},
														},
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 40,
																	Line:   19,
																},
																File:   "last_success_duration_no_option_test.flux",
																Source: "-1d",
																Start: ast.Position{
																	Column: 37,
																	Line:   19,
																},
															},
														},
														Operator: 6,
													},
												}},
												With: nil,
											}},
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 41,
														Line:   19,
													},
													File:   "last_success_duration_no_option_test.flux",
													Source: "tasks.lastSuccess(orTime: -1d)",
													Start: ast.Position{
														Column: 11,
														Line:   19,
													},
												},
											},
											Callee: &ast.MemberExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 28,
															Line:   19,
														},
														File:   "last_success_duration_no_option_test.flux",
														Source: "tasks.lastSuccess",
														Start: ast.Position{
															Column: 11,
															Line:   19,
														},
													},
												},
												Object: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 16,
																Line:   19,
															},
															File:   "last_success_duration_no_option_test.flux",
															Source: "tasks",
															Start: ast.Position{
																Column: 11,
																Line:   19,
															},
														},
													},
													Name: "tasks",
												},
												Property: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 28,
																Line:   19,
															},
															File:   "last_success_duration_no_option_test.flux",
															Source: "lastSuccess",
															Start: ast.Position{
																Column: 17,
																Line:   19,
															},
														},
													},
													Name: "lastSuccess",
												},
											},
										},
									}},
									With: nil,
								}},
							},
						}},
						With: nil,
					}},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 4,
								Line:   20,
							},
							File:   "last_success_duration_no_option_test.flux",
							Source: "array.from(rows: [\n\t\t{_time: tasks.lastSuccess(orTime: -1d)},\n\t])",
							Start: ast.Position{
								Column: 2,
								Line:   18,
							},
						},
					},
					Callee: &ast.MemberExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 12,
									Line:   18,
								},
								File:   "last_success_duration_no_option_test.flux",
								Source: "array.from",
								Start: ast.Position{
									Column: 2,
									Line:   18,
								},
							},
						},
						Object: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 7,
										Line:   18,
									},
									File:   "last_success_duration_no_option_test.flux",
									Source: "array",
									Start: ast.Position{
										Column: 2,
										Line:   18,
									},
								},
							},
							Name: "array",
						},
						Property: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 12,
										Line:   18,
									},
									File:   "last_success_duration_no_option_test.flux",
									Source: "from",
									Start: ast.Position{
										Column: 8,
										Line:   18,
									},
								},
							},
							Name: "from",
						},
					},
				},
				Params: []*ast.Property{},
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 3,
							Line:   26,
						},
						File:   "last_success_duration_no_option_test.flux",
						Source: "_last_success = () => ({\n\tinput: t_last_success(),\n\twant: testing.loadMem(csv: outData),\n\tfn: (tables=<-) => tables,\n})",
						Start: ast.Position{
							Column: 6,
							Line:   22,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 19,
								Line:   22,
							},
							File:   "last_success_duration_no_option_test.flux",
							Source: "_last_success",
							Start: ast.Position{
								Column: 6,
								Line:   22,
							},
						},
					},
					Name: "_last_success",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 3,
								Line:   26,
							},
							File:   "last_success_duration_no_option_test.flux",
							Source: "() => ({\n\tinput: t_last_success(),\n\twant: testing.loadMem(csv: outData),\n\tfn: (tables=<-) => tables,\n})",
							Start: ast.Position{
								Column: 22,
								Line:   22,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 3,
									Line:   26,
								},
								File:   "last_success_duration_no_option_test.flux",
								Source: "({\n\tinput: t_last_success(),\n\twant: testing.loadMem(csv: outData),\n\tfn: (tables=<-) => tables,\n})",
								Start: ast.Position{
									Column: 28,
									Line:   22,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 2,
										Line:   26,
									},
									File:   "last_success_duration_no_option_test.flux",
									Source: "{\n\tinput: t_last_success(),\n\twant: testing.loadMem(csv: outData),\n\tfn: (tables=<-) => tables,\n}",
									Start: ast.Position{
										Column: 29,
										Line:   22,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 25,
											Line:   23,
										},
										File:   "last_success_duration_no_option_test.flux",
										Source: "input: t_last_success()",
										Start: ast.Position{
											Column: 2,
											Line:   23,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 7,
												Line:   23,
											},
											File:   "last_success_duration_no_option_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 2,
												Line:   23,
											},
										},
									},
									Name: "input",
								},
								Value: &ast.CallExpression{
									Arguments: nil,
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 25,
												Line:   23,
											},
											File:   "last_success_duration_no_option_test.flux",
											Source: "t_last_success()",
											Start: ast.Position{
												Column: 9,
												Line:   23,
											},
										},
									},
									Callee: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 23,
													Line:   23,
												},
												File:   "last_success_duration_no_option_test.flux",
												Source: "t_last_success",
												Start: ast.Position{
													Column: 9,
													Line:   23,
												},
											},
										},
										Name: "t_last_success",
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 37,
											Line:   24,
										},
										File:   "last_success_duration_no_option_test.flux",
										Source: "want: testing.loadMem(csv: outData)",
										Start: ast.Position{
											Column: 2,
											Line:   24,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 6,
												Line:   24,
											},
											File:   "last_success_duration_no_option_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 2,
												Line:   24,
											},
										},
									},
									Name: "want",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 36,
													Line:   24,
												},
												File:   "last_success_duration_no_option_test.flux",
												Source: "csv: outData",
												Start: ast.Position{
													Column: 24,
													Line:   24,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 36,
														Line:   24,
													},
													File:   "last_success_duration_no_option_test.flux",
													Source: "csv: outData",
													Start: ast.Position{
														Column: 24,
														Line:   24,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 27,
															Line:   24,
														},
														File:   "last_success_duration_no_option_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 24,
															Line:   24,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 36,
															Line:   24,
														},
														File:   "last_success_duration_no_option_test.flux",
														Source: "outData",
														Start: ast.Position{
															Column: 29,
															Line:   24,
														},
													},
												},
												Name: "outData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 37,
												Line:   24,
											},
											File:   "last_success_duration_no_option_test.flux",
											Source: "testing.loadMem(csv: outData)",
											Start: ast.Position{
												Column: 8,
												Line:   24,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 23,
													Line:   24,
												},
												File:   "last_success_duration_no_option_test.flux",
												Source: "testing.loadMem",
												Start: ast.Position{
													Column: 8,
													Line:   24,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 15,
														Line:   24,
													},
													File:   "last_success_duration_no_option_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 8,
														Line:   24,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 23,
														Line:   24,
													},
													File:   "last_success_duration_no_option_test.flux",
													Source: "loadMem",
													Start: ast.Position{
														Column: 16,
														Line:   24,
													},
												},
											},
											Name: "loadMem",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 27,
											Line:   25,
										},
										File:   "last_success_duration_no_option_test.flux",
										Source: "fn: (tables=<-) => tables",
										Start: ast.Position{
											Column: 2,
											Line:   25,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 4,
												Line:   25,
											},
											File:   "last_success_duration_no_option_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 2,
												Line:   25,
											},
										},
									},
									Name: "fn",
								},
								Value: &ast.FunctionExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 27,
												Line:   25,
											},
											File:   "last_success_duration_no_option_test.flux",
											Source: "(tables=<-) => tables",
											Start: ast.Position{
												Column: 6,
												Line:   25,
											},
										},
									},
									Body: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 27,
													Line:   25,
												},
												File:   "last_success_duration_no_option_test.flux",
												Source: "tables",
												Start: ast.Position{
													Column: 21,
													Line:   25,
												},
											},
										},
										Name: "tables",
									},
									Params: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 16,
													Line:   25,
												},
												File:   "last_success_duration_no_option_test.flux",
												Source: "tables=<-",
												Start: ast.Position{
													Column: 7,
													Line:   25,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 13,
														Line:   25,
													},
													File:   "last_success_duration_no_option_test.flux",
													Source: "tables",
													Start: ast.Position{
														Column: 7,
														Line:   25,
													},
												},
											},
											Name: "tables",
										},
										Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 16,
													Line:   25,
												},
												File:   "last_success_duration_no_option_test.flux",
												Source: "<-",
												Start: ast.Position{
													Column: 14,
													Line:   25,
												},
											},
										}},
									}},
								},
							}},
							With: nil,
						},
					},
					Params: []*ast.Property{},
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 3,
						Line:   26,
					},
					File:   "last_success_duration_no_option_test.flux",
					Source: "test _last_success = () => ({\n\tinput: t_last_success(),\n\twant: testing.loadMem(csv: outData),\n\tfn: (tables=<-) => tables,\n})",
					Start: ast.Position{
						Column: 1,
						Line:   22,
					},
				},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   3,
					},
					File:   "last_success_duration_no_option_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   3,
						},
						File:   "last_success_duration_no_option_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "testing",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 28,
						Line:   4,
					},
					File:   "last_success_duration_no_option_test.flux",
					Source: "import \"experimental/array\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 28,
							Line:   4,
						},
						File:   "last_success_duration_no_option_test.flux",
						Source: "\"experimental/array\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "experimental/array",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 35,
						Line:   5,
					},
					File:   "last_success_duration_no_option_test.flux",
					Source: "import \"influxdata/influxdb/tasks\"",
					Start: ast.Position{
						Column: 1,
						Line:   5,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 35,
							Line:   5,
						},
						File:   "last_success_duration_no_option_test.flux",
						Source: "\"influxdata/influxdb/tasks\"",
						Start: ast.Position{
							Column: 8,
							Line:   5,
						},
					},
				},
				Value: "influxdata/influxdb/tasks",
			},
		}},
		Metadata: "parser-type=rust",
		Name:     "last_success_duration_no_option_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 19,
						Line:   1,
					},
					File:   "last_success_duration_no_option_test.flux",
					Source: "package tasks_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 19,
							Line:   1,
						},
						File:   "last_success_duration_no_option_test.flux",
						Source: "tasks_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "tasks_test",
			},
		},
	}, &ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 3,
					Line:   27,
				},
				File:   "last_success_duration_option_test.flux",
				Source: "package tasks_test\n\nimport \"testing\"\nimport \"experimental/array\"\nimport \"influxdata/influxdb/tasks\"\n\noption now = () => 2020-09-08T09:00:00Z\noption tasks.lastSuccessTime = 2020-09-08T08:00:00Z\n\noutData = \"\n#datatype,string,long,dateTime:RFC3339\n#group,false,false,false\n#default,_result,,\n,result,table,_time\n,,0,2020-09-08T08:00:00Z\n\"\n\nt_last_success = () =>\n\tarray.from(rows: [\n\t\t{_time: tasks.lastSuccess(orTime: -1d)},\n\t])\n\ntest _last_success = () => ({\n\tinput: t_last_success(),\n\twant: testing.loadMem(csv: outData),\n\tfn: (tables=<-) => tables,\n})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 40,
							Line:   7,
						},
						File:   "last_success_duration_option_test.flux",
						Source: "now = () => 2020-09-08T09:00:00Z",
						Start: ast.Position{
							Column: 8,
							Line:   7,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   7,
							},
							File:   "last_success_duration_option_test.flux",
							Source: "now",
							Start: ast.Position{
								Column: 8,
								Line:   7,
							},
						},
					},
					Name: "now",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 40,
								Line:   7,
							},
							File:   "last_success_duration_option_test.flux",
							Source: "() => 2020-09-08T09:00:00Z",
							Start: ast.Position{
								Column: 14,
								Line:   7,
							},
						},
					},
					Body: &ast.DateTimeLiteral{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 40,
									Line:   7,
								},
								File:   "last_success_duration_option_test.flux",
								Source: "2020-09-08T09:00:00Z",
								Start: ast.Position{
									Column: 20,
									Line:   7,
								},
							},
						},
						Value: parser.MustParseTime("2020-09-08T09:00:00Z"),
					},
					Params: []*ast.Property{},
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 40,
						Line:   7,
					},
					File:   "last_success_duration_option_test.flux",
					Source: "option now = () => 2020-09-08T09:00:00Z",
					Start: ast.Position{
						Column: 1,
						Line:   7,
					},
				},
			},
		}, &ast.OptionStatement{
			Assignment: &ast.MemberAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 52,
							Line:   8,
						},
						File:   "last_success_duration_option_test.flux",
						Source: "tasks.lastSuccessTime = 2020-09-08T08:00:00Z",
						Start: ast.Position{
							Column: 8,
							Line:   8,
						},
					},
				},
				Init: &ast.DateTimeLiteral{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 52,
								Line:   8,
							},
							File:   "last_success_duration_option_test.flux",
							Source: "2020-09-08T08:00:00Z",
							Start: ast.Position{
								Column: 32,
								Line:   8,
							},
						},
					},
					Value: parser.MustParseTime("2020-09-08T08:00:00Z"),
				},
				Member: &ast.MemberExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 29,
								Line:   8,
							},
							File:   "last_success_duration_option_test.flux",
							Source: "tasks.lastSuccessTime",
							Start: ast.Position{
								Column: 8,
								Line:   8,
							},
						},
					},
					Object: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 13,
									Line:   8,
								},
								File:   "last_success_duration_option_test.flux",
								Source: "tasks",
								Start: ast.Position{
									Column: 8,
									Line:   8,
								},
							},
						},
						Name: "tasks",
					},
					Property: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 29,
									Line:   8,
								},
								File:   "last_success_duration_option_test.flux",
								Source: "lastSuccessTime",
								Start: ast.Position{
									Column: 14,
									Line:   8,
								},
							},
						},
						Name: "lastSuccessTime",
					},
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 52,
						Line:   8,
					},
					File:   "last_success_duration_option_test.flux",
					Source: "option tasks.lastSuccessTime = 2020-09-08T08:00:00Z",
					Start: ast.Position{
						Column: 1,
						Line:   8,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   16,
					},
					File:   "last_success_duration_option_test.flux",
					Source: "outData = \"\n#datatype,string,long,dateTime:RFC3339\n#group,false,false,false\n#default,_result,,\n,result,table,_time\n,,0,2020-09-08T08:00:00Z\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   10,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 8,
							Line:   10,
						},
						File:   "last_success_duration_option_test.flux",
						Source: "outData",
						Start: ast.Position{
							Column: 1,
							Line:   10,
						},
					},
				},
				Name: "outData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   16,
						},
						File:   "last_success_duration_option_test.flux",
						Source: "\"\n#datatype,string,long,dateTime:RFC3339\n#group,false,false,false\n#default,_result,,\n,result,table,_time\n,,0,2020-09-08T08:00:00Z\n\"",
						Start: ast.Position{
							Column: 11,
							Line:   10,
						},
					},
				},
				Value: "\n#datatype,string,long,dateTime:RFC3339\n#group,false,false,false\n#default,_result,,\n,result,table,_time\n,,0,2020-09-08T08:00:00Z\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 4,
						Line:   21,
					},
					File:   "last_success_duration_option_test.flux",
					Source: "t_last_success = () =>\n\tarray.from(rows: [\n\t\t{_time: tasks.lastSuccess(orTime: -1d)},\n\t])",
					Start: ast.Position{
						Column: 1,
						Line:   18,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 15,
							Line:   18,
						},
						File:   "last_success_duration_option_test.flux",
						Source: "t_last_success",
						Start: ast.Position{
							Column: 1,
							Line:   18,
						},
					},
				},
				Name: "t_last_success",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 4,
							Line:   21,
						},
						File:   "last_success_duration_option_test.flux",
						Source: "() =>\n\tarray.from(rows: [\n\t\t{_time: tasks.lastSuccess(orTime: -1d)},\n\t])",
						Start: ast.Position{
							Column: 18,
							Line:   18,
						},
					},
				},
				Body: &ast.CallExpression{
					Arguments: []ast.Expression{&ast.ObjectExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 3,
									Line:   21,
								},
								File:   "last_success_duration_option_test.flux",
								Source: "rows: [\n\t\t{_time: tasks.lastSuccess(orTime: -1d)},\n\t]",
								Start: ast.Position{
									Column: 13,
									Line:   19,
								},
							},
						},
						Properties: []*ast.Property{&ast.Property{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 3,
										Line:   21,
									},
									File:   "last_success_duration_option_test.flux",
									Source: "rows: [\n\t\t{_time: tasks.lastSuccess(orTime: -1d)},\n\t]",
									Start: ast.Position{
										Column: 13,
										Line:   19,
									},
								},
							},
							Key: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 17,
											Line:   19,
										},
										File:   "last_success_duration_option_test.flux",
										Source: "rows",
										Start: ast.Position{
											Column: 13,
											Line:   19,
										},
									},
								},
								Name: "rows",
							},
							Value: &ast.ArrayExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 3,
											Line:   21,
										},
										File:   "last_success_duration_option_test.flux",
										Source: "[\n\t\t{_time: tasks.lastSuccess(orTime: -1d)},\n\t]",
										Start: ast.Position{
											Column: 19,
											Line:   19,
										},
									},
								},
								Elements: []ast.Expression{&ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 42,
												Line:   20,
											},
											File:   "last_success_duration_option_test.flux",
											Source: "{_time: tasks.lastSuccess(orTime: -1d)}",
											Start: ast.Position{
												Column: 3,
												Line:   20,
											},
										},
									},
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 41,
													Line:   20,
												},
												File:   "last_success_duration_option_test.flux",
												Source: "_time: tasks.lastSuccess(orTime: -1d)",
												Start: ast.Position{
													Column: 4,
													Line:   20,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 9,
														Line:   20,
													},
													File:   "last_success_duration_option_test.flux",
													Source: "_time",
													Start: ast.Position{
														Column: 4,
														Line:   20,
													},
												},
											},
											Name: "_time",
										},
										Value: &ast.CallExpression{
											Arguments: []ast.Expression{&ast.ObjectExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 40,
															Line:   20,
														},
														File:   "last_success_duration_option_test.flux",
														Source: "orTime: -1d",
														Start: ast.Position{
															Column: 29,
															Line:   20,
														},
													},
												},
												Properties: []*ast.Property{&ast.Property{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 40,
																Line:   20,
															},
															File:   "last_success_duration_option_test.flux",
															Source: "orTime: -1d",
															Start: ast.Position{
																Column: 29,
																Line:   20,
															},
														},
													},
													Key: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 35,
																	Line:   20,
																},
																File:   "last_success_duration_option_test.flux",
																Source: "orTime",
																Start: ast.Position{
																	Column: 29,
																	Line:   20,
																},
															},
														},
														Name: "orTime",
													},
													Value: &ast.UnaryExpression{
														Argument: &ast.DurationLiteral{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 40,
																		Line:   20,
																	},
																	File:   "last_success_duration_option_test.flux",
																	Source: "1d",
																	Start: ast.Position{
																		Column: 38,
																		Line:   20,
																	},
																},
															},
															Values: []ast.Duration{ast.Duration{
																Magnitude: int64(1),
																Unit:      "d",
															}},
														},
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 40,
																	Line:   20,
																},
																File:   "last_success_duration_option_test.flux",
																Source: "-1d",
																Start: ast.Position{
																	Column: 37,
																	Line:   20,
																},
															},
														},
														Operator: 6,
													},
												}},
												With: nil,
											}},
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 41,
														Line:   20,
													},
													File:   "last_success_duration_option_test.flux",
													Source: "tasks.lastSuccess(orTime: -1d)",
													Start: ast.Position{
														Column: 11,
														Line:   20,
													},
												},
											},
											Callee: &ast.MemberExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 28,
															Line:   20,
														},
														File:   "last_success_duration_option_test.flux",
														Source: "tasks.lastSuccess",
														Start: ast.Position{
															Column: 11,
															Line:   20,
														},
													},
												},
												Object: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 16,
																Line:   20,
															},
															File:   "last_success_duration_option_test.flux",
															Source: "tasks",
															Start: ast.Position{
																Column: 11,
																Line:   20,
															},
														},
													},
													Name: "tasks",
												},
												Property: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 28,
																Line:   20,
															},
															File:   "last_success_duration_option_test.flux",
															Source: "lastSuccess",
															Start: ast.Position{
																Column: 17,
																Line:   20,
															},
														},
													},
													Name: "lastSuccess",
												},
											},
										},
									}},
									With: nil,
								}},
							},
						}},
						With: nil,
					}},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 4,
								Line:   21,
							},
							File:   "last_success_duration_option_test.flux",
							Source: "array.from(rows: [\n\t\t{_time: tasks.lastSuccess(orTime: -1d)},\n\t])",
							Start: ast.Position{
								Column: 2,
								Line:   19,
							},
						},
					},
					Callee: &ast.MemberExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 12,
									Line:   19,
								},
								File:   "last_success_duration_option_test.flux",
								Source: "array.from",
								Start: ast.Position{
									Column: 2,
									Line:   19,
								},
							},
						},
						Object: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 7,
										Line:   19,
									},
									File:   "last_success_duration_option_test.flux",
									Source: "array",
									Start: ast.Position{
										Column: 2,
										Line:   19,
									},
								},
							},
							Name: "array",
						},
						Property: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 12,
										Line:   19,
									},
									File:   "last_success_duration_option_test.flux",
									Source: "from",
									Start: ast.Position{
										Column: 8,
										Line:   19,
									},
								},
							},
							Name: "from",
						},
					},
				},
				Params: []*ast.Property{},
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 3,
							Line:   27,
						},
						File:   "last_success_duration_option_test.flux",
						Source: "_last_success = () => ({\n\tinput: t_last_success(),\n\twant: testing.loadMem(csv: outData),\n\tfn: (tables=<-) => tables,\n})",
						Start: ast.Position{
							Column: 6,
							Line:   23,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 19,
								Line:   23,
							},
							File:   "last_success_duration_option_test.flux",
							Source: "_last_success",
							Start: ast.Position{
								Column: 6,
								Line:   23,
							},
						},
					},
					Name: "_last_success",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 3,
								Line:   27,
							},
							File:   "last_success_duration_option_test.flux",
							Source: "() => ({\n\tinput: t_last_success(),\n\twant: testing.loadMem(csv: outData),\n\tfn: (tables=<-) => tables,\n})",
							Start: ast.Position{
								Column: 22,
								Line:   23,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 3,
									Line:   27,
								},
								File:   "last_success_duration_option_test.flux",
								Source: "({\n\tinput: t_last_success(),\n\twant: testing.loadMem(csv: outData),\n\tfn: (tables=<-) => tables,\n})",
								Start: ast.Position{
									Column: 28,
									Line:   23,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 2,
										Line:   27,
									},
									File:   "last_success_duration_option_test.flux",
									Source: "{\n\tinput: t_last_success(),\n\twant: testing.loadMem(csv: outData),\n\tfn: (tables=<-) => tables,\n}",
									Start: ast.Position{
										Column: 29,
										Line:   23,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 25,
											Line:   24,
										},
										File:   "last_success_duration_option_test.flux",
										Source: "input: t_last_success()",
										Start: ast.Position{
											Column: 2,
											Line:   24,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 7,
												Line:   24,
											},
											File:   "last_success_duration_option_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 2,
												Line:   24,
											},
										},
									},
									Name: "input",
								},
								Value: &ast.CallExpression{
									Arguments: nil,
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 25,
												Line:   24,
											},
											File:   "last_success_duration_option_test.flux",
											Source: "t_last_success()",
											Start: ast.Position{
												Column: 9,
												Line:   24,
											},
										},
									},
									Callee: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 23,
													Line:   24,
												},
												File:   "last_success_duration_option_test.flux",
												Source: "t_last_success",
												Start: ast.Position{
													Column: 9,
													Line:   24,
												},
											},
										},
										Name: "t_last_success",
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 37,
											Line:   25,
										},
										File:   "last_success_duration_option_test.flux",
										Source: "want: testing.loadMem(csv: outData)",
										Start: ast.Position{
											Column: 2,
											Line:   25,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 6,
												Line:   25,
											},
											File:   "last_success_duration_option_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 2,
												Line:   25,
											},
										},
									},
									Name: "want",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 36,
													Line:   25,
												},
												File:   "last_success_duration_option_test.flux",
												Source: "csv: outData",
												Start: ast.Position{
													Column: 24,
													Line:   25,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 36,
														Line:   25,
													},
													File:   "last_success_duration_option_test.flux",
													Source: "csv: outData",
													Start: ast.Position{
														Column: 24,
														Line:   25,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 27,
															Line:   25,
														},
														File:   "last_success_duration_option_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 24,
															Line:   25,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 36,
															Line:   25,
														},
														File:   "last_success_duration_option_test.flux",
														Source: "outData",
														Start: ast.Position{
															Column: 29,
															Line:   25,
														},
													},
												},
												Name: "outData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 37,
												Line:   25,
											},
											File:   "last_success_duration_option_test.flux",
											Source: "testing.loadMem(csv: outData)",
											Start: ast.Position{
												Column: 8,
												Line:   25,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 23,
													Line:   25,
												},
												File:   "last_success_duration_option_test.flux",
												Source: "testing.loadMem",
												Start: ast.Position{
													Column: 8,
													Line:   25,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 15,
														Line:   25,
													},
													File:   "last_success_duration_option_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 8,
														Line:   25,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 23,
														Line:   25,
													},
													File:   "last_success_duration_option_test.flux",
													Source: "loadMem",
													Start: ast.Position{
														Column: 16,
														Line:   25,
													},
												},
											},
											Name: "loadMem",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 27,
											Line:   26,
										},
										File:   "last_success_duration_option_test.flux",
										Source: "fn: (tables=<-) => tables",
										Start: ast.Position{
											Column: 2,
											Line:   26,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 4,
												Line:   26,
											},
											File:   "last_success_duration_option_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 2,
												Line:   26,
											},
										},
									},
									Name: "fn",
								},
								Value: &ast.FunctionExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 27,
												Line:   26,
											},
											File:   "last_success_duration_option_test.flux",
											Source: "(tables=<-) => tables",
											Start: ast.Position{
												Column: 6,
												Line:   26,
											},
										},
									},
									Body: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 27,
													Line:   26,
												},
												File:   "last_success_duration_option_test.flux",
												Source: "tables",
												Start: ast.Position{
													Column: 21,
													Line:   26,
												},
											},
										},
										Name: "tables",
									},
									Params: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 16,
													Line:   26,
												},
												File:   "last_success_duration_option_test.flux",
												Source: "tables=<-",
												Start: ast.Position{
													Column: 7,
													Line:   26,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 13,
														Line:   26,
													},
													File:   "last_success_duration_option_test.flux",
													Source: "tables",
													Start: ast.Position{
														Column: 7,
														Line:   26,
													},
												},
											},
											Name: "tables",
										},
										Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 16,
													Line:   26,
												},
												File:   "last_success_duration_option_test.flux",
												Source: "<-",
												Start: ast.Position{
													Column: 14,
													Line:   26,
												},
											},
										}},
									}},
								},
							}},
							With: nil,
						},
					},
					Params: []*ast.Property{},
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 3,
						Line:   27,
					},
					File:   "last_success_duration_option_test.flux",
					Source: "test _last_success = () => ({\n\tinput: t_last_success(),\n\twant: testing.loadMem(csv: outData),\n\tfn: (tables=<-) => tables,\n})",
					Start: ast.Position{
						Column: 1,
						Line:   23,
					},
				},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   3,
					},
					File:   "last_success_duration_option_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   3,
						},
						File:   "last_success_duration_option_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "testing",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 28,
						Line:   4,
					},
					File:   "last_success_duration_option_test.flux",
					Source: "import \"experimental/array\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 28,
							Line:   4,
						},
						File:   "last_success_duration_option_test.flux",
						Source: "\"experimental/array\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "experimental/array",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 35,
						Line:   5,
					},
					File:   "last_success_duration_option_test.flux",
					Source: "import \"influxdata/influxdb/tasks\"",
					Start: ast.Position{
						Column: 1,
						Line:   5,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 35,
							Line:   5,
						},
						File:   "last_success_duration_option_test.flux",
						Source: "\"influxdata/influxdb/tasks\"",
						Start: ast.Position{
							Column: 8,
							Line:   5,
						},
					},
				},
				Value: "influxdata/influxdb/tasks",
			},
		}},
		Metadata: "parser-type=rust",
		Name:     "last_success_duration_option_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 19,
						Line:   1,
					},
					File:   "last_success_duration_option_test.flux",
					Source: "package tasks_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 19,
							Line:   1,
						},
						File:   "last_success_duration_option_test.flux",
						Source: "tasks_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "tasks_test",
			},
		},
	}, &ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 3,
					Line:   27,
				},
				File:   "last_success_with_option_test.flux",
				Source: "package tasks_test\n\nimport \"testing\"\nimport \"experimental/array\"\nimport \"influxdata/influxdb/tasks\"\n\noption now = () => 2020-09-08T09:00:00Z\noption tasks.lastSuccessTime = 2020-09-08T08:00:00Z\n\noutData = \"\n#datatype,string,long,dateTime:RFC3339\n#group,false,false,false\n#default,_result,,\n,result,table,_time\n,,0,2020-09-08T08:00:00Z\n\"\n\nt_last_success = () =>\n\tarray.from(rows: [\n\t\t{_time: tasks.lastSuccess(orTime: now())},\n\t])\n\ntest _last_success = () => ({\n\tinput: t_last_success(),\n\twant: testing.loadMem(csv: outData),\n\tfn: (tables=<-) => tables,\n})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 40,
							Line:   7,
						},
						File:   "last_success_with_option_test.flux",
						Source: "now = () => 2020-09-08T09:00:00Z",
						Start: ast.Position{
							Column: 8,
							Line:   7,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   7,
							},
							File:   "last_success_with_option_test.flux",
							Source: "now",
							Start: ast.Position{
								Column: 8,
								Line:   7,
							},
						},
					},
					Name: "now",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 40,
								Line:   7,
							},
							File:   "last_success_with_option_test.flux",
							Source: "() => 2020-09-08T09:00:00Z",
							Start: ast.Position{
								Column: 14,
								Line:   7,
							},
						},
					},
					Body: &ast.DateTimeLiteral{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 40,
									Line:   7,
								},
								File:   "last_success_with_option_test.flux",
								Source: "2020-09-08T09:00:00Z",
								Start: ast.Position{
									Column: 20,
									Line:   7,
								},
							},
						},
						Value: parser.MustParseTime("2020-09-08T09:00:00Z"),
					},
					Params: []*ast.Property{},
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 40,
						Line:   7,
					},
					File:   "last_success_with_option_test.flux",
					Source: "option now = () => 2020-09-08T09:00:00Z",
					Start: ast.Position{
						Column: 1,
						Line:   7,
					},
				},
			},
		}, &ast.OptionStatement{
			Assignment: &ast.MemberAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 52,
							Line:   8,
						},
						File:   "last_success_with_option_test.flux",
						Source: "tasks.lastSuccessTime = 2020-09-08T08:00:00Z",
						Start: ast.Position{
							Column: 8,
							Line:   8,
						},
					},
				},
				Init: &ast.DateTimeLiteral{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 52,
								Line:   8,
							},
							File:   "last_success_with_option_test.flux",
							Source: "2020-09-08T08:00:00Z",
							Start: ast.Position{
								Column: 32,
								Line:   8,
							},
						},
					},
					Value: parser.MustParseTime("2020-09-08T08:00:00Z"),
				},
				Member: &ast.MemberExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 29,
								Line:   8,
							},
							File:   "last_success_with_option_test.flux",
							Source: "tasks.lastSuccessTime",
							Start: ast.Position{
								Column: 8,
								Line:   8,
							},
						},
					},
					Object: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 13,
									Line:   8,
								},
								File:   "last_success_with_option_test.flux",
								Source: "tasks",
								Start: ast.Position{
									Column: 8,
									Line:   8,
								},
							},
						},
						Name: "tasks",
					},
					Property: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 29,
									Line:   8,
								},
								File:   "last_success_with_option_test.flux",
								Source: "lastSuccessTime",
								Start: ast.Position{
									Column: 14,
									Line:   8,
								},
							},
						},
						Name: "lastSuccessTime",
					},
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 52,
						Line:   8,
					},
					File:   "last_success_with_option_test.flux",
					Source: "option tasks.lastSuccessTime = 2020-09-08T08:00:00Z",
					Start: ast.Position{
						Column: 1,
						Line:   8,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   16,
					},
					File:   "last_success_with_option_test.flux",
					Source: "outData = \"\n#datatype,string,long,dateTime:RFC3339\n#group,false,false,false\n#default,_result,,\n,result,table,_time\n,,0,2020-09-08T08:00:00Z\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   10,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 8,
							Line:   10,
						},
						File:   "last_success_with_option_test.flux",
						Source: "outData",
						Start: ast.Position{
							Column: 1,
							Line:   10,
						},
					},
				},
				Name: "outData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   16,
						},
						File:   "last_success_with_option_test.flux",
						Source: "\"\n#datatype,string,long,dateTime:RFC3339\n#group,false,false,false\n#default,_result,,\n,result,table,_time\n,,0,2020-09-08T08:00:00Z\n\"",
						Start: ast.Position{
							Column: 11,
							Line:   10,
						},
					},
				},
				Value: "\n#datatype,string,long,dateTime:RFC3339\n#group,false,false,false\n#default,_result,,\n,result,table,_time\n,,0,2020-09-08T08:00:00Z\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 4,
						Line:   21,
					},
					File:   "last_success_with_option_test.flux",
					Source: "t_last_success = () =>\n\tarray.from(rows: [\n\t\t{_time: tasks.lastSuccess(orTime: now())},\n\t])",
					Start: ast.Position{
						Column: 1,
						Line:   18,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 15,
							Line:   18,
						},
						File:   "last_success_with_option_test.flux",
						Source: "t_last_success",
						Start: ast.Position{
							Column: 1,
							Line:   18,
						},
					},
				},
				Name: "t_last_success",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 4,
							Line:   21,
						},
						File:   "last_success_with_option_test.flux",
						Source: "() =>\n\tarray.from(rows: [\n\t\t{_time: tasks.lastSuccess(orTime: now())},\n\t])",
						Start: ast.Position{
							Column: 18,
							Line:   18,
						},
					},
				},
				Body: &ast.CallExpression{
					Arguments: []ast.Expression{&ast.ObjectExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 3,
									Line:   21,
								},
								File:   "last_success_with_option_test.flux",
								Source: "rows: [\n\t\t{_time: tasks.lastSuccess(orTime: now())},\n\t]",
								Start: ast.Position{
									Column: 13,
									Line:   19,
								},
							},
						},
						Properties: []*ast.Property{&ast.Property{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 3,
										Line:   21,
									},
									File:   "last_success_with_option_test.flux",
									Source: "rows: [\n\t\t{_time: tasks.lastSuccess(orTime: now())},\n\t]",
									Start: ast.Position{
										Column: 13,
										Line:   19,
									},
								},
							},
							Key: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 17,
											Line:   19,
										},
										File:   "last_success_with_option_test.flux",
										Source: "rows",
										Start: ast.Position{
											Column: 13,
											Line:   19,
										},
									},
								},
								Name: "rows",
							},
							Value: &ast.ArrayExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 3,
											Line:   21,
										},
										File:   "last_success_with_option_test.flux",
										Source: "[\n\t\t{_time: tasks.lastSuccess(orTime: now())},\n\t]",
										Start: ast.Position{
											Column: 19,
											Line:   19,
										},
									},
								},
								Elements: []ast.Expression{&ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 44,
												Line:   20,
											},
											File:   "last_success_with_option_test.flux",
											Source: "{_time: tasks.lastSuccess(orTime: now())}",
											Start: ast.Position{
												Column: 3,
												Line:   20,
											},
										},
									},
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 43,
													Line:   20,
												},
												File:   "last_success_with_option_test.flux",
												Source: "_time: tasks.lastSuccess(orTime: now())",
												Start: ast.Position{
													Column: 4,
													Line:   20,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 9,
														Line:   20,
													},
													File:   "last_success_with_option_test.flux",
													Source: "_time",
													Start: ast.Position{
														Column: 4,
														Line:   20,
													},
												},
											},
											Name: "_time",
										},
										Value: &ast.CallExpression{
											Arguments: []ast.Expression{&ast.ObjectExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 42,
															Line:   20,
														},
														File:   "last_success_with_option_test.flux",
														Source: "orTime: now()",
														Start: ast.Position{
															Column: 29,
															Line:   20,
														},
													},
												},
												Properties: []*ast.Property{&ast.Property{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 42,
																Line:   20,
															},
															File:   "last_success_with_option_test.flux",
															Source: "orTime: now()",
															Start: ast.Position{
																Column: 29,
																Line:   20,
															},
														},
													},
													Key: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 35,
																	Line:   20,
																},
																File:   "last_success_with_option_test.flux",
																Source: "orTime",
																Start: ast.Position{
																	Column: 29,
																	Line:   20,
																},
															},
														},
														Name: "orTime",
													},
													Value: &ast.CallExpression{
														Arguments: nil,
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 42,
																	Line:   20,
																},
																File:   "last_success_with_option_test.flux",
																Source: "now()",
																Start: ast.Position{
																	Column: 37,
																	Line:   20,
																},
															},
														},
														Callee: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 40,
																		Line:   20,
																	},
																	File:   "last_success_with_option_test.flux",
																	Source: "now",
																	Start: ast.Position{
																		Column: 37,
																		Line:   20,
																	},
																},
															},
															Name: "now",
														},
													},
												}},
												With: nil,
											}},
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 43,
														Line:   20,
													},
													File:   "last_success_with_option_test.flux",
													Source: "tasks.lastSuccess(orTime: now())",
													Start: ast.Position{
														Column: 11,
														Line:   20,
													},
												},
											},
											Callee: &ast.MemberExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 28,
															Line:   20,
														},
														File:   "last_success_with_option_test.flux",
														Source: "tasks.lastSuccess",
														Start: ast.Position{
															Column: 11,
															Line:   20,
														},
													},
												},
												Object: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 16,
																Line:   20,
															},
															File:   "last_success_with_option_test.flux",
															Source: "tasks",
															Start: ast.Position{
																Column: 11,
																Line:   20,
															},
														},
													},
													Name: "tasks",
												},
												Property: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 28,
																Line:   20,
															},
															File:   "last_success_with_option_test.flux",
															Source: "lastSuccess",
															Start: ast.Position{
																Column: 17,
																Line:   20,
															},
														},
													},
													Name: "lastSuccess",
												},
											},
										},
									}},
									With: nil,
								}},
							},
						}},
						With: nil,
					}},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 4,
								Line:   21,
							},
							File:   "last_success_with_option_test.flux",
							Source: "array.from(rows: [\n\t\t{_time: tasks.lastSuccess(orTime: now())},\n\t])",
							Start: ast.Position{
								Column: 2,
								Line:   19,
							},
						},
					},
					Callee: &ast.MemberExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 12,
									Line:   19,
								},
								File:   "last_success_with_option_test.flux",
								Source: "array.from",
								Start: ast.Position{
									Column: 2,
									Line:   19,
								},
							},
						},
						Object: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 7,
										Line:   19,
									},
									File:   "last_success_with_option_test.flux",
									Source: "array",
									Start: ast.Position{
										Column: 2,
										Line:   19,
									},
								},
							},
							Name: "array",
						},
						Property: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 12,
										Line:   19,
									},
									File:   "last_success_with_option_test.flux",
									Source: "from",
									Start: ast.Position{
										Column: 8,
										Line:   19,
									},
								},
							},
							Name: "from",
						},
					},
				},
				Params: []*ast.Property{},
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 3,
							Line:   27,
						},
						File:   "last_success_with_option_test.flux",
						Source: "_last_success = () => ({\n\tinput: t_last_success(),\n\twant: testing.loadMem(csv: outData),\n\tfn: (tables=<-) => tables,\n})",
						Start: ast.Position{
							Column: 6,
							Line:   23,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 19,
								Line:   23,
							},
							File:   "last_success_with_option_test.flux",
							Source: "_last_success",
							Start: ast.Position{
								Column: 6,
								Line:   23,
							},
						},
					},
					Name: "_last_success",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 3,
								Line:   27,
							},
							File:   "last_success_with_option_test.flux",
							Source: "() => ({\n\tinput: t_last_success(),\n\twant: testing.loadMem(csv: outData),\n\tfn: (tables=<-) => tables,\n})",
							Start: ast.Position{
								Column: 22,
								Line:   23,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 3,
									Line:   27,
								},
								File:   "last_success_with_option_test.flux",
								Source: "({\n\tinput: t_last_success(),\n\twant: testing.loadMem(csv: outData),\n\tfn: (tables=<-) => tables,\n})",
								Start: ast.Position{
									Column: 28,
									Line:   23,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 2,
										Line:   27,
									},
									File:   "last_success_with_option_test.flux",
									Source: "{\n\tinput: t_last_success(),\n\twant: testing.loadMem(csv: outData),\n\tfn: (tables=<-) => tables,\n}",
									Start: ast.Position{
										Column: 29,
										Line:   23,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 25,
											Line:   24,
										},
										File:   "last_success_with_option_test.flux",
										Source: "input: t_last_success()",
										Start: ast.Position{
											Column: 2,
											Line:   24,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 7,
												Line:   24,
											},
											File:   "last_success_with_option_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 2,
												Line:   24,
											},
										},
									},
									Name: "input",
								},
								Value: &ast.CallExpression{
									Arguments: nil,
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 25,
												Line:   24,
											},
											File:   "last_success_with_option_test.flux",
											Source: "t_last_success()",
											Start: ast.Position{
												Column: 9,
												Line:   24,
											},
										},
									},
									Callee: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 23,
													Line:   24,
												},
												File:   "last_success_with_option_test.flux",
												Source: "t_last_success",
												Start: ast.Position{
													Column: 9,
													Line:   24,
												},
											},
										},
										Name: "t_last_success",
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 37,
											Line:   25,
										},
										File:   "last_success_with_option_test.flux",
										Source: "want: testing.loadMem(csv: outData)",
										Start: ast.Position{
											Column: 2,
											Line:   25,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 6,
												Line:   25,
											},
											File:   "last_success_with_option_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 2,
												Line:   25,
											},
										},
									},
									Name: "want",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 36,
													Line:   25,
												},
												File:   "last_success_with_option_test.flux",
												Source: "csv: outData",
												Start: ast.Position{
													Column: 24,
													Line:   25,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 36,
														Line:   25,
													},
													File:   "last_success_with_option_test.flux",
													Source: "csv: outData",
													Start: ast.Position{
														Column: 24,
														Line:   25,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 27,
															Line:   25,
														},
														File:   "last_success_with_option_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 24,
															Line:   25,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 36,
															Line:   25,
														},
														File:   "last_success_with_option_test.flux",
														Source: "outData",
														Start: ast.Position{
															Column: 29,
															Line:   25,
														},
													},
												},
												Name: "outData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 37,
												Line:   25,
											},
											File:   "last_success_with_option_test.flux",
											Source: "testing.loadMem(csv: outData)",
											Start: ast.Position{
												Column: 8,
												Line:   25,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 23,
													Line:   25,
												},
												File:   "last_success_with_option_test.flux",
												Source: "testing.loadMem",
												Start: ast.Position{
													Column: 8,
													Line:   25,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 15,
														Line:   25,
													},
													File:   "last_success_with_option_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 8,
														Line:   25,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 23,
														Line:   25,
													},
													File:   "last_success_with_option_test.flux",
													Source: "loadMem",
													Start: ast.Position{
														Column: 16,
														Line:   25,
													},
												},
											},
											Name: "loadMem",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 27,
											Line:   26,
										},
										File:   "last_success_with_option_test.flux",
										Source: "fn: (tables=<-) => tables",
										Start: ast.Position{
											Column: 2,
											Line:   26,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 4,
												Line:   26,
											},
											File:   "last_success_with_option_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 2,
												Line:   26,
											},
										},
									},
									Name: "fn",
								},
								Value: &ast.FunctionExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 27,
												Line:   26,
											},
											File:   "last_success_with_option_test.flux",
											Source: "(tables=<-) => tables",
											Start: ast.Position{
												Column: 6,
												Line:   26,
											},
										},
									},
									Body: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 27,
													Line:   26,
												},
												File:   "last_success_with_option_test.flux",
												Source: "tables",
												Start: ast.Position{
													Column: 21,
													Line:   26,
												},
											},
										},
										Name: "tables",
									},
									Params: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 16,
													Line:   26,
												},
												File:   "last_success_with_option_test.flux",
												Source: "tables=<-",
												Start: ast.Position{
													Column: 7,
													Line:   26,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 13,
														Line:   26,
													},
													File:   "last_success_with_option_test.flux",
													Source: "tables",
													Start: ast.Position{
														Column: 7,
														Line:   26,
													},
												},
											},
											Name: "tables",
										},
										Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 16,
													Line:   26,
												},
												File:   "last_success_with_option_test.flux",
												Source: "<-",
												Start: ast.Position{
													Column: 14,
													Line:   26,
												},
											},
										}},
									}},
								},
							}},
							With: nil,
						},
					},
					Params: []*ast.Property{},
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 3,
						Line:   27,
					},
					File:   "last_success_with_option_test.flux",
					Source: "test _last_success = () => ({\n\tinput: t_last_success(),\n\twant: testing.loadMem(csv: outData),\n\tfn: (tables=<-) => tables,\n})",
					Start: ast.Position{
						Column: 1,
						Line:   23,
					},
				},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   3,
					},
					File:   "last_success_with_option_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   3,
						},
						File:   "last_success_with_option_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "testing",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 28,
						Line:   4,
					},
					File:   "last_success_with_option_test.flux",
					Source: "import \"experimental/array\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 28,
							Line:   4,
						},
						File:   "last_success_with_option_test.flux",
						Source: "\"experimental/array\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "experimental/array",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 35,
						Line:   5,
					},
					File:   "last_success_with_option_test.flux",
					Source: "import \"influxdata/influxdb/tasks\"",
					Start: ast.Position{
						Column: 1,
						Line:   5,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 35,
							Line:   5,
						},
						File:   "last_success_with_option_test.flux",
						Source: "\"influxdata/influxdb/tasks\"",
						Start: ast.Position{
							Column: 8,
							Line:   5,
						},
					},
				},
				Value: "influxdata/influxdb/tasks",
			},
		}},
		Metadata: "parser-type=rust",
		Name:     "last_success_with_option_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 19,
						Line:   1,
					},
					File:   "last_success_with_option_test.flux",
					Source: "package tasks_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 19,
							Line:   1,
						},
						File:   "last_success_with_option_test.flux",
						Source: "tasks_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "tasks_test",
			},
		},
	}, &ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 3,
					Line:   26,
				},
				File:   "last_success_without_option_test.flux",
				Source: "package tasks_test\n\nimport \"testing\"\nimport \"experimental/array\"\nimport \"influxdata/influxdb/tasks\"\n\noption now = () => 2020-09-08T09:00:00Z\n\noutData = \"\n#datatype,string,long,dateTime:RFC3339\n#group,false,false,false\n#default,_result,,\n,result,table,_time\n,,0,2020-09-08T09:00:00Z\n\"\n\nt_last_success = () =>\n\tarray.from(rows: [\n\t\t{_time: tasks.lastSuccess(orTime: now())},\n\t])\n\ntest _last_success = () => ({\n\tinput: t_last_success(),\n\twant: testing.loadMem(csv: outData),\n\tfn: (tables=<-) => tables,\n})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 40,
							Line:   7,
						},
						File:   "last_success_without_option_test.flux",
						Source: "now = () => 2020-09-08T09:00:00Z",
						Start: ast.Position{
							Column: 8,
							Line:   7,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   7,
							},
							File:   "last_success_without_option_test.flux",
							Source: "now",
							Start: ast.Position{
								Column: 8,
								Line:   7,
							},
						},
					},
					Name: "now",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 40,
								Line:   7,
							},
							File:   "last_success_without_option_test.flux",
							Source: "() => 2020-09-08T09:00:00Z",
							Start: ast.Position{
								Column: 14,
								Line:   7,
							},
						},
					},
					Body: &ast.DateTimeLiteral{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 40,
									Line:   7,
								},
								File:   "last_success_without_option_test.flux",
								Source: "2020-09-08T09:00:00Z",
								Start: ast.Position{
									Column: 20,
									Line:   7,
								},
							},
						},
						Value: parser.MustParseTime("2020-09-08T09:00:00Z"),
					},
					Params: []*ast.Property{},
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 40,
						Line:   7,
					},
					File:   "last_success_without_option_test.flux",
					Source: "option now = () => 2020-09-08T09:00:00Z",
					Start: ast.Position{
						Column: 1,
						Line:   7,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   15,
					},
					File:   "last_success_without_option_test.flux",
					Source: "outData = \"\n#datatype,string,long,dateTime:RFC3339\n#group,false,false,false\n#default,_result,,\n,result,table,_time\n,,0,2020-09-08T09:00:00Z\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   9,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 8,
							Line:   9,
						},
						File:   "last_success_without_option_test.flux",
						Source: "outData",
						Start: ast.Position{
							Column: 1,
							Line:   9,
						},
					},
				},
				Name: "outData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   15,
						},
						File:   "last_success_without_option_test.flux",
						Source: "\"\n#datatype,string,long,dateTime:RFC3339\n#group,false,false,false\n#default,_result,,\n,result,table,_time\n,,0,2020-09-08T09:00:00Z\n\"",
						Start: ast.Position{
							Column: 11,
							Line:   9,
						},
					},
				},
				Value: "\n#datatype,string,long,dateTime:RFC3339\n#group,false,false,false\n#default,_result,,\n,result,table,_time\n,,0,2020-09-08T09:00:00Z\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 4,
						Line:   20,
					},
					File:   "last_success_without_option_test.flux",
					Source: "t_last_success = () =>\n\tarray.from(rows: [\n\t\t{_time: tasks.lastSuccess(orTime: now())},\n\t])",
					Start: ast.Position{
						Column: 1,
						Line:   17,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 15,
							Line:   17,
						},
						File:   "last_success_without_option_test.flux",
						Source: "t_last_success",
						Start: ast.Position{
							Column: 1,
							Line:   17,
						},
					},
				},
				Name: "t_last_success",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 4,
							Line:   20,
						},
						File:   "last_success_without_option_test.flux",
						Source: "() =>\n\tarray.from(rows: [\n\t\t{_time: tasks.lastSuccess(orTime: now())},\n\t])",
						Start: ast.Position{
							Column: 18,
							Line:   17,
						},
					},
				},
				Body: &ast.CallExpression{
					Arguments: []ast.Expression{&ast.ObjectExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 3,
									Line:   20,
								},
								File:   "last_success_without_option_test.flux",
								Source: "rows: [\n\t\t{_time: tasks.lastSuccess(orTime: now())},\n\t]",
								Start: ast.Position{
									Column: 13,
									Line:   18,
								},
							},
						},
						Properties: []*ast.Property{&ast.Property{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 3,
										Line:   20,
									},
									File:   "last_success_without_option_test.flux",
									Source: "rows: [\n\t\t{_time: tasks.lastSuccess(orTime: now())},\n\t]",
									Start: ast.Position{
										Column: 13,
										Line:   18,
									},
								},
							},
							Key: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 17,
											Line:   18,
										},
										File:   "last_success_without_option_test.flux",
										Source: "rows",
										Start: ast.Position{
											Column: 13,
											Line:   18,
										},
									},
								},
								Name: "rows",
							},
							Value: &ast.ArrayExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 3,
											Line:   20,
										},
										File:   "last_success_without_option_test.flux",
										Source: "[\n\t\t{_time: tasks.lastSuccess(orTime: now())},\n\t]",
										Start: ast.Position{
											Column: 19,
											Line:   18,
										},
									},
								},
								Elements: []ast.Expression{&ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 44,
												Line:   19,
											},
											File:   "last_success_without_option_test.flux",
											Source: "{_time: tasks.lastSuccess(orTime: now())}",
											Start: ast.Position{
												Column: 3,
												Line:   19,
											},
										},
									},
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 43,
													Line:   19,
												},
												File:   "last_success_without_option_test.flux",
												Source: "_time: tasks.lastSuccess(orTime: now())",
												Start: ast.Position{
													Column: 4,
													Line:   19,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 9,
														Line:   19,
													},
													File:   "last_success_without_option_test.flux",
													Source: "_time",
													Start: ast.Position{
														Column: 4,
														Line:   19,
													},
												},
											},
											Name: "_time",
										},
										Value: &ast.CallExpression{
											Arguments: []ast.Expression{&ast.ObjectExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 42,
															Line:   19,
														},
														File:   "last_success_without_option_test.flux",
														Source: "orTime: now()",
														Start: ast.Position{
															Column: 29,
															Line:   19,
														},
													},
												},
												Properties: []*ast.Property{&ast.Property{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 42,
																Line:   19,
															},
															File:   "last_success_without_option_test.flux",
															Source: "orTime: now()",
															Start: ast.Position{
																Column: 29,
																Line:   19,
															},
														},
													},
													Key: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 35,
																	Line:   19,
																},
																File:   "last_success_without_option_test.flux",
																Source: "orTime",
																Start: ast.Position{
																	Column: 29,
																	Line:   19,
																},
															},
														},
														Name: "orTime",
													},
													Value: &ast.CallExpression{
														Arguments: nil,
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 42,
																	Line:   19,
																},
																File:   "last_success_without_option_test.flux",
																Source: "now()",
																Start: ast.Position{
																	Column: 37,
																	Line:   19,
																},
															},
														},
														Callee: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 40,
																		Line:   19,
																	},
																	File:   "last_success_without_option_test.flux",
																	Source: "now",
																	Start: ast.Position{
																		Column: 37,
																		Line:   19,
																	},
																},
															},
															Name: "now",
														},
													},
												}},
												With: nil,
											}},
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 43,
														Line:   19,
													},
													File:   "last_success_without_option_test.flux",
													Source: "tasks.lastSuccess(orTime: now())",
													Start: ast.Position{
														Column: 11,
														Line:   19,
													},
												},
											},
											Callee: &ast.MemberExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 28,
															Line:   19,
														},
														File:   "last_success_without_option_test.flux",
														Source: "tasks.lastSuccess",
														Start: ast.Position{
															Column: 11,
															Line:   19,
														},
													},
												},
												Object: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 16,
																Line:   19,
															},
															File:   "last_success_without_option_test.flux",
															Source: "tasks",
															Start: ast.Position{
																Column: 11,
																Line:   19,
															},
														},
													},
													Name: "tasks",
												},
												Property: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 28,
																Line:   19,
															},
															File:   "last_success_without_option_test.flux",
															Source: "lastSuccess",
															Start: ast.Position{
																Column: 17,
																Line:   19,
															},
														},
													},
													Name: "lastSuccess",
												},
											},
										},
									}},
									With: nil,
								}},
							},
						}},
						With: nil,
					}},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 4,
								Line:   20,
							},
							File:   "last_success_without_option_test.flux",
							Source: "array.from(rows: [\n\t\t{_time: tasks.lastSuccess(orTime: now())},\n\t])",
							Start: ast.Position{
								Column: 2,
								Line:   18,
							},
						},
					},
					Callee: &ast.MemberExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 12,
									Line:   18,
								},
								File:   "last_success_without_option_test.flux",
								Source: "array.from",
								Start: ast.Position{
									Column: 2,
									Line:   18,
								},
							},
						},
						Object: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 7,
										Line:   18,
									},
									File:   "last_success_without_option_test.flux",
									Source: "array",
									Start: ast.Position{
										Column: 2,
										Line:   18,
									},
								},
							},
							Name: "array",
						},
						Property: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 12,
										Line:   18,
									},
									File:   "last_success_without_option_test.flux",
									Source: "from",
									Start: ast.Position{
										Column: 8,
										Line:   18,
									},
								},
							},
							Name: "from",
						},
					},
				},
				Params: []*ast.Property{},
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 3,
							Line:   26,
						},
						File:   "last_success_without_option_test.flux",
						Source: "_last_success = () => ({\n\tinput: t_last_success(),\n\twant: testing.loadMem(csv: outData),\n\tfn: (tables=<-) => tables,\n})",
						Start: ast.Position{
							Column: 6,
							Line:   22,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 19,
								Line:   22,
							},
							File:   "last_success_without_option_test.flux",
							Source: "_last_success",
							Start: ast.Position{
								Column: 6,
								Line:   22,
							},
						},
					},
					Name: "_last_success",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 3,
								Line:   26,
							},
							File:   "last_success_without_option_test.flux",
							Source: "() => ({\n\tinput: t_last_success(),\n\twant: testing.loadMem(csv: outData),\n\tfn: (tables=<-) => tables,\n})",
							Start: ast.Position{
								Column: 22,
								Line:   22,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 3,
									Line:   26,
								},
								File:   "last_success_without_option_test.flux",
								Source: "({\n\tinput: t_last_success(),\n\twant: testing.loadMem(csv: outData),\n\tfn: (tables=<-) => tables,\n})",
								Start: ast.Position{
									Column: 28,
									Line:   22,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 2,
										Line:   26,
									},
									File:   "last_success_without_option_test.flux",
									Source: "{\n\tinput: t_last_success(),\n\twant: testing.loadMem(csv: outData),\n\tfn: (tables=<-) => tables,\n}",
									Start: ast.Position{
										Column: 29,
										Line:   22,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 25,
											Line:   23,
										},
										File:   "last_success_without_option_test.flux",
										Source: "input: t_last_success()",
										Start: ast.Position{
											Column: 2,
											Line:   23,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 7,
												Line:   23,
											},
											File:   "last_success_without_option_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 2,
												Line:   23,
											},
										},
									},
									Name: "input",
								},
								Value: &ast.CallExpression{
									Arguments: nil,
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 25,
												Line:   23,
											},
											File:   "last_success_without_option_test.flux",
											Source: "t_last_success()",
											Start: ast.Position{
												Column: 9,
												Line:   23,
											},
										},
									},
									Callee: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 23,
													Line:   23,
												},
												File:   "last_success_without_option_test.flux",
												Source: "t_last_success",
												Start: ast.Position{
													Column: 9,
													Line:   23,
												},
											},
										},
										Name: "t_last_success",
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 37,
											Line:   24,
										},
										File:   "last_success_without_option_test.flux",
										Source: "want: testing.loadMem(csv: outData)",
										Start: ast.Position{
											Column: 2,
											Line:   24,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 6,
												Line:   24,
											},
											File:   "last_success_without_option_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 2,
												Line:   24,
											},
										},
									},
									Name: "want",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 36,
													Line:   24,
												},
												File:   "last_success_without_option_test.flux",
												Source: "csv: outData",
												Start: ast.Position{
													Column: 24,
													Line:   24,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 36,
														Line:   24,
													},
													File:   "last_success_without_option_test.flux",
													Source: "csv: outData",
													Start: ast.Position{
														Column: 24,
														Line:   24,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 27,
															Line:   24,
														},
														File:   "last_success_without_option_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 24,
															Line:   24,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 36,
															Line:   24,
														},
														File:   "last_success_without_option_test.flux",
														Source: "outData",
														Start: ast.Position{
															Column: 29,
															Line:   24,
														},
													},
												},
												Name: "outData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 37,
												Line:   24,
											},
											File:   "last_success_without_option_test.flux",
											Source: "testing.loadMem(csv: outData)",
											Start: ast.Position{
												Column: 8,
												Line:   24,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 23,
													Line:   24,
												},
												File:   "last_success_without_option_test.flux",
												Source: "testing.loadMem",
												Start: ast.Position{
													Column: 8,
													Line:   24,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 15,
														Line:   24,
													},
													File:   "last_success_without_option_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 8,
														Line:   24,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 23,
														Line:   24,
													},
													File:   "last_success_without_option_test.flux",
													Source: "loadMem",
													Start: ast.Position{
														Column: 16,
														Line:   24,
													},
												},
											},
											Name: "loadMem",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 27,
											Line:   25,
										},
										File:   "last_success_without_option_test.flux",
										Source: "fn: (tables=<-) => tables",
										Start: ast.Position{
											Column: 2,
											Line:   25,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 4,
												Line:   25,
											},
											File:   "last_success_without_option_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 2,
												Line:   25,
											},
										},
									},
									Name: "fn",
								},
								Value: &ast.FunctionExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 27,
												Line:   25,
											},
											File:   "last_success_without_option_test.flux",
											Source: "(tables=<-) => tables",
											Start: ast.Position{
												Column: 6,
												Line:   25,
											},
										},
									},
									Body: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 27,
													Line:   25,
												},
												File:   "last_success_without_option_test.flux",
												Source: "tables",
												Start: ast.Position{
													Column: 21,
													Line:   25,
												},
											},
										},
										Name: "tables",
									},
									Params: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 16,
													Line:   25,
												},
												File:   "last_success_without_option_test.flux",
												Source: "tables=<-",
												Start: ast.Position{
													Column: 7,
													Line:   25,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 13,
														Line:   25,
													},
													File:   "last_success_without_option_test.flux",
													Source: "tables",
													Start: ast.Position{
														Column: 7,
														Line:   25,
													},
												},
											},
											Name: "tables",
										},
										Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 16,
													Line:   25,
												},
												File:   "last_success_without_option_test.flux",
												Source: "<-",
												Start: ast.Position{
													Column: 14,
													Line:   25,
												},
											},
										}},
									}},
								},
							}},
							With: nil,
						},
					},
					Params: []*ast.Property{},
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 3,
						Line:   26,
					},
					File:   "last_success_without_option_test.flux",
					Source: "test _last_success = () => ({\n\tinput: t_last_success(),\n\twant: testing.loadMem(csv: outData),\n\tfn: (tables=<-) => tables,\n})",
					Start: ast.Position{
						Column: 1,
						Line:   22,
					},
				},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   3,
					},
					File:   "last_success_without_option_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   3,
						},
						File:   "last_success_without_option_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "testing",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 28,
						Line:   4,
					},
					File:   "last_success_without_option_test.flux",
					Source: "import \"experimental/array\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 28,
							Line:   4,
						},
						File:   "last_success_without_option_test.flux",
						Source: "\"experimental/array\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "experimental/array",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 35,
						Line:   5,
					},
					File:   "last_success_without_option_test.flux",
					Source: "import \"influxdata/influxdb/tasks\"",
					Start: ast.Position{
						Column: 1,
						Line:   5,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 35,
							Line:   5,
						},
						File:   "last_success_without_option_test.flux",
						Source: "\"influxdata/influxdb/tasks\"",
						Start: ast.Position{
							Column: 8,
							Line:   5,
						},
					},
				},
				Value: "influxdata/influxdb/tasks",
			},
		}},
		Metadata: "parser-type=rust",
		Name:     "last_success_without_option_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 19,
						Line:   1,
					},
					File:   "last_success_without_option_test.flux",
					Source: "package tasks_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 19,
							Line:   1,
						},
						File:   "last_success_without_option_test.flux",
						Source: "tasks_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "tasks_test",
			},
		},
	}},
	Package: "tasks_test",
	Path:    "influxdata/influxdb/tasks",
}}
