// DO NOT EDIT: This file is autogenerated via the builtin command.

package tasks

import (
	ast "github.com/influxdata/flux/ast"
	parser "github.com/influxdata/flux/internal/parser"
)

var FluxTestPackages = []*ast.Package{&ast.Package{
	BaseNode: ast.BaseNode{
		Comments: nil,
		Errors:   nil,
		Loc:      nil,
	},
	Files: []*ast.File{&ast.File{
		BaseNode: ast.BaseNode{
			Comments: nil,
			Errors:   nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 119,
					Line:   20,
				},
				File:   "last_success_duration_no_option_test.flux",
				Source: "package tasks_test\n\n\nimport \"testing\"\nimport \"array\"\nimport \"influxdata/influxdb/tasks\"\n\noption now = () => 2020-09-08T09:00:00Z\n\noutData =\n    \"\n#datatype,string,long,dateTime:RFC3339\n#group,false,false,false\n#default,_result,,\n,result,table,_time\n,,0,2020-09-07T09:00:00Z\n\"\nt_last_success = () => array.from(rows: [{_time: tasks.lastSuccess(orTime: -1d)}])\n\ntest _last_success = () => ({input: t_last_success(), want: testing.loadMem(csv: outData), fn: (tables=<-) => tables})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 40,
							Line:   8,
						},
						File:   "last_success_duration_no_option_test.flux",
						Source: "now = () => 2020-09-08T09:00:00Z",
						Start: ast.Position{
							Column: 8,
							Line:   8,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   8,
							},
							File:   "last_success_duration_no_option_test.flux",
							Source: "now",
							Start: ast.Position{
								Column: 8,
								Line:   8,
							},
						},
					},
					Name: "now",
				},
				Init: &ast.FunctionExpression{
					Arrow: nil,
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 40,
								Line:   8,
							},
							File:   "last_success_duration_no_option_test.flux",
							Source: "() => 2020-09-08T09:00:00Z",
							Start: ast.Position{
								Column: 14,
								Line:   8,
							},
						},
					},
					Body: &ast.DateTimeLiteral{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 40,
									Line:   8,
								},
								File:   "last_success_duration_no_option_test.flux",
								Source: "2020-09-08T09:00:00Z",
								Start: ast.Position{
									Column: 20,
									Line:   8,
								},
							},
						},
						Value: parser.MustParseTime("2020-09-08T09:00:00Z"),
					},
					Lparen: nil,
					Params: []*ast.Property{},
					Rparan: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 40,
						Line:   8,
					},
					File:   "last_success_duration_no_option_test.flux",
					Source: "option now = () => 2020-09-08T09:00:00Z",
					Start: ast.Position{
						Column: 1,
						Line:   8,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   17,
					},
					File:   "last_success_duration_no_option_test.flux",
					Source: "outData =\n    \"\n#datatype,string,long,dateTime:RFC3339\n#group,false,false,false\n#default,_result,,\n,result,table,_time\n,,0,2020-09-07T09:00:00Z\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   10,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 8,
							Line:   10,
						},
						File:   "last_success_duration_no_option_test.flux",
						Source: "outData",
						Start: ast.Position{
							Column: 1,
							Line:   10,
						},
					},
				},
				Name: "outData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   17,
						},
						File:   "last_success_duration_no_option_test.flux",
						Source: "\"\n#datatype,string,long,dateTime:RFC3339\n#group,false,false,false\n#default,_result,,\n,result,table,_time\n,,0,2020-09-07T09:00:00Z\n\"",
						Start: ast.Position{
							Column: 5,
							Line:   11,
						},
					},
				},
				Value: "\n#datatype,string,long,dateTime:RFC3339\n#group,false,false,false\n#default,_result,,\n,result,table,_time\n,,0,2020-09-07T09:00:00Z\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 83,
						Line:   18,
					},
					File:   "last_success_duration_no_option_test.flux",
					Source: "t_last_success = () => array.from(rows: [{_time: tasks.lastSuccess(orTime: -1d)}])",
					Start: ast.Position{
						Column: 1,
						Line:   18,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 15,
							Line:   18,
						},
						File:   "last_success_duration_no_option_test.flux",
						Source: "t_last_success",
						Start: ast.Position{
							Column: 1,
							Line:   18,
						},
					},
				},
				Name: "t_last_success",
			},
			Init: &ast.FunctionExpression{
				Arrow: nil,
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 83,
							Line:   18,
						},
						File:   "last_success_duration_no_option_test.flux",
						Source: "() => array.from(rows: [{_time: tasks.lastSuccess(orTime: -1d)}])",
						Start: ast.Position{
							Column: 18,
							Line:   18,
						},
					},
				},
				Body: &ast.CallExpression{
					Arguments: []ast.Expression{&ast.ObjectExpression{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 82,
									Line:   18,
								},
								File:   "last_success_duration_no_option_test.flux",
								Source: "rows: [{_time: tasks.lastSuccess(orTime: -1d)}]",
								Start: ast.Position{
									Column: 35,
									Line:   18,
								},
							},
						},
						Lbrace: nil,
						Properties: []*ast.Property{&ast.Property{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 82,
										Line:   18,
									},
									File:   "last_success_duration_no_option_test.flux",
									Source: "rows: [{_time: tasks.lastSuccess(orTime: -1d)}]",
									Start: ast.Position{
										Column: 35,
										Line:   18,
									},
								},
							},
							Comma: nil,
							Key: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 39,
											Line:   18,
										},
										File:   "last_success_duration_no_option_test.flux",
										Source: "rows",
										Start: ast.Position{
											Column: 35,
											Line:   18,
										},
									},
								},
								Name: "rows",
							},
							Separator: nil,
							Value: &ast.ArrayExpression{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 82,
											Line:   18,
										},
										File:   "last_success_duration_no_option_test.flux",
										Source: "[{_time: tasks.lastSuccess(orTime: -1d)}]",
										Start: ast.Position{
											Column: 41,
											Line:   18,
										},
									},
								},
								Elements: []ast.Expression{&ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 81,
												Line:   18,
											},
											File:   "last_success_duration_no_option_test.flux",
											Source: "{_time: tasks.lastSuccess(orTime: -1d)}",
											Start: ast.Position{
												Column: 42,
												Line:   18,
											},
										},
									},
									Lbrace: nil,
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 80,
													Line:   18,
												},
												File:   "last_success_duration_no_option_test.flux",
												Source: "_time: tasks.lastSuccess(orTime: -1d)",
												Start: ast.Position{
													Column: 43,
													Line:   18,
												},
											},
										},
										Comma: nil,
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 48,
														Line:   18,
													},
													File:   "last_success_duration_no_option_test.flux",
													Source: "_time",
													Start: ast.Position{
														Column: 43,
														Line:   18,
													},
												},
											},
											Name: "_time",
										},
										Separator: nil,
										Value: &ast.CallExpression{
											Arguments: []ast.Expression{&ast.ObjectExpression{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 79,
															Line:   18,
														},
														File:   "last_success_duration_no_option_test.flux",
														Source: "orTime: -1d",
														Start: ast.Position{
															Column: 68,
															Line:   18,
														},
													},
												},
												Lbrace: nil,
												Properties: []*ast.Property{&ast.Property{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 79,
																Line:   18,
															},
															File:   "last_success_duration_no_option_test.flux",
															Source: "orTime: -1d",
															Start: ast.Position{
																Column: 68,
																Line:   18,
															},
														},
													},
													Comma: nil,
													Key: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Comments: nil,
															Errors:   nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 74,
																	Line:   18,
																},
																File:   "last_success_duration_no_option_test.flux",
																Source: "orTime",
																Start: ast.Position{
																	Column: 68,
																	Line:   18,
																},
															},
														},
														Name: "orTime",
													},
													Separator: nil,
													Value: &ast.UnaryExpression{
														Argument: &ast.DurationLiteral{
															BaseNode: ast.BaseNode{
																Comments: nil,
																Errors:   nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 79,
																		Line:   18,
																	},
																	File:   "last_success_duration_no_option_test.flux",
																	Source: "1d",
																	Start: ast.Position{
																		Column: 77,
																		Line:   18,
																	},
																},
															},
															Values: []ast.Duration{ast.Duration{
																Magnitude: int64(1),
																Unit:      "d",
															}},
														},
														BaseNode: ast.BaseNode{
															Comments: nil,
															Errors:   nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 79,
																	Line:   18,
																},
																File:   "last_success_duration_no_option_test.flux",
																Source: "-1d",
																Start: ast.Position{
																	Column: 76,
																	Line:   18,
																},
															},
														},
														Operator: 6,
													},
												}},
												Rbrace: nil,
												With:   nil,
											}},
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 80,
														Line:   18,
													},
													File:   "last_success_duration_no_option_test.flux",
													Source: "tasks.lastSuccess(orTime: -1d)",
													Start: ast.Position{
														Column: 50,
														Line:   18,
													},
												},
											},
											Callee: &ast.MemberExpression{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 67,
															Line:   18,
														},
														File:   "last_success_duration_no_option_test.flux",
														Source: "tasks.lastSuccess",
														Start: ast.Position{
															Column: 50,
															Line:   18,
														},
													},
												},
												Lbrack: nil,
												Object: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 55,
																Line:   18,
															},
															File:   "last_success_duration_no_option_test.flux",
															Source: "tasks",
															Start: ast.Position{
																Column: 50,
																Line:   18,
															},
														},
													},
													Name: "tasks",
												},
												Property: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 67,
																Line:   18,
															},
															File:   "last_success_duration_no_option_test.flux",
															Source: "lastSuccess",
															Start: ast.Position{
																Column: 56,
																Line:   18,
															},
														},
													},
													Name: "lastSuccess",
												},
												Rbrack: nil,
											},
											Lparen: nil,
											Rparen: nil,
										},
									}},
									Rbrace: nil,
									With:   nil,
								}},
								Lbrack: nil,
								Rbrack: nil,
							},
						}},
						Rbrace: nil,
						With:   nil,
					}},
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 83,
								Line:   18,
							},
							File:   "last_success_duration_no_option_test.flux",
							Source: "array.from(rows: [{_time: tasks.lastSuccess(orTime: -1d)}])",
							Start: ast.Position{
								Column: 24,
								Line:   18,
							},
						},
					},
					Callee: &ast.MemberExpression{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 34,
									Line:   18,
								},
								File:   "last_success_duration_no_option_test.flux",
								Source: "array.from",
								Start: ast.Position{
									Column: 24,
									Line:   18,
								},
							},
						},
						Lbrack: nil,
						Object: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 29,
										Line:   18,
									},
									File:   "last_success_duration_no_option_test.flux",
									Source: "array",
									Start: ast.Position{
										Column: 24,
										Line:   18,
									},
								},
							},
							Name: "array",
						},
						Property: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 34,
										Line:   18,
									},
									File:   "last_success_duration_no_option_test.flux",
									Source: "from",
									Start: ast.Position{
										Column: 30,
										Line:   18,
									},
								},
							},
							Name: "from",
						},
						Rbrack: nil,
					},
					Lparen: nil,
					Rparen: nil,
				},
				Lparen: nil,
				Params: []*ast.Property{},
				Rparan: nil,
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 119,
							Line:   20,
						},
						File:   "last_success_duration_no_option_test.flux",
						Source: "_last_success = () => ({input: t_last_success(), want: testing.loadMem(csv: outData), fn: (tables=<-) => tables})",
						Start: ast.Position{
							Column: 6,
							Line:   20,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 19,
								Line:   20,
							},
							File:   "last_success_duration_no_option_test.flux",
							Source: "_last_success",
							Start: ast.Position{
								Column: 6,
								Line:   20,
							},
						},
					},
					Name: "_last_success",
				},
				Init: &ast.FunctionExpression{
					Arrow: nil,
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 119,
								Line:   20,
							},
							File:   "last_success_duration_no_option_test.flux",
							Source: "() => ({input: t_last_success(), want: testing.loadMem(csv: outData), fn: (tables=<-) => tables})",
							Start: ast.Position{
								Column: 22,
								Line:   20,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 119,
									Line:   20,
								},
								File:   "last_success_duration_no_option_test.flux",
								Source: "({input: t_last_success(), want: testing.loadMem(csv: outData), fn: (tables=<-) => tables})",
								Start: ast.Position{
									Column: 28,
									Line:   20,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 118,
										Line:   20,
									},
									File:   "last_success_duration_no_option_test.flux",
									Source: "{input: t_last_success(), want: testing.loadMem(csv: outData), fn: (tables=<-) => tables}",
									Start: ast.Position{
										Column: 29,
										Line:   20,
									},
								},
							},
							Lbrace: nil,
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 53,
											Line:   20,
										},
										File:   "last_success_duration_no_option_test.flux",
										Source: "input: t_last_success()",
										Start: ast.Position{
											Column: 30,
											Line:   20,
										},
									},
								},
								Comma: nil,
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 35,
												Line:   20,
											},
											File:   "last_success_duration_no_option_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 30,
												Line:   20,
											},
										},
									},
									Name: "input",
								},
								Separator: nil,
								Value: &ast.CallExpression{
									Arguments: nil,
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 53,
												Line:   20,
											},
											File:   "last_success_duration_no_option_test.flux",
											Source: "t_last_success()",
											Start: ast.Position{
												Column: 37,
												Line:   20,
											},
										},
									},
									Callee: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 51,
													Line:   20,
												},
												File:   "last_success_duration_no_option_test.flux",
												Source: "t_last_success",
												Start: ast.Position{
													Column: 37,
													Line:   20,
												},
											},
										},
										Name: "t_last_success",
									},
									Lparen: nil,
									Rparen: nil,
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 90,
											Line:   20,
										},
										File:   "last_success_duration_no_option_test.flux",
										Source: "want: testing.loadMem(csv: outData)",
										Start: ast.Position{
											Column: 55,
											Line:   20,
										},
									},
								},
								Comma: nil,
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 59,
												Line:   20,
											},
											File:   "last_success_duration_no_option_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 55,
												Line:   20,
											},
										},
									},
									Name: "want",
								},
								Separator: nil,
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 89,
													Line:   20,
												},
												File:   "last_success_duration_no_option_test.flux",
												Source: "csv: outData",
												Start: ast.Position{
													Column: 77,
													Line:   20,
												},
											},
										},
										Lbrace: nil,
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 89,
														Line:   20,
													},
													File:   "last_success_duration_no_option_test.flux",
													Source: "csv: outData",
													Start: ast.Position{
														Column: 77,
														Line:   20,
													},
												},
											},
											Comma: nil,
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 80,
															Line:   20,
														},
														File:   "last_success_duration_no_option_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 77,
															Line:   20,
														},
													},
												},
												Name: "csv",
											},
											Separator: nil,
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 89,
															Line:   20,
														},
														File:   "last_success_duration_no_option_test.flux",
														Source: "outData",
														Start: ast.Position{
															Column: 82,
															Line:   20,
														},
													},
												},
												Name: "outData",
											},
										}},
										Rbrace: nil,
										With:   nil,
									}},
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 90,
												Line:   20,
											},
											File:   "last_success_duration_no_option_test.flux",
											Source: "testing.loadMem(csv: outData)",
											Start: ast.Position{
												Column: 61,
												Line:   20,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 76,
													Line:   20,
												},
												File:   "last_success_duration_no_option_test.flux",
												Source: "testing.loadMem",
												Start: ast.Position{
													Column: 61,
													Line:   20,
												},
											},
										},
										Lbrack: nil,
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 68,
														Line:   20,
													},
													File:   "last_success_duration_no_option_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 61,
														Line:   20,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 76,
														Line:   20,
													},
													File:   "last_success_duration_no_option_test.flux",
													Source: "loadMem",
													Start: ast.Position{
														Column: 69,
														Line:   20,
													},
												},
											},
											Name: "loadMem",
										},
										Rbrack: nil,
									},
									Lparen: nil,
									Rparen: nil,
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 117,
											Line:   20,
										},
										File:   "last_success_duration_no_option_test.flux",
										Source: "fn: (tables=<-) => tables",
										Start: ast.Position{
											Column: 92,
											Line:   20,
										},
									},
								},
								Comma: nil,
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 94,
												Line:   20,
											},
											File:   "last_success_duration_no_option_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 92,
												Line:   20,
											},
										},
									},
									Name: "fn",
								},
								Separator: nil,
								Value: &ast.FunctionExpression{
									Arrow: nil,
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 117,
												Line:   20,
											},
											File:   "last_success_duration_no_option_test.flux",
											Source: "(tables=<-) => tables",
											Start: ast.Position{
												Column: 96,
												Line:   20,
											},
										},
									},
									Body: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 117,
													Line:   20,
												},
												File:   "last_success_duration_no_option_test.flux",
												Source: "tables",
												Start: ast.Position{
													Column: 111,
													Line:   20,
												},
											},
										},
										Name: "tables",
									},
									Lparen: nil,
									Params: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 106,
													Line:   20,
												},
												File:   "last_success_duration_no_option_test.flux",
												Source: "tables=<-",
												Start: ast.Position{
													Column: 97,
													Line:   20,
												},
											},
										},
										Comma: nil,
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 103,
														Line:   20,
													},
													File:   "last_success_duration_no_option_test.flux",
													Source: "tables",
													Start: ast.Position{
														Column: 97,
														Line:   20,
													},
												},
											},
											Name: "tables",
										},
										Separator: nil,
										Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 106,
													Line:   20,
												},
												File:   "last_success_duration_no_option_test.flux",
												Source: "<-",
												Start: ast.Position{
													Column: 104,
													Line:   20,
												},
											},
										}},
									}},
									Rparan: nil,
								},
							}},
							Rbrace: nil,
							With:   nil,
						},
						Lparen: nil,
						Rparen: nil,
					},
					Lparen: nil,
					Params: []*ast.Property{},
					Rparan: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 119,
						Line:   20,
					},
					File:   "last_success_duration_no_option_test.flux",
					Source: "test _last_success = () => ({input: t_last_success(), want: testing.loadMem(csv: outData), fn: (tables=<-) => tables})",
					Start: ast.Position{
						Column: 1,
						Line:   20,
					},
				},
			},
		}},
		Eof: nil,
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   4,
					},
					File:   "last_success_duration_no_option_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   4,
						},
						File:   "last_success_duration_no_option_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "testing",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 15,
						Line:   5,
					},
					File:   "last_success_duration_no_option_test.flux",
					Source: "import \"array\"",
					Start: ast.Position{
						Column: 1,
						Line:   5,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 15,
							Line:   5,
						},
						File:   "last_success_duration_no_option_test.flux",
						Source: "\"array\"",
						Start: ast.Position{
							Column: 8,
							Line:   5,
						},
					},
				},
				Value: "array",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 35,
						Line:   6,
					},
					File:   "last_success_duration_no_option_test.flux",
					Source: "import \"influxdata/influxdb/tasks\"",
					Start: ast.Position{
						Column: 1,
						Line:   6,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 35,
							Line:   6,
						},
						File:   "last_success_duration_no_option_test.flux",
						Source: "\"influxdata/influxdb/tasks\"",
						Start: ast.Position{
							Column: 8,
							Line:   6,
						},
					},
				},
				Value: "influxdata/influxdb/tasks",
			},
		}},
		Metadata: "parser-type=rust",
		Name:     "last_success_duration_no_option_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 19,
						Line:   1,
					},
					File:   "last_success_duration_no_option_test.flux",
					Source: "package tasks_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 19,
							Line:   1,
						},
						File:   "last_success_duration_no_option_test.flux",
						Source: "tasks_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "tasks_test",
			},
		},
	}, &ast.File{
		BaseNode: ast.BaseNode{
			Comments: nil,
			Errors:   nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 119,
					Line:   21,
				},
				File:   "last_success_duration_option_test.flux",
				Source: "package tasks_test\n\n\nimport \"testing\"\nimport \"array\"\nimport \"influxdata/influxdb/tasks\"\n\noption now = () => 2020-09-08T09:00:00Z\noption tasks.lastSuccessTime = 2020-09-08T08:00:00Z\n\noutData =\n    \"\n#datatype,string,long,dateTime:RFC3339\n#group,false,false,false\n#default,_result,,\n,result,table,_time\n,,0,2020-09-08T08:00:00Z\n\"\nt_last_success = () => array.from(rows: [{_time: tasks.lastSuccess(orTime: -1d)}])\n\ntest _last_success = () => ({input: t_last_success(), want: testing.loadMem(csv: outData), fn: (tables=<-) => tables})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 40,
							Line:   8,
						},
						File:   "last_success_duration_option_test.flux",
						Source: "now = () => 2020-09-08T09:00:00Z",
						Start: ast.Position{
							Column: 8,
							Line:   8,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   8,
							},
							File:   "last_success_duration_option_test.flux",
							Source: "now",
							Start: ast.Position{
								Column: 8,
								Line:   8,
							},
						},
					},
					Name: "now",
				},
				Init: &ast.FunctionExpression{
					Arrow: nil,
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 40,
								Line:   8,
							},
							File:   "last_success_duration_option_test.flux",
							Source: "() => 2020-09-08T09:00:00Z",
							Start: ast.Position{
								Column: 14,
								Line:   8,
							},
						},
					},
					Body: &ast.DateTimeLiteral{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 40,
									Line:   8,
								},
								File:   "last_success_duration_option_test.flux",
								Source: "2020-09-08T09:00:00Z",
								Start: ast.Position{
									Column: 20,
									Line:   8,
								},
							},
						},
						Value: parser.MustParseTime("2020-09-08T09:00:00Z"),
					},
					Lparen: nil,
					Params: []*ast.Property{},
					Rparan: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 40,
						Line:   8,
					},
					File:   "last_success_duration_option_test.flux",
					Source: "option now = () => 2020-09-08T09:00:00Z",
					Start: ast.Position{
						Column: 1,
						Line:   8,
					},
				},
			},
		}, &ast.OptionStatement{
			Assignment: &ast.MemberAssignment{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 52,
							Line:   9,
						},
						File:   "last_success_duration_option_test.flux",
						Source: "tasks.lastSuccessTime = 2020-09-08T08:00:00Z",
						Start: ast.Position{
							Column: 8,
							Line:   9,
						},
					},
				},
				Init: &ast.DateTimeLiteral{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 52,
								Line:   9,
							},
							File:   "last_success_duration_option_test.flux",
							Source: "2020-09-08T08:00:00Z",
							Start: ast.Position{
								Column: 32,
								Line:   9,
							},
						},
					},
					Value: parser.MustParseTime("2020-09-08T08:00:00Z"),
				},
				Member: &ast.MemberExpression{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 29,
								Line:   9,
							},
							File:   "last_success_duration_option_test.flux",
							Source: "tasks.lastSuccessTime",
							Start: ast.Position{
								Column: 8,
								Line:   9,
							},
						},
					},
					Lbrack: nil,
					Object: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 13,
									Line:   9,
								},
								File:   "last_success_duration_option_test.flux",
								Source: "tasks",
								Start: ast.Position{
									Column: 8,
									Line:   9,
								},
							},
						},
						Name: "tasks",
					},
					Property: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 29,
									Line:   9,
								},
								File:   "last_success_duration_option_test.flux",
								Source: "lastSuccessTime",
								Start: ast.Position{
									Column: 14,
									Line:   9,
								},
							},
						},
						Name: "lastSuccessTime",
					},
					Rbrack: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 52,
						Line:   9,
					},
					File:   "last_success_duration_option_test.flux",
					Source: "option tasks.lastSuccessTime = 2020-09-08T08:00:00Z",
					Start: ast.Position{
						Column: 1,
						Line:   9,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   18,
					},
					File:   "last_success_duration_option_test.flux",
					Source: "outData =\n    \"\n#datatype,string,long,dateTime:RFC3339\n#group,false,false,false\n#default,_result,,\n,result,table,_time\n,,0,2020-09-08T08:00:00Z\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   11,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 8,
							Line:   11,
						},
						File:   "last_success_duration_option_test.flux",
						Source: "outData",
						Start: ast.Position{
							Column: 1,
							Line:   11,
						},
					},
				},
				Name: "outData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   18,
						},
						File:   "last_success_duration_option_test.flux",
						Source: "\"\n#datatype,string,long,dateTime:RFC3339\n#group,false,false,false\n#default,_result,,\n,result,table,_time\n,,0,2020-09-08T08:00:00Z\n\"",
						Start: ast.Position{
							Column: 5,
							Line:   12,
						},
					},
				},
				Value: "\n#datatype,string,long,dateTime:RFC3339\n#group,false,false,false\n#default,_result,,\n,result,table,_time\n,,0,2020-09-08T08:00:00Z\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 83,
						Line:   19,
					},
					File:   "last_success_duration_option_test.flux",
					Source: "t_last_success = () => array.from(rows: [{_time: tasks.lastSuccess(orTime: -1d)}])",
					Start: ast.Position{
						Column: 1,
						Line:   19,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 15,
							Line:   19,
						},
						File:   "last_success_duration_option_test.flux",
						Source: "t_last_success",
						Start: ast.Position{
							Column: 1,
							Line:   19,
						},
					},
				},
				Name: "t_last_success",
			},
			Init: &ast.FunctionExpression{
				Arrow: nil,
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 83,
							Line:   19,
						},
						File:   "last_success_duration_option_test.flux",
						Source: "() => array.from(rows: [{_time: tasks.lastSuccess(orTime: -1d)}])",
						Start: ast.Position{
							Column: 18,
							Line:   19,
						},
					},
				},
				Body: &ast.CallExpression{
					Arguments: []ast.Expression{&ast.ObjectExpression{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 82,
									Line:   19,
								},
								File:   "last_success_duration_option_test.flux",
								Source: "rows: [{_time: tasks.lastSuccess(orTime: -1d)}]",
								Start: ast.Position{
									Column: 35,
									Line:   19,
								},
							},
						},
						Lbrace: nil,
						Properties: []*ast.Property{&ast.Property{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 82,
										Line:   19,
									},
									File:   "last_success_duration_option_test.flux",
									Source: "rows: [{_time: tasks.lastSuccess(orTime: -1d)}]",
									Start: ast.Position{
										Column: 35,
										Line:   19,
									},
								},
							},
							Comma: nil,
							Key: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 39,
											Line:   19,
										},
										File:   "last_success_duration_option_test.flux",
										Source: "rows",
										Start: ast.Position{
											Column: 35,
											Line:   19,
										},
									},
								},
								Name: "rows",
							},
							Separator: nil,
							Value: &ast.ArrayExpression{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 82,
											Line:   19,
										},
										File:   "last_success_duration_option_test.flux",
										Source: "[{_time: tasks.lastSuccess(orTime: -1d)}]",
										Start: ast.Position{
											Column: 41,
											Line:   19,
										},
									},
								},
								Elements: []ast.Expression{&ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 81,
												Line:   19,
											},
											File:   "last_success_duration_option_test.flux",
											Source: "{_time: tasks.lastSuccess(orTime: -1d)}",
											Start: ast.Position{
												Column: 42,
												Line:   19,
											},
										},
									},
									Lbrace: nil,
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 80,
													Line:   19,
												},
												File:   "last_success_duration_option_test.flux",
												Source: "_time: tasks.lastSuccess(orTime: -1d)",
												Start: ast.Position{
													Column: 43,
													Line:   19,
												},
											},
										},
										Comma: nil,
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 48,
														Line:   19,
													},
													File:   "last_success_duration_option_test.flux",
													Source: "_time",
													Start: ast.Position{
														Column: 43,
														Line:   19,
													},
												},
											},
											Name: "_time",
										},
										Separator: nil,
										Value: &ast.CallExpression{
											Arguments: []ast.Expression{&ast.ObjectExpression{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 79,
															Line:   19,
														},
														File:   "last_success_duration_option_test.flux",
														Source: "orTime: -1d",
														Start: ast.Position{
															Column: 68,
															Line:   19,
														},
													},
												},
												Lbrace: nil,
												Properties: []*ast.Property{&ast.Property{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 79,
																Line:   19,
															},
															File:   "last_success_duration_option_test.flux",
															Source: "orTime: -1d",
															Start: ast.Position{
																Column: 68,
																Line:   19,
															},
														},
													},
													Comma: nil,
													Key: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Comments: nil,
															Errors:   nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 74,
																	Line:   19,
																},
																File:   "last_success_duration_option_test.flux",
																Source: "orTime",
																Start: ast.Position{
																	Column: 68,
																	Line:   19,
																},
															},
														},
														Name: "orTime",
													},
													Separator: nil,
													Value: &ast.UnaryExpression{
														Argument: &ast.DurationLiteral{
															BaseNode: ast.BaseNode{
																Comments: nil,
																Errors:   nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 79,
																		Line:   19,
																	},
																	File:   "last_success_duration_option_test.flux",
																	Source: "1d",
																	Start: ast.Position{
																		Column: 77,
																		Line:   19,
																	},
																},
															},
															Values: []ast.Duration{ast.Duration{
																Magnitude: int64(1),
																Unit:      "d",
															}},
														},
														BaseNode: ast.BaseNode{
															Comments: nil,
															Errors:   nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 79,
																	Line:   19,
																},
																File:   "last_success_duration_option_test.flux",
																Source: "-1d",
																Start: ast.Position{
																	Column: 76,
																	Line:   19,
																},
															},
														},
														Operator: 6,
													},
												}},
												Rbrace: nil,
												With:   nil,
											}},
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 80,
														Line:   19,
													},
													File:   "last_success_duration_option_test.flux",
													Source: "tasks.lastSuccess(orTime: -1d)",
													Start: ast.Position{
														Column: 50,
														Line:   19,
													},
												},
											},
											Callee: &ast.MemberExpression{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 67,
															Line:   19,
														},
														File:   "last_success_duration_option_test.flux",
														Source: "tasks.lastSuccess",
														Start: ast.Position{
															Column: 50,
															Line:   19,
														},
													},
												},
												Lbrack: nil,
												Object: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 55,
																Line:   19,
															},
															File:   "last_success_duration_option_test.flux",
															Source: "tasks",
															Start: ast.Position{
																Column: 50,
																Line:   19,
															},
														},
													},
													Name: "tasks",
												},
												Property: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 67,
																Line:   19,
															},
															File:   "last_success_duration_option_test.flux",
															Source: "lastSuccess",
															Start: ast.Position{
																Column: 56,
																Line:   19,
															},
														},
													},
													Name: "lastSuccess",
												},
												Rbrack: nil,
											},
											Lparen: nil,
											Rparen: nil,
										},
									}},
									Rbrace: nil,
									With:   nil,
								}},
								Lbrack: nil,
								Rbrack: nil,
							},
						}},
						Rbrace: nil,
						With:   nil,
					}},
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 83,
								Line:   19,
							},
							File:   "last_success_duration_option_test.flux",
							Source: "array.from(rows: [{_time: tasks.lastSuccess(orTime: -1d)}])",
							Start: ast.Position{
								Column: 24,
								Line:   19,
							},
						},
					},
					Callee: &ast.MemberExpression{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 34,
									Line:   19,
								},
								File:   "last_success_duration_option_test.flux",
								Source: "array.from",
								Start: ast.Position{
									Column: 24,
									Line:   19,
								},
							},
						},
						Lbrack: nil,
						Object: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 29,
										Line:   19,
									},
									File:   "last_success_duration_option_test.flux",
									Source: "array",
									Start: ast.Position{
										Column: 24,
										Line:   19,
									},
								},
							},
							Name: "array",
						},
						Property: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 34,
										Line:   19,
									},
									File:   "last_success_duration_option_test.flux",
									Source: "from",
									Start: ast.Position{
										Column: 30,
										Line:   19,
									},
								},
							},
							Name: "from",
						},
						Rbrack: nil,
					},
					Lparen: nil,
					Rparen: nil,
				},
				Lparen: nil,
				Params: []*ast.Property{},
				Rparan: nil,
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 119,
							Line:   21,
						},
						File:   "last_success_duration_option_test.flux",
						Source: "_last_success = () => ({input: t_last_success(), want: testing.loadMem(csv: outData), fn: (tables=<-) => tables})",
						Start: ast.Position{
							Column: 6,
							Line:   21,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 19,
								Line:   21,
							},
							File:   "last_success_duration_option_test.flux",
							Source: "_last_success",
							Start: ast.Position{
								Column: 6,
								Line:   21,
							},
						},
					},
					Name: "_last_success",
				},
				Init: &ast.FunctionExpression{
					Arrow: nil,
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 119,
								Line:   21,
							},
							File:   "last_success_duration_option_test.flux",
							Source: "() => ({input: t_last_success(), want: testing.loadMem(csv: outData), fn: (tables=<-) => tables})",
							Start: ast.Position{
								Column: 22,
								Line:   21,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 119,
									Line:   21,
								},
								File:   "last_success_duration_option_test.flux",
								Source: "({input: t_last_success(), want: testing.loadMem(csv: outData), fn: (tables=<-) => tables})",
								Start: ast.Position{
									Column: 28,
									Line:   21,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 118,
										Line:   21,
									},
									File:   "last_success_duration_option_test.flux",
									Source: "{input: t_last_success(), want: testing.loadMem(csv: outData), fn: (tables=<-) => tables}",
									Start: ast.Position{
										Column: 29,
										Line:   21,
									},
								},
							},
							Lbrace: nil,
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 53,
											Line:   21,
										},
										File:   "last_success_duration_option_test.flux",
										Source: "input: t_last_success()",
										Start: ast.Position{
											Column: 30,
											Line:   21,
										},
									},
								},
								Comma: nil,
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 35,
												Line:   21,
											},
											File:   "last_success_duration_option_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 30,
												Line:   21,
											},
										},
									},
									Name: "input",
								},
								Separator: nil,
								Value: &ast.CallExpression{
									Arguments: nil,
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 53,
												Line:   21,
											},
											File:   "last_success_duration_option_test.flux",
											Source: "t_last_success()",
											Start: ast.Position{
												Column: 37,
												Line:   21,
											},
										},
									},
									Callee: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 51,
													Line:   21,
												},
												File:   "last_success_duration_option_test.flux",
												Source: "t_last_success",
												Start: ast.Position{
													Column: 37,
													Line:   21,
												},
											},
										},
										Name: "t_last_success",
									},
									Lparen: nil,
									Rparen: nil,
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 90,
											Line:   21,
										},
										File:   "last_success_duration_option_test.flux",
										Source: "want: testing.loadMem(csv: outData)",
										Start: ast.Position{
											Column: 55,
											Line:   21,
										},
									},
								},
								Comma: nil,
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 59,
												Line:   21,
											},
											File:   "last_success_duration_option_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 55,
												Line:   21,
											},
										},
									},
									Name: "want",
								},
								Separator: nil,
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 89,
													Line:   21,
												},
												File:   "last_success_duration_option_test.flux",
												Source: "csv: outData",
												Start: ast.Position{
													Column: 77,
													Line:   21,
												},
											},
										},
										Lbrace: nil,
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 89,
														Line:   21,
													},
													File:   "last_success_duration_option_test.flux",
													Source: "csv: outData",
													Start: ast.Position{
														Column: 77,
														Line:   21,
													},
												},
											},
											Comma: nil,
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 80,
															Line:   21,
														},
														File:   "last_success_duration_option_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 77,
															Line:   21,
														},
													},
												},
												Name: "csv",
											},
											Separator: nil,
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 89,
															Line:   21,
														},
														File:   "last_success_duration_option_test.flux",
														Source: "outData",
														Start: ast.Position{
															Column: 82,
															Line:   21,
														},
													},
												},
												Name: "outData",
											},
										}},
										Rbrace: nil,
										With:   nil,
									}},
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 90,
												Line:   21,
											},
											File:   "last_success_duration_option_test.flux",
											Source: "testing.loadMem(csv: outData)",
											Start: ast.Position{
												Column: 61,
												Line:   21,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 76,
													Line:   21,
												},
												File:   "last_success_duration_option_test.flux",
												Source: "testing.loadMem",
												Start: ast.Position{
													Column: 61,
													Line:   21,
												},
											},
										},
										Lbrack: nil,
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 68,
														Line:   21,
													},
													File:   "last_success_duration_option_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 61,
														Line:   21,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 76,
														Line:   21,
													},
													File:   "last_success_duration_option_test.flux",
													Source: "loadMem",
													Start: ast.Position{
														Column: 69,
														Line:   21,
													},
												},
											},
											Name: "loadMem",
										},
										Rbrack: nil,
									},
									Lparen: nil,
									Rparen: nil,
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 117,
											Line:   21,
										},
										File:   "last_success_duration_option_test.flux",
										Source: "fn: (tables=<-) => tables",
										Start: ast.Position{
											Column: 92,
											Line:   21,
										},
									},
								},
								Comma: nil,
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 94,
												Line:   21,
											},
											File:   "last_success_duration_option_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 92,
												Line:   21,
											},
										},
									},
									Name: "fn",
								},
								Separator: nil,
								Value: &ast.FunctionExpression{
									Arrow: nil,
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 117,
												Line:   21,
											},
											File:   "last_success_duration_option_test.flux",
											Source: "(tables=<-) => tables",
											Start: ast.Position{
												Column: 96,
												Line:   21,
											},
										},
									},
									Body: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 117,
													Line:   21,
												},
												File:   "last_success_duration_option_test.flux",
												Source: "tables",
												Start: ast.Position{
													Column: 111,
													Line:   21,
												},
											},
										},
										Name: "tables",
									},
									Lparen: nil,
									Params: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 106,
													Line:   21,
												},
												File:   "last_success_duration_option_test.flux",
												Source: "tables=<-",
												Start: ast.Position{
													Column: 97,
													Line:   21,
												},
											},
										},
										Comma: nil,
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 103,
														Line:   21,
													},
													File:   "last_success_duration_option_test.flux",
													Source: "tables",
													Start: ast.Position{
														Column: 97,
														Line:   21,
													},
												},
											},
											Name: "tables",
										},
										Separator: nil,
										Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 106,
													Line:   21,
												},
												File:   "last_success_duration_option_test.flux",
												Source: "<-",
												Start: ast.Position{
													Column: 104,
													Line:   21,
												},
											},
										}},
									}},
									Rparan: nil,
								},
							}},
							Rbrace: nil,
							With:   nil,
						},
						Lparen: nil,
						Rparen: nil,
					},
					Lparen: nil,
					Params: []*ast.Property{},
					Rparan: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 119,
						Line:   21,
					},
					File:   "last_success_duration_option_test.flux",
					Source: "test _last_success = () => ({input: t_last_success(), want: testing.loadMem(csv: outData), fn: (tables=<-) => tables})",
					Start: ast.Position{
						Column: 1,
						Line:   21,
					},
				},
			},
		}},
		Eof: nil,
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   4,
					},
					File:   "last_success_duration_option_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   4,
						},
						File:   "last_success_duration_option_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "testing",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 15,
						Line:   5,
					},
					File:   "last_success_duration_option_test.flux",
					Source: "import \"array\"",
					Start: ast.Position{
						Column: 1,
						Line:   5,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 15,
							Line:   5,
						},
						File:   "last_success_duration_option_test.flux",
						Source: "\"array\"",
						Start: ast.Position{
							Column: 8,
							Line:   5,
						},
					},
				},
				Value: "array",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 35,
						Line:   6,
					},
					File:   "last_success_duration_option_test.flux",
					Source: "import \"influxdata/influxdb/tasks\"",
					Start: ast.Position{
						Column: 1,
						Line:   6,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 35,
							Line:   6,
						},
						File:   "last_success_duration_option_test.flux",
						Source: "\"influxdata/influxdb/tasks\"",
						Start: ast.Position{
							Column: 8,
							Line:   6,
						},
					},
				},
				Value: "influxdata/influxdb/tasks",
			},
		}},
		Metadata: "parser-type=rust",
		Name:     "last_success_duration_option_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 19,
						Line:   1,
					},
					File:   "last_success_duration_option_test.flux",
					Source: "package tasks_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 19,
							Line:   1,
						},
						File:   "last_success_duration_option_test.flux",
						Source: "tasks_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "tasks_test",
			},
		},
	}, &ast.File{
		BaseNode: ast.BaseNode{
			Comments: nil,
			Errors:   nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 119,
					Line:   21,
				},
				File:   "last_success_with_option_test.flux",
				Source: "package tasks_test\n\n\nimport \"testing\"\nimport \"array\"\nimport \"influxdata/influxdb/tasks\"\n\noption now = () => 2020-09-08T09:00:00Z\noption tasks.lastSuccessTime = 2020-09-08T08:00:00Z\n\noutData =\n    \"\n#datatype,string,long,dateTime:RFC3339\n#group,false,false,false\n#default,_result,,\n,result,table,_time\n,,0,2020-09-08T08:00:00Z\n\"\nt_last_success = () => array.from(rows: [{_time: tasks.lastSuccess(orTime: now())}])\n\ntest _last_success = () => ({input: t_last_success(), want: testing.loadMem(csv: outData), fn: (tables=<-) => tables})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 40,
							Line:   8,
						},
						File:   "last_success_with_option_test.flux",
						Source: "now = () => 2020-09-08T09:00:00Z",
						Start: ast.Position{
							Column: 8,
							Line:   8,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   8,
							},
							File:   "last_success_with_option_test.flux",
							Source: "now",
							Start: ast.Position{
								Column: 8,
								Line:   8,
							},
						},
					},
					Name: "now",
				},
				Init: &ast.FunctionExpression{
					Arrow: nil,
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 40,
								Line:   8,
							},
							File:   "last_success_with_option_test.flux",
							Source: "() => 2020-09-08T09:00:00Z",
							Start: ast.Position{
								Column: 14,
								Line:   8,
							},
						},
					},
					Body: &ast.DateTimeLiteral{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 40,
									Line:   8,
								},
								File:   "last_success_with_option_test.flux",
								Source: "2020-09-08T09:00:00Z",
								Start: ast.Position{
									Column: 20,
									Line:   8,
								},
							},
						},
						Value: parser.MustParseTime("2020-09-08T09:00:00Z"),
					},
					Lparen: nil,
					Params: []*ast.Property{},
					Rparan: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 40,
						Line:   8,
					},
					File:   "last_success_with_option_test.flux",
					Source: "option now = () => 2020-09-08T09:00:00Z",
					Start: ast.Position{
						Column: 1,
						Line:   8,
					},
				},
			},
		}, &ast.OptionStatement{
			Assignment: &ast.MemberAssignment{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 52,
							Line:   9,
						},
						File:   "last_success_with_option_test.flux",
						Source: "tasks.lastSuccessTime = 2020-09-08T08:00:00Z",
						Start: ast.Position{
							Column: 8,
							Line:   9,
						},
					},
				},
				Init: &ast.DateTimeLiteral{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 52,
								Line:   9,
							},
							File:   "last_success_with_option_test.flux",
							Source: "2020-09-08T08:00:00Z",
							Start: ast.Position{
								Column: 32,
								Line:   9,
							},
						},
					},
					Value: parser.MustParseTime("2020-09-08T08:00:00Z"),
				},
				Member: &ast.MemberExpression{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 29,
								Line:   9,
							},
							File:   "last_success_with_option_test.flux",
							Source: "tasks.lastSuccessTime",
							Start: ast.Position{
								Column: 8,
								Line:   9,
							},
						},
					},
					Lbrack: nil,
					Object: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 13,
									Line:   9,
								},
								File:   "last_success_with_option_test.flux",
								Source: "tasks",
								Start: ast.Position{
									Column: 8,
									Line:   9,
								},
							},
						},
						Name: "tasks",
					},
					Property: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 29,
									Line:   9,
								},
								File:   "last_success_with_option_test.flux",
								Source: "lastSuccessTime",
								Start: ast.Position{
									Column: 14,
									Line:   9,
								},
							},
						},
						Name: "lastSuccessTime",
					},
					Rbrack: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 52,
						Line:   9,
					},
					File:   "last_success_with_option_test.flux",
					Source: "option tasks.lastSuccessTime = 2020-09-08T08:00:00Z",
					Start: ast.Position{
						Column: 1,
						Line:   9,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   18,
					},
					File:   "last_success_with_option_test.flux",
					Source: "outData =\n    \"\n#datatype,string,long,dateTime:RFC3339\n#group,false,false,false\n#default,_result,,\n,result,table,_time\n,,0,2020-09-08T08:00:00Z\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   11,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 8,
							Line:   11,
						},
						File:   "last_success_with_option_test.flux",
						Source: "outData",
						Start: ast.Position{
							Column: 1,
							Line:   11,
						},
					},
				},
				Name: "outData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   18,
						},
						File:   "last_success_with_option_test.flux",
						Source: "\"\n#datatype,string,long,dateTime:RFC3339\n#group,false,false,false\n#default,_result,,\n,result,table,_time\n,,0,2020-09-08T08:00:00Z\n\"",
						Start: ast.Position{
							Column: 5,
							Line:   12,
						},
					},
				},
				Value: "\n#datatype,string,long,dateTime:RFC3339\n#group,false,false,false\n#default,_result,,\n,result,table,_time\n,,0,2020-09-08T08:00:00Z\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 85,
						Line:   19,
					},
					File:   "last_success_with_option_test.flux",
					Source: "t_last_success = () => array.from(rows: [{_time: tasks.lastSuccess(orTime: now())}])",
					Start: ast.Position{
						Column: 1,
						Line:   19,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 15,
							Line:   19,
						},
						File:   "last_success_with_option_test.flux",
						Source: "t_last_success",
						Start: ast.Position{
							Column: 1,
							Line:   19,
						},
					},
				},
				Name: "t_last_success",
			},
			Init: &ast.FunctionExpression{
				Arrow: nil,
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 85,
							Line:   19,
						},
						File:   "last_success_with_option_test.flux",
						Source: "() => array.from(rows: [{_time: tasks.lastSuccess(orTime: now())}])",
						Start: ast.Position{
							Column: 18,
							Line:   19,
						},
					},
				},
				Body: &ast.CallExpression{
					Arguments: []ast.Expression{&ast.ObjectExpression{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 84,
									Line:   19,
								},
								File:   "last_success_with_option_test.flux",
								Source: "rows: [{_time: tasks.lastSuccess(orTime: now())}]",
								Start: ast.Position{
									Column: 35,
									Line:   19,
								},
							},
						},
						Lbrace: nil,
						Properties: []*ast.Property{&ast.Property{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 84,
										Line:   19,
									},
									File:   "last_success_with_option_test.flux",
									Source: "rows: [{_time: tasks.lastSuccess(orTime: now())}]",
									Start: ast.Position{
										Column: 35,
										Line:   19,
									},
								},
							},
							Comma: nil,
							Key: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 39,
											Line:   19,
										},
										File:   "last_success_with_option_test.flux",
										Source: "rows",
										Start: ast.Position{
											Column: 35,
											Line:   19,
										},
									},
								},
								Name: "rows",
							},
							Separator: nil,
							Value: &ast.ArrayExpression{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 84,
											Line:   19,
										},
										File:   "last_success_with_option_test.flux",
										Source: "[{_time: tasks.lastSuccess(orTime: now())}]",
										Start: ast.Position{
											Column: 41,
											Line:   19,
										},
									},
								},
								Elements: []ast.Expression{&ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 83,
												Line:   19,
											},
											File:   "last_success_with_option_test.flux",
											Source: "{_time: tasks.lastSuccess(orTime: now())}",
											Start: ast.Position{
												Column: 42,
												Line:   19,
											},
										},
									},
									Lbrace: nil,
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 82,
													Line:   19,
												},
												File:   "last_success_with_option_test.flux",
												Source: "_time: tasks.lastSuccess(orTime: now())",
												Start: ast.Position{
													Column: 43,
													Line:   19,
												},
											},
										},
										Comma: nil,
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 48,
														Line:   19,
													},
													File:   "last_success_with_option_test.flux",
													Source: "_time",
													Start: ast.Position{
														Column: 43,
														Line:   19,
													},
												},
											},
											Name: "_time",
										},
										Separator: nil,
										Value: &ast.CallExpression{
											Arguments: []ast.Expression{&ast.ObjectExpression{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 81,
															Line:   19,
														},
														File:   "last_success_with_option_test.flux",
														Source: "orTime: now()",
														Start: ast.Position{
															Column: 68,
															Line:   19,
														},
													},
												},
												Lbrace: nil,
												Properties: []*ast.Property{&ast.Property{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 81,
																Line:   19,
															},
															File:   "last_success_with_option_test.flux",
															Source: "orTime: now()",
															Start: ast.Position{
																Column: 68,
																Line:   19,
															},
														},
													},
													Comma: nil,
													Key: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Comments: nil,
															Errors:   nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 74,
																	Line:   19,
																},
																File:   "last_success_with_option_test.flux",
																Source: "orTime",
																Start: ast.Position{
																	Column: 68,
																	Line:   19,
																},
															},
														},
														Name: "orTime",
													},
													Separator: nil,
													Value: &ast.CallExpression{
														Arguments: nil,
														BaseNode: ast.BaseNode{
															Comments: nil,
															Errors:   nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 81,
																	Line:   19,
																},
																File:   "last_success_with_option_test.flux",
																Source: "now()",
																Start: ast.Position{
																	Column: 76,
																	Line:   19,
																},
															},
														},
														Callee: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Comments: nil,
																Errors:   nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 79,
																		Line:   19,
																	},
																	File:   "last_success_with_option_test.flux",
																	Source: "now",
																	Start: ast.Position{
																		Column: 76,
																		Line:   19,
																	},
																},
															},
															Name: "now",
														},
														Lparen: nil,
														Rparen: nil,
													},
												}},
												Rbrace: nil,
												With:   nil,
											}},
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 82,
														Line:   19,
													},
													File:   "last_success_with_option_test.flux",
													Source: "tasks.lastSuccess(orTime: now())",
													Start: ast.Position{
														Column: 50,
														Line:   19,
													},
												},
											},
											Callee: &ast.MemberExpression{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 67,
															Line:   19,
														},
														File:   "last_success_with_option_test.flux",
														Source: "tasks.lastSuccess",
														Start: ast.Position{
															Column: 50,
															Line:   19,
														},
													},
												},
												Lbrack: nil,
												Object: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 55,
																Line:   19,
															},
															File:   "last_success_with_option_test.flux",
															Source: "tasks",
															Start: ast.Position{
																Column: 50,
																Line:   19,
															},
														},
													},
													Name: "tasks",
												},
												Property: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 67,
																Line:   19,
															},
															File:   "last_success_with_option_test.flux",
															Source: "lastSuccess",
															Start: ast.Position{
																Column: 56,
																Line:   19,
															},
														},
													},
													Name: "lastSuccess",
												},
												Rbrack: nil,
											},
											Lparen: nil,
											Rparen: nil,
										},
									}},
									Rbrace: nil,
									With:   nil,
								}},
								Lbrack: nil,
								Rbrack: nil,
							},
						}},
						Rbrace: nil,
						With:   nil,
					}},
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 85,
								Line:   19,
							},
							File:   "last_success_with_option_test.flux",
							Source: "array.from(rows: [{_time: tasks.lastSuccess(orTime: now())}])",
							Start: ast.Position{
								Column: 24,
								Line:   19,
							},
						},
					},
					Callee: &ast.MemberExpression{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 34,
									Line:   19,
								},
								File:   "last_success_with_option_test.flux",
								Source: "array.from",
								Start: ast.Position{
									Column: 24,
									Line:   19,
								},
							},
						},
						Lbrack: nil,
						Object: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 29,
										Line:   19,
									},
									File:   "last_success_with_option_test.flux",
									Source: "array",
									Start: ast.Position{
										Column: 24,
										Line:   19,
									},
								},
							},
							Name: "array",
						},
						Property: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 34,
										Line:   19,
									},
									File:   "last_success_with_option_test.flux",
									Source: "from",
									Start: ast.Position{
										Column: 30,
										Line:   19,
									},
								},
							},
							Name: "from",
						},
						Rbrack: nil,
					},
					Lparen: nil,
					Rparen: nil,
				},
				Lparen: nil,
				Params: []*ast.Property{},
				Rparan: nil,
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 119,
							Line:   21,
						},
						File:   "last_success_with_option_test.flux",
						Source: "_last_success = () => ({input: t_last_success(), want: testing.loadMem(csv: outData), fn: (tables=<-) => tables})",
						Start: ast.Position{
							Column: 6,
							Line:   21,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 19,
								Line:   21,
							},
							File:   "last_success_with_option_test.flux",
							Source: "_last_success",
							Start: ast.Position{
								Column: 6,
								Line:   21,
							},
						},
					},
					Name: "_last_success",
				},
				Init: &ast.FunctionExpression{
					Arrow: nil,
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 119,
								Line:   21,
							},
							File:   "last_success_with_option_test.flux",
							Source: "() => ({input: t_last_success(), want: testing.loadMem(csv: outData), fn: (tables=<-) => tables})",
							Start: ast.Position{
								Column: 22,
								Line:   21,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 119,
									Line:   21,
								},
								File:   "last_success_with_option_test.flux",
								Source: "({input: t_last_success(), want: testing.loadMem(csv: outData), fn: (tables=<-) => tables})",
								Start: ast.Position{
									Column: 28,
									Line:   21,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 118,
										Line:   21,
									},
									File:   "last_success_with_option_test.flux",
									Source: "{input: t_last_success(), want: testing.loadMem(csv: outData), fn: (tables=<-) => tables}",
									Start: ast.Position{
										Column: 29,
										Line:   21,
									},
								},
							},
							Lbrace: nil,
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 53,
											Line:   21,
										},
										File:   "last_success_with_option_test.flux",
										Source: "input: t_last_success()",
										Start: ast.Position{
											Column: 30,
											Line:   21,
										},
									},
								},
								Comma: nil,
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 35,
												Line:   21,
											},
											File:   "last_success_with_option_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 30,
												Line:   21,
											},
										},
									},
									Name: "input",
								},
								Separator: nil,
								Value: &ast.CallExpression{
									Arguments: nil,
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 53,
												Line:   21,
											},
											File:   "last_success_with_option_test.flux",
											Source: "t_last_success()",
											Start: ast.Position{
												Column: 37,
												Line:   21,
											},
										},
									},
									Callee: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 51,
													Line:   21,
												},
												File:   "last_success_with_option_test.flux",
												Source: "t_last_success",
												Start: ast.Position{
													Column: 37,
													Line:   21,
												},
											},
										},
										Name: "t_last_success",
									},
									Lparen: nil,
									Rparen: nil,
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 90,
											Line:   21,
										},
										File:   "last_success_with_option_test.flux",
										Source: "want: testing.loadMem(csv: outData)",
										Start: ast.Position{
											Column: 55,
											Line:   21,
										},
									},
								},
								Comma: nil,
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 59,
												Line:   21,
											},
											File:   "last_success_with_option_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 55,
												Line:   21,
											},
										},
									},
									Name: "want",
								},
								Separator: nil,
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 89,
													Line:   21,
												},
												File:   "last_success_with_option_test.flux",
												Source: "csv: outData",
												Start: ast.Position{
													Column: 77,
													Line:   21,
												},
											},
										},
										Lbrace: nil,
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 89,
														Line:   21,
													},
													File:   "last_success_with_option_test.flux",
													Source: "csv: outData",
													Start: ast.Position{
														Column: 77,
														Line:   21,
													},
												},
											},
											Comma: nil,
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 80,
															Line:   21,
														},
														File:   "last_success_with_option_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 77,
															Line:   21,
														},
													},
												},
												Name: "csv",
											},
											Separator: nil,
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 89,
															Line:   21,
														},
														File:   "last_success_with_option_test.flux",
														Source: "outData",
														Start: ast.Position{
															Column: 82,
															Line:   21,
														},
													},
												},
												Name: "outData",
											},
										}},
										Rbrace: nil,
										With:   nil,
									}},
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 90,
												Line:   21,
											},
											File:   "last_success_with_option_test.flux",
											Source: "testing.loadMem(csv: outData)",
											Start: ast.Position{
												Column: 61,
												Line:   21,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 76,
													Line:   21,
												},
												File:   "last_success_with_option_test.flux",
												Source: "testing.loadMem",
												Start: ast.Position{
													Column: 61,
													Line:   21,
												},
											},
										},
										Lbrack: nil,
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 68,
														Line:   21,
													},
													File:   "last_success_with_option_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 61,
														Line:   21,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 76,
														Line:   21,
													},
													File:   "last_success_with_option_test.flux",
													Source: "loadMem",
													Start: ast.Position{
														Column: 69,
														Line:   21,
													},
												},
											},
											Name: "loadMem",
										},
										Rbrack: nil,
									},
									Lparen: nil,
									Rparen: nil,
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 117,
											Line:   21,
										},
										File:   "last_success_with_option_test.flux",
										Source: "fn: (tables=<-) => tables",
										Start: ast.Position{
											Column: 92,
											Line:   21,
										},
									},
								},
								Comma: nil,
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 94,
												Line:   21,
											},
											File:   "last_success_with_option_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 92,
												Line:   21,
											},
										},
									},
									Name: "fn",
								},
								Separator: nil,
								Value: &ast.FunctionExpression{
									Arrow: nil,
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 117,
												Line:   21,
											},
											File:   "last_success_with_option_test.flux",
											Source: "(tables=<-) => tables",
											Start: ast.Position{
												Column: 96,
												Line:   21,
											},
										},
									},
									Body: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 117,
													Line:   21,
												},
												File:   "last_success_with_option_test.flux",
												Source: "tables",
												Start: ast.Position{
													Column: 111,
													Line:   21,
												},
											},
										},
										Name: "tables",
									},
									Lparen: nil,
									Params: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 106,
													Line:   21,
												},
												File:   "last_success_with_option_test.flux",
												Source: "tables=<-",
												Start: ast.Position{
													Column: 97,
													Line:   21,
												},
											},
										},
										Comma: nil,
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 103,
														Line:   21,
													},
													File:   "last_success_with_option_test.flux",
													Source: "tables",
													Start: ast.Position{
														Column: 97,
														Line:   21,
													},
												},
											},
											Name: "tables",
										},
										Separator: nil,
										Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 106,
													Line:   21,
												},
												File:   "last_success_with_option_test.flux",
												Source: "<-",
												Start: ast.Position{
													Column: 104,
													Line:   21,
												},
											},
										}},
									}},
									Rparan: nil,
								},
							}},
							Rbrace: nil,
							With:   nil,
						},
						Lparen: nil,
						Rparen: nil,
					},
					Lparen: nil,
					Params: []*ast.Property{},
					Rparan: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 119,
						Line:   21,
					},
					File:   "last_success_with_option_test.flux",
					Source: "test _last_success = () => ({input: t_last_success(), want: testing.loadMem(csv: outData), fn: (tables=<-) => tables})",
					Start: ast.Position{
						Column: 1,
						Line:   21,
					},
				},
			},
		}},
		Eof: nil,
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   4,
					},
					File:   "last_success_with_option_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   4,
						},
						File:   "last_success_with_option_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "testing",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 15,
						Line:   5,
					},
					File:   "last_success_with_option_test.flux",
					Source: "import \"array\"",
					Start: ast.Position{
						Column: 1,
						Line:   5,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 15,
							Line:   5,
						},
						File:   "last_success_with_option_test.flux",
						Source: "\"array\"",
						Start: ast.Position{
							Column: 8,
							Line:   5,
						},
					},
				},
				Value: "array",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 35,
						Line:   6,
					},
					File:   "last_success_with_option_test.flux",
					Source: "import \"influxdata/influxdb/tasks\"",
					Start: ast.Position{
						Column: 1,
						Line:   6,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 35,
							Line:   6,
						},
						File:   "last_success_with_option_test.flux",
						Source: "\"influxdata/influxdb/tasks\"",
						Start: ast.Position{
							Column: 8,
							Line:   6,
						},
					},
				},
				Value: "influxdata/influxdb/tasks",
			},
		}},
		Metadata: "parser-type=rust",
		Name:     "last_success_with_option_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 19,
						Line:   1,
					},
					File:   "last_success_with_option_test.flux",
					Source: "package tasks_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 19,
							Line:   1,
						},
						File:   "last_success_with_option_test.flux",
						Source: "tasks_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "tasks_test",
			},
		},
	}, &ast.File{
		BaseNode: ast.BaseNode{
			Comments: nil,
			Errors:   nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 119,
					Line:   20,
				},
				File:   "last_success_without_option_test.flux",
				Source: "package tasks_test\n\n\nimport \"testing\"\nimport \"array\"\nimport \"influxdata/influxdb/tasks\"\n\noption now = () => 2020-09-08T09:00:00Z\n\noutData =\n    \"\n#datatype,string,long,dateTime:RFC3339\n#group,false,false,false\n#default,_result,,\n,result,table,_time\n,,0,2020-09-08T09:00:00Z\n\"\nt_last_success = () => array.from(rows: [{_time: tasks.lastSuccess(orTime: now())}])\n\ntest _last_success = () => ({input: t_last_success(), want: testing.loadMem(csv: outData), fn: (tables=<-) => tables})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 40,
							Line:   8,
						},
						File:   "last_success_without_option_test.flux",
						Source: "now = () => 2020-09-08T09:00:00Z",
						Start: ast.Position{
							Column: 8,
							Line:   8,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   8,
							},
							File:   "last_success_without_option_test.flux",
							Source: "now",
							Start: ast.Position{
								Column: 8,
								Line:   8,
							},
						},
					},
					Name: "now",
				},
				Init: &ast.FunctionExpression{
					Arrow: nil,
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 40,
								Line:   8,
							},
							File:   "last_success_without_option_test.flux",
							Source: "() => 2020-09-08T09:00:00Z",
							Start: ast.Position{
								Column: 14,
								Line:   8,
							},
						},
					},
					Body: &ast.DateTimeLiteral{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 40,
									Line:   8,
								},
								File:   "last_success_without_option_test.flux",
								Source: "2020-09-08T09:00:00Z",
								Start: ast.Position{
									Column: 20,
									Line:   8,
								},
							},
						},
						Value: parser.MustParseTime("2020-09-08T09:00:00Z"),
					},
					Lparen: nil,
					Params: []*ast.Property{},
					Rparan: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 40,
						Line:   8,
					},
					File:   "last_success_without_option_test.flux",
					Source: "option now = () => 2020-09-08T09:00:00Z",
					Start: ast.Position{
						Column: 1,
						Line:   8,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   17,
					},
					File:   "last_success_without_option_test.flux",
					Source: "outData =\n    \"\n#datatype,string,long,dateTime:RFC3339\n#group,false,false,false\n#default,_result,,\n,result,table,_time\n,,0,2020-09-08T09:00:00Z\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   10,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 8,
							Line:   10,
						},
						File:   "last_success_without_option_test.flux",
						Source: "outData",
						Start: ast.Position{
							Column: 1,
							Line:   10,
						},
					},
				},
				Name: "outData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   17,
						},
						File:   "last_success_without_option_test.flux",
						Source: "\"\n#datatype,string,long,dateTime:RFC3339\n#group,false,false,false\n#default,_result,,\n,result,table,_time\n,,0,2020-09-08T09:00:00Z\n\"",
						Start: ast.Position{
							Column: 5,
							Line:   11,
						},
					},
				},
				Value: "\n#datatype,string,long,dateTime:RFC3339\n#group,false,false,false\n#default,_result,,\n,result,table,_time\n,,0,2020-09-08T09:00:00Z\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 85,
						Line:   18,
					},
					File:   "last_success_without_option_test.flux",
					Source: "t_last_success = () => array.from(rows: [{_time: tasks.lastSuccess(orTime: now())}])",
					Start: ast.Position{
						Column: 1,
						Line:   18,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 15,
							Line:   18,
						},
						File:   "last_success_without_option_test.flux",
						Source: "t_last_success",
						Start: ast.Position{
							Column: 1,
							Line:   18,
						},
					},
				},
				Name: "t_last_success",
			},
			Init: &ast.FunctionExpression{
				Arrow: nil,
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 85,
							Line:   18,
						},
						File:   "last_success_without_option_test.flux",
						Source: "() => array.from(rows: [{_time: tasks.lastSuccess(orTime: now())}])",
						Start: ast.Position{
							Column: 18,
							Line:   18,
						},
					},
				},
				Body: &ast.CallExpression{
					Arguments: []ast.Expression{&ast.ObjectExpression{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 84,
									Line:   18,
								},
								File:   "last_success_without_option_test.flux",
								Source: "rows: [{_time: tasks.lastSuccess(orTime: now())}]",
								Start: ast.Position{
									Column: 35,
									Line:   18,
								},
							},
						},
						Lbrace: nil,
						Properties: []*ast.Property{&ast.Property{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 84,
										Line:   18,
									},
									File:   "last_success_without_option_test.flux",
									Source: "rows: [{_time: tasks.lastSuccess(orTime: now())}]",
									Start: ast.Position{
										Column: 35,
										Line:   18,
									},
								},
							},
							Comma: nil,
							Key: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 39,
											Line:   18,
										},
										File:   "last_success_without_option_test.flux",
										Source: "rows",
										Start: ast.Position{
											Column: 35,
											Line:   18,
										},
									},
								},
								Name: "rows",
							},
							Separator: nil,
							Value: &ast.ArrayExpression{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 84,
											Line:   18,
										},
										File:   "last_success_without_option_test.flux",
										Source: "[{_time: tasks.lastSuccess(orTime: now())}]",
										Start: ast.Position{
											Column: 41,
											Line:   18,
										},
									},
								},
								Elements: []ast.Expression{&ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 83,
												Line:   18,
											},
											File:   "last_success_without_option_test.flux",
											Source: "{_time: tasks.lastSuccess(orTime: now())}",
											Start: ast.Position{
												Column: 42,
												Line:   18,
											},
										},
									},
									Lbrace: nil,
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 82,
													Line:   18,
												},
												File:   "last_success_without_option_test.flux",
												Source: "_time: tasks.lastSuccess(orTime: now())",
												Start: ast.Position{
													Column: 43,
													Line:   18,
												},
											},
										},
										Comma: nil,
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 48,
														Line:   18,
													},
													File:   "last_success_without_option_test.flux",
													Source: "_time",
													Start: ast.Position{
														Column: 43,
														Line:   18,
													},
												},
											},
											Name: "_time",
										},
										Separator: nil,
										Value: &ast.CallExpression{
											Arguments: []ast.Expression{&ast.ObjectExpression{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 81,
															Line:   18,
														},
														File:   "last_success_without_option_test.flux",
														Source: "orTime: now()",
														Start: ast.Position{
															Column: 68,
															Line:   18,
														},
													},
												},
												Lbrace: nil,
												Properties: []*ast.Property{&ast.Property{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 81,
																Line:   18,
															},
															File:   "last_success_without_option_test.flux",
															Source: "orTime: now()",
															Start: ast.Position{
																Column: 68,
																Line:   18,
															},
														},
													},
													Comma: nil,
													Key: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Comments: nil,
															Errors:   nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 74,
																	Line:   18,
																},
																File:   "last_success_without_option_test.flux",
																Source: "orTime",
																Start: ast.Position{
																	Column: 68,
																	Line:   18,
																},
															},
														},
														Name: "orTime",
													},
													Separator: nil,
													Value: &ast.CallExpression{
														Arguments: nil,
														BaseNode: ast.BaseNode{
															Comments: nil,
															Errors:   nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 81,
																	Line:   18,
																},
																File:   "last_success_without_option_test.flux",
																Source: "now()",
																Start: ast.Position{
																	Column: 76,
																	Line:   18,
																},
															},
														},
														Callee: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Comments: nil,
																Errors:   nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 79,
																		Line:   18,
																	},
																	File:   "last_success_without_option_test.flux",
																	Source: "now",
																	Start: ast.Position{
																		Column: 76,
																		Line:   18,
																	},
																},
															},
															Name: "now",
														},
														Lparen: nil,
														Rparen: nil,
													},
												}},
												Rbrace: nil,
												With:   nil,
											}},
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 82,
														Line:   18,
													},
													File:   "last_success_without_option_test.flux",
													Source: "tasks.lastSuccess(orTime: now())",
													Start: ast.Position{
														Column: 50,
														Line:   18,
													},
												},
											},
											Callee: &ast.MemberExpression{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 67,
															Line:   18,
														},
														File:   "last_success_without_option_test.flux",
														Source: "tasks.lastSuccess",
														Start: ast.Position{
															Column: 50,
															Line:   18,
														},
													},
												},
												Lbrack: nil,
												Object: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 55,
																Line:   18,
															},
															File:   "last_success_without_option_test.flux",
															Source: "tasks",
															Start: ast.Position{
																Column: 50,
																Line:   18,
															},
														},
													},
													Name: "tasks",
												},
												Property: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 67,
																Line:   18,
															},
															File:   "last_success_without_option_test.flux",
															Source: "lastSuccess",
															Start: ast.Position{
																Column: 56,
																Line:   18,
															},
														},
													},
													Name: "lastSuccess",
												},
												Rbrack: nil,
											},
											Lparen: nil,
											Rparen: nil,
										},
									}},
									Rbrace: nil,
									With:   nil,
								}},
								Lbrack: nil,
								Rbrack: nil,
							},
						}},
						Rbrace: nil,
						With:   nil,
					}},
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 85,
								Line:   18,
							},
							File:   "last_success_without_option_test.flux",
							Source: "array.from(rows: [{_time: tasks.lastSuccess(orTime: now())}])",
							Start: ast.Position{
								Column: 24,
								Line:   18,
							},
						},
					},
					Callee: &ast.MemberExpression{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 34,
									Line:   18,
								},
								File:   "last_success_without_option_test.flux",
								Source: "array.from",
								Start: ast.Position{
									Column: 24,
									Line:   18,
								},
							},
						},
						Lbrack: nil,
						Object: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 29,
										Line:   18,
									},
									File:   "last_success_without_option_test.flux",
									Source: "array",
									Start: ast.Position{
										Column: 24,
										Line:   18,
									},
								},
							},
							Name: "array",
						},
						Property: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 34,
										Line:   18,
									},
									File:   "last_success_without_option_test.flux",
									Source: "from",
									Start: ast.Position{
										Column: 30,
										Line:   18,
									},
								},
							},
							Name: "from",
						},
						Rbrack: nil,
					},
					Lparen: nil,
					Rparen: nil,
				},
				Lparen: nil,
				Params: []*ast.Property{},
				Rparan: nil,
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 119,
							Line:   20,
						},
						File:   "last_success_without_option_test.flux",
						Source: "_last_success = () => ({input: t_last_success(), want: testing.loadMem(csv: outData), fn: (tables=<-) => tables})",
						Start: ast.Position{
							Column: 6,
							Line:   20,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 19,
								Line:   20,
							},
							File:   "last_success_without_option_test.flux",
							Source: "_last_success",
							Start: ast.Position{
								Column: 6,
								Line:   20,
							},
						},
					},
					Name: "_last_success",
				},
				Init: &ast.FunctionExpression{
					Arrow: nil,
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 119,
								Line:   20,
							},
							File:   "last_success_without_option_test.flux",
							Source: "() => ({input: t_last_success(), want: testing.loadMem(csv: outData), fn: (tables=<-) => tables})",
							Start: ast.Position{
								Column: 22,
								Line:   20,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 119,
									Line:   20,
								},
								File:   "last_success_without_option_test.flux",
								Source: "({input: t_last_success(), want: testing.loadMem(csv: outData), fn: (tables=<-) => tables})",
								Start: ast.Position{
									Column: 28,
									Line:   20,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 118,
										Line:   20,
									},
									File:   "last_success_without_option_test.flux",
									Source: "{input: t_last_success(), want: testing.loadMem(csv: outData), fn: (tables=<-) => tables}",
									Start: ast.Position{
										Column: 29,
										Line:   20,
									},
								},
							},
							Lbrace: nil,
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 53,
											Line:   20,
										},
										File:   "last_success_without_option_test.flux",
										Source: "input: t_last_success()",
										Start: ast.Position{
											Column: 30,
											Line:   20,
										},
									},
								},
								Comma: nil,
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 35,
												Line:   20,
											},
											File:   "last_success_without_option_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 30,
												Line:   20,
											},
										},
									},
									Name: "input",
								},
								Separator: nil,
								Value: &ast.CallExpression{
									Arguments: nil,
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 53,
												Line:   20,
											},
											File:   "last_success_without_option_test.flux",
											Source: "t_last_success()",
											Start: ast.Position{
												Column: 37,
												Line:   20,
											},
										},
									},
									Callee: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 51,
													Line:   20,
												},
												File:   "last_success_without_option_test.flux",
												Source: "t_last_success",
												Start: ast.Position{
													Column: 37,
													Line:   20,
												},
											},
										},
										Name: "t_last_success",
									},
									Lparen: nil,
									Rparen: nil,
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 90,
											Line:   20,
										},
										File:   "last_success_without_option_test.flux",
										Source: "want: testing.loadMem(csv: outData)",
										Start: ast.Position{
											Column: 55,
											Line:   20,
										},
									},
								},
								Comma: nil,
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 59,
												Line:   20,
											},
											File:   "last_success_without_option_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 55,
												Line:   20,
											},
										},
									},
									Name: "want",
								},
								Separator: nil,
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 89,
													Line:   20,
												},
												File:   "last_success_without_option_test.flux",
												Source: "csv: outData",
												Start: ast.Position{
													Column: 77,
													Line:   20,
												},
											},
										},
										Lbrace: nil,
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 89,
														Line:   20,
													},
													File:   "last_success_without_option_test.flux",
													Source: "csv: outData",
													Start: ast.Position{
														Column: 77,
														Line:   20,
													},
												},
											},
											Comma: nil,
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 80,
															Line:   20,
														},
														File:   "last_success_without_option_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 77,
															Line:   20,
														},
													},
												},
												Name: "csv",
											},
											Separator: nil,
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 89,
															Line:   20,
														},
														File:   "last_success_without_option_test.flux",
														Source: "outData",
														Start: ast.Position{
															Column: 82,
															Line:   20,
														},
													},
												},
												Name: "outData",
											},
										}},
										Rbrace: nil,
										With:   nil,
									}},
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 90,
												Line:   20,
											},
											File:   "last_success_without_option_test.flux",
											Source: "testing.loadMem(csv: outData)",
											Start: ast.Position{
												Column: 61,
												Line:   20,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 76,
													Line:   20,
												},
												File:   "last_success_without_option_test.flux",
												Source: "testing.loadMem",
												Start: ast.Position{
													Column: 61,
													Line:   20,
												},
											},
										},
										Lbrack: nil,
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 68,
														Line:   20,
													},
													File:   "last_success_without_option_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 61,
														Line:   20,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 76,
														Line:   20,
													},
													File:   "last_success_without_option_test.flux",
													Source: "loadMem",
													Start: ast.Position{
														Column: 69,
														Line:   20,
													},
												},
											},
											Name: "loadMem",
										},
										Rbrack: nil,
									},
									Lparen: nil,
									Rparen: nil,
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 117,
											Line:   20,
										},
										File:   "last_success_without_option_test.flux",
										Source: "fn: (tables=<-) => tables",
										Start: ast.Position{
											Column: 92,
											Line:   20,
										},
									},
								},
								Comma: nil,
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 94,
												Line:   20,
											},
											File:   "last_success_without_option_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 92,
												Line:   20,
											},
										},
									},
									Name: "fn",
								},
								Separator: nil,
								Value: &ast.FunctionExpression{
									Arrow: nil,
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 117,
												Line:   20,
											},
											File:   "last_success_without_option_test.flux",
											Source: "(tables=<-) => tables",
											Start: ast.Position{
												Column: 96,
												Line:   20,
											},
										},
									},
									Body: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 117,
													Line:   20,
												},
												File:   "last_success_without_option_test.flux",
												Source: "tables",
												Start: ast.Position{
													Column: 111,
													Line:   20,
												},
											},
										},
										Name: "tables",
									},
									Lparen: nil,
									Params: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 106,
													Line:   20,
												},
												File:   "last_success_without_option_test.flux",
												Source: "tables=<-",
												Start: ast.Position{
													Column: 97,
													Line:   20,
												},
											},
										},
										Comma: nil,
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 103,
														Line:   20,
													},
													File:   "last_success_without_option_test.flux",
													Source: "tables",
													Start: ast.Position{
														Column: 97,
														Line:   20,
													},
												},
											},
											Name: "tables",
										},
										Separator: nil,
										Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 106,
													Line:   20,
												},
												File:   "last_success_without_option_test.flux",
												Source: "<-",
												Start: ast.Position{
													Column: 104,
													Line:   20,
												},
											},
										}},
									}},
									Rparan: nil,
								},
							}},
							Rbrace: nil,
							With:   nil,
						},
						Lparen: nil,
						Rparen: nil,
					},
					Lparen: nil,
					Params: []*ast.Property{},
					Rparan: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 119,
						Line:   20,
					},
					File:   "last_success_without_option_test.flux",
					Source: "test _last_success = () => ({input: t_last_success(), want: testing.loadMem(csv: outData), fn: (tables=<-) => tables})",
					Start: ast.Position{
						Column: 1,
						Line:   20,
					},
				},
			},
		}},
		Eof: nil,
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   4,
					},
					File:   "last_success_without_option_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   4,
						},
						File:   "last_success_without_option_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "testing",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 15,
						Line:   5,
					},
					File:   "last_success_without_option_test.flux",
					Source: "import \"array\"",
					Start: ast.Position{
						Column: 1,
						Line:   5,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 15,
							Line:   5,
						},
						File:   "last_success_without_option_test.flux",
						Source: "\"array\"",
						Start: ast.Position{
							Column: 8,
							Line:   5,
						},
					},
				},
				Value: "array",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 35,
						Line:   6,
					},
					File:   "last_success_without_option_test.flux",
					Source: "import \"influxdata/influxdb/tasks\"",
					Start: ast.Position{
						Column: 1,
						Line:   6,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 35,
							Line:   6,
						},
						File:   "last_success_without_option_test.flux",
						Source: "\"influxdata/influxdb/tasks\"",
						Start: ast.Position{
							Column: 8,
							Line:   6,
						},
					},
				},
				Value: "influxdata/influxdb/tasks",
			},
		}},
		Metadata: "parser-type=rust",
		Name:     "last_success_without_option_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 19,
						Line:   1,
					},
					File:   "last_success_without_option_test.flux",
					Source: "package tasks_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 19,
							Line:   1,
						},
						File:   "last_success_without_option_test.flux",
						Source: "tasks_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "tasks_test",
			},
		},
	}},
	Package: "tasks_test",
	Path:    "influxdata/influxdb/tasks",
}}
