// DO NOT EDIT: This file is autogenerated via the builtin command.

package prometheus

import (
	ast "github.com/influxdata/flux/ast"
	runtime "github.com/influxdata/flux/runtime"
)

func init() {
	runtime.RegisterPackage(pkgAST)
}

var pkgAST = &ast.Package{
	BaseNode: ast.BaseNode{
		Comments: nil,
		Errors:   nil,
		Loc:      nil,
	},
	Files: []*ast.File{&ast.File{
		BaseNode: ast.BaseNode{
			Comments: nil,
			Errors:   nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 54,
					Line:   18,
				},
				File:   "prometheus.flux",
				Source: "package prometheus\n\n\nimport \"universe\"\n\n// scrape enables scraping of a prometheus metrics endpoint and converts \n// that input into flux tables. Each metric is put into an individual flux \n// table, including each histogram and summary value.  \nbuiltin scrape : (url: string) => [A] where A: Record\n\n// histogramQuantile enables the user to calculate quantiles on a set of given values\n// This function assumes that the given histogram data is being scraped or read from a \n// Prometheus source. \nhistogramQuantile = (tables=<-, quantile) => tables\n    |> filter(fn: (r) => r._measurement == \"prometheus\")\n    |> group(mode: \"except\", columns: [\"le\", \"_value\", \"_time\"])\n    |> map(fn: (r) => ({r with le: float(v: r.le)}))\n    |> universe.histogramQuantile(quantile: quantile)",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: []ast.Comment{ast.Comment{Text: "// scrape enables scraping of a prometheus metrics endpoint and converts \n"}, ast.Comment{Text: "// that input into flux tables. Each metric is put into an individual flux \n"}, ast.Comment{Text: "// table, including each histogram and summary value.  \n"}},
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 15,
						Line:   9,
					},
					File:   "prometheus.flux",
					Source: "builtin scrape",
					Start: ast.Position{
						Column: 1,
						Line:   9,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 15,
							Line:   9,
						},
						File:   "prometheus.flux",
						Source: "scrape",
						Start: ast.Position{
							Column: 9,
							Line:   9,
						},
					},
				},
				Name: "scrape",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 54,
							Line:   9,
						},
						File:   "prometheus.flux",
						Source: "(url: string) => [A] where A: Record",
						Start: ast.Position{
							Column: 18,
							Line:   9,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{&ast.TypeConstraint{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 54,
								Line:   9,
							},
							File:   "prometheus.flux",
							Source: "A: Record",
							Start: ast.Position{
								Column: 45,
								Line:   9,
							},
						},
					},
					Kinds: []*ast.Identifier{&ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 54,
									Line:   9,
								},
								File:   "prometheus.flux",
								Source: "Record",
								Start: ast.Position{
									Column: 48,
									Line:   9,
								},
							},
						},
						Name: "Record",
					}},
					Tvar: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 46,
									Line:   9,
								},
								File:   "prometheus.flux",
								Source: "A",
								Start: ast.Position{
									Column: 45,
									Line:   9,
								},
							},
						},
						Name: "A",
					},
				}},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 38,
								Line:   9,
							},
							File:   "prometheus.flux",
							Source: "(url: string) => [A]",
							Start: ast.Position{
								Column: 18,
								Line:   9,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 30,
									Line:   9,
								},
								File:   "prometheus.flux",
								Source: "url: string",
								Start: ast.Position{
									Column: 19,
									Line:   9,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 22,
										Line:   9,
									},
									File:   "prometheus.flux",
									Source: "url",
									Start: ast.Position{
										Column: 19,
										Line:   9,
									},
								},
							},
							Name: "url",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 30,
										Line:   9,
									},
									File:   "prometheus.flux",
									Source: "string",
									Start: ast.Position{
										Column: 24,
										Line:   9,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 30,
											Line:   9,
										},
										File:   "prometheus.flux",
										Source: "string",
										Start: ast.Position{
											Column: 24,
											Line:   9,
										},
									},
								},
								Name: "string",
							},
						},
					}},
					Return: &ast.ArrayType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 38,
									Line:   9,
								},
								File:   "prometheus.flux",
								Source: "[A]",
								Start: ast.Position{
									Column: 35,
									Line:   9,
								},
							},
						},
						ElementType: &ast.TvarType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 37,
										Line:   9,
									},
									File:   "prometheus.flux",
									Source: "A",
									Start: ast.Position{
										Column: 36,
										Line:   9,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 37,
											Line:   9,
										},
										File:   "prometheus.flux",
										Source: "A",
										Start: ast.Position{
											Column: 36,
											Line:   9,
										},
									},
								},
								Name: "A",
							},
						},
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 54,
						Line:   18,
					},
					File:   "prometheus.flux",
					Source: "histogramQuantile = (tables=<-, quantile) => tables\n    |> filter(fn: (r) => r._measurement == \"prometheus\")\n    |> group(mode: \"except\", columns: [\"le\", \"_value\", \"_time\"])\n    |> map(fn: (r) => ({r with le: float(v: r.le)}))\n    |> universe.histogramQuantile(quantile: quantile)",
					Start: ast.Position{
						Column: 1,
						Line:   14,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: []ast.Comment{ast.Comment{Text: "// histogramQuantile enables the user to calculate quantiles on a set of given values\n"}, ast.Comment{Text: "// This function assumes that the given histogram data is being scraped or read from a \n"}, ast.Comment{Text: "// Prometheus source. \n"}},
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 18,
							Line:   14,
						},
						File:   "prometheus.flux",
						Source: "histogramQuantile",
						Start: ast.Position{
							Column: 1,
							Line:   14,
						},
					},
				},
				Name: "histogramQuantile",
			},
			Init: &ast.FunctionExpression{
				Arrow: nil,
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 54,
							Line:   18,
						},
						File:   "prometheus.flux",
						Source: "(tables=<-, quantile) => tables\n    |> filter(fn: (r) => r._measurement == \"prometheus\")\n    |> group(mode: \"except\", columns: [\"le\", \"_value\", \"_time\"])\n    |> map(fn: (r) => ({r with le: float(v: r.le)}))\n    |> universe.histogramQuantile(quantile: quantile)",
						Start: ast.Position{
							Column: 21,
							Line:   14,
						},
					},
				},
				Body: &ast.PipeExpression{
					Argument: &ast.PipeExpression{
						Argument: &ast.PipeExpression{
							Argument: &ast.PipeExpression{
								Argument: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 52,
												Line:   14,
											},
											File:   "prometheus.flux",
											Source: "tables",
											Start: ast.Position{
												Column: 46,
												Line:   14,
											},
										},
									},
									Name: "tables",
								},
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 57,
											Line:   15,
										},
										File:   "prometheus.flux",
										Source: "tables\n    |> filter(fn: (r) => r._measurement == \"prometheus\")",
										Start: ast.Position{
											Column: 46,
											Line:   14,
										},
									},
								},
								Call: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 56,
													Line:   15,
												},
												File:   "prometheus.flux",
												Source: "fn: (r) => r._measurement == \"prometheus\"",
												Start: ast.Position{
													Column: 15,
													Line:   15,
												},
											},
										},
										Lbrace: nil,
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 56,
														Line:   15,
													},
													File:   "prometheus.flux",
													Source: "fn: (r) => r._measurement == \"prometheus\"",
													Start: ast.Position{
														Column: 15,
														Line:   15,
													},
												},
											},
											Comma: nil,
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 17,
															Line:   15,
														},
														File:   "prometheus.flux",
														Source: "fn",
														Start: ast.Position{
															Column: 15,
															Line:   15,
														},
													},
												},
												Name: "fn",
											},
											Separator: nil,
											Value: &ast.FunctionExpression{
												Arrow: nil,
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 56,
															Line:   15,
														},
														File:   "prometheus.flux",
														Source: "(r) => r._measurement == \"prometheus\"",
														Start: ast.Position{
															Column: 19,
															Line:   15,
														},
													},
												},
												Body: &ast.BinaryExpression{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 56,
																Line:   15,
															},
															File:   "prometheus.flux",
															Source: "r._measurement == \"prometheus\"",
															Start: ast.Position{
																Column: 26,
																Line:   15,
															},
														},
													},
													Left: &ast.MemberExpression{
														BaseNode: ast.BaseNode{
															Comments: nil,
															Errors:   nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 40,
																	Line:   15,
																},
																File:   "prometheus.flux",
																Source: "r._measurement",
																Start: ast.Position{
																	Column: 26,
																	Line:   15,
																},
															},
														},
														Lbrack: nil,
														Object: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Comments: nil,
																Errors:   nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 27,
																		Line:   15,
																	},
																	File:   "prometheus.flux",
																	Source: "r",
																	Start: ast.Position{
																		Column: 26,
																		Line:   15,
																	},
																},
															},
															Name: "r",
														},
														Property: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Comments: nil,
																Errors:   nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 40,
																		Line:   15,
																	},
																	File:   "prometheus.flux",
																	Source: "_measurement",
																	Start: ast.Position{
																		Column: 28,
																		Line:   15,
																	},
																},
															},
															Name: "_measurement",
														},
														Rbrack: nil,
													},
													Operator: 17,
													Right: &ast.StringLiteral{
														BaseNode: ast.BaseNode{
															Comments: nil,
															Errors:   nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 56,
																	Line:   15,
																},
																File:   "prometheus.flux",
																Source: "\"prometheus\"",
																Start: ast.Position{
																	Column: 44,
																	Line:   15,
																},
															},
														},
														Value: "prometheus",
													},
												},
												Lparen: nil,
												Params: []*ast.Property{&ast.Property{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 21,
																Line:   15,
															},
															File:   "prometheus.flux",
															Source: "r",
															Start: ast.Position{
																Column: 20,
																Line:   15,
															},
														},
													},
													Comma: nil,
													Key: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Comments: nil,
															Errors:   nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 21,
																	Line:   15,
																},
																File:   "prometheus.flux",
																Source: "r",
																Start: ast.Position{
																	Column: 20,
																	Line:   15,
																},
															},
														},
														Name: "r",
													},
													Separator: nil,
													Value:     nil,
												}},
												Rparan: nil,
											},
										}},
										Rbrace: nil,
										With:   nil,
									}},
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 57,
												Line:   15,
											},
											File:   "prometheus.flux",
											Source: "filter(fn: (r) => r._measurement == \"prometheus\")",
											Start: ast.Position{
												Column: 8,
												Line:   15,
											},
										},
									},
									Callee: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 14,
													Line:   15,
												},
												File:   "prometheus.flux",
												Source: "filter",
												Start: ast.Position{
													Column: 8,
													Line:   15,
												},
											},
										},
										Name: "filter",
									},
									Lparen: nil,
									Rparen: nil,
								},
							},
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 65,
										Line:   16,
									},
									File:   "prometheus.flux",
									Source: "tables\n    |> filter(fn: (r) => r._measurement == \"prometheus\")\n    |> group(mode: \"except\", columns: [\"le\", \"_value\", \"_time\"])",
									Start: ast.Position{
										Column: 46,
										Line:   14,
									},
								},
							},
							Call: &ast.CallExpression{
								Arguments: []ast.Expression{&ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 64,
												Line:   16,
											},
											File:   "prometheus.flux",
											Source: "mode: \"except\", columns: [\"le\", \"_value\", \"_time\"]",
											Start: ast.Position{
												Column: 14,
												Line:   16,
											},
										},
									},
									Lbrace: nil,
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 28,
													Line:   16,
												},
												File:   "prometheus.flux",
												Source: "mode: \"except\"",
												Start: ast.Position{
													Column: 14,
													Line:   16,
												},
											},
										},
										Comma: nil,
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   16,
													},
													File:   "prometheus.flux",
													Source: "mode",
													Start: ast.Position{
														Column: 14,
														Line:   16,
													},
												},
											},
											Name: "mode",
										},
										Separator: nil,
										Value: &ast.StringLiteral{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 28,
														Line:   16,
													},
													File:   "prometheus.flux",
													Source: "\"except\"",
													Start: ast.Position{
														Column: 20,
														Line:   16,
													},
												},
											},
											Value: "except",
										},
									}, &ast.Property{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 64,
													Line:   16,
												},
												File:   "prometheus.flux",
												Source: "columns: [\"le\", \"_value\", \"_time\"]",
												Start: ast.Position{
													Column: 30,
													Line:   16,
												},
											},
										},
										Comma: nil,
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 37,
														Line:   16,
													},
													File:   "prometheus.flux",
													Source: "columns",
													Start: ast.Position{
														Column: 30,
														Line:   16,
													},
												},
											},
											Name: "columns",
										},
										Separator: nil,
										Value: &ast.ArrayExpression{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 64,
														Line:   16,
													},
													File:   "prometheus.flux",
													Source: "[\"le\", \"_value\", \"_time\"]",
													Start: ast.Position{
														Column: 39,
														Line:   16,
													},
												},
											},
											Elements: []ast.Expression{&ast.StringLiteral{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 44,
															Line:   16,
														},
														File:   "prometheus.flux",
														Source: "\"le\"",
														Start: ast.Position{
															Column: 40,
															Line:   16,
														},
													},
												},
												Value: "le",
											}, &ast.StringLiteral{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 54,
															Line:   16,
														},
														File:   "prometheus.flux",
														Source: "\"_value\"",
														Start: ast.Position{
															Column: 46,
															Line:   16,
														},
													},
												},
												Value: "_value",
											}, &ast.StringLiteral{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 63,
															Line:   16,
														},
														File:   "prometheus.flux",
														Source: "\"_time\"",
														Start: ast.Position{
															Column: 56,
															Line:   16,
														},
													},
												},
												Value: "_time",
											}},
											Lbrack: nil,
											Rbrack: nil,
										},
									}},
									Rbrace: nil,
									With:   nil,
								}},
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 65,
											Line:   16,
										},
										File:   "prometheus.flux",
										Source: "group(mode: \"except\", columns: [\"le\", \"_value\", \"_time\"])",
										Start: ast.Position{
											Column: 8,
											Line:   16,
										},
									},
								},
								Callee: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 13,
												Line:   16,
											},
											File:   "prometheus.flux",
											Source: "group",
											Start: ast.Position{
												Column: 8,
												Line:   16,
											},
										},
									},
									Name: "group",
								},
								Lparen: nil,
								Rparen: nil,
							},
						},
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 53,
									Line:   17,
								},
								File:   "prometheus.flux",
								Source: "tables\n    |> filter(fn: (r) => r._measurement == \"prometheus\")\n    |> group(mode: \"except\", columns: [\"le\", \"_value\", \"_time\"])\n    |> map(fn: (r) => ({r with le: float(v: r.le)}))",
								Start: ast.Position{
									Column: 46,
									Line:   14,
								},
							},
						},
						Call: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 52,
											Line:   17,
										},
										File:   "prometheus.flux",
										Source: "fn: (r) => ({r with le: float(v: r.le)})",
										Start: ast.Position{
											Column: 12,
											Line:   17,
										},
									},
								},
								Lbrace: nil,
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 52,
												Line:   17,
											},
											File:   "prometheus.flux",
											Source: "fn: (r) => ({r with le: float(v: r.le)})",
											Start: ast.Position{
												Column: 12,
												Line:   17,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 14,
													Line:   17,
												},
												File:   "prometheus.flux",
												Source: "fn",
												Start: ast.Position{
													Column: 12,
													Line:   17,
												},
											},
										},
										Name: "fn",
									},
									Separator: nil,
									Value: &ast.FunctionExpression{
										Arrow: nil,
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 52,
													Line:   17,
												},
												File:   "prometheus.flux",
												Source: "(r) => ({r with le: float(v: r.le)})",
												Start: ast.Position{
													Column: 16,
													Line:   17,
												},
											},
										},
										Body: &ast.ParenExpression{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 52,
														Line:   17,
													},
													File:   "prometheus.flux",
													Source: "({r with le: float(v: r.le)})",
													Start: ast.Position{
														Column: 23,
														Line:   17,
													},
												},
											},
											Expression: &ast.ObjectExpression{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 51,
															Line:   17,
														},
														File:   "prometheus.flux",
														Source: "{r with le: float(v: r.le)}",
														Start: ast.Position{
															Column: 24,
															Line:   17,
														},
													},
												},
												Lbrace: nil,
												Properties: []*ast.Property{&ast.Property{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 50,
																Line:   17,
															},
															File:   "prometheus.flux",
															Source: "le: float(v: r.le)",
															Start: ast.Position{
																Column: 32,
																Line:   17,
															},
														},
													},
													Comma: nil,
													Key: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Comments: nil,
															Errors:   nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 34,
																	Line:   17,
																},
																File:   "prometheus.flux",
																Source: "le",
																Start: ast.Position{
																	Column: 32,
																	Line:   17,
																},
															},
														},
														Name: "le",
													},
													Separator: nil,
													Value: &ast.CallExpression{
														Arguments: []ast.Expression{&ast.ObjectExpression{
															BaseNode: ast.BaseNode{
																Comments: nil,
																Errors:   nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 49,
																		Line:   17,
																	},
																	File:   "prometheus.flux",
																	Source: "v: r.le",
																	Start: ast.Position{
																		Column: 42,
																		Line:   17,
																	},
																},
															},
															Lbrace: nil,
															Properties: []*ast.Property{&ast.Property{
																BaseNode: ast.BaseNode{
																	Comments: nil,
																	Errors:   nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 49,
																			Line:   17,
																		},
																		File:   "prometheus.flux",
																		Source: "v: r.le",
																		Start: ast.Position{
																			Column: 42,
																			Line:   17,
																		},
																	},
																},
																Comma: nil,
																Key: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Comments: nil,
																		Errors:   nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 43,
																				Line:   17,
																			},
																			File:   "prometheus.flux",
																			Source: "v",
																			Start: ast.Position{
																				Column: 42,
																				Line:   17,
																			},
																		},
																	},
																	Name: "v",
																},
																Separator: nil,
																Value: &ast.MemberExpression{
																	BaseNode: ast.BaseNode{
																		Comments: nil,
																		Errors:   nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 49,
																				Line:   17,
																			},
																			File:   "prometheus.flux",
																			Source: "r.le",
																			Start: ast.Position{
																				Column: 45,
																				Line:   17,
																			},
																		},
																	},
																	Lbrack: nil,
																	Object: &ast.Identifier{
																		BaseNode: ast.BaseNode{
																			Comments: nil,
																			Errors:   nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 46,
																					Line:   17,
																				},
																				File:   "prometheus.flux",
																				Source: "r",
																				Start: ast.Position{
																					Column: 45,
																					Line:   17,
																				},
																			},
																		},
																		Name: "r",
																	},
																	Property: &ast.Identifier{
																		BaseNode: ast.BaseNode{
																			Comments: nil,
																			Errors:   nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 49,
																					Line:   17,
																				},
																				File:   "prometheus.flux",
																				Source: "le",
																				Start: ast.Position{
																					Column: 47,
																					Line:   17,
																				},
																			},
																		},
																		Name: "le",
																	},
																	Rbrack: nil,
																},
															}},
															Rbrace: nil,
															With:   nil,
														}},
														BaseNode: ast.BaseNode{
															Comments: nil,
															Errors:   nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 50,
																	Line:   17,
																},
																File:   "prometheus.flux",
																Source: "float(v: r.le)",
																Start: ast.Position{
																	Column: 36,
																	Line:   17,
																},
															},
														},
														Callee: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Comments: nil,
																Errors:   nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 41,
																		Line:   17,
																	},
																	File:   "prometheus.flux",
																	Source: "float",
																	Start: ast.Position{
																		Column: 36,
																		Line:   17,
																	},
																},
															},
															Name: "float",
														},
														Lparen: nil,
														Rparen: nil,
													},
												}},
												Rbrace: nil,
												With: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 26,
																Line:   17,
															},
															File:   "prometheus.flux",
															Source: "r",
															Start: ast.Position{
																Column: 25,
																Line:   17,
															},
														},
													},
													Name: "r",
												},
											},
											Lparen: nil,
											Rparen: nil,
										},
										Lparen: nil,
										Params: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   17,
													},
													File:   "prometheus.flux",
													Source: "r",
													Start: ast.Position{
														Column: 17,
														Line:   17,
													},
												},
											},
											Comma: nil,
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 18,
															Line:   17,
														},
														File:   "prometheus.flux",
														Source: "r",
														Start: ast.Position{
															Column: 17,
															Line:   17,
														},
													},
												},
												Name: "r",
											},
											Separator: nil,
											Value:     nil,
										}},
										Rparan: nil,
									},
								}},
								Rbrace: nil,
								With:   nil,
							}},
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 53,
										Line:   17,
									},
									File:   "prometheus.flux",
									Source: "map(fn: (r) => ({r with le: float(v: r.le)}))",
									Start: ast.Position{
										Column: 8,
										Line:   17,
									},
								},
							},
							Callee: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 11,
											Line:   17,
										},
										File:   "prometheus.flux",
										Source: "map",
										Start: ast.Position{
											Column: 8,
											Line:   17,
										},
									},
								},
								Name: "map",
							},
							Lparen: nil,
							Rparen: nil,
						},
					},
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 54,
								Line:   18,
							},
							File:   "prometheus.flux",
							Source: "tables\n    |> filter(fn: (r) => r._measurement == \"prometheus\")\n    |> group(mode: \"except\", columns: [\"le\", \"_value\", \"_time\"])\n    |> map(fn: (r) => ({r with le: float(v: r.le)}))\n    |> universe.histogramQuantile(quantile: quantile)",
							Start: ast.Position{
								Column: 46,
								Line:   14,
							},
						},
					},
					Call: &ast.CallExpression{
						Arguments: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 53,
										Line:   18,
									},
									File:   "prometheus.flux",
									Source: "quantile: quantile",
									Start: ast.Position{
										Column: 35,
										Line:   18,
									},
								},
							},
							Lbrace: nil,
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 53,
											Line:   18,
										},
										File:   "prometheus.flux",
										Source: "quantile: quantile",
										Start: ast.Position{
											Column: 35,
											Line:   18,
										},
									},
								},
								Comma: nil,
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 43,
												Line:   18,
											},
											File:   "prometheus.flux",
											Source: "quantile",
											Start: ast.Position{
												Column: 35,
												Line:   18,
											},
										},
									},
									Name: "quantile",
								},
								Separator: nil,
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 53,
												Line:   18,
											},
											File:   "prometheus.flux",
											Source: "quantile",
											Start: ast.Position{
												Column: 45,
												Line:   18,
											},
										},
									},
									Name: "quantile",
								},
							}},
							Rbrace: nil,
							With:   nil,
						}},
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 54,
									Line:   18,
								},
								File:   "prometheus.flux",
								Source: "universe.histogramQuantile(quantile: quantile)",
								Start: ast.Position{
									Column: 8,
									Line:   18,
								},
							},
						},
						Callee: &ast.MemberExpression{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 34,
										Line:   18,
									},
									File:   "prometheus.flux",
									Source: "universe.histogramQuantile",
									Start: ast.Position{
										Column: 8,
										Line:   18,
									},
								},
							},
							Lbrack: nil,
							Object: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 16,
											Line:   18,
										},
										File:   "prometheus.flux",
										Source: "universe",
										Start: ast.Position{
											Column: 8,
											Line:   18,
										},
									},
								},
								Name: "universe",
							},
							Property: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 34,
											Line:   18,
										},
										File:   "prometheus.flux",
										Source: "histogramQuantile",
										Start: ast.Position{
											Column: 17,
											Line:   18,
										},
									},
								},
								Name: "histogramQuantile",
							},
							Rbrack: nil,
						},
						Lparen: nil,
						Rparen: nil,
					},
				},
				Lparen: nil,
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 31,
								Line:   14,
							},
							File:   "prometheus.flux",
							Source: "tables=<-",
							Start: ast.Position{
								Column: 22,
								Line:   14,
							},
						},
					},
					Comma: nil,
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 28,
									Line:   14,
								},
								File:   "prometheus.flux",
								Source: "tables",
								Start: ast.Position{
									Column: 22,
									Line:   14,
								},
							},
						},
						Name: "tables",
					},
					Separator: nil,
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 31,
								Line:   14,
							},
							File:   "prometheus.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 29,
								Line:   14,
							},
						},
					}},
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 41,
								Line:   14,
							},
							File:   "prometheus.flux",
							Source: "quantile",
							Start: ast.Position{
								Column: 33,
								Line:   14,
							},
						},
					},
					Comma: nil,
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 41,
									Line:   14,
								},
								File:   "prometheus.flux",
								Source: "quantile",
								Start: ast.Position{
									Column: 33,
									Line:   14,
								},
							},
						},
						Name: "quantile",
					},
					Separator: nil,
					Value:     nil,
				}},
				Rparan: nil,
			},
		}},
		Eof: nil,
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 18,
						Line:   4,
					},
					File:   "prometheus.flux",
					Source: "import \"universe\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 18,
							Line:   4,
						},
						File:   "prometheus.flux",
						Source: "\"universe\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "universe",
			},
		}},
		Metadata: "parser-type=rust",
		Name:     "prometheus.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 19,
						Line:   1,
					},
					File:   "prometheus.flux",
					Source: "package prometheus",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 19,
							Line:   1,
						},
						File:   "prometheus.flux",
						Source: "prometheus",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "prometheus",
			},
		},
	}},
	Package: "prometheus",
	Path:    "experimental/prometheus",
}
