// DO NOT EDIT: This file is autogenerated via the builtin command.

package geo

import (
	ast "github.com/influxdata/flux/ast"
	parser "github.com/influxdata/flux/internal/parser"
)

var FluxTestPackages = []*ast.Package{&ast.Package{
	BaseNode: ast.BaseNode{
		Errors: nil,
		Loc:    nil,
	},
	Files: []*ast.File{&ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 98,
					Line:   170,
				},
				File:   "asTracks_test.flux",
				Source: "package geo_test\n\nimport \"experimental/geo\"\nimport \"testing\"\n\noption now = () => (2030-01-01T00:00:00Z)\n\ninData = \"\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,0,2019-11-10T11:08:34Z,40.762662,89c258c,lat,bikes,end,vehicleB\n,,0,2019-11-10T21:17:47Z,40.762424,89c258c,lat,bikes,end,vehicleB\n,,1,2019-11-10T11:07:12Z,40.762096,89c258c,lat,bikes,start,vehicleB\n,,1,2019-11-10T21:16:00Z,40.763126,89c258c,lat,bikes,start,vehicleB\n,,2,2019-11-10T11:07:35Z,40.762225,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:07:38Z,40.762247,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:07:43Z,40.762331,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:07:48Z,40.762408,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:07:52Z,40.762484,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:08:01Z,40.762597,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:08:16Z,40.762574,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:16:06Z,40.76309,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:16:18Z,40.763036,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:16:31Z,40.763006,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:16:48Z,40.762904,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:17:08Z,40.762836,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:17:23Z,40.762736,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:17:36Z,40.762469,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:17:46Z,40.762418,89c258c,lat,bikes,via,vehicleB\n,,3,2019-11-10T11:08:34Z,-73.967971,89c258c,lon,bikes,end,vehicleB\n,,3,2019-11-10T21:17:47Z,-73.965583,89c258c,lon,bikes,end,vehicleB\n,,4,2019-11-10T11:07:12Z,-73.967104,89c258c,lon,bikes,start,vehicleB\n,,4,2019-11-10T21:16:00Z,-73.966333,89c258c,lon,bikes,start,vehicleB\n,,5,2019-11-10T11:07:35Z,-73.967081,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:07:38Z,-73.967129,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:07:43Z,-73.967261,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:07:48Z,-73.967422,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:07:52Z,-73.967542,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:08:01Z,-73.967718,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:08:16Z,-73.967803,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:16:06Z,-73.966254,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:16:18Z,-73.966091,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:16:31Z,-73.965889,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:16:48Z,-73.96573,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:17:08Z,-73.965721,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:17:23Z,-73.965801,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:17:36Z,-73.96559,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:17:46Z,-73.965579,89c258c,lon,bikes,via,vehicleB\n\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,6,2019-11-10T11:08:34Z,1573384032,89c258c,tid,bikes,end,vehicleB\n,,6,2019-11-10T21:17:47Z,1573420560,89c258c,tid,bikes,end,vehicleB\n,,7,2019-11-10T11:07:12Z,1573384032,89c258c,tid,bikes,start,vehicleB\n,,7,2019-11-10T21:16:00Z,1573420560,89c258c,tid,bikes,start,vehicleB\n,,8,2019-11-10T11:07:35Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:07:38Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:07:43Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:07:48Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:07:52Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:08:01Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:08:16Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:16:06Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:16:18Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:16:31Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:16:48Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:17:08Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:17:23Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:17:36Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:17:46Z,1573420560,89c258c,tid,bikes,via,vehicleB\n\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,9,2019-11-20T10:17:17Z,40.700344,89e82cc,lat,bikes,start,vehicleA\n,,10,2019-11-20T10:17:18Z,40.700348,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:24Z,40.700397,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:26Z,40.700413,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:32Z,40.700474,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:35Z,40.700481,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:42Z,40.700459,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:47Z,40.700455,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:54Z,40.700542,89e82cc,lat,bikes,via,vehicleA\n,,11,2019-11-20T10:17:17Z,-73.324814,89e82cc,lon,bikes,start,vehicleA\n,,12,2019-11-20T10:17:18Z,-73.324799,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:24Z,-73.324699,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:26Z,-73.324638,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:32Z,-73.324471,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:35Z,-73.324371,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:42Z,-73.324181,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:47Z,-73.323982,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:54Z,-73.323769,89e82cc,lon,bikes,via,vehicleA\n\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,13,2019-11-20T10:17:17Z,1574245037,89e82cc,tid,bikes,start,vehicleA\n,,14,2019-11-20T10:17:18Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:24Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:26Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:32Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:35Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:42Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:47Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:54Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,15,2019-11-20T10:18:00Z,40.700684,89e82d4,lat,bikes,end,vehicleA\n,,16,2019-11-20T10:18:00Z,-73.323692,89e82d4,lon,bikes,end,vehicleA\n\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,17,2019-11-20T10:18:00Z,1574245037,89e82d4,tid,bikes,end,vehicleA\n\"\n\noutData = \"\n#group,false,false,false,false,false,false,true,false,true,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,string,double,long,double\n#default,_result,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,id,lat,tid,lon\n,,0,2019-11-20T10:17:17Z,89e82cc,bikes,start,vehicleA,40.700344,1574245037,-73.324814\n,,0,2019-11-20T10:17:18Z,89e82cc,bikes,via,vehicleA,40.700348,1574245037,-73.324799\n,,0,2019-11-20T10:17:24Z,89e82cc,bikes,via,vehicleA,40.700397,1574245037,-73.324699\n,,0,2019-11-20T10:17:26Z,89e82cc,bikes,via,vehicleA,40.700413,1574245037,-73.324638\n,,0,2019-11-20T10:17:32Z,89e82cc,bikes,via,vehicleA,40.700474,1574245037,-73.324471\n,,0,2019-11-20T10:17:35Z,89e82cc,bikes,via,vehicleA,40.700481,1574245037,-73.324371\n,,0,2019-11-20T10:17:42Z,89e82cc,bikes,via,vehicleA,40.700459,1574245037,-73.324181\n,,0,2019-11-20T10:17:47Z,89e82cc,bikes,via,vehicleA,40.700455,1574245037,-73.323982\n,,0,2019-11-20T10:17:54Z,89e82cc,bikes,via,vehicleA,40.700542,1574245037,-73.323769\n,,0,2019-11-20T10:18:00Z,89e82d4,bikes,end,vehicleA,40.700684,1574245037,-73.323692\n,,1,2019-11-10T11:07:12Z,89c258c,bikes,start,vehicleB,40.762096,1573384032,-73.967104\n,,1,2019-11-10T11:07:35Z,89c258c,bikes,via,vehicleB,40.762225,1573384032,-73.967081\n,,1,2019-11-10T11:07:38Z,89c258c,bikes,via,vehicleB,40.762247,1573384032,-73.967129\n,,1,2019-11-10T11:07:43Z,89c258c,bikes,via,vehicleB,40.762331,1573384032,-73.967261\n,,1,2019-11-10T11:07:48Z,89c258c,bikes,via,vehicleB,40.762408,1573384032,-73.967422\n,,1,2019-11-10T11:07:52Z,89c258c,bikes,via,vehicleB,40.762484,1573384032,-73.967542\n,,1,2019-11-10T11:08:01Z,89c258c,bikes,via,vehicleB,40.762597,1573384032,-73.967718\n,,1,2019-11-10T11:08:16Z,89c258c,bikes,via,vehicleB,40.762574,1573384032,-73.967803\n,,1,2019-11-10T11:08:34Z,89c258c,bikes,end,vehicleB,40.762662,1573384032,-73.967971\n,,2,2019-11-10T21:16:00Z,89c258c,bikes,start,vehicleB,40.763126,1573420560,-73.966333\n,,2,2019-11-10T21:16:06Z,89c258c,bikes,via,vehicleB,40.76309,1573420560,-73.966254\n,,2,2019-11-10T21:16:18Z,89c258c,bikes,via,vehicleB,40.763036,1573420560,-73.966091\n,,2,2019-11-10T21:16:31Z,89c258c,bikes,via,vehicleB,40.763006,1573420560,-73.965889\n,,2,2019-11-10T21:16:48Z,89c258c,bikes,via,vehicleB,40.762904,1573420560,-73.96573\n,,2,2019-11-10T21:17:08Z,89c258c,bikes,via,vehicleB,40.762836,1573420560,-73.965721\n,,2,2019-11-10T21:17:23Z,89c258c,bikes,via,vehicleB,40.762736,1573420560,-73.965801\n,,2,2019-11-10T21:17:36Z,89c258c,bikes,via,vehicleB,40.762469,1573420560,-73.96559\n,,2,2019-11-10T21:17:46Z,89c258c,bikes,via,vehicleB,40.762418,1573420560,-73.965579\n,,2,2019-11-10T21:17:47Z,89c258c,bikes,end,vehicleB,40.762424,1573420560,-73.965583\n\"\n\nt_asTracks = (table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.toRows(correlationKey: [\"id\", \"_time\"])\n    |> geo.asTracks()\n    |> drop(columns: [\"_start\", \"_stop\"])\ntest _asTracks = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_asTracks})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   6,
						},
						File:   "asTracks_test.flux",
						Source: "now = () => (2030-01-01T00:00:00Z)",
						Start: ast.Position{
							Column: 8,
							Line:   6,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   6,
							},
							File:   "asTracks_test.flux",
							Source: "now",
							Start: ast.Position{
								Column: 8,
								Line:   6,
							},
						},
					},
					Name: "now",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   6,
							},
							File:   "asTracks_test.flux",
							Source: "() => (2030-01-01T00:00:00Z)",
							Start: ast.Position{
								Column: 14,
								Line:   6,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   6,
								},
								File:   "asTracks_test.flux",
								Source: "(2030-01-01T00:00:00Z)",
								Start: ast.Position{
									Column: 20,
									Line:   6,
								},
							},
						},
						Expression: &ast.DateTimeLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   6,
									},
									File:   "asTracks_test.flux",
									Source: "2030-01-01T00:00:00Z",
									Start: ast.Position{
										Column: 21,
										Line:   6,
									},
								},
							},
							Value: parser.MustParseTime("2030-01-01T00:00:00Z"),
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   6,
					},
					File:   "asTracks_test.flux",
					Source: "option now = () => (2030-01-01T00:00:00Z)",
					Start: ast.Position{
						Column: 1,
						Line:   6,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   125,
					},
					File:   "asTracks_test.flux",
					Source: "inData = \"\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,0,2019-11-10T11:08:34Z,40.762662,89c258c,lat,bikes,end,vehicleB\n,,0,2019-11-10T21:17:47Z,40.762424,89c258c,lat,bikes,end,vehicleB\n,,1,2019-11-10T11:07:12Z,40.762096,89c258c,lat,bikes,start,vehicleB\n,,1,2019-11-10T21:16:00Z,40.763126,89c258c,lat,bikes,start,vehicleB\n,,2,2019-11-10T11:07:35Z,40.762225,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:07:38Z,40.762247,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:07:43Z,40.762331,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:07:48Z,40.762408,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:07:52Z,40.762484,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:08:01Z,40.762597,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:08:16Z,40.762574,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:16:06Z,40.76309,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:16:18Z,40.763036,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:16:31Z,40.763006,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:16:48Z,40.762904,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:17:08Z,40.762836,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:17:23Z,40.762736,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:17:36Z,40.762469,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:17:46Z,40.762418,89c258c,lat,bikes,via,vehicleB\n,,3,2019-11-10T11:08:34Z,-73.967971,89c258c,lon,bikes,end,vehicleB\n,,3,2019-11-10T21:17:47Z,-73.965583,89c258c,lon,bikes,end,vehicleB\n,,4,2019-11-10T11:07:12Z,-73.967104,89c258c,lon,bikes,start,vehicleB\n,,4,2019-11-10T21:16:00Z,-73.966333,89c258c,lon,bikes,start,vehicleB\n,,5,2019-11-10T11:07:35Z,-73.967081,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:07:38Z,-73.967129,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:07:43Z,-73.967261,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:07:48Z,-73.967422,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:07:52Z,-73.967542,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:08:01Z,-73.967718,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:08:16Z,-73.967803,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:16:06Z,-73.966254,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:16:18Z,-73.966091,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:16:31Z,-73.965889,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:16:48Z,-73.96573,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:17:08Z,-73.965721,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:17:23Z,-73.965801,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:17:36Z,-73.96559,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:17:46Z,-73.965579,89c258c,lon,bikes,via,vehicleB\n\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,6,2019-11-10T11:08:34Z,1573384032,89c258c,tid,bikes,end,vehicleB\n,,6,2019-11-10T21:17:47Z,1573420560,89c258c,tid,bikes,end,vehicleB\n,,7,2019-11-10T11:07:12Z,1573384032,89c258c,tid,bikes,start,vehicleB\n,,7,2019-11-10T21:16:00Z,1573420560,89c258c,tid,bikes,start,vehicleB\n,,8,2019-11-10T11:07:35Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:07:38Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:07:43Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:07:48Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:07:52Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:08:01Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:08:16Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:16:06Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:16:18Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:16:31Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:16:48Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:17:08Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:17:23Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:17:36Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:17:46Z,1573420560,89c258c,tid,bikes,via,vehicleB\n\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,9,2019-11-20T10:17:17Z,40.700344,89e82cc,lat,bikes,start,vehicleA\n,,10,2019-11-20T10:17:18Z,40.700348,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:24Z,40.700397,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:26Z,40.700413,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:32Z,40.700474,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:35Z,40.700481,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:42Z,40.700459,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:47Z,40.700455,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:54Z,40.700542,89e82cc,lat,bikes,via,vehicleA\n,,11,2019-11-20T10:17:17Z,-73.324814,89e82cc,lon,bikes,start,vehicleA\n,,12,2019-11-20T10:17:18Z,-73.324799,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:24Z,-73.324699,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:26Z,-73.324638,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:32Z,-73.324471,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:35Z,-73.324371,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:42Z,-73.324181,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:47Z,-73.323982,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:54Z,-73.323769,89e82cc,lon,bikes,via,vehicleA\n\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,13,2019-11-20T10:17:17Z,1574245037,89e82cc,tid,bikes,start,vehicleA\n,,14,2019-11-20T10:17:18Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:24Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:26Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:32Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:35Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:42Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:47Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:54Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,15,2019-11-20T10:18:00Z,40.700684,89e82d4,lat,bikes,end,vehicleA\n,,16,2019-11-20T10:18:00Z,-73.323692,89e82d4,lon,bikes,end,vehicleA\n\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,17,2019-11-20T10:18:00Z,1574245037,89e82d4,tid,bikes,end,vehicleA\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   8,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 7,
							Line:   8,
						},
						File:   "asTracks_test.flux",
						Source: "inData",
						Start: ast.Position{
							Column: 1,
							Line:   8,
						},
					},
				},
				Name: "inData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   125,
						},
						File:   "asTracks_test.flux",
						Source: "\"\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,0,2019-11-10T11:08:34Z,40.762662,89c258c,lat,bikes,end,vehicleB\n,,0,2019-11-10T21:17:47Z,40.762424,89c258c,lat,bikes,end,vehicleB\n,,1,2019-11-10T11:07:12Z,40.762096,89c258c,lat,bikes,start,vehicleB\n,,1,2019-11-10T21:16:00Z,40.763126,89c258c,lat,bikes,start,vehicleB\n,,2,2019-11-10T11:07:35Z,40.762225,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:07:38Z,40.762247,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:07:43Z,40.762331,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:07:48Z,40.762408,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:07:52Z,40.762484,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:08:01Z,40.762597,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:08:16Z,40.762574,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:16:06Z,40.76309,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:16:18Z,40.763036,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:16:31Z,40.763006,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:16:48Z,40.762904,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:17:08Z,40.762836,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:17:23Z,40.762736,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:17:36Z,40.762469,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:17:46Z,40.762418,89c258c,lat,bikes,via,vehicleB\n,,3,2019-11-10T11:08:34Z,-73.967971,89c258c,lon,bikes,end,vehicleB\n,,3,2019-11-10T21:17:47Z,-73.965583,89c258c,lon,bikes,end,vehicleB\n,,4,2019-11-10T11:07:12Z,-73.967104,89c258c,lon,bikes,start,vehicleB\n,,4,2019-11-10T21:16:00Z,-73.966333,89c258c,lon,bikes,start,vehicleB\n,,5,2019-11-10T11:07:35Z,-73.967081,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:07:38Z,-73.967129,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:07:43Z,-73.967261,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:07:48Z,-73.967422,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:07:52Z,-73.967542,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:08:01Z,-73.967718,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:08:16Z,-73.967803,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:16:06Z,-73.966254,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:16:18Z,-73.966091,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:16:31Z,-73.965889,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:16:48Z,-73.96573,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:17:08Z,-73.965721,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:17:23Z,-73.965801,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:17:36Z,-73.96559,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:17:46Z,-73.965579,89c258c,lon,bikes,via,vehicleB\n\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,6,2019-11-10T11:08:34Z,1573384032,89c258c,tid,bikes,end,vehicleB\n,,6,2019-11-10T21:17:47Z,1573420560,89c258c,tid,bikes,end,vehicleB\n,,7,2019-11-10T11:07:12Z,1573384032,89c258c,tid,bikes,start,vehicleB\n,,7,2019-11-10T21:16:00Z,1573420560,89c258c,tid,bikes,start,vehicleB\n,,8,2019-11-10T11:07:35Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:07:38Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:07:43Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:07:48Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:07:52Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:08:01Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:08:16Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:16:06Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:16:18Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:16:31Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:16:48Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:17:08Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:17:23Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:17:36Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:17:46Z,1573420560,89c258c,tid,bikes,via,vehicleB\n\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,9,2019-11-20T10:17:17Z,40.700344,89e82cc,lat,bikes,start,vehicleA\n,,10,2019-11-20T10:17:18Z,40.700348,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:24Z,40.700397,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:26Z,40.700413,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:32Z,40.700474,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:35Z,40.700481,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:42Z,40.700459,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:47Z,40.700455,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:54Z,40.700542,89e82cc,lat,bikes,via,vehicleA\n,,11,2019-11-20T10:17:17Z,-73.324814,89e82cc,lon,bikes,start,vehicleA\n,,12,2019-11-20T10:17:18Z,-73.324799,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:24Z,-73.324699,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:26Z,-73.324638,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:32Z,-73.324471,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:35Z,-73.324371,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:42Z,-73.324181,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:47Z,-73.323982,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:54Z,-73.323769,89e82cc,lon,bikes,via,vehicleA\n\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,13,2019-11-20T10:17:17Z,1574245037,89e82cc,tid,bikes,start,vehicleA\n,,14,2019-11-20T10:17:18Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:24Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:26Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:32Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:35Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:42Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:47Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:54Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,15,2019-11-20T10:18:00Z,40.700684,89e82d4,lat,bikes,end,vehicleA\n,,16,2019-11-20T10:18:00Z,-73.323692,89e82d4,lon,bikes,end,vehicleA\n\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,17,2019-11-20T10:18:00Z,1574245037,89e82d4,tid,bikes,end,vehicleA\n\"",
						Start: ast.Position{
							Column: 10,
							Line:   8,
						},
					},
				},
				Value: "\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,0,2019-11-10T11:08:34Z,40.762662,89c258c,lat,bikes,end,vehicleB\n,,0,2019-11-10T21:17:47Z,40.762424,89c258c,lat,bikes,end,vehicleB\n,,1,2019-11-10T11:07:12Z,40.762096,89c258c,lat,bikes,start,vehicleB\n,,1,2019-11-10T21:16:00Z,40.763126,89c258c,lat,bikes,start,vehicleB\n,,2,2019-11-10T11:07:35Z,40.762225,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:07:38Z,40.762247,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:07:43Z,40.762331,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:07:48Z,40.762408,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:07:52Z,40.762484,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:08:01Z,40.762597,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:08:16Z,40.762574,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:16:06Z,40.76309,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:16:18Z,40.763036,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:16:31Z,40.763006,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:16:48Z,40.762904,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:17:08Z,40.762836,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:17:23Z,40.762736,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:17:36Z,40.762469,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:17:46Z,40.762418,89c258c,lat,bikes,via,vehicleB\n,,3,2019-11-10T11:08:34Z,-73.967971,89c258c,lon,bikes,end,vehicleB\n,,3,2019-11-10T21:17:47Z,-73.965583,89c258c,lon,bikes,end,vehicleB\n,,4,2019-11-10T11:07:12Z,-73.967104,89c258c,lon,bikes,start,vehicleB\n,,4,2019-11-10T21:16:00Z,-73.966333,89c258c,lon,bikes,start,vehicleB\n,,5,2019-11-10T11:07:35Z,-73.967081,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:07:38Z,-73.967129,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:07:43Z,-73.967261,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:07:48Z,-73.967422,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:07:52Z,-73.967542,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:08:01Z,-73.967718,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:08:16Z,-73.967803,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:16:06Z,-73.966254,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:16:18Z,-73.966091,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:16:31Z,-73.965889,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:16:48Z,-73.96573,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:17:08Z,-73.965721,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:17:23Z,-73.965801,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:17:36Z,-73.96559,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:17:46Z,-73.965579,89c258c,lon,bikes,via,vehicleB\n\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,6,2019-11-10T11:08:34Z,1573384032,89c258c,tid,bikes,end,vehicleB\n,,6,2019-11-10T21:17:47Z,1573420560,89c258c,tid,bikes,end,vehicleB\n,,7,2019-11-10T11:07:12Z,1573384032,89c258c,tid,bikes,start,vehicleB\n,,7,2019-11-10T21:16:00Z,1573420560,89c258c,tid,bikes,start,vehicleB\n,,8,2019-11-10T11:07:35Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:07:38Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:07:43Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:07:48Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:07:52Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:08:01Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:08:16Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:16:06Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:16:18Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:16:31Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:16:48Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:17:08Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:17:23Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:17:36Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:17:46Z,1573420560,89c258c,tid,bikes,via,vehicleB\n\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,9,2019-11-20T10:17:17Z,40.700344,89e82cc,lat,bikes,start,vehicleA\n,,10,2019-11-20T10:17:18Z,40.700348,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:24Z,40.700397,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:26Z,40.700413,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:32Z,40.700474,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:35Z,40.700481,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:42Z,40.700459,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:47Z,40.700455,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:54Z,40.700542,89e82cc,lat,bikes,via,vehicleA\n,,11,2019-11-20T10:17:17Z,-73.324814,89e82cc,lon,bikes,start,vehicleA\n,,12,2019-11-20T10:17:18Z,-73.324799,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:24Z,-73.324699,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:26Z,-73.324638,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:32Z,-73.324471,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:35Z,-73.324371,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:42Z,-73.324181,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:47Z,-73.323982,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:54Z,-73.323769,89e82cc,lon,bikes,via,vehicleA\n\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,13,2019-11-20T10:17:17Z,1574245037,89e82cc,tid,bikes,start,vehicleA\n,,14,2019-11-20T10:17:18Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:24Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:26Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:32Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:35Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:42Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:47Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:54Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,15,2019-11-20T10:18:00Z,40.700684,89e82d4,lat,bikes,end,vehicleA\n,,16,2019-11-20T10:18:00Z,-73.323692,89e82d4,lon,bikes,end,vehicleA\n\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,17,2019-11-20T10:18:00Z,1574245037,89e82d4,tid,bikes,end,vehicleA\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   161,
					},
					File:   "asTracks_test.flux",
					Source: "outData = \"\n#group,false,false,false,false,false,false,true,false,true,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,string,double,long,double\n#default,_result,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,id,lat,tid,lon\n,,0,2019-11-20T10:17:17Z,89e82cc,bikes,start,vehicleA,40.700344,1574245037,-73.324814\n,,0,2019-11-20T10:17:18Z,89e82cc,bikes,via,vehicleA,40.700348,1574245037,-73.324799\n,,0,2019-11-20T10:17:24Z,89e82cc,bikes,via,vehicleA,40.700397,1574245037,-73.324699\n,,0,2019-11-20T10:17:26Z,89e82cc,bikes,via,vehicleA,40.700413,1574245037,-73.324638\n,,0,2019-11-20T10:17:32Z,89e82cc,bikes,via,vehicleA,40.700474,1574245037,-73.324471\n,,0,2019-11-20T10:17:35Z,89e82cc,bikes,via,vehicleA,40.700481,1574245037,-73.324371\n,,0,2019-11-20T10:17:42Z,89e82cc,bikes,via,vehicleA,40.700459,1574245037,-73.324181\n,,0,2019-11-20T10:17:47Z,89e82cc,bikes,via,vehicleA,40.700455,1574245037,-73.323982\n,,0,2019-11-20T10:17:54Z,89e82cc,bikes,via,vehicleA,40.700542,1574245037,-73.323769\n,,0,2019-11-20T10:18:00Z,89e82d4,bikes,end,vehicleA,40.700684,1574245037,-73.323692\n,,1,2019-11-10T11:07:12Z,89c258c,bikes,start,vehicleB,40.762096,1573384032,-73.967104\n,,1,2019-11-10T11:07:35Z,89c258c,bikes,via,vehicleB,40.762225,1573384032,-73.967081\n,,1,2019-11-10T11:07:38Z,89c258c,bikes,via,vehicleB,40.762247,1573384032,-73.967129\n,,1,2019-11-10T11:07:43Z,89c258c,bikes,via,vehicleB,40.762331,1573384032,-73.967261\n,,1,2019-11-10T11:07:48Z,89c258c,bikes,via,vehicleB,40.762408,1573384032,-73.967422\n,,1,2019-11-10T11:07:52Z,89c258c,bikes,via,vehicleB,40.762484,1573384032,-73.967542\n,,1,2019-11-10T11:08:01Z,89c258c,bikes,via,vehicleB,40.762597,1573384032,-73.967718\n,,1,2019-11-10T11:08:16Z,89c258c,bikes,via,vehicleB,40.762574,1573384032,-73.967803\n,,1,2019-11-10T11:08:34Z,89c258c,bikes,end,vehicleB,40.762662,1573384032,-73.967971\n,,2,2019-11-10T21:16:00Z,89c258c,bikes,start,vehicleB,40.763126,1573420560,-73.966333\n,,2,2019-11-10T21:16:06Z,89c258c,bikes,via,vehicleB,40.76309,1573420560,-73.966254\n,,2,2019-11-10T21:16:18Z,89c258c,bikes,via,vehicleB,40.763036,1573420560,-73.966091\n,,2,2019-11-10T21:16:31Z,89c258c,bikes,via,vehicleB,40.763006,1573420560,-73.965889\n,,2,2019-11-10T21:16:48Z,89c258c,bikes,via,vehicleB,40.762904,1573420560,-73.96573\n,,2,2019-11-10T21:17:08Z,89c258c,bikes,via,vehicleB,40.762836,1573420560,-73.965721\n,,2,2019-11-10T21:17:23Z,89c258c,bikes,via,vehicleB,40.762736,1573420560,-73.965801\n,,2,2019-11-10T21:17:36Z,89c258c,bikes,via,vehicleB,40.762469,1573420560,-73.96559\n,,2,2019-11-10T21:17:46Z,89c258c,bikes,via,vehicleB,40.762418,1573420560,-73.965579\n,,2,2019-11-10T21:17:47Z,89c258c,bikes,end,vehicleB,40.762424,1573420560,-73.965583\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   127,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 8,
							Line:   127,
						},
						File:   "asTracks_test.flux",
						Source: "outData",
						Start: ast.Position{
							Column: 1,
							Line:   127,
						},
					},
				},
				Name: "outData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   161,
						},
						File:   "asTracks_test.flux",
						Source: "\"\n#group,false,false,false,false,false,false,true,false,true,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,string,double,long,double\n#default,_result,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,id,lat,tid,lon\n,,0,2019-11-20T10:17:17Z,89e82cc,bikes,start,vehicleA,40.700344,1574245037,-73.324814\n,,0,2019-11-20T10:17:18Z,89e82cc,bikes,via,vehicleA,40.700348,1574245037,-73.324799\n,,0,2019-11-20T10:17:24Z,89e82cc,bikes,via,vehicleA,40.700397,1574245037,-73.324699\n,,0,2019-11-20T10:17:26Z,89e82cc,bikes,via,vehicleA,40.700413,1574245037,-73.324638\n,,0,2019-11-20T10:17:32Z,89e82cc,bikes,via,vehicleA,40.700474,1574245037,-73.324471\n,,0,2019-11-20T10:17:35Z,89e82cc,bikes,via,vehicleA,40.700481,1574245037,-73.324371\n,,0,2019-11-20T10:17:42Z,89e82cc,bikes,via,vehicleA,40.700459,1574245037,-73.324181\n,,0,2019-11-20T10:17:47Z,89e82cc,bikes,via,vehicleA,40.700455,1574245037,-73.323982\n,,0,2019-11-20T10:17:54Z,89e82cc,bikes,via,vehicleA,40.700542,1574245037,-73.323769\n,,0,2019-11-20T10:18:00Z,89e82d4,bikes,end,vehicleA,40.700684,1574245037,-73.323692\n,,1,2019-11-10T11:07:12Z,89c258c,bikes,start,vehicleB,40.762096,1573384032,-73.967104\n,,1,2019-11-10T11:07:35Z,89c258c,bikes,via,vehicleB,40.762225,1573384032,-73.967081\n,,1,2019-11-10T11:07:38Z,89c258c,bikes,via,vehicleB,40.762247,1573384032,-73.967129\n,,1,2019-11-10T11:07:43Z,89c258c,bikes,via,vehicleB,40.762331,1573384032,-73.967261\n,,1,2019-11-10T11:07:48Z,89c258c,bikes,via,vehicleB,40.762408,1573384032,-73.967422\n,,1,2019-11-10T11:07:52Z,89c258c,bikes,via,vehicleB,40.762484,1573384032,-73.967542\n,,1,2019-11-10T11:08:01Z,89c258c,bikes,via,vehicleB,40.762597,1573384032,-73.967718\n,,1,2019-11-10T11:08:16Z,89c258c,bikes,via,vehicleB,40.762574,1573384032,-73.967803\n,,1,2019-11-10T11:08:34Z,89c258c,bikes,end,vehicleB,40.762662,1573384032,-73.967971\n,,2,2019-11-10T21:16:00Z,89c258c,bikes,start,vehicleB,40.763126,1573420560,-73.966333\n,,2,2019-11-10T21:16:06Z,89c258c,bikes,via,vehicleB,40.76309,1573420560,-73.966254\n,,2,2019-11-10T21:16:18Z,89c258c,bikes,via,vehicleB,40.763036,1573420560,-73.966091\n,,2,2019-11-10T21:16:31Z,89c258c,bikes,via,vehicleB,40.763006,1573420560,-73.965889\n,,2,2019-11-10T21:16:48Z,89c258c,bikes,via,vehicleB,40.762904,1573420560,-73.96573\n,,2,2019-11-10T21:17:08Z,89c258c,bikes,via,vehicleB,40.762836,1573420560,-73.965721\n,,2,2019-11-10T21:17:23Z,89c258c,bikes,via,vehicleB,40.762736,1573420560,-73.965801\n,,2,2019-11-10T21:17:36Z,89c258c,bikes,via,vehicleB,40.762469,1573420560,-73.96559\n,,2,2019-11-10T21:17:46Z,89c258c,bikes,via,vehicleB,40.762418,1573420560,-73.965579\n,,2,2019-11-10T21:17:47Z,89c258c,bikes,end,vehicleB,40.762424,1573420560,-73.965583\n\"",
						Start: ast.Position{
							Column: 11,
							Line:   127,
						},
					},
				},
				Value: "\n#group,false,false,false,false,false,false,true,false,true,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,string,double,long,double\n#default,_result,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,id,lat,tid,lon\n,,0,2019-11-20T10:17:17Z,89e82cc,bikes,start,vehicleA,40.700344,1574245037,-73.324814\n,,0,2019-11-20T10:17:18Z,89e82cc,bikes,via,vehicleA,40.700348,1574245037,-73.324799\n,,0,2019-11-20T10:17:24Z,89e82cc,bikes,via,vehicleA,40.700397,1574245037,-73.324699\n,,0,2019-11-20T10:17:26Z,89e82cc,bikes,via,vehicleA,40.700413,1574245037,-73.324638\n,,0,2019-11-20T10:17:32Z,89e82cc,bikes,via,vehicleA,40.700474,1574245037,-73.324471\n,,0,2019-11-20T10:17:35Z,89e82cc,bikes,via,vehicleA,40.700481,1574245037,-73.324371\n,,0,2019-11-20T10:17:42Z,89e82cc,bikes,via,vehicleA,40.700459,1574245037,-73.324181\n,,0,2019-11-20T10:17:47Z,89e82cc,bikes,via,vehicleA,40.700455,1574245037,-73.323982\n,,0,2019-11-20T10:17:54Z,89e82cc,bikes,via,vehicleA,40.700542,1574245037,-73.323769\n,,0,2019-11-20T10:18:00Z,89e82d4,bikes,end,vehicleA,40.700684,1574245037,-73.323692\n,,1,2019-11-10T11:07:12Z,89c258c,bikes,start,vehicleB,40.762096,1573384032,-73.967104\n,,1,2019-11-10T11:07:35Z,89c258c,bikes,via,vehicleB,40.762225,1573384032,-73.967081\n,,1,2019-11-10T11:07:38Z,89c258c,bikes,via,vehicleB,40.762247,1573384032,-73.967129\n,,1,2019-11-10T11:07:43Z,89c258c,bikes,via,vehicleB,40.762331,1573384032,-73.967261\n,,1,2019-11-10T11:07:48Z,89c258c,bikes,via,vehicleB,40.762408,1573384032,-73.967422\n,,1,2019-11-10T11:07:52Z,89c258c,bikes,via,vehicleB,40.762484,1573384032,-73.967542\n,,1,2019-11-10T11:08:01Z,89c258c,bikes,via,vehicleB,40.762597,1573384032,-73.967718\n,,1,2019-11-10T11:08:16Z,89c258c,bikes,via,vehicleB,40.762574,1573384032,-73.967803\n,,1,2019-11-10T11:08:34Z,89c258c,bikes,end,vehicleB,40.762662,1573384032,-73.967971\n,,2,2019-11-10T21:16:00Z,89c258c,bikes,start,vehicleB,40.763126,1573420560,-73.966333\n,,2,2019-11-10T21:16:06Z,89c258c,bikes,via,vehicleB,40.76309,1573420560,-73.966254\n,,2,2019-11-10T21:16:18Z,89c258c,bikes,via,vehicleB,40.763036,1573420560,-73.966091\n,,2,2019-11-10T21:16:31Z,89c258c,bikes,via,vehicleB,40.763006,1573420560,-73.965889\n,,2,2019-11-10T21:16:48Z,89c258c,bikes,via,vehicleB,40.762904,1573420560,-73.96573\n,,2,2019-11-10T21:17:08Z,89c258c,bikes,via,vehicleB,40.762836,1573420560,-73.965721\n,,2,2019-11-10T21:17:23Z,89c258c,bikes,via,vehicleB,40.762736,1573420560,-73.965801\n,,2,2019-11-10T21:17:36Z,89c258c,bikes,via,vehicleB,40.762469,1573420560,-73.96559\n,,2,2019-11-10T21:17:46Z,89c258c,bikes,via,vehicleB,40.762418,1573420560,-73.965579\n,,2,2019-11-10T21:17:47Z,89c258c,bikes,end,vehicleB,40.762424,1573420560,-73.965583\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   168,
					},
					File:   "asTracks_test.flux",
					Source: "t_asTracks = (table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.toRows(correlationKey: [\"id\", \"_time\"])\n    |> geo.asTracks()\n    |> drop(columns: [\"_start\", \"_stop\"])",
					Start: ast.Position{
						Column: 1,
						Line:   163,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 11,
							Line:   163,
						},
						File:   "asTracks_test.flux",
						Source: "t_asTracks",
						Start: ast.Position{
							Column: 1,
							Line:   163,
						},
					},
				},
				Name: "t_asTracks",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   168,
						},
						File:   "asTracks_test.flux",
						Source: "(table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.toRows(correlationKey: [\"id\", \"_time\"])\n    |> geo.asTracks()\n    |> drop(columns: [\"_start\", \"_stop\"])",
						Start: ast.Position{
							Column: 14,
							Line:   163,
						},
					},
				},
				Body: &ast.PipeExpression{
					Argument: &ast.PipeExpression{
						Argument: &ast.PipeExpression{
							Argument: &ast.PipeExpression{
								Argument: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 8,
												Line:   164,
											},
											File:   "asTracks_test.flux",
											Source: "table",
											Start: ast.Position{
												Column: 3,
												Line:   164,
											},
										},
									},
									Name: "table",
								},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 42,
											Line:   165,
										},
										File:   "asTracks_test.flux",
										Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)",
										Start: ast.Position{
											Column: 3,
											Line:   164,
										},
									},
								},
								Call: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 41,
													Line:   165,
												},
												File:   "asTracks_test.flux",
												Source: "start: 2019-11-01T00:00:00Z",
												Start: ast.Position{
													Column: 14,
													Line:   165,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 41,
														Line:   165,
													},
													File:   "asTracks_test.flux",
													Source: "start: 2019-11-01T00:00:00Z",
													Start: ast.Position{
														Column: 14,
														Line:   165,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 19,
															Line:   165,
														},
														File:   "asTracks_test.flux",
														Source: "start",
														Start: ast.Position{
															Column: 14,
															Line:   165,
														},
													},
												},
												Name: "start",
											},
											Value: &ast.DateTimeLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 41,
															Line:   165,
														},
														File:   "asTracks_test.flux",
														Source: "2019-11-01T00:00:00Z",
														Start: ast.Position{
															Column: 21,
															Line:   165,
														},
													},
												},
												Value: parser.MustParseTime("2019-11-01T00:00:00Z"),
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 42,
												Line:   165,
											},
											File:   "asTracks_test.flux",
											Source: "range(start: 2019-11-01T00:00:00Z)",
											Start: ast.Position{
												Column: 8,
												Line:   165,
											},
										},
									},
									Callee: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 13,
													Line:   165,
												},
												File:   "asTracks_test.flux",
												Source: "range",
												Start: ast.Position{
													Column: 8,
													Line:   165,
												},
											},
										},
										Name: "range",
									},
								},
							},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 51,
										Line:   166,
									},
									File:   "asTracks_test.flux",
									Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.toRows(correlationKey: [\"id\", \"_time\"])",
									Start: ast.Position{
										Column: 3,
										Line:   164,
									},
								},
							},
							Call: &ast.CallExpression{
								Arguments: []ast.Expression{&ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 50,
												Line:   166,
											},
											File:   "asTracks_test.flux",
											Source: "correlationKey: [\"id\", \"_time\"]",
											Start: ast.Position{
												Column: 19,
												Line:   166,
											},
										},
									},
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 50,
													Line:   166,
												},
												File:   "asTracks_test.flux",
												Source: "correlationKey: [\"id\", \"_time\"]",
												Start: ast.Position{
													Column: 19,
													Line:   166,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 33,
														Line:   166,
													},
													File:   "asTracks_test.flux",
													Source: "correlationKey",
													Start: ast.Position{
														Column: 19,
														Line:   166,
													},
												},
											},
											Name: "correlationKey",
										},
										Value: &ast.ArrayExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 50,
														Line:   166,
													},
													File:   "asTracks_test.flux",
													Source: "[\"id\", \"_time\"]",
													Start: ast.Position{
														Column: 35,
														Line:   166,
													},
												},
											},
											Elements: []ast.Expression{&ast.StringLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 40,
															Line:   166,
														},
														File:   "asTracks_test.flux",
														Source: "\"id\"",
														Start: ast.Position{
															Column: 36,
															Line:   166,
														},
													},
												},
												Value: "id",
											}, &ast.StringLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 49,
															Line:   166,
														},
														File:   "asTracks_test.flux",
														Source: "\"_time\"",
														Start: ast.Position{
															Column: 42,
															Line:   166,
														},
													},
												},
												Value: "_time",
											}},
										},
									}},
									With: nil,
								}},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 51,
											Line:   166,
										},
										File:   "asTracks_test.flux",
										Source: "geo.toRows(correlationKey: [\"id\", \"_time\"])",
										Start: ast.Position{
											Column: 8,
											Line:   166,
										},
									},
								},
								Callee: &ast.MemberExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 18,
												Line:   166,
											},
											File:   "asTracks_test.flux",
											Source: "geo.toRows",
											Start: ast.Position{
												Column: 8,
												Line:   166,
											},
										},
									},
									Object: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 11,
													Line:   166,
												},
												File:   "asTracks_test.flux",
												Source: "geo",
												Start: ast.Position{
													Column: 8,
													Line:   166,
												},
											},
										},
										Name: "geo",
									},
									Property: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 18,
													Line:   166,
												},
												File:   "asTracks_test.flux",
												Source: "toRows",
												Start: ast.Position{
													Column: 12,
													Line:   166,
												},
											},
										},
										Name: "toRows",
									},
								},
							},
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 22,
									Line:   167,
								},
								File:   "asTracks_test.flux",
								Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.toRows(correlationKey: [\"id\", \"_time\"])\n    |> geo.asTracks()",
								Start: ast.Position{
									Column: 3,
									Line:   164,
								},
							},
						},
						Call: &ast.CallExpression{
							Arguments: nil,
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 22,
										Line:   167,
									},
									File:   "asTracks_test.flux",
									Source: "geo.asTracks()",
									Start: ast.Position{
										Column: 8,
										Line:   167,
									},
								},
							},
							Callee: &ast.MemberExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 20,
											Line:   167,
										},
										File:   "asTracks_test.flux",
										Source: "geo.asTracks",
										Start: ast.Position{
											Column: 8,
											Line:   167,
										},
									},
								},
								Object: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 11,
												Line:   167,
											},
											File:   "asTracks_test.flux",
											Source: "geo",
											Start: ast.Position{
												Column: 8,
												Line:   167,
											},
										},
									},
									Name: "geo",
								},
								Property: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 20,
												Line:   167,
											},
											File:   "asTracks_test.flux",
											Source: "asTracks",
											Start: ast.Position{
												Column: 12,
												Line:   167,
											},
										},
									},
									Name: "asTracks",
								},
							},
						},
					},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   168,
							},
							File:   "asTracks_test.flux",
							Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.toRows(correlationKey: [\"id\", \"_time\"])\n    |> geo.asTracks()\n    |> drop(columns: [\"_start\", \"_stop\"])",
							Start: ast.Position{
								Column: 3,
								Line:   164,
							},
						},
					},
					Call: &ast.CallExpression{
						Arguments: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   168,
									},
									File:   "asTracks_test.flux",
									Source: "columns: [\"_start\", \"_stop\"]",
									Start: ast.Position{
										Column: 13,
										Line:   168,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 41,
											Line:   168,
										},
										File:   "asTracks_test.flux",
										Source: "columns: [\"_start\", \"_stop\"]",
										Start: ast.Position{
											Column: 13,
											Line:   168,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 20,
												Line:   168,
											},
											File:   "asTracks_test.flux",
											Source: "columns",
											Start: ast.Position{
												Column: 13,
												Line:   168,
											},
										},
									},
									Name: "columns",
								},
								Value: &ast.ArrayExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 41,
												Line:   168,
											},
											File:   "asTracks_test.flux",
											Source: "[\"_start\", \"_stop\"]",
											Start: ast.Position{
												Column: 22,
												Line:   168,
											},
										},
									},
									Elements: []ast.Expression{&ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 31,
													Line:   168,
												},
												File:   "asTracks_test.flux",
												Source: "\"_start\"",
												Start: ast.Position{
													Column: 23,
													Line:   168,
												},
											},
										},
										Value: "_start",
									}, &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 40,
													Line:   168,
												},
												File:   "asTracks_test.flux",
												Source: "\"_stop\"",
												Start: ast.Position{
													Column: 33,
													Line:   168,
												},
											},
										},
										Value: "_stop",
									}},
								},
							}},
							With: nil,
						}},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   168,
								},
								File:   "asTracks_test.flux",
								Source: "drop(columns: [\"_start\", \"_stop\"])",
								Start: ast.Position{
									Column: 8,
									Line:   168,
								},
							},
						},
						Callee: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 12,
										Line:   168,
									},
									File:   "asTracks_test.flux",
									Source: "drop",
									Start: ast.Position{
										Column: 8,
										Line:   168,
									},
								},
							},
							Name: "drop",
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 23,
								Line:   163,
							},
							File:   "asTracks_test.flux",
							Source: "table=<-",
							Start: ast.Position{
								Column: 15,
								Line:   163,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 20,
									Line:   163,
								},
								File:   "asTracks_test.flux",
								Source: "table",
								Start: ast.Position{
									Column: 15,
									Line:   163,
								},
							},
						},
						Name: "table",
					},
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 23,
								Line:   163,
							},
							File:   "asTracks_test.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 21,
								Line:   163,
							},
						},
					}},
				}},
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 98,
							Line:   170,
						},
						File:   "asTracks_test.flux",
						Source: "_asTracks = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_asTracks})",
						Start: ast.Position{
							Column: 6,
							Line:   169,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 15,
								Line:   169,
							},
							File:   "asTracks_test.flux",
							Source: "_asTracks",
							Start: ast.Position{
								Column: 6,
								Line:   169,
							},
						},
					},
					Name: "_asTracks",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 98,
								Line:   170,
							},
							File:   "asTracks_test.flux",
							Source: "() =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_asTracks})",
							Start: ast.Position{
								Column: 18,
								Line:   169,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 98,
									Line:   170,
								},
								File:   "asTracks_test.flux",
								Source: "({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_asTracks})",
								Start: ast.Position{
									Column: 2,
									Line:   170,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 97,
										Line:   170,
									},
									File:   "asTracks_test.flux",
									Source: "{input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_asTracks}",
									Start: ast.Position{
										Column: 3,
										Line:   170,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 43,
											Line:   170,
										},
										File:   "asTracks_test.flux",
										Source: "input: testing.loadStorage(csv: inData)",
										Start: ast.Position{
											Column: 4,
											Line:   170,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 9,
												Line:   170,
											},
											File:   "asTracks_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 4,
												Line:   170,
											},
										},
									},
									Name: "input",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   170,
												},
												File:   "asTracks_test.flux",
												Source: "csv: inData",
												Start: ast.Position{
													Column: 31,
													Line:   170,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 42,
														Line:   170,
													},
													File:   "asTracks_test.flux",
													Source: "csv: inData",
													Start: ast.Position{
														Column: 31,
														Line:   170,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 34,
															Line:   170,
														},
														File:   "asTracks_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 31,
															Line:   170,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 42,
															Line:   170,
														},
														File:   "asTracks_test.flux",
														Source: "inData",
														Start: ast.Position{
															Column: 36,
															Line:   170,
														},
													},
												},
												Name: "inData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 43,
												Line:   170,
											},
											File:   "asTracks_test.flux",
											Source: "testing.loadStorage(csv: inData)",
											Start: ast.Position{
												Column: 11,
												Line:   170,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   170,
												},
												File:   "asTracks_test.flux",
												Source: "testing.loadStorage",
												Start: ast.Position{
													Column: 11,
													Line:   170,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   170,
													},
													File:   "asTracks_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 11,
														Line:   170,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 30,
														Line:   170,
													},
													File:   "asTracks_test.flux",
													Source: "loadStorage",
													Start: ast.Position{
														Column: 19,
														Line:   170,
													},
												},
											},
											Name: "loadStorage",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 80,
											Line:   170,
										},
										File:   "asTracks_test.flux",
										Source: "want: testing.loadMem(csv: outData)",
										Start: ast.Position{
											Column: 45,
											Line:   170,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 49,
												Line:   170,
											},
											File:   "asTracks_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 45,
												Line:   170,
											},
										},
									},
									Name: "want",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 79,
													Line:   170,
												},
												File:   "asTracks_test.flux",
												Source: "csv: outData",
												Start: ast.Position{
													Column: 67,
													Line:   170,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 79,
														Line:   170,
													},
													File:   "asTracks_test.flux",
													Source: "csv: outData",
													Start: ast.Position{
														Column: 67,
														Line:   170,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 70,
															Line:   170,
														},
														File:   "asTracks_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 67,
															Line:   170,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 79,
															Line:   170,
														},
														File:   "asTracks_test.flux",
														Source: "outData",
														Start: ast.Position{
															Column: 72,
															Line:   170,
														},
													},
												},
												Name: "outData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 80,
												Line:   170,
											},
											File:   "asTracks_test.flux",
											Source: "testing.loadMem(csv: outData)",
											Start: ast.Position{
												Column: 51,
												Line:   170,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   170,
												},
												File:   "asTracks_test.flux",
												Source: "testing.loadMem",
												Start: ast.Position{
													Column: 51,
													Line:   170,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 58,
														Line:   170,
													},
													File:   "asTracks_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 51,
														Line:   170,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 66,
														Line:   170,
													},
													File:   "asTracks_test.flux",
													Source: "loadMem",
													Start: ast.Position{
														Column: 59,
														Line:   170,
													},
												},
											},
											Name: "loadMem",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 96,
											Line:   170,
										},
										File:   "asTracks_test.flux",
										Source: "fn: t_asTracks",
										Start: ast.Position{
											Column: 82,
											Line:   170,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 84,
												Line:   170,
											},
											File:   "asTracks_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 82,
												Line:   170,
											},
										},
									},
									Name: "fn",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 96,
												Line:   170,
											},
											File:   "asTracks_test.flux",
											Source: "t_asTracks",
											Start: ast.Position{
												Column: 86,
												Line:   170,
											},
										},
									},
									Name: "t_asTracks",
								},
							}},
							With: nil,
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 98,
						Line:   170,
					},
					File:   "asTracks_test.flux",
					Source: "test _asTracks = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_asTracks})",
					Start: ast.Position{
						Column: 1,
						Line:   169,
					},
				},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 26,
						Line:   3,
					},
					File:   "asTracks_test.flux",
					Source: "import \"experimental/geo\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 26,
							Line:   3,
						},
						File:   "asTracks_test.flux",
						Source: "\"experimental/geo\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "experimental/geo",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   4,
					},
					File:   "asTracks_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   4,
						},
						File:   "asTracks_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "testing",
			},
		}},
		Metadata: "parser-type=go",
		Name:     "asTracks_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   1,
					},
					File:   "asTracks_test.flux",
					Source: "package geo_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   1,
						},
						File:   "asTracks_test.flux",
						Source: "geo_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "geo_test",
			},
		},
	}, &ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 109,
					Line:   219,
				},
				File:   "filterRowsNotStrict_test.flux",
				Source: "package geo_test\n\nimport \"experimental/geo\"\nimport \"testing\"\n\noption now = () => (2030-01-01T00:00:00Z)\n\ninData = \"\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n\"\n\noutData = \"\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,lat\n,,3,2019-11-01T00:17:38.287113937Z,89c2664,taxi,start,1572567458287113937,-73.776665,40.645245\n\"\n\nt_filterRowsNotStrict = (table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.filterRows(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, strict: false)\n    |> drop(columns: [\"_start\", \"_stop\"])\ntest _filterRowsNotStrict = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_filterRowsNotStrict})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   6,
						},
						File:   "filterRowsNotStrict_test.flux",
						Source: "now = () => (2030-01-01T00:00:00Z)",
						Start: ast.Position{
							Column: 8,
							Line:   6,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   6,
							},
							File:   "filterRowsNotStrict_test.flux",
							Source: "now",
							Start: ast.Position{
								Column: 8,
								Line:   6,
							},
						},
					},
					Name: "now",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   6,
							},
							File:   "filterRowsNotStrict_test.flux",
							Source: "() => (2030-01-01T00:00:00Z)",
							Start: ast.Position{
								Column: 14,
								Line:   6,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   6,
								},
								File:   "filterRowsNotStrict_test.flux",
								Source: "(2030-01-01T00:00:00Z)",
								Start: ast.Position{
									Column: 20,
									Line:   6,
								},
							},
						},
						Expression: &ast.DateTimeLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   6,
									},
									File:   "filterRowsNotStrict_test.flux",
									Source: "2030-01-01T00:00:00Z",
									Start: ast.Position{
										Column: 21,
										Line:   6,
									},
								},
							},
							Value: parser.MustParseTime("2030-01-01T00:00:00Z"),
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   6,
					},
					File:   "filterRowsNotStrict_test.flux",
					Source: "option now = () => (2030-01-01T00:00:00Z)",
					Start: ast.Position{
						Column: 1,
						Line:   6,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   185,
					},
					File:   "filterRowsNotStrict_test.flux",
					Source: "inData = \"\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   8,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 7,
							Line:   8,
						},
						File:   "filterRowsNotStrict_test.flux",
						Source: "inData",
						Start: ast.Position{
							Column: 1,
							Line:   8,
						},
					},
				},
				Name: "inData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   185,
						},
						File:   "filterRowsNotStrict_test.flux",
						Source: "\"\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n\"",
						Start: ast.Position{
							Column: 10,
							Line:   8,
						},
					},
				},
				Value: "\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   211,
					},
					File:   "filterRowsNotStrict_test.flux",
					Source: "outData = \"\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,lat\n,,3,2019-11-01T00:17:38.287113937Z,89c2664,taxi,start,1572567458287113937,-73.776665,40.645245\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   187,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 8,
							Line:   187,
						},
						File:   "filterRowsNotStrict_test.flux",
						Source: "outData",
						Start: ast.Position{
							Column: 1,
							Line:   187,
						},
					},
				},
				Name: "outData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   211,
						},
						File:   "filterRowsNotStrict_test.flux",
						Source: "\"\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,lat\n,,3,2019-11-01T00:17:38.287113937Z,89c2664,taxi,start,1572567458287113937,-73.776665,40.645245\n\"",
						Start: ast.Position{
							Column: 11,
							Line:   187,
						},
					},
				},
				Value: "\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,lat\n,,3,2019-11-01T00:17:38.287113937Z,89c2664,taxi,start,1572567458287113937,-73.776665,40.645245\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   217,
					},
					File:   "filterRowsNotStrict_test.flux",
					Source: "t_filterRowsNotStrict = (table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.filterRows(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, strict: false)\n    |> drop(columns: [\"_start\", \"_stop\"])",
					Start: ast.Position{
						Column: 1,
						Line:   213,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 22,
							Line:   213,
						},
						File:   "filterRowsNotStrict_test.flux",
						Source: "t_filterRowsNotStrict",
						Start: ast.Position{
							Column: 1,
							Line:   213,
						},
					},
				},
				Name: "t_filterRowsNotStrict",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   217,
						},
						File:   "filterRowsNotStrict_test.flux",
						Source: "(table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.filterRows(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, strict: false)\n    |> drop(columns: [\"_start\", \"_stop\"])",
						Start: ast.Position{
							Column: 25,
							Line:   213,
						},
					},
				},
				Body: &ast.PipeExpression{
					Argument: &ast.PipeExpression{
						Argument: &ast.PipeExpression{
							Argument: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 8,
											Line:   214,
										},
										File:   "filterRowsNotStrict_test.flux",
										Source: "table",
										Start: ast.Position{
											Column: 3,
											Line:   214,
										},
									},
								},
								Name: "table",
							},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 42,
										Line:   215,
									},
									File:   "filterRowsNotStrict_test.flux",
									Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)",
									Start: ast.Position{
										Column: 3,
										Line:   214,
									},
								},
							},
							Call: &ast.CallExpression{
								Arguments: []ast.Expression{&ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 41,
												Line:   215,
											},
											File:   "filterRowsNotStrict_test.flux",
											Source: "start: 2019-11-01T00:00:00Z",
											Start: ast.Position{
												Column: 14,
												Line:   215,
											},
										},
									},
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 41,
													Line:   215,
												},
												File:   "filterRowsNotStrict_test.flux",
												Source: "start: 2019-11-01T00:00:00Z",
												Start: ast.Position{
													Column: 14,
													Line:   215,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 19,
														Line:   215,
													},
													File:   "filterRowsNotStrict_test.flux",
													Source: "start",
													Start: ast.Position{
														Column: 14,
														Line:   215,
													},
												},
											},
											Name: "start",
										},
										Value: &ast.DateTimeLiteral{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 41,
														Line:   215,
													},
													File:   "filterRowsNotStrict_test.flux",
													Source: "2019-11-01T00:00:00Z",
													Start: ast.Position{
														Column: 21,
														Line:   215,
													},
												},
											},
											Value: parser.MustParseTime("2019-11-01T00:00:00Z"),
										},
									}},
									With: nil,
								}},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 42,
											Line:   215,
										},
										File:   "filterRowsNotStrict_test.flux",
										Source: "range(start: 2019-11-01T00:00:00Z)",
										Start: ast.Position{
											Column: 8,
											Line:   215,
										},
									},
								},
								Callee: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 13,
												Line:   215,
											},
											File:   "filterRowsNotStrict_test.flux",
											Source: "range",
											Start: ast.Position{
												Column: 8,
												Line:   215,
											},
										},
									},
									Name: "range",
								},
							},
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 94,
									Line:   216,
								},
								File:   "filterRowsNotStrict_test.flux",
								Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.filterRows(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, strict: false)",
								Start: ast.Position{
									Column: 3,
									Line:   214,
								},
							},
						},
						Call: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 93,
											Line:   216,
										},
										File:   "filterRowsNotStrict_test.flux",
										Source: "region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, strict: false",
										Start: ast.Position{
											Column: 23,
											Line:   216,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 78,
												Line:   216,
											},
											File:   "filterRowsNotStrict_test.flux",
											Source: "region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}",
											Start: ast.Position{
												Column: 23,
												Line:   216,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 29,
													Line:   216,
												},
												File:   "filterRowsNotStrict_test.flux",
												Source: "region",
												Start: ast.Position{
													Column: 23,
													Line:   216,
												},
											},
										},
										Name: "region",
									},
									Value: &ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 78,
													Line:   216,
												},
												File:   "filterRowsNotStrict_test.flux",
												Source: "{lat: 40.7090214, lon: -73.61846, radius: 15.0}",
												Start: ast.Position{
													Column: 31,
													Line:   216,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 47,
														Line:   216,
													},
													File:   "filterRowsNotStrict_test.flux",
													Source: "lat: 40.7090214",
													Start: ast.Position{
														Column: 32,
														Line:   216,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 35,
															Line:   216,
														},
														File:   "filterRowsNotStrict_test.flux",
														Source: "lat",
														Start: ast.Position{
															Column: 32,
															Line:   216,
														},
													},
												},
												Name: "lat",
											},
											Value: &ast.FloatLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 47,
															Line:   216,
														},
														File:   "filterRowsNotStrict_test.flux",
														Source: "40.7090214",
														Start: ast.Position{
															Column: 37,
															Line:   216,
														},
													},
												},
												Value: 40.7090214,
											},
										}, &ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 63,
														Line:   216,
													},
													File:   "filterRowsNotStrict_test.flux",
													Source: "lon: -73.61846",
													Start: ast.Position{
														Column: 49,
														Line:   216,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 52,
															Line:   216,
														},
														File:   "filterRowsNotStrict_test.flux",
														Source: "lon",
														Start: ast.Position{
															Column: 49,
															Line:   216,
														},
													},
												},
												Name: "lon",
											},
											Value: &ast.UnaryExpression{
												Argument: &ast.FloatLiteral{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 63,
																Line:   216,
															},
															File:   "filterRowsNotStrict_test.flux",
															Source: "73.61846",
															Start: ast.Position{
																Column: 55,
																Line:   216,
															},
														},
													},
													Value: 73.61846,
												},
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 63,
															Line:   216,
														},
														File:   "filterRowsNotStrict_test.flux",
														Source: "-73.61846",
														Start: ast.Position{
															Column: 54,
															Line:   216,
														},
													},
												},
												Operator: 6,
											},
										}, &ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 77,
														Line:   216,
													},
													File:   "filterRowsNotStrict_test.flux",
													Source: "radius: 15.0",
													Start: ast.Position{
														Column: 65,
														Line:   216,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 71,
															Line:   216,
														},
														File:   "filterRowsNotStrict_test.flux",
														Source: "radius",
														Start: ast.Position{
															Column: 65,
															Line:   216,
														},
													},
												},
												Name: "radius",
											},
											Value: &ast.FloatLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 77,
															Line:   216,
														},
														File:   "filterRowsNotStrict_test.flux",
														Source: "15.0",
														Start: ast.Position{
															Column: 73,
															Line:   216,
														},
													},
												},
												Value: 15.0,
											},
										}},
										With: nil,
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 93,
												Line:   216,
											},
											File:   "filterRowsNotStrict_test.flux",
											Source: "strict: false",
											Start: ast.Position{
												Column: 80,
												Line:   216,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 86,
													Line:   216,
												},
												File:   "filterRowsNotStrict_test.flux",
												Source: "strict",
												Start: ast.Position{
													Column: 80,
													Line:   216,
												},
											},
										},
										Name: "strict",
									},
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 93,
													Line:   216,
												},
												File:   "filterRowsNotStrict_test.flux",
												Source: "false",
												Start: ast.Position{
													Column: 88,
													Line:   216,
												},
											},
										},
										Name: "false",
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 94,
										Line:   216,
									},
									File:   "filterRowsNotStrict_test.flux",
									Source: "geo.filterRows(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, strict: false)",
									Start: ast.Position{
										Column: 8,
										Line:   216,
									},
								},
							},
							Callee: &ast.MemberExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 22,
											Line:   216,
										},
										File:   "filterRowsNotStrict_test.flux",
										Source: "geo.filterRows",
										Start: ast.Position{
											Column: 8,
											Line:   216,
										},
									},
								},
								Object: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 11,
												Line:   216,
											},
											File:   "filterRowsNotStrict_test.flux",
											Source: "geo",
											Start: ast.Position{
												Column: 8,
												Line:   216,
											},
										},
									},
									Name: "geo",
								},
								Property: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 22,
												Line:   216,
											},
											File:   "filterRowsNotStrict_test.flux",
											Source: "filterRows",
											Start: ast.Position{
												Column: 12,
												Line:   216,
											},
										},
									},
									Name: "filterRows",
								},
							},
						},
					},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   217,
							},
							File:   "filterRowsNotStrict_test.flux",
							Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.filterRows(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, strict: false)\n    |> drop(columns: [\"_start\", \"_stop\"])",
							Start: ast.Position{
								Column: 3,
								Line:   214,
							},
						},
					},
					Call: &ast.CallExpression{
						Arguments: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   217,
									},
									File:   "filterRowsNotStrict_test.flux",
									Source: "columns: [\"_start\", \"_stop\"]",
									Start: ast.Position{
										Column: 13,
										Line:   217,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 41,
											Line:   217,
										},
										File:   "filterRowsNotStrict_test.flux",
										Source: "columns: [\"_start\", \"_stop\"]",
										Start: ast.Position{
											Column: 13,
											Line:   217,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 20,
												Line:   217,
											},
											File:   "filterRowsNotStrict_test.flux",
											Source: "columns",
											Start: ast.Position{
												Column: 13,
												Line:   217,
											},
										},
									},
									Name: "columns",
								},
								Value: &ast.ArrayExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 41,
												Line:   217,
											},
											File:   "filterRowsNotStrict_test.flux",
											Source: "[\"_start\", \"_stop\"]",
											Start: ast.Position{
												Column: 22,
												Line:   217,
											},
										},
									},
									Elements: []ast.Expression{&ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 31,
													Line:   217,
												},
												File:   "filterRowsNotStrict_test.flux",
												Source: "\"_start\"",
												Start: ast.Position{
													Column: 23,
													Line:   217,
												},
											},
										},
										Value: "_start",
									}, &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 40,
													Line:   217,
												},
												File:   "filterRowsNotStrict_test.flux",
												Source: "\"_stop\"",
												Start: ast.Position{
													Column: 33,
													Line:   217,
												},
											},
										},
										Value: "_stop",
									}},
								},
							}},
							With: nil,
						}},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   217,
								},
								File:   "filterRowsNotStrict_test.flux",
								Source: "drop(columns: [\"_start\", \"_stop\"])",
								Start: ast.Position{
									Column: 8,
									Line:   217,
								},
							},
						},
						Callee: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 12,
										Line:   217,
									},
									File:   "filterRowsNotStrict_test.flux",
									Source: "drop",
									Start: ast.Position{
										Column: 8,
										Line:   217,
									},
								},
							},
							Name: "drop",
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 34,
								Line:   213,
							},
							File:   "filterRowsNotStrict_test.flux",
							Source: "table=<-",
							Start: ast.Position{
								Column: 26,
								Line:   213,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 31,
									Line:   213,
								},
								File:   "filterRowsNotStrict_test.flux",
								Source: "table",
								Start: ast.Position{
									Column: 26,
									Line:   213,
								},
							},
						},
						Name: "table",
					},
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 34,
								Line:   213,
							},
							File:   "filterRowsNotStrict_test.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 32,
								Line:   213,
							},
						},
					}},
				}},
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 109,
							Line:   219,
						},
						File:   "filterRowsNotStrict_test.flux",
						Source: "_filterRowsNotStrict = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_filterRowsNotStrict})",
						Start: ast.Position{
							Column: 6,
							Line:   218,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 26,
								Line:   218,
							},
							File:   "filterRowsNotStrict_test.flux",
							Source: "_filterRowsNotStrict",
							Start: ast.Position{
								Column: 6,
								Line:   218,
							},
						},
					},
					Name: "_filterRowsNotStrict",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 109,
								Line:   219,
							},
							File:   "filterRowsNotStrict_test.flux",
							Source: "() =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_filterRowsNotStrict})",
							Start: ast.Position{
								Column: 29,
								Line:   218,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 109,
									Line:   219,
								},
								File:   "filterRowsNotStrict_test.flux",
								Source: "({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_filterRowsNotStrict})",
								Start: ast.Position{
									Column: 2,
									Line:   219,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 108,
										Line:   219,
									},
									File:   "filterRowsNotStrict_test.flux",
									Source: "{input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_filterRowsNotStrict}",
									Start: ast.Position{
										Column: 3,
										Line:   219,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 43,
											Line:   219,
										},
										File:   "filterRowsNotStrict_test.flux",
										Source: "input: testing.loadStorage(csv: inData)",
										Start: ast.Position{
											Column: 4,
											Line:   219,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 9,
												Line:   219,
											},
											File:   "filterRowsNotStrict_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 4,
												Line:   219,
											},
										},
									},
									Name: "input",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   219,
												},
												File:   "filterRowsNotStrict_test.flux",
												Source: "csv: inData",
												Start: ast.Position{
													Column: 31,
													Line:   219,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 42,
														Line:   219,
													},
													File:   "filterRowsNotStrict_test.flux",
													Source: "csv: inData",
													Start: ast.Position{
														Column: 31,
														Line:   219,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 34,
															Line:   219,
														},
														File:   "filterRowsNotStrict_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 31,
															Line:   219,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 42,
															Line:   219,
														},
														File:   "filterRowsNotStrict_test.flux",
														Source: "inData",
														Start: ast.Position{
															Column: 36,
															Line:   219,
														},
													},
												},
												Name: "inData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 43,
												Line:   219,
											},
											File:   "filterRowsNotStrict_test.flux",
											Source: "testing.loadStorage(csv: inData)",
											Start: ast.Position{
												Column: 11,
												Line:   219,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   219,
												},
												File:   "filterRowsNotStrict_test.flux",
												Source: "testing.loadStorage",
												Start: ast.Position{
													Column: 11,
													Line:   219,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   219,
													},
													File:   "filterRowsNotStrict_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 11,
														Line:   219,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 30,
														Line:   219,
													},
													File:   "filterRowsNotStrict_test.flux",
													Source: "loadStorage",
													Start: ast.Position{
														Column: 19,
														Line:   219,
													},
												},
											},
											Name: "loadStorage",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 80,
											Line:   219,
										},
										File:   "filterRowsNotStrict_test.flux",
										Source: "want: testing.loadMem(csv: outData)",
										Start: ast.Position{
											Column: 45,
											Line:   219,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 49,
												Line:   219,
											},
											File:   "filterRowsNotStrict_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 45,
												Line:   219,
											},
										},
									},
									Name: "want",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 79,
													Line:   219,
												},
												File:   "filterRowsNotStrict_test.flux",
												Source: "csv: outData",
												Start: ast.Position{
													Column: 67,
													Line:   219,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 79,
														Line:   219,
													},
													File:   "filterRowsNotStrict_test.flux",
													Source: "csv: outData",
													Start: ast.Position{
														Column: 67,
														Line:   219,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 70,
															Line:   219,
														},
														File:   "filterRowsNotStrict_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 67,
															Line:   219,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 79,
															Line:   219,
														},
														File:   "filterRowsNotStrict_test.flux",
														Source: "outData",
														Start: ast.Position{
															Column: 72,
															Line:   219,
														},
													},
												},
												Name: "outData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 80,
												Line:   219,
											},
											File:   "filterRowsNotStrict_test.flux",
											Source: "testing.loadMem(csv: outData)",
											Start: ast.Position{
												Column: 51,
												Line:   219,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   219,
												},
												File:   "filterRowsNotStrict_test.flux",
												Source: "testing.loadMem",
												Start: ast.Position{
													Column: 51,
													Line:   219,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 58,
														Line:   219,
													},
													File:   "filterRowsNotStrict_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 51,
														Line:   219,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 66,
														Line:   219,
													},
													File:   "filterRowsNotStrict_test.flux",
													Source: "loadMem",
													Start: ast.Position{
														Column: 59,
														Line:   219,
													},
												},
											},
											Name: "loadMem",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 107,
											Line:   219,
										},
										File:   "filterRowsNotStrict_test.flux",
										Source: "fn: t_filterRowsNotStrict",
										Start: ast.Position{
											Column: 82,
											Line:   219,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 84,
												Line:   219,
											},
											File:   "filterRowsNotStrict_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 82,
												Line:   219,
											},
										},
									},
									Name: "fn",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 107,
												Line:   219,
											},
											File:   "filterRowsNotStrict_test.flux",
											Source: "t_filterRowsNotStrict",
											Start: ast.Position{
												Column: 86,
												Line:   219,
											},
										},
									},
									Name: "t_filterRowsNotStrict",
								},
							}},
							With: nil,
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 109,
						Line:   219,
					},
					File:   "filterRowsNotStrict_test.flux",
					Source: "test _filterRowsNotStrict = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_filterRowsNotStrict})",
					Start: ast.Position{
						Column: 1,
						Line:   218,
					},
				},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 26,
						Line:   3,
					},
					File:   "filterRowsNotStrict_test.flux",
					Source: "import \"experimental/geo\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 26,
							Line:   3,
						},
						File:   "filterRowsNotStrict_test.flux",
						Source: "\"experimental/geo\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "experimental/geo",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   4,
					},
					File:   "filterRowsNotStrict_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   4,
						},
						File:   "filterRowsNotStrict_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "testing",
			},
		}},
		Metadata: "parser-type=go",
		Name:     "filterRowsNotStrict_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   1,
					},
					File:   "filterRowsNotStrict_test.flux",
					Source: "package geo_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   1,
						},
						File:   "filterRowsNotStrict_test.flux",
						Source: "geo_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "geo_test",
			},
		},
	}, &ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 107,
					Line:   213,
				},
				File:   "filterRowsPivoted_test.flux",
				Source: "package geo_test\n\nimport \"experimental/geo\"\nimport \"testing\"\n\noption now = () => (2030-01-01T00:00:00Z)\n\ninData = \"#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n\"\n\noutData = \"\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n\"\n\nt_filterRowsPivoted = (table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> geo.filterRows(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, strict: true)\n    |> drop(columns: [\"_start\", \"_stop\"])\ntest _filterRowsPivoted = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_filterRowsPivoted})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   6,
						},
						File:   "filterRowsPivoted_test.flux",
						Source: "now = () => (2030-01-01T00:00:00Z)",
						Start: ast.Position{
							Column: 8,
							Line:   6,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   6,
							},
							File:   "filterRowsPivoted_test.flux",
							Source: "now",
							Start: ast.Position{
								Column: 8,
								Line:   6,
							},
						},
					},
					Name: "now",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   6,
							},
							File:   "filterRowsPivoted_test.flux",
							Source: "() => (2030-01-01T00:00:00Z)",
							Start: ast.Position{
								Column: 14,
								Line:   6,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   6,
								},
								File:   "filterRowsPivoted_test.flux",
								Source: "(2030-01-01T00:00:00Z)",
								Start: ast.Position{
									Column: 20,
									Line:   6,
								},
							},
						},
						Expression: &ast.DateTimeLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   6,
									},
									File:   "filterRowsPivoted_test.flux",
									Source: "2030-01-01T00:00:00Z",
									Start: ast.Position{
										Column: 21,
										Line:   6,
									},
								},
							},
							Value: parser.MustParseTime("2030-01-01T00:00:00Z"),
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   6,
					},
					File:   "filterRowsPivoted_test.flux",
					Source: "option now = () => (2030-01-01T00:00:00Z)",
					Start: ast.Position{
						Column: 1,
						Line:   6,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   184,
					},
					File:   "filterRowsPivoted_test.flux",
					Source: "inData = \"#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   8,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 7,
							Line:   8,
						},
						File:   "filterRowsPivoted_test.flux",
						Source: "inData",
						Start: ast.Position{
							Column: 1,
							Line:   8,
						},
					},
				},
				Name: "inData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   184,
						},
						File:   "filterRowsPivoted_test.flux",
						Source: "\"#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n\"",
						Start: ast.Position{
							Column: 10,
							Line:   8,
						},
					},
				},
				Value: "#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   204,
					},
					File:   "filterRowsPivoted_test.flux",
					Source: "outData = \"\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   186,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 8,
							Line:   186,
						},
						File:   "filterRowsPivoted_test.flux",
						Source: "outData",
						Start: ast.Position{
							Column: 1,
							Line:   186,
						},
					},
				},
				Name: "outData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   204,
						},
						File:   "filterRowsPivoted_test.flux",
						Source: "\"\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n\"",
						Start: ast.Position{
							Column: 11,
							Line:   186,
						},
					},
				},
				Value: "\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   211,
					},
					File:   "filterRowsPivoted_test.flux",
					Source: "t_filterRowsPivoted = (table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> geo.filterRows(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, strict: true)\n    |> drop(columns: [\"_start\", \"_stop\"])",
					Start: ast.Position{
						Column: 1,
						Line:   206,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 20,
							Line:   206,
						},
						File:   "filterRowsPivoted_test.flux",
						Source: "t_filterRowsPivoted",
						Start: ast.Position{
							Column: 1,
							Line:   206,
						},
					},
				},
				Name: "t_filterRowsPivoted",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   211,
						},
						File:   "filterRowsPivoted_test.flux",
						Source: "(table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> geo.filterRows(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, strict: true)\n    |> drop(columns: [\"_start\", \"_stop\"])",
						Start: ast.Position{
							Column: 23,
							Line:   206,
						},
					},
				},
				Body: &ast.PipeExpression{
					Argument: &ast.PipeExpression{
						Argument: &ast.PipeExpression{
							Argument: &ast.PipeExpression{
								Argument: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 8,
												Line:   207,
											},
											File:   "filterRowsPivoted_test.flux",
											Source: "table",
											Start: ast.Position{
												Column: 3,
												Line:   207,
											},
										},
									},
									Name: "table",
								},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 42,
											Line:   208,
										},
										File:   "filterRowsPivoted_test.flux",
										Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)",
										Start: ast.Position{
											Column: 3,
											Line:   207,
										},
									},
								},
								Call: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 41,
													Line:   208,
												},
												File:   "filterRowsPivoted_test.flux",
												Source: "start: 2019-11-01T00:00:00Z",
												Start: ast.Position{
													Column: 14,
													Line:   208,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 41,
														Line:   208,
													},
													File:   "filterRowsPivoted_test.flux",
													Source: "start: 2019-11-01T00:00:00Z",
													Start: ast.Position{
														Column: 14,
														Line:   208,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 19,
															Line:   208,
														},
														File:   "filterRowsPivoted_test.flux",
														Source: "start",
														Start: ast.Position{
															Column: 14,
															Line:   208,
														},
													},
												},
												Name: "start",
											},
											Value: &ast.DateTimeLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 41,
															Line:   208,
														},
														File:   "filterRowsPivoted_test.flux",
														Source: "2019-11-01T00:00:00Z",
														Start: ast.Position{
															Column: 21,
															Line:   208,
														},
													},
												},
												Value: parser.MustParseTime("2019-11-01T00:00:00Z"),
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 42,
												Line:   208,
											},
											File:   "filterRowsPivoted_test.flux",
											Source: "range(start: 2019-11-01T00:00:00Z)",
											Start: ast.Position{
												Column: 8,
												Line:   208,
											},
										},
									},
									Callee: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 13,
													Line:   208,
												},
												File:   "filterRowsPivoted_test.flux",
												Source: "range",
												Start: ast.Position{
													Column: 8,
													Line:   208,
												},
											},
										},
										Name: "range",
									},
								},
							},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 77,
										Line:   209,
									},
									File:   "filterRowsPivoted_test.flux",
									Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")",
									Start: ast.Position{
										Column: 3,
										Line:   207,
									},
								},
							},
							Call: &ast.CallExpression{
								Arguments: []ast.Expression{&ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 76,
												Line:   209,
											},
											File:   "filterRowsPivoted_test.flux",
											Source: "rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\"",
											Start: ast.Position{
												Column: 14,
												Line:   209,
											},
										},
									},
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   209,
												},
												File:   "filterRowsPivoted_test.flux",
												Source: "rowKey:[\"_time\"]",
												Start: ast.Position{
													Column: 14,
													Line:   209,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 20,
														Line:   209,
													},
													File:   "filterRowsPivoted_test.flux",
													Source: "rowKey",
													Start: ast.Position{
														Column: 14,
														Line:   209,
													},
												},
											},
											Name: "rowKey",
										},
										Value: &ast.ArrayExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 30,
														Line:   209,
													},
													File:   "filterRowsPivoted_test.flux",
													Source: "[\"_time\"]",
													Start: ast.Position{
														Column: 21,
														Line:   209,
													},
												},
											},
											Elements: []ast.Expression{&ast.StringLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 29,
															Line:   209,
														},
														File:   "filterRowsPivoted_test.flux",
														Source: "\"_time\"",
														Start: ast.Position{
															Column: 22,
															Line:   209,
														},
													},
												},
												Value: "_time",
											}},
										},
									}, &ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 53,
													Line:   209,
												},
												File:   "filterRowsPivoted_test.flux",
												Source: "columnKey: [\"_field\"]",
												Start: ast.Position{
													Column: 32,
													Line:   209,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 41,
														Line:   209,
													},
													File:   "filterRowsPivoted_test.flux",
													Source: "columnKey",
													Start: ast.Position{
														Column: 32,
														Line:   209,
													},
												},
											},
											Name: "columnKey",
										},
										Value: &ast.ArrayExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 53,
														Line:   209,
													},
													File:   "filterRowsPivoted_test.flux",
													Source: "[\"_field\"]",
													Start: ast.Position{
														Column: 43,
														Line:   209,
													},
												},
											},
											Elements: []ast.Expression{&ast.StringLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 52,
															Line:   209,
														},
														File:   "filterRowsPivoted_test.flux",
														Source: "\"_field\"",
														Start: ast.Position{
															Column: 44,
															Line:   209,
														},
													},
												},
												Value: "_field",
											}},
										},
									}, &ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 76,
													Line:   209,
												},
												File:   "filterRowsPivoted_test.flux",
												Source: "valueColumn: \"_value\"",
												Start: ast.Position{
													Column: 55,
													Line:   209,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 66,
														Line:   209,
													},
													File:   "filterRowsPivoted_test.flux",
													Source: "valueColumn",
													Start: ast.Position{
														Column: 55,
														Line:   209,
													},
												},
											},
											Name: "valueColumn",
										},
										Value: &ast.StringLiteral{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 76,
														Line:   209,
													},
													File:   "filterRowsPivoted_test.flux",
													Source: "\"_value\"",
													Start: ast.Position{
														Column: 68,
														Line:   209,
													},
												},
											},
											Value: "_value",
										},
									}},
									With: nil,
								}},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 77,
											Line:   209,
										},
										File:   "filterRowsPivoted_test.flux",
										Source: "pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")",
										Start: ast.Position{
											Column: 8,
											Line:   209,
										},
									},
								},
								Callee: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 13,
												Line:   209,
											},
											File:   "filterRowsPivoted_test.flux",
											Source: "pivot",
											Start: ast.Position{
												Column: 8,
												Line:   209,
											},
										},
									},
									Name: "pivot",
								},
							},
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 93,
									Line:   210,
								},
								File:   "filterRowsPivoted_test.flux",
								Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> geo.filterRows(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, strict: true)",
								Start: ast.Position{
									Column: 3,
									Line:   207,
								},
							},
						},
						Call: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 92,
											Line:   210,
										},
										File:   "filterRowsPivoted_test.flux",
										Source: "region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, strict: true",
										Start: ast.Position{
											Column: 23,
											Line:   210,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 78,
												Line:   210,
											},
											File:   "filterRowsPivoted_test.flux",
											Source: "region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}",
											Start: ast.Position{
												Column: 23,
												Line:   210,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 29,
													Line:   210,
												},
												File:   "filterRowsPivoted_test.flux",
												Source: "region",
												Start: ast.Position{
													Column: 23,
													Line:   210,
												},
											},
										},
										Name: "region",
									},
									Value: &ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 78,
													Line:   210,
												},
												File:   "filterRowsPivoted_test.flux",
												Source: "{lat: 40.7090214, lon: -73.61846, radius: 15.0}",
												Start: ast.Position{
													Column: 31,
													Line:   210,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 47,
														Line:   210,
													},
													File:   "filterRowsPivoted_test.flux",
													Source: "lat: 40.7090214",
													Start: ast.Position{
														Column: 32,
														Line:   210,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 35,
															Line:   210,
														},
														File:   "filterRowsPivoted_test.flux",
														Source: "lat",
														Start: ast.Position{
															Column: 32,
															Line:   210,
														},
													},
												},
												Name: "lat",
											},
											Value: &ast.FloatLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 47,
															Line:   210,
														},
														File:   "filterRowsPivoted_test.flux",
														Source: "40.7090214",
														Start: ast.Position{
															Column: 37,
															Line:   210,
														},
													},
												},
												Value: 40.7090214,
											},
										}, &ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 63,
														Line:   210,
													},
													File:   "filterRowsPivoted_test.flux",
													Source: "lon: -73.61846",
													Start: ast.Position{
														Column: 49,
														Line:   210,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 52,
															Line:   210,
														},
														File:   "filterRowsPivoted_test.flux",
														Source: "lon",
														Start: ast.Position{
															Column: 49,
															Line:   210,
														},
													},
												},
												Name: "lon",
											},
											Value: &ast.UnaryExpression{
												Argument: &ast.FloatLiteral{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 63,
																Line:   210,
															},
															File:   "filterRowsPivoted_test.flux",
															Source: "73.61846",
															Start: ast.Position{
																Column: 55,
																Line:   210,
															},
														},
													},
													Value: 73.61846,
												},
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 63,
															Line:   210,
														},
														File:   "filterRowsPivoted_test.flux",
														Source: "-73.61846",
														Start: ast.Position{
															Column: 54,
															Line:   210,
														},
													},
												},
												Operator: 6,
											},
										}, &ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 77,
														Line:   210,
													},
													File:   "filterRowsPivoted_test.flux",
													Source: "radius: 15.0",
													Start: ast.Position{
														Column: 65,
														Line:   210,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 71,
															Line:   210,
														},
														File:   "filterRowsPivoted_test.flux",
														Source: "radius",
														Start: ast.Position{
															Column: 65,
															Line:   210,
														},
													},
												},
												Name: "radius",
											},
											Value: &ast.FloatLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 77,
															Line:   210,
														},
														File:   "filterRowsPivoted_test.flux",
														Source: "15.0",
														Start: ast.Position{
															Column: 73,
															Line:   210,
														},
													},
												},
												Value: 15.0,
											},
										}},
										With: nil,
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 92,
												Line:   210,
											},
											File:   "filterRowsPivoted_test.flux",
											Source: "strict: true",
											Start: ast.Position{
												Column: 80,
												Line:   210,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 86,
													Line:   210,
												},
												File:   "filterRowsPivoted_test.flux",
												Source: "strict",
												Start: ast.Position{
													Column: 80,
													Line:   210,
												},
											},
										},
										Name: "strict",
									},
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 92,
													Line:   210,
												},
												File:   "filterRowsPivoted_test.flux",
												Source: "true",
												Start: ast.Position{
													Column: 88,
													Line:   210,
												},
											},
										},
										Name: "true",
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 93,
										Line:   210,
									},
									File:   "filterRowsPivoted_test.flux",
									Source: "geo.filterRows(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, strict: true)",
									Start: ast.Position{
										Column: 8,
										Line:   210,
									},
								},
							},
							Callee: &ast.MemberExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 22,
											Line:   210,
										},
										File:   "filterRowsPivoted_test.flux",
										Source: "geo.filterRows",
										Start: ast.Position{
											Column: 8,
											Line:   210,
										},
									},
								},
								Object: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 11,
												Line:   210,
											},
											File:   "filterRowsPivoted_test.flux",
											Source: "geo",
											Start: ast.Position{
												Column: 8,
												Line:   210,
											},
										},
									},
									Name: "geo",
								},
								Property: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 22,
												Line:   210,
											},
											File:   "filterRowsPivoted_test.flux",
											Source: "filterRows",
											Start: ast.Position{
												Column: 12,
												Line:   210,
											},
										},
									},
									Name: "filterRows",
								},
							},
						},
					},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   211,
							},
							File:   "filterRowsPivoted_test.flux",
							Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> geo.filterRows(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, strict: true)\n    |> drop(columns: [\"_start\", \"_stop\"])",
							Start: ast.Position{
								Column: 3,
								Line:   207,
							},
						},
					},
					Call: &ast.CallExpression{
						Arguments: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   211,
									},
									File:   "filterRowsPivoted_test.flux",
									Source: "columns: [\"_start\", \"_stop\"]",
									Start: ast.Position{
										Column: 13,
										Line:   211,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 41,
											Line:   211,
										},
										File:   "filterRowsPivoted_test.flux",
										Source: "columns: [\"_start\", \"_stop\"]",
										Start: ast.Position{
											Column: 13,
											Line:   211,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 20,
												Line:   211,
											},
											File:   "filterRowsPivoted_test.flux",
											Source: "columns",
											Start: ast.Position{
												Column: 13,
												Line:   211,
											},
										},
									},
									Name: "columns",
								},
								Value: &ast.ArrayExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 41,
												Line:   211,
											},
											File:   "filterRowsPivoted_test.flux",
											Source: "[\"_start\", \"_stop\"]",
											Start: ast.Position{
												Column: 22,
												Line:   211,
											},
										},
									},
									Elements: []ast.Expression{&ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 31,
													Line:   211,
												},
												File:   "filterRowsPivoted_test.flux",
												Source: "\"_start\"",
												Start: ast.Position{
													Column: 23,
													Line:   211,
												},
											},
										},
										Value: "_start",
									}, &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 40,
													Line:   211,
												},
												File:   "filterRowsPivoted_test.flux",
												Source: "\"_stop\"",
												Start: ast.Position{
													Column: 33,
													Line:   211,
												},
											},
										},
										Value: "_stop",
									}},
								},
							}},
							With: nil,
						}},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   211,
								},
								File:   "filterRowsPivoted_test.flux",
								Source: "drop(columns: [\"_start\", \"_stop\"])",
								Start: ast.Position{
									Column: 8,
									Line:   211,
								},
							},
						},
						Callee: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 12,
										Line:   211,
									},
									File:   "filterRowsPivoted_test.flux",
									Source: "drop",
									Start: ast.Position{
										Column: 8,
										Line:   211,
									},
								},
							},
							Name: "drop",
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 32,
								Line:   206,
							},
							File:   "filterRowsPivoted_test.flux",
							Source: "table=<-",
							Start: ast.Position{
								Column: 24,
								Line:   206,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 29,
									Line:   206,
								},
								File:   "filterRowsPivoted_test.flux",
								Source: "table",
								Start: ast.Position{
									Column: 24,
									Line:   206,
								},
							},
						},
						Name: "table",
					},
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 32,
								Line:   206,
							},
							File:   "filterRowsPivoted_test.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 30,
								Line:   206,
							},
						},
					}},
				}},
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 107,
							Line:   213,
						},
						File:   "filterRowsPivoted_test.flux",
						Source: "_filterRowsPivoted = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_filterRowsPivoted})",
						Start: ast.Position{
							Column: 6,
							Line:   212,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 24,
								Line:   212,
							},
							File:   "filterRowsPivoted_test.flux",
							Source: "_filterRowsPivoted",
							Start: ast.Position{
								Column: 6,
								Line:   212,
							},
						},
					},
					Name: "_filterRowsPivoted",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 107,
								Line:   213,
							},
							File:   "filterRowsPivoted_test.flux",
							Source: "() =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_filterRowsPivoted})",
							Start: ast.Position{
								Column: 27,
								Line:   212,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 107,
									Line:   213,
								},
								File:   "filterRowsPivoted_test.flux",
								Source: "({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_filterRowsPivoted})",
								Start: ast.Position{
									Column: 2,
									Line:   213,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 106,
										Line:   213,
									},
									File:   "filterRowsPivoted_test.flux",
									Source: "{input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_filterRowsPivoted}",
									Start: ast.Position{
										Column: 3,
										Line:   213,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 43,
											Line:   213,
										},
										File:   "filterRowsPivoted_test.flux",
										Source: "input: testing.loadStorage(csv: inData)",
										Start: ast.Position{
											Column: 4,
											Line:   213,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 9,
												Line:   213,
											},
											File:   "filterRowsPivoted_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 4,
												Line:   213,
											},
										},
									},
									Name: "input",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   213,
												},
												File:   "filterRowsPivoted_test.flux",
												Source: "csv: inData",
												Start: ast.Position{
													Column: 31,
													Line:   213,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 42,
														Line:   213,
													},
													File:   "filterRowsPivoted_test.flux",
													Source: "csv: inData",
													Start: ast.Position{
														Column: 31,
														Line:   213,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 34,
															Line:   213,
														},
														File:   "filterRowsPivoted_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 31,
															Line:   213,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 42,
															Line:   213,
														},
														File:   "filterRowsPivoted_test.flux",
														Source: "inData",
														Start: ast.Position{
															Column: 36,
															Line:   213,
														},
													},
												},
												Name: "inData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 43,
												Line:   213,
											},
											File:   "filterRowsPivoted_test.flux",
											Source: "testing.loadStorage(csv: inData)",
											Start: ast.Position{
												Column: 11,
												Line:   213,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   213,
												},
												File:   "filterRowsPivoted_test.flux",
												Source: "testing.loadStorage",
												Start: ast.Position{
													Column: 11,
													Line:   213,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   213,
													},
													File:   "filterRowsPivoted_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 11,
														Line:   213,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 30,
														Line:   213,
													},
													File:   "filterRowsPivoted_test.flux",
													Source: "loadStorage",
													Start: ast.Position{
														Column: 19,
														Line:   213,
													},
												},
											},
											Name: "loadStorage",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 80,
											Line:   213,
										},
										File:   "filterRowsPivoted_test.flux",
										Source: "want: testing.loadMem(csv: outData)",
										Start: ast.Position{
											Column: 45,
											Line:   213,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 49,
												Line:   213,
											},
											File:   "filterRowsPivoted_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 45,
												Line:   213,
											},
										},
									},
									Name: "want",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 79,
													Line:   213,
												},
												File:   "filterRowsPivoted_test.flux",
												Source: "csv: outData",
												Start: ast.Position{
													Column: 67,
													Line:   213,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 79,
														Line:   213,
													},
													File:   "filterRowsPivoted_test.flux",
													Source: "csv: outData",
													Start: ast.Position{
														Column: 67,
														Line:   213,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 70,
															Line:   213,
														},
														File:   "filterRowsPivoted_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 67,
															Line:   213,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 79,
															Line:   213,
														},
														File:   "filterRowsPivoted_test.flux",
														Source: "outData",
														Start: ast.Position{
															Column: 72,
															Line:   213,
														},
													},
												},
												Name: "outData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 80,
												Line:   213,
											},
											File:   "filterRowsPivoted_test.flux",
											Source: "testing.loadMem(csv: outData)",
											Start: ast.Position{
												Column: 51,
												Line:   213,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   213,
												},
												File:   "filterRowsPivoted_test.flux",
												Source: "testing.loadMem",
												Start: ast.Position{
													Column: 51,
													Line:   213,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 58,
														Line:   213,
													},
													File:   "filterRowsPivoted_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 51,
														Line:   213,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 66,
														Line:   213,
													},
													File:   "filterRowsPivoted_test.flux",
													Source: "loadMem",
													Start: ast.Position{
														Column: 59,
														Line:   213,
													},
												},
											},
											Name: "loadMem",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 105,
											Line:   213,
										},
										File:   "filterRowsPivoted_test.flux",
										Source: "fn: t_filterRowsPivoted",
										Start: ast.Position{
											Column: 82,
											Line:   213,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 84,
												Line:   213,
											},
											File:   "filterRowsPivoted_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 82,
												Line:   213,
											},
										},
									},
									Name: "fn",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 105,
												Line:   213,
											},
											File:   "filterRowsPivoted_test.flux",
											Source: "t_filterRowsPivoted",
											Start: ast.Position{
												Column: 86,
												Line:   213,
											},
										},
									},
									Name: "t_filterRowsPivoted",
								},
							}},
							With: nil,
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 107,
						Line:   213,
					},
					File:   "filterRowsPivoted_test.flux",
					Source: "test _filterRowsPivoted = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_filterRowsPivoted})",
					Start: ast.Position{
						Column: 1,
						Line:   212,
					},
				},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 26,
						Line:   3,
					},
					File:   "filterRowsPivoted_test.flux",
					Source: "import \"experimental/geo\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 26,
							Line:   3,
						},
						File:   "filterRowsPivoted_test.flux",
						Source: "\"experimental/geo\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "experimental/geo",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   4,
					},
					File:   "filterRowsPivoted_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   4,
						},
						File:   "filterRowsPivoted_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "testing",
			},
		}},
		Metadata: "parser-type=go",
		Name:     "filterRowsPivoted_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   1,
					},
					File:   "filterRowsPivoted_test.flux",
					Source: "package geo_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   1,
						},
						File:   "filterRowsPivoted_test.flux",
						Source: "geo_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "geo_test",
			},
		},
	}, &ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 106,
					Line:   213,
				},
				File:   "filterRowsStrict_test.flux",
				Source: "package geo_test\n\nimport \"experimental/geo\"\nimport \"testing\"\n\noption now = () => (2030-01-01T00:00:00Z)\n\ninData = \"\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n\"\n\noutData = \"\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n\"\n\nt_filterRowsStrict = (table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.filterRows(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, strict: true)\n    |> drop(columns: [\"_start\", \"_stop\"])\ntest _filterRowsStrict = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_filterRowsStrict})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   6,
						},
						File:   "filterRowsStrict_test.flux",
						Source: "now = () => (2030-01-01T00:00:00Z)",
						Start: ast.Position{
							Column: 8,
							Line:   6,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   6,
							},
							File:   "filterRowsStrict_test.flux",
							Source: "now",
							Start: ast.Position{
								Column: 8,
								Line:   6,
							},
						},
					},
					Name: "now",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   6,
							},
							File:   "filterRowsStrict_test.flux",
							Source: "() => (2030-01-01T00:00:00Z)",
							Start: ast.Position{
								Column: 14,
								Line:   6,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   6,
								},
								File:   "filterRowsStrict_test.flux",
								Source: "(2030-01-01T00:00:00Z)",
								Start: ast.Position{
									Column: 20,
									Line:   6,
								},
							},
						},
						Expression: &ast.DateTimeLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   6,
									},
									File:   "filterRowsStrict_test.flux",
									Source: "2030-01-01T00:00:00Z",
									Start: ast.Position{
										Column: 21,
										Line:   6,
									},
								},
							},
							Value: parser.MustParseTime("2030-01-01T00:00:00Z"),
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   6,
					},
					File:   "filterRowsStrict_test.flux",
					Source: "option now = () => (2030-01-01T00:00:00Z)",
					Start: ast.Position{
						Column: 1,
						Line:   6,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   185,
					},
					File:   "filterRowsStrict_test.flux",
					Source: "inData = \"\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   8,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 7,
							Line:   8,
						},
						File:   "filterRowsStrict_test.flux",
						Source: "inData",
						Start: ast.Position{
							Column: 1,
							Line:   8,
						},
					},
				},
				Name: "inData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   185,
						},
						File:   "filterRowsStrict_test.flux",
						Source: "\"\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n\"",
						Start: ast.Position{
							Column: 10,
							Line:   8,
						},
					},
				},
				Value: "\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   205,
					},
					File:   "filterRowsStrict_test.flux",
					Source: "outData = \"\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   187,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 8,
							Line:   187,
						},
						File:   "filterRowsStrict_test.flux",
						Source: "outData",
						Start: ast.Position{
							Column: 1,
							Line:   187,
						},
					},
				},
				Name: "outData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   205,
						},
						File:   "filterRowsStrict_test.flux",
						Source: "\"\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n\"",
						Start: ast.Position{
							Column: 11,
							Line:   187,
						},
					},
				},
				Value: "\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   211,
					},
					File:   "filterRowsStrict_test.flux",
					Source: "t_filterRowsStrict = (table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.filterRows(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, strict: true)\n    |> drop(columns: [\"_start\", \"_stop\"])",
					Start: ast.Position{
						Column: 1,
						Line:   207,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 19,
							Line:   207,
						},
						File:   "filterRowsStrict_test.flux",
						Source: "t_filterRowsStrict",
						Start: ast.Position{
							Column: 1,
							Line:   207,
						},
					},
				},
				Name: "t_filterRowsStrict",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   211,
						},
						File:   "filterRowsStrict_test.flux",
						Source: "(table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.filterRows(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, strict: true)\n    |> drop(columns: [\"_start\", \"_stop\"])",
						Start: ast.Position{
							Column: 22,
							Line:   207,
						},
					},
				},
				Body: &ast.PipeExpression{
					Argument: &ast.PipeExpression{
						Argument: &ast.PipeExpression{
							Argument: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 8,
											Line:   208,
										},
										File:   "filterRowsStrict_test.flux",
										Source: "table",
										Start: ast.Position{
											Column: 3,
											Line:   208,
										},
									},
								},
								Name: "table",
							},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 42,
										Line:   209,
									},
									File:   "filterRowsStrict_test.flux",
									Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)",
									Start: ast.Position{
										Column: 3,
										Line:   208,
									},
								},
							},
							Call: &ast.CallExpression{
								Arguments: []ast.Expression{&ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 41,
												Line:   209,
											},
											File:   "filterRowsStrict_test.flux",
											Source: "start: 2019-11-01T00:00:00Z",
											Start: ast.Position{
												Column: 14,
												Line:   209,
											},
										},
									},
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 41,
													Line:   209,
												},
												File:   "filterRowsStrict_test.flux",
												Source: "start: 2019-11-01T00:00:00Z",
												Start: ast.Position{
													Column: 14,
													Line:   209,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 19,
														Line:   209,
													},
													File:   "filterRowsStrict_test.flux",
													Source: "start",
													Start: ast.Position{
														Column: 14,
														Line:   209,
													},
												},
											},
											Name: "start",
										},
										Value: &ast.DateTimeLiteral{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 41,
														Line:   209,
													},
													File:   "filterRowsStrict_test.flux",
													Source: "2019-11-01T00:00:00Z",
													Start: ast.Position{
														Column: 21,
														Line:   209,
													},
												},
											},
											Value: parser.MustParseTime("2019-11-01T00:00:00Z"),
										},
									}},
									With: nil,
								}},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 42,
											Line:   209,
										},
										File:   "filterRowsStrict_test.flux",
										Source: "range(start: 2019-11-01T00:00:00Z)",
										Start: ast.Position{
											Column: 8,
											Line:   209,
										},
									},
								},
								Callee: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 13,
												Line:   209,
											},
											File:   "filterRowsStrict_test.flux",
											Source: "range",
											Start: ast.Position{
												Column: 8,
												Line:   209,
											},
										},
									},
									Name: "range",
								},
							},
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 93,
									Line:   210,
								},
								File:   "filterRowsStrict_test.flux",
								Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.filterRows(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, strict: true)",
								Start: ast.Position{
									Column: 3,
									Line:   208,
								},
							},
						},
						Call: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 92,
											Line:   210,
										},
										File:   "filterRowsStrict_test.flux",
										Source: "region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, strict: true",
										Start: ast.Position{
											Column: 23,
											Line:   210,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 78,
												Line:   210,
											},
											File:   "filterRowsStrict_test.flux",
											Source: "region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}",
											Start: ast.Position{
												Column: 23,
												Line:   210,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 29,
													Line:   210,
												},
												File:   "filterRowsStrict_test.flux",
												Source: "region",
												Start: ast.Position{
													Column: 23,
													Line:   210,
												},
											},
										},
										Name: "region",
									},
									Value: &ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 78,
													Line:   210,
												},
												File:   "filterRowsStrict_test.flux",
												Source: "{lat: 40.7090214, lon: -73.61846, radius: 15.0}",
												Start: ast.Position{
													Column: 31,
													Line:   210,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 47,
														Line:   210,
													},
													File:   "filterRowsStrict_test.flux",
													Source: "lat: 40.7090214",
													Start: ast.Position{
														Column: 32,
														Line:   210,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 35,
															Line:   210,
														},
														File:   "filterRowsStrict_test.flux",
														Source: "lat",
														Start: ast.Position{
															Column: 32,
															Line:   210,
														},
													},
												},
												Name: "lat",
											},
											Value: &ast.FloatLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 47,
															Line:   210,
														},
														File:   "filterRowsStrict_test.flux",
														Source: "40.7090214",
														Start: ast.Position{
															Column: 37,
															Line:   210,
														},
													},
												},
												Value: 40.7090214,
											},
										}, &ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 63,
														Line:   210,
													},
													File:   "filterRowsStrict_test.flux",
													Source: "lon: -73.61846",
													Start: ast.Position{
														Column: 49,
														Line:   210,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 52,
															Line:   210,
														},
														File:   "filterRowsStrict_test.flux",
														Source: "lon",
														Start: ast.Position{
															Column: 49,
															Line:   210,
														},
													},
												},
												Name: "lon",
											},
											Value: &ast.UnaryExpression{
												Argument: &ast.FloatLiteral{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 63,
																Line:   210,
															},
															File:   "filterRowsStrict_test.flux",
															Source: "73.61846",
															Start: ast.Position{
																Column: 55,
																Line:   210,
															},
														},
													},
													Value: 73.61846,
												},
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 63,
															Line:   210,
														},
														File:   "filterRowsStrict_test.flux",
														Source: "-73.61846",
														Start: ast.Position{
															Column: 54,
															Line:   210,
														},
													},
												},
												Operator: 6,
											},
										}, &ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 77,
														Line:   210,
													},
													File:   "filterRowsStrict_test.flux",
													Source: "radius: 15.0",
													Start: ast.Position{
														Column: 65,
														Line:   210,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 71,
															Line:   210,
														},
														File:   "filterRowsStrict_test.flux",
														Source: "radius",
														Start: ast.Position{
															Column: 65,
															Line:   210,
														},
													},
												},
												Name: "radius",
											},
											Value: &ast.FloatLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 77,
															Line:   210,
														},
														File:   "filterRowsStrict_test.flux",
														Source: "15.0",
														Start: ast.Position{
															Column: 73,
															Line:   210,
														},
													},
												},
												Value: 15.0,
											},
										}},
										With: nil,
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 92,
												Line:   210,
											},
											File:   "filterRowsStrict_test.flux",
											Source: "strict: true",
											Start: ast.Position{
												Column: 80,
												Line:   210,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 86,
													Line:   210,
												},
												File:   "filterRowsStrict_test.flux",
												Source: "strict",
												Start: ast.Position{
													Column: 80,
													Line:   210,
												},
											},
										},
										Name: "strict",
									},
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 92,
													Line:   210,
												},
												File:   "filterRowsStrict_test.flux",
												Source: "true",
												Start: ast.Position{
													Column: 88,
													Line:   210,
												},
											},
										},
										Name: "true",
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 93,
										Line:   210,
									},
									File:   "filterRowsStrict_test.flux",
									Source: "geo.filterRows(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, strict: true)",
									Start: ast.Position{
										Column: 8,
										Line:   210,
									},
								},
							},
							Callee: &ast.MemberExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 22,
											Line:   210,
										},
										File:   "filterRowsStrict_test.flux",
										Source: "geo.filterRows",
										Start: ast.Position{
											Column: 8,
											Line:   210,
										},
									},
								},
								Object: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 11,
												Line:   210,
											},
											File:   "filterRowsStrict_test.flux",
											Source: "geo",
											Start: ast.Position{
												Column: 8,
												Line:   210,
											},
										},
									},
									Name: "geo",
								},
								Property: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 22,
												Line:   210,
											},
											File:   "filterRowsStrict_test.flux",
											Source: "filterRows",
											Start: ast.Position{
												Column: 12,
												Line:   210,
											},
										},
									},
									Name: "filterRows",
								},
							},
						},
					},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   211,
							},
							File:   "filterRowsStrict_test.flux",
							Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.filterRows(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, strict: true)\n    |> drop(columns: [\"_start\", \"_stop\"])",
							Start: ast.Position{
								Column: 3,
								Line:   208,
							},
						},
					},
					Call: &ast.CallExpression{
						Arguments: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   211,
									},
									File:   "filterRowsStrict_test.flux",
									Source: "columns: [\"_start\", \"_stop\"]",
									Start: ast.Position{
										Column: 13,
										Line:   211,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 41,
											Line:   211,
										},
										File:   "filterRowsStrict_test.flux",
										Source: "columns: [\"_start\", \"_stop\"]",
										Start: ast.Position{
											Column: 13,
											Line:   211,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 20,
												Line:   211,
											},
											File:   "filterRowsStrict_test.flux",
											Source: "columns",
											Start: ast.Position{
												Column: 13,
												Line:   211,
											},
										},
									},
									Name: "columns",
								},
								Value: &ast.ArrayExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 41,
												Line:   211,
											},
											File:   "filterRowsStrict_test.flux",
											Source: "[\"_start\", \"_stop\"]",
											Start: ast.Position{
												Column: 22,
												Line:   211,
											},
										},
									},
									Elements: []ast.Expression{&ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 31,
													Line:   211,
												},
												File:   "filterRowsStrict_test.flux",
												Source: "\"_start\"",
												Start: ast.Position{
													Column: 23,
													Line:   211,
												},
											},
										},
										Value: "_start",
									}, &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 40,
													Line:   211,
												},
												File:   "filterRowsStrict_test.flux",
												Source: "\"_stop\"",
												Start: ast.Position{
													Column: 33,
													Line:   211,
												},
											},
										},
										Value: "_stop",
									}},
								},
							}},
							With: nil,
						}},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   211,
								},
								File:   "filterRowsStrict_test.flux",
								Source: "drop(columns: [\"_start\", \"_stop\"])",
								Start: ast.Position{
									Column: 8,
									Line:   211,
								},
							},
						},
						Callee: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 12,
										Line:   211,
									},
									File:   "filterRowsStrict_test.flux",
									Source: "drop",
									Start: ast.Position{
										Column: 8,
										Line:   211,
									},
								},
							},
							Name: "drop",
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 31,
								Line:   207,
							},
							File:   "filterRowsStrict_test.flux",
							Source: "table=<-",
							Start: ast.Position{
								Column: 23,
								Line:   207,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 28,
									Line:   207,
								},
								File:   "filterRowsStrict_test.flux",
								Source: "table",
								Start: ast.Position{
									Column: 23,
									Line:   207,
								},
							},
						},
						Name: "table",
					},
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 31,
								Line:   207,
							},
							File:   "filterRowsStrict_test.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 29,
								Line:   207,
							},
						},
					}},
				}},
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 106,
							Line:   213,
						},
						File:   "filterRowsStrict_test.flux",
						Source: "_filterRowsStrict = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_filterRowsStrict})",
						Start: ast.Position{
							Column: 6,
							Line:   212,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 23,
								Line:   212,
							},
							File:   "filterRowsStrict_test.flux",
							Source: "_filterRowsStrict",
							Start: ast.Position{
								Column: 6,
								Line:   212,
							},
						},
					},
					Name: "_filterRowsStrict",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 106,
								Line:   213,
							},
							File:   "filterRowsStrict_test.flux",
							Source: "() =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_filterRowsStrict})",
							Start: ast.Position{
								Column: 26,
								Line:   212,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 106,
									Line:   213,
								},
								File:   "filterRowsStrict_test.flux",
								Source: "({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_filterRowsStrict})",
								Start: ast.Position{
									Column: 2,
									Line:   213,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 105,
										Line:   213,
									},
									File:   "filterRowsStrict_test.flux",
									Source: "{input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_filterRowsStrict}",
									Start: ast.Position{
										Column: 3,
										Line:   213,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 43,
											Line:   213,
										},
										File:   "filterRowsStrict_test.flux",
										Source: "input: testing.loadStorage(csv: inData)",
										Start: ast.Position{
											Column: 4,
											Line:   213,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 9,
												Line:   213,
											},
											File:   "filterRowsStrict_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 4,
												Line:   213,
											},
										},
									},
									Name: "input",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   213,
												},
												File:   "filterRowsStrict_test.flux",
												Source: "csv: inData",
												Start: ast.Position{
													Column: 31,
													Line:   213,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 42,
														Line:   213,
													},
													File:   "filterRowsStrict_test.flux",
													Source: "csv: inData",
													Start: ast.Position{
														Column: 31,
														Line:   213,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 34,
															Line:   213,
														},
														File:   "filterRowsStrict_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 31,
															Line:   213,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 42,
															Line:   213,
														},
														File:   "filterRowsStrict_test.flux",
														Source: "inData",
														Start: ast.Position{
															Column: 36,
															Line:   213,
														},
													},
												},
												Name: "inData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 43,
												Line:   213,
											},
											File:   "filterRowsStrict_test.flux",
											Source: "testing.loadStorage(csv: inData)",
											Start: ast.Position{
												Column: 11,
												Line:   213,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   213,
												},
												File:   "filterRowsStrict_test.flux",
												Source: "testing.loadStorage",
												Start: ast.Position{
													Column: 11,
													Line:   213,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   213,
													},
													File:   "filterRowsStrict_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 11,
														Line:   213,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 30,
														Line:   213,
													},
													File:   "filterRowsStrict_test.flux",
													Source: "loadStorage",
													Start: ast.Position{
														Column: 19,
														Line:   213,
													},
												},
											},
											Name: "loadStorage",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 80,
											Line:   213,
										},
										File:   "filterRowsStrict_test.flux",
										Source: "want: testing.loadMem(csv: outData)",
										Start: ast.Position{
											Column: 45,
											Line:   213,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 49,
												Line:   213,
											},
											File:   "filterRowsStrict_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 45,
												Line:   213,
											},
										},
									},
									Name: "want",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 79,
													Line:   213,
												},
												File:   "filterRowsStrict_test.flux",
												Source: "csv: outData",
												Start: ast.Position{
													Column: 67,
													Line:   213,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 79,
														Line:   213,
													},
													File:   "filterRowsStrict_test.flux",
													Source: "csv: outData",
													Start: ast.Position{
														Column: 67,
														Line:   213,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 70,
															Line:   213,
														},
														File:   "filterRowsStrict_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 67,
															Line:   213,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 79,
															Line:   213,
														},
														File:   "filterRowsStrict_test.flux",
														Source: "outData",
														Start: ast.Position{
															Column: 72,
															Line:   213,
														},
													},
												},
												Name: "outData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 80,
												Line:   213,
											},
											File:   "filterRowsStrict_test.flux",
											Source: "testing.loadMem(csv: outData)",
											Start: ast.Position{
												Column: 51,
												Line:   213,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   213,
												},
												File:   "filterRowsStrict_test.flux",
												Source: "testing.loadMem",
												Start: ast.Position{
													Column: 51,
													Line:   213,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 58,
														Line:   213,
													},
													File:   "filterRowsStrict_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 51,
														Line:   213,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 66,
														Line:   213,
													},
													File:   "filterRowsStrict_test.flux",
													Source: "loadMem",
													Start: ast.Position{
														Column: 59,
														Line:   213,
													},
												},
											},
											Name: "loadMem",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 104,
											Line:   213,
										},
										File:   "filterRowsStrict_test.flux",
										Source: "fn: t_filterRowsStrict",
										Start: ast.Position{
											Column: 82,
											Line:   213,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 84,
												Line:   213,
											},
											File:   "filterRowsStrict_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 82,
												Line:   213,
											},
										},
									},
									Name: "fn",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 104,
												Line:   213,
											},
											File:   "filterRowsStrict_test.flux",
											Source: "t_filterRowsStrict",
											Start: ast.Position{
												Column: 86,
												Line:   213,
											},
										},
									},
									Name: "t_filterRowsStrict",
								},
							}},
							With: nil,
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 106,
						Line:   213,
					},
					File:   "filterRowsStrict_test.flux",
					Source: "test _filterRowsStrict = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_filterRowsStrict})",
					Start: ast.Position{
						Column: 1,
						Line:   212,
					},
				},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 26,
						Line:   3,
					},
					File:   "filterRowsStrict_test.flux",
					Source: "import \"experimental/geo\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 26,
							Line:   3,
						},
						File:   "filterRowsStrict_test.flux",
						Source: "\"experimental/geo\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "experimental/geo",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   4,
					},
					File:   "filterRowsStrict_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   4,
						},
						File:   "filterRowsStrict_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "testing",
			},
		}},
		Metadata: "parser-type=go",
		Name:     "filterRowsStrict_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   1,
					},
					File:   "filterRowsStrict_test.flux",
					Source: "package geo_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   1,
						},
						File:   "filterRowsStrict_test.flux",
						Source: "geo_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "geo_test",
			},
		},
	}, &ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 100,
					Line:   221,
				},
				File:   "gridFilterLevel_test.flux",
				Source: "package geo_test\n\nimport \"experimental/geo\"\nimport \"testing\"\n\noption now = () => (2030-01-01T00:00:00Z)\n\ninData = \"\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n\"\n\noutData = \"\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,lat\n,,3,2019-11-01T00:17:38.287113937Z,89c2664,taxi,start,1572567458287113937,-73.776665,40.645245\n\"\n\n// grid level 9 is still fine enough not to cover large area so we only get Long Island points\nt_gridFilter = (table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.gridFilter(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, level: 9)\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> drop(columns: [\"_start\", \"_stop\"])\ntest _gridFilter = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_gridFilter})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   6,
						},
						File:   "gridFilterLevel_test.flux",
						Source: "now = () => (2030-01-01T00:00:00Z)",
						Start: ast.Position{
							Column: 8,
							Line:   6,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   6,
							},
							File:   "gridFilterLevel_test.flux",
							Source: "now",
							Start: ast.Position{
								Column: 8,
								Line:   6,
							},
						},
					},
					Name: "now",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   6,
							},
							File:   "gridFilterLevel_test.flux",
							Source: "() => (2030-01-01T00:00:00Z)",
							Start: ast.Position{
								Column: 14,
								Line:   6,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   6,
								},
								File:   "gridFilterLevel_test.flux",
								Source: "(2030-01-01T00:00:00Z)",
								Start: ast.Position{
									Column: 20,
									Line:   6,
								},
							},
						},
						Expression: &ast.DateTimeLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   6,
									},
									File:   "gridFilterLevel_test.flux",
									Source: "2030-01-01T00:00:00Z",
									Start: ast.Position{
										Column: 21,
										Line:   6,
									},
								},
							},
							Value: parser.MustParseTime("2030-01-01T00:00:00Z"),
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   6,
					},
					File:   "gridFilterLevel_test.flux",
					Source: "option now = () => (2030-01-01T00:00:00Z)",
					Start: ast.Position{
						Column: 1,
						Line:   6,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   185,
					},
					File:   "gridFilterLevel_test.flux",
					Source: "inData = \"\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   8,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 7,
							Line:   8,
						},
						File:   "gridFilterLevel_test.flux",
						Source: "inData",
						Start: ast.Position{
							Column: 1,
							Line:   8,
						},
					},
				},
				Name: "inData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   185,
						},
						File:   "gridFilterLevel_test.flux",
						Source: "\"\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n\"",
						Start: ast.Position{
							Column: 10,
							Line:   8,
						},
					},
				},
				Value: "\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   211,
					},
					File:   "gridFilterLevel_test.flux",
					Source: "outData = \"\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,lat\n,,3,2019-11-01T00:17:38.287113937Z,89c2664,taxi,start,1572567458287113937,-73.776665,40.645245\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   187,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 8,
							Line:   187,
						},
						File:   "gridFilterLevel_test.flux",
						Source: "outData",
						Start: ast.Position{
							Column: 1,
							Line:   187,
						},
					},
				},
				Name: "outData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   211,
						},
						File:   "gridFilterLevel_test.flux",
						Source: "\"\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,lat\n,,3,2019-11-01T00:17:38.287113937Z,89c2664,taxi,start,1572567458287113937,-73.776665,40.645245\n\"",
						Start: ast.Position{
							Column: 11,
							Line:   187,
						},
					},
				},
				Value: "\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,lat\n,,3,2019-11-01T00:17:38.287113937Z,89c2664,taxi,start,1572567458287113937,-73.776665,40.645245\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   219,
					},
					File:   "gridFilterLevel_test.flux",
					Source: "t_gridFilter = (table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.gridFilter(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, level: 9)\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> drop(columns: [\"_start\", \"_stop\"])",
					Start: ast.Position{
						Column: 1,
						Line:   214,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 13,
							Line:   214,
						},
						File:   "gridFilterLevel_test.flux",
						Source: "t_gridFilter",
						Start: ast.Position{
							Column: 1,
							Line:   214,
						},
					},
				},
				Name: "t_gridFilter",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   219,
						},
						File:   "gridFilterLevel_test.flux",
						Source: "(table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.gridFilter(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, level: 9)\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> drop(columns: [\"_start\", \"_stop\"])",
						Start: ast.Position{
							Column: 16,
							Line:   214,
						},
					},
				},
				Body: &ast.PipeExpression{
					Argument: &ast.PipeExpression{
						Argument: &ast.PipeExpression{
							Argument: &ast.PipeExpression{
								Argument: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 8,
												Line:   215,
											},
											File:   "gridFilterLevel_test.flux",
											Source: "table",
											Start: ast.Position{
												Column: 3,
												Line:   215,
											},
										},
									},
									Name: "table",
								},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 42,
											Line:   216,
										},
										File:   "gridFilterLevel_test.flux",
										Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)",
										Start: ast.Position{
											Column: 3,
											Line:   215,
										},
									},
								},
								Call: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 41,
													Line:   216,
												},
												File:   "gridFilterLevel_test.flux",
												Source: "start: 2019-11-01T00:00:00Z",
												Start: ast.Position{
													Column: 14,
													Line:   216,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 41,
														Line:   216,
													},
													File:   "gridFilterLevel_test.flux",
													Source: "start: 2019-11-01T00:00:00Z",
													Start: ast.Position{
														Column: 14,
														Line:   216,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 19,
															Line:   216,
														},
														File:   "gridFilterLevel_test.flux",
														Source: "start",
														Start: ast.Position{
															Column: 14,
															Line:   216,
														},
													},
												},
												Name: "start",
											},
											Value: &ast.DateTimeLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 41,
															Line:   216,
														},
														File:   "gridFilterLevel_test.flux",
														Source: "2019-11-01T00:00:00Z",
														Start: ast.Position{
															Column: 21,
															Line:   216,
														},
													},
												},
												Value: parser.MustParseTime("2019-11-01T00:00:00Z"),
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 42,
												Line:   216,
											},
											File:   "gridFilterLevel_test.flux",
											Source: "range(start: 2019-11-01T00:00:00Z)",
											Start: ast.Position{
												Column: 8,
												Line:   216,
											},
										},
									},
									Callee: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 13,
													Line:   216,
												},
												File:   "gridFilterLevel_test.flux",
												Source: "range",
												Start: ast.Position{
													Column: 8,
													Line:   216,
												},
											},
										},
										Name: "range",
									},
								},
							},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 89,
										Line:   217,
									},
									File:   "gridFilterLevel_test.flux",
									Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.gridFilter(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, level: 9)",
									Start: ast.Position{
										Column: 3,
										Line:   215,
									},
								},
							},
							Call: &ast.CallExpression{
								Arguments: []ast.Expression{&ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 88,
												Line:   217,
											},
											File:   "gridFilterLevel_test.flux",
											Source: "region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, level: 9",
											Start: ast.Position{
												Column: 23,
												Line:   217,
											},
										},
									},
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 78,
													Line:   217,
												},
												File:   "gridFilterLevel_test.flux",
												Source: "region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}",
												Start: ast.Position{
													Column: 23,
													Line:   217,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 29,
														Line:   217,
													},
													File:   "gridFilterLevel_test.flux",
													Source: "region",
													Start: ast.Position{
														Column: 23,
														Line:   217,
													},
												},
											},
											Name: "region",
										},
										Value: &ast.ObjectExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 78,
														Line:   217,
													},
													File:   "gridFilterLevel_test.flux",
													Source: "{lat: 40.7090214, lon: -73.61846, radius: 15.0}",
													Start: ast.Position{
														Column: 31,
														Line:   217,
													},
												},
											},
											Properties: []*ast.Property{&ast.Property{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 47,
															Line:   217,
														},
														File:   "gridFilterLevel_test.flux",
														Source: "lat: 40.7090214",
														Start: ast.Position{
															Column: 32,
															Line:   217,
														},
													},
												},
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 35,
																Line:   217,
															},
															File:   "gridFilterLevel_test.flux",
															Source: "lat",
															Start: ast.Position{
																Column: 32,
																Line:   217,
															},
														},
													},
													Name: "lat",
												},
												Value: &ast.FloatLiteral{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 47,
																Line:   217,
															},
															File:   "gridFilterLevel_test.flux",
															Source: "40.7090214",
															Start: ast.Position{
																Column: 37,
																Line:   217,
															},
														},
													},
													Value: 40.7090214,
												},
											}, &ast.Property{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 63,
															Line:   217,
														},
														File:   "gridFilterLevel_test.flux",
														Source: "lon: -73.61846",
														Start: ast.Position{
															Column: 49,
															Line:   217,
														},
													},
												},
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 52,
																Line:   217,
															},
															File:   "gridFilterLevel_test.flux",
															Source: "lon",
															Start: ast.Position{
																Column: 49,
																Line:   217,
															},
														},
													},
													Name: "lon",
												},
												Value: &ast.UnaryExpression{
													Argument: &ast.FloatLiteral{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 63,
																	Line:   217,
																},
																File:   "gridFilterLevel_test.flux",
																Source: "73.61846",
																Start: ast.Position{
																	Column: 55,
																	Line:   217,
																},
															},
														},
														Value: 73.61846,
													},
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 63,
																Line:   217,
															},
															File:   "gridFilterLevel_test.flux",
															Source: "-73.61846",
															Start: ast.Position{
																Column: 54,
																Line:   217,
															},
														},
													},
													Operator: 6,
												},
											}, &ast.Property{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 77,
															Line:   217,
														},
														File:   "gridFilterLevel_test.flux",
														Source: "radius: 15.0",
														Start: ast.Position{
															Column: 65,
															Line:   217,
														},
													},
												},
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 71,
																Line:   217,
															},
															File:   "gridFilterLevel_test.flux",
															Source: "radius",
															Start: ast.Position{
																Column: 65,
																Line:   217,
															},
														},
													},
													Name: "radius",
												},
												Value: &ast.FloatLiteral{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 77,
																Line:   217,
															},
															File:   "gridFilterLevel_test.flux",
															Source: "15.0",
															Start: ast.Position{
																Column: 73,
																Line:   217,
															},
														},
													},
													Value: 15.0,
												},
											}},
											With: nil,
										},
									}, &ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 88,
													Line:   217,
												},
												File:   "gridFilterLevel_test.flux",
												Source: "level: 9",
												Start: ast.Position{
													Column: 80,
													Line:   217,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 85,
														Line:   217,
													},
													File:   "gridFilterLevel_test.flux",
													Source: "level",
													Start: ast.Position{
														Column: 80,
														Line:   217,
													},
												},
											},
											Name: "level",
										},
										Value: &ast.IntegerLiteral{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 88,
														Line:   217,
													},
													File:   "gridFilterLevel_test.flux",
													Source: "9",
													Start: ast.Position{
														Column: 87,
														Line:   217,
													},
												},
											},
											Value: int64(9),
										},
									}},
									With: nil,
								}},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 89,
											Line:   217,
										},
										File:   "gridFilterLevel_test.flux",
										Source: "geo.gridFilter(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, level: 9)",
										Start: ast.Position{
											Column: 8,
											Line:   217,
										},
									},
								},
								Callee: &ast.MemberExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 22,
												Line:   217,
											},
											File:   "gridFilterLevel_test.flux",
											Source: "geo.gridFilter",
											Start: ast.Position{
												Column: 8,
												Line:   217,
											},
										},
									},
									Object: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 11,
													Line:   217,
												},
												File:   "gridFilterLevel_test.flux",
												Source: "geo",
												Start: ast.Position{
													Column: 8,
													Line:   217,
												},
											},
										},
										Name: "geo",
									},
									Property: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 22,
													Line:   217,
												},
												File:   "gridFilterLevel_test.flux",
												Source: "gridFilter",
												Start: ast.Position{
													Column: 12,
													Line:   217,
												},
											},
										},
										Name: "gridFilter",
									},
								},
							},
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 77,
									Line:   218,
								},
								File:   "gridFilterLevel_test.flux",
								Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.gridFilter(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, level: 9)\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")",
								Start: ast.Position{
									Column: 3,
									Line:   215,
								},
							},
						},
						Call: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 76,
											Line:   218,
										},
										File:   "gridFilterLevel_test.flux",
										Source: "rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\"",
										Start: ast.Position{
											Column: 14,
											Line:   218,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 30,
												Line:   218,
											},
											File:   "gridFilterLevel_test.flux",
											Source: "rowKey:[\"_time\"]",
											Start: ast.Position{
												Column: 14,
												Line:   218,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 20,
													Line:   218,
												},
												File:   "gridFilterLevel_test.flux",
												Source: "rowKey",
												Start: ast.Position{
													Column: 14,
													Line:   218,
												},
											},
										},
										Name: "rowKey",
									},
									Value: &ast.ArrayExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   218,
												},
												File:   "gridFilterLevel_test.flux",
												Source: "[\"_time\"]",
												Start: ast.Position{
													Column: 21,
													Line:   218,
												},
											},
										},
										Elements: []ast.Expression{&ast.StringLiteral{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 29,
														Line:   218,
													},
													File:   "gridFilterLevel_test.flux",
													Source: "\"_time\"",
													Start: ast.Position{
														Column: 22,
														Line:   218,
													},
												},
											},
											Value: "_time",
										}},
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 53,
												Line:   218,
											},
											File:   "gridFilterLevel_test.flux",
											Source: "columnKey: [\"_field\"]",
											Start: ast.Position{
												Column: 32,
												Line:   218,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 41,
													Line:   218,
												},
												File:   "gridFilterLevel_test.flux",
												Source: "columnKey",
												Start: ast.Position{
													Column: 32,
													Line:   218,
												},
											},
										},
										Name: "columnKey",
									},
									Value: &ast.ArrayExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 53,
													Line:   218,
												},
												File:   "gridFilterLevel_test.flux",
												Source: "[\"_field\"]",
												Start: ast.Position{
													Column: 43,
													Line:   218,
												},
											},
										},
										Elements: []ast.Expression{&ast.StringLiteral{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 52,
														Line:   218,
													},
													File:   "gridFilterLevel_test.flux",
													Source: "\"_field\"",
													Start: ast.Position{
														Column: 44,
														Line:   218,
													},
												},
											},
											Value: "_field",
										}},
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 76,
												Line:   218,
											},
											File:   "gridFilterLevel_test.flux",
											Source: "valueColumn: \"_value\"",
											Start: ast.Position{
												Column: 55,
												Line:   218,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   218,
												},
												File:   "gridFilterLevel_test.flux",
												Source: "valueColumn",
												Start: ast.Position{
													Column: 55,
													Line:   218,
												},
											},
										},
										Name: "valueColumn",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 76,
													Line:   218,
												},
												File:   "gridFilterLevel_test.flux",
												Source: "\"_value\"",
												Start: ast.Position{
													Column: 68,
													Line:   218,
												},
											},
										},
										Value: "_value",
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 77,
										Line:   218,
									},
									File:   "gridFilterLevel_test.flux",
									Source: "pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")",
									Start: ast.Position{
										Column: 8,
										Line:   218,
									},
								},
							},
							Callee: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 13,
											Line:   218,
										},
										File:   "gridFilterLevel_test.flux",
										Source: "pivot",
										Start: ast.Position{
											Column: 8,
											Line:   218,
										},
									},
								},
								Name: "pivot",
							},
						},
					},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   219,
							},
							File:   "gridFilterLevel_test.flux",
							Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.gridFilter(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, level: 9)\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> drop(columns: [\"_start\", \"_stop\"])",
							Start: ast.Position{
								Column: 3,
								Line:   215,
							},
						},
					},
					Call: &ast.CallExpression{
						Arguments: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   219,
									},
									File:   "gridFilterLevel_test.flux",
									Source: "columns: [\"_start\", \"_stop\"]",
									Start: ast.Position{
										Column: 13,
										Line:   219,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 41,
											Line:   219,
										},
										File:   "gridFilterLevel_test.flux",
										Source: "columns: [\"_start\", \"_stop\"]",
										Start: ast.Position{
											Column: 13,
											Line:   219,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 20,
												Line:   219,
											},
											File:   "gridFilterLevel_test.flux",
											Source: "columns",
											Start: ast.Position{
												Column: 13,
												Line:   219,
											},
										},
									},
									Name: "columns",
								},
								Value: &ast.ArrayExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 41,
												Line:   219,
											},
											File:   "gridFilterLevel_test.flux",
											Source: "[\"_start\", \"_stop\"]",
											Start: ast.Position{
												Column: 22,
												Line:   219,
											},
										},
									},
									Elements: []ast.Expression{&ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 31,
													Line:   219,
												},
												File:   "gridFilterLevel_test.flux",
												Source: "\"_start\"",
												Start: ast.Position{
													Column: 23,
													Line:   219,
												},
											},
										},
										Value: "_start",
									}, &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 40,
													Line:   219,
												},
												File:   "gridFilterLevel_test.flux",
												Source: "\"_stop\"",
												Start: ast.Position{
													Column: 33,
													Line:   219,
												},
											},
										},
										Value: "_stop",
									}},
								},
							}},
							With: nil,
						}},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   219,
								},
								File:   "gridFilterLevel_test.flux",
								Source: "drop(columns: [\"_start\", \"_stop\"])",
								Start: ast.Position{
									Column: 8,
									Line:   219,
								},
							},
						},
						Callee: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 12,
										Line:   219,
									},
									File:   "gridFilterLevel_test.flux",
									Source: "drop",
									Start: ast.Position{
										Column: 8,
										Line:   219,
									},
								},
							},
							Name: "drop",
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 25,
								Line:   214,
							},
							File:   "gridFilterLevel_test.flux",
							Source: "table=<-",
							Start: ast.Position{
								Column: 17,
								Line:   214,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 22,
									Line:   214,
								},
								File:   "gridFilterLevel_test.flux",
								Source: "table",
								Start: ast.Position{
									Column: 17,
									Line:   214,
								},
							},
						},
						Name: "table",
					},
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 25,
								Line:   214,
							},
							File:   "gridFilterLevel_test.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 23,
								Line:   214,
							},
						},
					}},
				}},
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 100,
							Line:   221,
						},
						File:   "gridFilterLevel_test.flux",
						Source: "_gridFilter = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_gridFilter})",
						Start: ast.Position{
							Column: 6,
							Line:   220,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 17,
								Line:   220,
							},
							File:   "gridFilterLevel_test.flux",
							Source: "_gridFilter",
							Start: ast.Position{
								Column: 6,
								Line:   220,
							},
						},
					},
					Name: "_gridFilter",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 100,
								Line:   221,
							},
							File:   "gridFilterLevel_test.flux",
							Source: "() =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_gridFilter})",
							Start: ast.Position{
								Column: 20,
								Line:   220,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 100,
									Line:   221,
								},
								File:   "gridFilterLevel_test.flux",
								Source: "({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_gridFilter})",
								Start: ast.Position{
									Column: 2,
									Line:   221,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 99,
										Line:   221,
									},
									File:   "gridFilterLevel_test.flux",
									Source: "{input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_gridFilter}",
									Start: ast.Position{
										Column: 3,
										Line:   221,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 43,
											Line:   221,
										},
										File:   "gridFilterLevel_test.flux",
										Source: "input: testing.loadStorage(csv: inData)",
										Start: ast.Position{
											Column: 4,
											Line:   221,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 9,
												Line:   221,
											},
											File:   "gridFilterLevel_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 4,
												Line:   221,
											},
										},
									},
									Name: "input",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   221,
												},
												File:   "gridFilterLevel_test.flux",
												Source: "csv: inData",
												Start: ast.Position{
													Column: 31,
													Line:   221,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 42,
														Line:   221,
													},
													File:   "gridFilterLevel_test.flux",
													Source: "csv: inData",
													Start: ast.Position{
														Column: 31,
														Line:   221,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 34,
															Line:   221,
														},
														File:   "gridFilterLevel_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 31,
															Line:   221,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 42,
															Line:   221,
														},
														File:   "gridFilterLevel_test.flux",
														Source: "inData",
														Start: ast.Position{
															Column: 36,
															Line:   221,
														},
													},
												},
												Name: "inData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 43,
												Line:   221,
											},
											File:   "gridFilterLevel_test.flux",
											Source: "testing.loadStorage(csv: inData)",
											Start: ast.Position{
												Column: 11,
												Line:   221,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   221,
												},
												File:   "gridFilterLevel_test.flux",
												Source: "testing.loadStorage",
												Start: ast.Position{
													Column: 11,
													Line:   221,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   221,
													},
													File:   "gridFilterLevel_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 11,
														Line:   221,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 30,
														Line:   221,
													},
													File:   "gridFilterLevel_test.flux",
													Source: "loadStorage",
													Start: ast.Position{
														Column: 19,
														Line:   221,
													},
												},
											},
											Name: "loadStorage",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 80,
											Line:   221,
										},
										File:   "gridFilterLevel_test.flux",
										Source: "want: testing.loadMem(csv: outData)",
										Start: ast.Position{
											Column: 45,
											Line:   221,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 49,
												Line:   221,
											},
											File:   "gridFilterLevel_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 45,
												Line:   221,
											},
										},
									},
									Name: "want",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 79,
													Line:   221,
												},
												File:   "gridFilterLevel_test.flux",
												Source: "csv: outData",
												Start: ast.Position{
													Column: 67,
													Line:   221,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 79,
														Line:   221,
													},
													File:   "gridFilterLevel_test.flux",
													Source: "csv: outData",
													Start: ast.Position{
														Column: 67,
														Line:   221,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 70,
															Line:   221,
														},
														File:   "gridFilterLevel_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 67,
															Line:   221,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 79,
															Line:   221,
														},
														File:   "gridFilterLevel_test.flux",
														Source: "outData",
														Start: ast.Position{
															Column: 72,
															Line:   221,
														},
													},
												},
												Name: "outData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 80,
												Line:   221,
											},
											File:   "gridFilterLevel_test.flux",
											Source: "testing.loadMem(csv: outData)",
											Start: ast.Position{
												Column: 51,
												Line:   221,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   221,
												},
												File:   "gridFilterLevel_test.flux",
												Source: "testing.loadMem",
												Start: ast.Position{
													Column: 51,
													Line:   221,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 58,
														Line:   221,
													},
													File:   "gridFilterLevel_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 51,
														Line:   221,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 66,
														Line:   221,
													},
													File:   "gridFilterLevel_test.flux",
													Source: "loadMem",
													Start: ast.Position{
														Column: 59,
														Line:   221,
													},
												},
											},
											Name: "loadMem",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 98,
											Line:   221,
										},
										File:   "gridFilterLevel_test.flux",
										Source: "fn: t_gridFilter",
										Start: ast.Position{
											Column: 82,
											Line:   221,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 84,
												Line:   221,
											},
											File:   "gridFilterLevel_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 82,
												Line:   221,
											},
										},
									},
									Name: "fn",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 98,
												Line:   221,
											},
											File:   "gridFilterLevel_test.flux",
											Source: "t_gridFilter",
											Start: ast.Position{
												Column: 86,
												Line:   221,
											},
										},
									},
									Name: "t_gridFilter",
								},
							}},
							With: nil,
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 100,
						Line:   221,
					},
					File:   "gridFilterLevel_test.flux",
					Source: "test _gridFilter = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_gridFilter})",
					Start: ast.Position{
						Column: 1,
						Line:   220,
					},
				},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 26,
						Line:   3,
					},
					File:   "gridFilterLevel_test.flux",
					Source: "import \"experimental/geo\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 26,
							Line:   3,
						},
						File:   "gridFilterLevel_test.flux",
						Source: "\"experimental/geo\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "experimental/geo",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   4,
					},
					File:   "gridFilterLevel_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   4,
						},
						File:   "gridFilterLevel_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "testing",
			},
		}},
		Metadata: "parser-type=go",
		Name:     "gridFilterLevel_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   1,
					},
					File:   "gridFilterLevel_test.flux",
					Source: "package geo_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   1,
						},
						File:   "gridFilterLevel_test.flux",
						Source: "geo_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "geo_test",
			},
		},
	}, &ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 100,
					Line:   220,
				},
				File:   "gridFilter_test.flux",
				Source: "package geo_test\n\nimport \"experimental/geo\"\nimport \"testing\"\n\noption now = () => (2030-01-01T00:00:00Z)\n\ninData = \"\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n\"\n\noutData = \"\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,lat\n,,3,2019-11-01T00:17:38.287113937Z,89c2664,taxi,start,1572567458287113937,-73.776665,40.645245\n\"\n\nt_gridFilter = (table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.gridFilter(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0})\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> drop(columns: [\"_start\", \"_stop\"])\ntest _gridFilter = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_gridFilter})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   6,
						},
						File:   "gridFilter_test.flux",
						Source: "now = () => (2030-01-01T00:00:00Z)",
						Start: ast.Position{
							Column: 8,
							Line:   6,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   6,
							},
							File:   "gridFilter_test.flux",
							Source: "now",
							Start: ast.Position{
								Column: 8,
								Line:   6,
							},
						},
					},
					Name: "now",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   6,
							},
							File:   "gridFilter_test.flux",
							Source: "() => (2030-01-01T00:00:00Z)",
							Start: ast.Position{
								Column: 14,
								Line:   6,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   6,
								},
								File:   "gridFilter_test.flux",
								Source: "(2030-01-01T00:00:00Z)",
								Start: ast.Position{
									Column: 20,
									Line:   6,
								},
							},
						},
						Expression: &ast.DateTimeLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   6,
									},
									File:   "gridFilter_test.flux",
									Source: "2030-01-01T00:00:00Z",
									Start: ast.Position{
										Column: 21,
										Line:   6,
									},
								},
							},
							Value: parser.MustParseTime("2030-01-01T00:00:00Z"),
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   6,
					},
					File:   "gridFilter_test.flux",
					Source: "option now = () => (2030-01-01T00:00:00Z)",
					Start: ast.Position{
						Column: 1,
						Line:   6,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   185,
					},
					File:   "gridFilter_test.flux",
					Source: "inData = \"\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   8,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 7,
							Line:   8,
						},
						File:   "gridFilter_test.flux",
						Source: "inData",
						Start: ast.Position{
							Column: 1,
							Line:   8,
						},
					},
				},
				Name: "inData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   185,
						},
						File:   "gridFilter_test.flux",
						Source: "\"\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n\"",
						Start: ast.Position{
							Column: 10,
							Line:   8,
						},
					},
				},
				Value: "\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   211,
					},
					File:   "gridFilter_test.flux",
					Source: "outData = \"\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,lat\n,,3,2019-11-01T00:17:38.287113937Z,89c2664,taxi,start,1572567458287113937,-73.776665,40.645245\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   187,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 8,
							Line:   187,
						},
						File:   "gridFilter_test.flux",
						Source: "outData",
						Start: ast.Position{
							Column: 1,
							Line:   187,
						},
					},
				},
				Name: "outData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   211,
						},
						File:   "gridFilter_test.flux",
						Source: "\"\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,lat\n,,3,2019-11-01T00:17:38.287113937Z,89c2664,taxi,start,1572567458287113937,-73.776665,40.645245\n\"",
						Start: ast.Position{
							Column: 11,
							Line:   187,
						},
					},
				},
				Value: "\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,lat\n,,3,2019-11-01T00:17:38.287113937Z,89c2664,taxi,start,1572567458287113937,-73.776665,40.645245\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   218,
					},
					File:   "gridFilter_test.flux",
					Source: "t_gridFilter = (table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.gridFilter(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0})\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> drop(columns: [\"_start\", \"_stop\"])",
					Start: ast.Position{
						Column: 1,
						Line:   213,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 13,
							Line:   213,
						},
						File:   "gridFilter_test.flux",
						Source: "t_gridFilter",
						Start: ast.Position{
							Column: 1,
							Line:   213,
						},
					},
				},
				Name: "t_gridFilter",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   218,
						},
						File:   "gridFilter_test.flux",
						Source: "(table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.gridFilter(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0})\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> drop(columns: [\"_start\", \"_stop\"])",
						Start: ast.Position{
							Column: 16,
							Line:   213,
						},
					},
				},
				Body: &ast.PipeExpression{
					Argument: &ast.PipeExpression{
						Argument: &ast.PipeExpression{
							Argument: &ast.PipeExpression{
								Argument: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 8,
												Line:   214,
											},
											File:   "gridFilter_test.flux",
											Source: "table",
											Start: ast.Position{
												Column: 3,
												Line:   214,
											},
										},
									},
									Name: "table",
								},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 42,
											Line:   215,
										},
										File:   "gridFilter_test.flux",
										Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)",
										Start: ast.Position{
											Column: 3,
											Line:   214,
										},
									},
								},
								Call: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 41,
													Line:   215,
												},
												File:   "gridFilter_test.flux",
												Source: "start: 2019-11-01T00:00:00Z",
												Start: ast.Position{
													Column: 14,
													Line:   215,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 41,
														Line:   215,
													},
													File:   "gridFilter_test.flux",
													Source: "start: 2019-11-01T00:00:00Z",
													Start: ast.Position{
														Column: 14,
														Line:   215,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 19,
															Line:   215,
														},
														File:   "gridFilter_test.flux",
														Source: "start",
														Start: ast.Position{
															Column: 14,
															Line:   215,
														},
													},
												},
												Name: "start",
											},
											Value: &ast.DateTimeLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 41,
															Line:   215,
														},
														File:   "gridFilter_test.flux",
														Source: "2019-11-01T00:00:00Z",
														Start: ast.Position{
															Column: 21,
															Line:   215,
														},
													},
												},
												Value: parser.MustParseTime("2019-11-01T00:00:00Z"),
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 42,
												Line:   215,
											},
											File:   "gridFilter_test.flux",
											Source: "range(start: 2019-11-01T00:00:00Z)",
											Start: ast.Position{
												Column: 8,
												Line:   215,
											},
										},
									},
									Callee: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 13,
													Line:   215,
												},
												File:   "gridFilter_test.flux",
												Source: "range",
												Start: ast.Position{
													Column: 8,
													Line:   215,
												},
											},
										},
										Name: "range",
									},
								},
							},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 79,
										Line:   216,
									},
									File:   "gridFilter_test.flux",
									Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.gridFilter(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0})",
									Start: ast.Position{
										Column: 3,
										Line:   214,
									},
								},
							},
							Call: &ast.CallExpression{
								Arguments: []ast.Expression{&ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 78,
												Line:   216,
											},
											File:   "gridFilter_test.flux",
											Source: "region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}",
											Start: ast.Position{
												Column: 23,
												Line:   216,
											},
										},
									},
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 78,
													Line:   216,
												},
												File:   "gridFilter_test.flux",
												Source: "region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}",
												Start: ast.Position{
													Column: 23,
													Line:   216,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 29,
														Line:   216,
													},
													File:   "gridFilter_test.flux",
													Source: "region",
													Start: ast.Position{
														Column: 23,
														Line:   216,
													},
												},
											},
											Name: "region",
										},
										Value: &ast.ObjectExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 78,
														Line:   216,
													},
													File:   "gridFilter_test.flux",
													Source: "{lat: 40.7090214, lon: -73.61846, radius: 15.0}",
													Start: ast.Position{
														Column: 31,
														Line:   216,
													},
												},
											},
											Properties: []*ast.Property{&ast.Property{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 47,
															Line:   216,
														},
														File:   "gridFilter_test.flux",
														Source: "lat: 40.7090214",
														Start: ast.Position{
															Column: 32,
															Line:   216,
														},
													},
												},
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 35,
																Line:   216,
															},
															File:   "gridFilter_test.flux",
															Source: "lat",
															Start: ast.Position{
																Column: 32,
																Line:   216,
															},
														},
													},
													Name: "lat",
												},
												Value: &ast.FloatLiteral{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 47,
																Line:   216,
															},
															File:   "gridFilter_test.flux",
															Source: "40.7090214",
															Start: ast.Position{
																Column: 37,
																Line:   216,
															},
														},
													},
													Value: 40.7090214,
												},
											}, &ast.Property{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 63,
															Line:   216,
														},
														File:   "gridFilter_test.flux",
														Source: "lon: -73.61846",
														Start: ast.Position{
															Column: 49,
															Line:   216,
														},
													},
												},
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 52,
																Line:   216,
															},
															File:   "gridFilter_test.flux",
															Source: "lon",
															Start: ast.Position{
																Column: 49,
																Line:   216,
															},
														},
													},
													Name: "lon",
												},
												Value: &ast.UnaryExpression{
													Argument: &ast.FloatLiteral{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 63,
																	Line:   216,
																},
																File:   "gridFilter_test.flux",
																Source: "73.61846",
																Start: ast.Position{
																	Column: 55,
																	Line:   216,
																},
															},
														},
														Value: 73.61846,
													},
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 63,
																Line:   216,
															},
															File:   "gridFilter_test.flux",
															Source: "-73.61846",
															Start: ast.Position{
																Column: 54,
																Line:   216,
															},
														},
													},
													Operator: 6,
												},
											}, &ast.Property{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 77,
															Line:   216,
														},
														File:   "gridFilter_test.flux",
														Source: "radius: 15.0",
														Start: ast.Position{
															Column: 65,
															Line:   216,
														},
													},
												},
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 71,
																Line:   216,
															},
															File:   "gridFilter_test.flux",
															Source: "radius",
															Start: ast.Position{
																Column: 65,
																Line:   216,
															},
														},
													},
													Name: "radius",
												},
												Value: &ast.FloatLiteral{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 77,
																Line:   216,
															},
															File:   "gridFilter_test.flux",
															Source: "15.0",
															Start: ast.Position{
																Column: 73,
																Line:   216,
															},
														},
													},
													Value: 15.0,
												},
											}},
											With: nil,
										},
									}},
									With: nil,
								}},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 79,
											Line:   216,
										},
										File:   "gridFilter_test.flux",
										Source: "geo.gridFilter(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0})",
										Start: ast.Position{
											Column: 8,
											Line:   216,
										},
									},
								},
								Callee: &ast.MemberExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 22,
												Line:   216,
											},
											File:   "gridFilter_test.flux",
											Source: "geo.gridFilter",
											Start: ast.Position{
												Column: 8,
												Line:   216,
											},
										},
									},
									Object: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 11,
													Line:   216,
												},
												File:   "gridFilter_test.flux",
												Source: "geo",
												Start: ast.Position{
													Column: 8,
													Line:   216,
												},
											},
										},
										Name: "geo",
									},
									Property: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 22,
													Line:   216,
												},
												File:   "gridFilter_test.flux",
												Source: "gridFilter",
												Start: ast.Position{
													Column: 12,
													Line:   216,
												},
											},
										},
										Name: "gridFilter",
									},
								},
							},
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 77,
									Line:   217,
								},
								File:   "gridFilter_test.flux",
								Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.gridFilter(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0})\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")",
								Start: ast.Position{
									Column: 3,
									Line:   214,
								},
							},
						},
						Call: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 76,
											Line:   217,
										},
										File:   "gridFilter_test.flux",
										Source: "rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\"",
										Start: ast.Position{
											Column: 14,
											Line:   217,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 30,
												Line:   217,
											},
											File:   "gridFilter_test.flux",
											Source: "rowKey:[\"_time\"]",
											Start: ast.Position{
												Column: 14,
												Line:   217,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 20,
													Line:   217,
												},
												File:   "gridFilter_test.flux",
												Source: "rowKey",
												Start: ast.Position{
													Column: 14,
													Line:   217,
												},
											},
										},
										Name: "rowKey",
									},
									Value: &ast.ArrayExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   217,
												},
												File:   "gridFilter_test.flux",
												Source: "[\"_time\"]",
												Start: ast.Position{
													Column: 21,
													Line:   217,
												},
											},
										},
										Elements: []ast.Expression{&ast.StringLiteral{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 29,
														Line:   217,
													},
													File:   "gridFilter_test.flux",
													Source: "\"_time\"",
													Start: ast.Position{
														Column: 22,
														Line:   217,
													},
												},
											},
											Value: "_time",
										}},
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 53,
												Line:   217,
											},
											File:   "gridFilter_test.flux",
											Source: "columnKey: [\"_field\"]",
											Start: ast.Position{
												Column: 32,
												Line:   217,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 41,
													Line:   217,
												},
												File:   "gridFilter_test.flux",
												Source: "columnKey",
												Start: ast.Position{
													Column: 32,
													Line:   217,
												},
											},
										},
										Name: "columnKey",
									},
									Value: &ast.ArrayExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 53,
													Line:   217,
												},
												File:   "gridFilter_test.flux",
												Source: "[\"_field\"]",
												Start: ast.Position{
													Column: 43,
													Line:   217,
												},
											},
										},
										Elements: []ast.Expression{&ast.StringLiteral{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 52,
														Line:   217,
													},
													File:   "gridFilter_test.flux",
													Source: "\"_field\"",
													Start: ast.Position{
														Column: 44,
														Line:   217,
													},
												},
											},
											Value: "_field",
										}},
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 76,
												Line:   217,
											},
											File:   "gridFilter_test.flux",
											Source: "valueColumn: \"_value\"",
											Start: ast.Position{
												Column: 55,
												Line:   217,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   217,
												},
												File:   "gridFilter_test.flux",
												Source: "valueColumn",
												Start: ast.Position{
													Column: 55,
													Line:   217,
												},
											},
										},
										Name: "valueColumn",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 76,
													Line:   217,
												},
												File:   "gridFilter_test.flux",
												Source: "\"_value\"",
												Start: ast.Position{
													Column: 68,
													Line:   217,
												},
											},
										},
										Value: "_value",
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 77,
										Line:   217,
									},
									File:   "gridFilter_test.flux",
									Source: "pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")",
									Start: ast.Position{
										Column: 8,
										Line:   217,
									},
								},
							},
							Callee: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 13,
											Line:   217,
										},
										File:   "gridFilter_test.flux",
										Source: "pivot",
										Start: ast.Position{
											Column: 8,
											Line:   217,
										},
									},
								},
								Name: "pivot",
							},
						},
					},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   218,
							},
							File:   "gridFilter_test.flux",
							Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.gridFilter(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0})\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> drop(columns: [\"_start\", \"_stop\"])",
							Start: ast.Position{
								Column: 3,
								Line:   214,
							},
						},
					},
					Call: &ast.CallExpression{
						Arguments: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   218,
									},
									File:   "gridFilter_test.flux",
									Source: "columns: [\"_start\", \"_stop\"]",
									Start: ast.Position{
										Column: 13,
										Line:   218,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 41,
											Line:   218,
										},
										File:   "gridFilter_test.flux",
										Source: "columns: [\"_start\", \"_stop\"]",
										Start: ast.Position{
											Column: 13,
											Line:   218,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 20,
												Line:   218,
											},
											File:   "gridFilter_test.flux",
											Source: "columns",
											Start: ast.Position{
												Column: 13,
												Line:   218,
											},
										},
									},
									Name: "columns",
								},
								Value: &ast.ArrayExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 41,
												Line:   218,
											},
											File:   "gridFilter_test.flux",
											Source: "[\"_start\", \"_stop\"]",
											Start: ast.Position{
												Column: 22,
												Line:   218,
											},
										},
									},
									Elements: []ast.Expression{&ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 31,
													Line:   218,
												},
												File:   "gridFilter_test.flux",
												Source: "\"_start\"",
												Start: ast.Position{
													Column: 23,
													Line:   218,
												},
											},
										},
										Value: "_start",
									}, &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 40,
													Line:   218,
												},
												File:   "gridFilter_test.flux",
												Source: "\"_stop\"",
												Start: ast.Position{
													Column: 33,
													Line:   218,
												},
											},
										},
										Value: "_stop",
									}},
								},
							}},
							With: nil,
						}},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   218,
								},
								File:   "gridFilter_test.flux",
								Source: "drop(columns: [\"_start\", \"_stop\"])",
								Start: ast.Position{
									Column: 8,
									Line:   218,
								},
							},
						},
						Callee: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 12,
										Line:   218,
									},
									File:   "gridFilter_test.flux",
									Source: "drop",
									Start: ast.Position{
										Column: 8,
										Line:   218,
									},
								},
							},
							Name: "drop",
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 25,
								Line:   213,
							},
							File:   "gridFilter_test.flux",
							Source: "table=<-",
							Start: ast.Position{
								Column: 17,
								Line:   213,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 22,
									Line:   213,
								},
								File:   "gridFilter_test.flux",
								Source: "table",
								Start: ast.Position{
									Column: 17,
									Line:   213,
								},
							},
						},
						Name: "table",
					},
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 25,
								Line:   213,
							},
							File:   "gridFilter_test.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 23,
								Line:   213,
							},
						},
					}},
				}},
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 100,
							Line:   220,
						},
						File:   "gridFilter_test.flux",
						Source: "_gridFilter = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_gridFilter})",
						Start: ast.Position{
							Column: 6,
							Line:   219,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 17,
								Line:   219,
							},
							File:   "gridFilter_test.flux",
							Source: "_gridFilter",
							Start: ast.Position{
								Column: 6,
								Line:   219,
							},
						},
					},
					Name: "_gridFilter",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 100,
								Line:   220,
							},
							File:   "gridFilter_test.flux",
							Source: "() =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_gridFilter})",
							Start: ast.Position{
								Column: 20,
								Line:   219,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 100,
									Line:   220,
								},
								File:   "gridFilter_test.flux",
								Source: "({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_gridFilter})",
								Start: ast.Position{
									Column: 2,
									Line:   220,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 99,
										Line:   220,
									},
									File:   "gridFilter_test.flux",
									Source: "{input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_gridFilter}",
									Start: ast.Position{
										Column: 3,
										Line:   220,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 43,
											Line:   220,
										},
										File:   "gridFilter_test.flux",
										Source: "input: testing.loadStorage(csv: inData)",
										Start: ast.Position{
											Column: 4,
											Line:   220,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 9,
												Line:   220,
											},
											File:   "gridFilter_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 4,
												Line:   220,
											},
										},
									},
									Name: "input",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   220,
												},
												File:   "gridFilter_test.flux",
												Source: "csv: inData",
												Start: ast.Position{
													Column: 31,
													Line:   220,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 42,
														Line:   220,
													},
													File:   "gridFilter_test.flux",
													Source: "csv: inData",
													Start: ast.Position{
														Column: 31,
														Line:   220,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 34,
															Line:   220,
														},
														File:   "gridFilter_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 31,
															Line:   220,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 42,
															Line:   220,
														},
														File:   "gridFilter_test.flux",
														Source: "inData",
														Start: ast.Position{
															Column: 36,
															Line:   220,
														},
													},
												},
												Name: "inData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 43,
												Line:   220,
											},
											File:   "gridFilter_test.flux",
											Source: "testing.loadStorage(csv: inData)",
											Start: ast.Position{
												Column: 11,
												Line:   220,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   220,
												},
												File:   "gridFilter_test.flux",
												Source: "testing.loadStorage",
												Start: ast.Position{
													Column: 11,
													Line:   220,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   220,
													},
													File:   "gridFilter_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 11,
														Line:   220,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 30,
														Line:   220,
													},
													File:   "gridFilter_test.flux",
													Source: "loadStorage",
													Start: ast.Position{
														Column: 19,
														Line:   220,
													},
												},
											},
											Name: "loadStorage",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 80,
											Line:   220,
										},
										File:   "gridFilter_test.flux",
										Source: "want: testing.loadMem(csv: outData)",
										Start: ast.Position{
											Column: 45,
											Line:   220,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 49,
												Line:   220,
											},
											File:   "gridFilter_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 45,
												Line:   220,
											},
										},
									},
									Name: "want",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 79,
													Line:   220,
												},
												File:   "gridFilter_test.flux",
												Source: "csv: outData",
												Start: ast.Position{
													Column: 67,
													Line:   220,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 79,
														Line:   220,
													},
													File:   "gridFilter_test.flux",
													Source: "csv: outData",
													Start: ast.Position{
														Column: 67,
														Line:   220,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 70,
															Line:   220,
														},
														File:   "gridFilter_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 67,
															Line:   220,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 79,
															Line:   220,
														},
														File:   "gridFilter_test.flux",
														Source: "outData",
														Start: ast.Position{
															Column: 72,
															Line:   220,
														},
													},
												},
												Name: "outData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 80,
												Line:   220,
											},
											File:   "gridFilter_test.flux",
											Source: "testing.loadMem(csv: outData)",
											Start: ast.Position{
												Column: 51,
												Line:   220,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   220,
												},
												File:   "gridFilter_test.flux",
												Source: "testing.loadMem",
												Start: ast.Position{
													Column: 51,
													Line:   220,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 58,
														Line:   220,
													},
													File:   "gridFilter_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 51,
														Line:   220,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 66,
														Line:   220,
													},
													File:   "gridFilter_test.flux",
													Source: "loadMem",
													Start: ast.Position{
														Column: 59,
														Line:   220,
													},
												},
											},
											Name: "loadMem",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 98,
											Line:   220,
										},
										File:   "gridFilter_test.flux",
										Source: "fn: t_gridFilter",
										Start: ast.Position{
											Column: 82,
											Line:   220,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 84,
												Line:   220,
											},
											File:   "gridFilter_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 82,
												Line:   220,
											},
										},
									},
									Name: "fn",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 98,
												Line:   220,
											},
											File:   "gridFilter_test.flux",
											Source: "t_gridFilter",
											Start: ast.Position{
												Column: 86,
												Line:   220,
											},
										},
									},
									Name: "t_gridFilter",
								},
							}},
							With: nil,
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 100,
						Line:   220,
					},
					File:   "gridFilter_test.flux",
					Source: "test _gridFilter = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_gridFilter})",
					Start: ast.Position{
						Column: 1,
						Line:   219,
					},
				},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 26,
						Line:   3,
					},
					File:   "gridFilter_test.flux",
					Source: "import \"experimental/geo\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 26,
							Line:   3,
						},
						File:   "gridFilter_test.flux",
						Source: "\"experimental/geo\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "experimental/geo",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   4,
					},
					File:   "gridFilter_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   4,
						},
						File:   "gridFilter_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "testing",
			},
		}},
		Metadata: "parser-type=go",
		Name:     "gridFilter_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   1,
					},
					File:   "gridFilter_test.flux",
					Source: "package geo_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   1,
						},
						File:   "gridFilter_test.flux",
						Source: "geo_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "geo_test",
			},
		},
	}, &ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 101,
					Line:   209,
				},
				File:   "groupByArea_test.flux",
				Source: "package geo_test\n\nimport \"experimental/geo\"\nimport \"testing\"\n\noption now = () => (2030-01-01T00:00:00Z)\n\ninData = \"\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n\"\n\noutData = \"\n#group,false,false,false,true,false,false,false,false,false,false,false,false\n#datatype,string,long,string,string,string,string,dateTime:RFC3339,double,double,double,long,double\n#default,_result,,,,,,,,,,,\n,result,table,s2_cell_id,ci9,_measurement,_pt,_time,dist,lat,lon,tid,tip\n,,0,89c2594,89c25c,taxi,end,2019-11-01T00:07:18.082153551Z,1.2,40.7122,-73.951332,1572566409947779410,0\n,,0,89c25b4,89c25c,taxi,end,2019-11-01T00:07:41.235010051Z,1.3,40.671928,-73.962692,1572566426666145821,1.75\n,,0,89c25bc,89c25c,taxi,start,2019-11-01T00:00:09.94777941Z,,40.712173,-73.963913,1572566409947779410,\n,,0,89c25bc,89c25c,taxi,start,2019-11-01T00:00:26.666145821Z,,40.688564,-73.965881,1572566426666145821,\n,,1,89c261c,89c264,taxi,end,2019-11-01T13:41:59.331776148Z,1.3,40.725647,-73.752579,1572615165632969758,0\n,,1,89c2624,89c264,taxi,end,2019-11-01T00:33:07.54916732Z,9.7,40.728077,-73.716583,1572567458287113937,5\n,,1,89c2624,89c264,taxi,start,2019-11-01T13:32:45.632969758Z,,40.733585,-73.737175,1572615165632969758,\n,,1,89c2664,89c264,taxi,start,2019-11-01T00:17:38.287113937Z,,40.645245,-73.776665,1572567458287113937,\n\"\n\nt_groupByArea = (table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.toRows()\n    |> geo.groupByArea(newColumn: \"ci9\", level: 9)\n    |> drop(columns: [\"_start\", \"_stop\"])\ntest _groupByArea = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_groupByArea})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   6,
						},
						File:   "groupByArea_test.flux",
						Source: "now = () => (2030-01-01T00:00:00Z)",
						Start: ast.Position{
							Column: 8,
							Line:   6,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   6,
							},
							File:   "groupByArea_test.flux",
							Source: "now",
							Start: ast.Position{
								Column: 8,
								Line:   6,
							},
						},
					},
					Name: "now",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   6,
							},
							File:   "groupByArea_test.flux",
							Source: "() => (2030-01-01T00:00:00Z)",
							Start: ast.Position{
								Column: 14,
								Line:   6,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   6,
								},
								File:   "groupByArea_test.flux",
								Source: "(2030-01-01T00:00:00Z)",
								Start: ast.Position{
									Column: 20,
									Line:   6,
								},
							},
						},
						Expression: &ast.DateTimeLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   6,
									},
									File:   "groupByArea_test.flux",
									Source: "2030-01-01T00:00:00Z",
									Start: ast.Position{
										Column: 21,
										Line:   6,
									},
								},
							},
							Value: parser.MustParseTime("2030-01-01T00:00:00Z"),
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   6,
					},
					File:   "groupByArea_test.flux",
					Source: "option now = () => (2030-01-01T00:00:00Z)",
					Start: ast.Position{
						Column: 1,
						Line:   6,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   185,
					},
					File:   "groupByArea_test.flux",
					Source: "inData = \"\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   8,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 7,
							Line:   8,
						},
						File:   "groupByArea_test.flux",
						Source: "inData",
						Start: ast.Position{
							Column: 1,
							Line:   8,
						},
					},
				},
				Name: "inData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   185,
						},
						File:   "groupByArea_test.flux",
						Source: "\"\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n\"",
						Start: ast.Position{
							Column: 10,
							Line:   8,
						},
					},
				},
				Value: "\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   200,
					},
					File:   "groupByArea_test.flux",
					Source: "outData = \"\n#group,false,false,false,true,false,false,false,false,false,false,false,false\n#datatype,string,long,string,string,string,string,dateTime:RFC3339,double,double,double,long,double\n#default,_result,,,,,,,,,,,\n,result,table,s2_cell_id,ci9,_measurement,_pt,_time,dist,lat,lon,tid,tip\n,,0,89c2594,89c25c,taxi,end,2019-11-01T00:07:18.082153551Z,1.2,40.7122,-73.951332,1572566409947779410,0\n,,0,89c25b4,89c25c,taxi,end,2019-11-01T00:07:41.235010051Z,1.3,40.671928,-73.962692,1572566426666145821,1.75\n,,0,89c25bc,89c25c,taxi,start,2019-11-01T00:00:09.94777941Z,,40.712173,-73.963913,1572566409947779410,\n,,0,89c25bc,89c25c,taxi,start,2019-11-01T00:00:26.666145821Z,,40.688564,-73.965881,1572566426666145821,\n,,1,89c261c,89c264,taxi,end,2019-11-01T13:41:59.331776148Z,1.3,40.725647,-73.752579,1572615165632969758,0\n,,1,89c2624,89c264,taxi,end,2019-11-01T00:33:07.54916732Z,9.7,40.728077,-73.716583,1572567458287113937,5\n,,1,89c2624,89c264,taxi,start,2019-11-01T13:32:45.632969758Z,,40.733585,-73.737175,1572615165632969758,\n,,1,89c2664,89c264,taxi,start,2019-11-01T00:17:38.287113937Z,,40.645245,-73.776665,1572567458287113937,\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   187,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 8,
							Line:   187,
						},
						File:   "groupByArea_test.flux",
						Source: "outData",
						Start: ast.Position{
							Column: 1,
							Line:   187,
						},
					},
				},
				Name: "outData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   200,
						},
						File:   "groupByArea_test.flux",
						Source: "\"\n#group,false,false,false,true,false,false,false,false,false,false,false,false\n#datatype,string,long,string,string,string,string,dateTime:RFC3339,double,double,double,long,double\n#default,_result,,,,,,,,,,,\n,result,table,s2_cell_id,ci9,_measurement,_pt,_time,dist,lat,lon,tid,tip\n,,0,89c2594,89c25c,taxi,end,2019-11-01T00:07:18.082153551Z,1.2,40.7122,-73.951332,1572566409947779410,0\n,,0,89c25b4,89c25c,taxi,end,2019-11-01T00:07:41.235010051Z,1.3,40.671928,-73.962692,1572566426666145821,1.75\n,,0,89c25bc,89c25c,taxi,start,2019-11-01T00:00:09.94777941Z,,40.712173,-73.963913,1572566409947779410,\n,,0,89c25bc,89c25c,taxi,start,2019-11-01T00:00:26.666145821Z,,40.688564,-73.965881,1572566426666145821,\n,,1,89c261c,89c264,taxi,end,2019-11-01T13:41:59.331776148Z,1.3,40.725647,-73.752579,1572615165632969758,0\n,,1,89c2624,89c264,taxi,end,2019-11-01T00:33:07.54916732Z,9.7,40.728077,-73.716583,1572567458287113937,5\n,,1,89c2624,89c264,taxi,start,2019-11-01T13:32:45.632969758Z,,40.733585,-73.737175,1572615165632969758,\n,,1,89c2664,89c264,taxi,start,2019-11-01T00:17:38.287113937Z,,40.645245,-73.776665,1572567458287113937,\n\"",
						Start: ast.Position{
							Column: 11,
							Line:   187,
						},
					},
				},
				Value: "\n#group,false,false,false,true,false,false,false,false,false,false,false,false\n#datatype,string,long,string,string,string,string,dateTime:RFC3339,double,double,double,long,double\n#default,_result,,,,,,,,,,,\n,result,table,s2_cell_id,ci9,_measurement,_pt,_time,dist,lat,lon,tid,tip\n,,0,89c2594,89c25c,taxi,end,2019-11-01T00:07:18.082153551Z,1.2,40.7122,-73.951332,1572566409947779410,0\n,,0,89c25b4,89c25c,taxi,end,2019-11-01T00:07:41.235010051Z,1.3,40.671928,-73.962692,1572566426666145821,1.75\n,,0,89c25bc,89c25c,taxi,start,2019-11-01T00:00:09.94777941Z,,40.712173,-73.963913,1572566409947779410,\n,,0,89c25bc,89c25c,taxi,start,2019-11-01T00:00:26.666145821Z,,40.688564,-73.965881,1572566426666145821,\n,,1,89c261c,89c264,taxi,end,2019-11-01T13:41:59.331776148Z,1.3,40.725647,-73.752579,1572615165632969758,0\n,,1,89c2624,89c264,taxi,end,2019-11-01T00:33:07.54916732Z,9.7,40.728077,-73.716583,1572567458287113937,5\n,,1,89c2624,89c264,taxi,start,2019-11-01T13:32:45.632969758Z,,40.733585,-73.737175,1572615165632969758,\n,,1,89c2664,89c264,taxi,start,2019-11-01T00:17:38.287113937Z,,40.645245,-73.776665,1572567458287113937,\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   207,
					},
					File:   "groupByArea_test.flux",
					Source: "t_groupByArea = (table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.toRows()\n    |> geo.groupByArea(newColumn: \"ci9\", level: 9)\n    |> drop(columns: [\"_start\", \"_stop\"])",
					Start: ast.Position{
						Column: 1,
						Line:   202,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 14,
							Line:   202,
						},
						File:   "groupByArea_test.flux",
						Source: "t_groupByArea",
						Start: ast.Position{
							Column: 1,
							Line:   202,
						},
					},
				},
				Name: "t_groupByArea",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   207,
						},
						File:   "groupByArea_test.flux",
						Source: "(table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.toRows()\n    |> geo.groupByArea(newColumn: \"ci9\", level: 9)\n    |> drop(columns: [\"_start\", \"_stop\"])",
						Start: ast.Position{
							Column: 17,
							Line:   202,
						},
					},
				},
				Body: &ast.PipeExpression{
					Argument: &ast.PipeExpression{
						Argument: &ast.PipeExpression{
							Argument: &ast.PipeExpression{
								Argument: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 8,
												Line:   203,
											},
											File:   "groupByArea_test.flux",
											Source: "table",
											Start: ast.Position{
												Column: 3,
												Line:   203,
											},
										},
									},
									Name: "table",
								},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 42,
											Line:   204,
										},
										File:   "groupByArea_test.flux",
										Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)",
										Start: ast.Position{
											Column: 3,
											Line:   203,
										},
									},
								},
								Call: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 41,
													Line:   204,
												},
												File:   "groupByArea_test.flux",
												Source: "start: 2019-11-01T00:00:00Z",
												Start: ast.Position{
													Column: 14,
													Line:   204,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 41,
														Line:   204,
													},
													File:   "groupByArea_test.flux",
													Source: "start: 2019-11-01T00:00:00Z",
													Start: ast.Position{
														Column: 14,
														Line:   204,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 19,
															Line:   204,
														},
														File:   "groupByArea_test.flux",
														Source: "start",
														Start: ast.Position{
															Column: 14,
															Line:   204,
														},
													},
												},
												Name: "start",
											},
											Value: &ast.DateTimeLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 41,
															Line:   204,
														},
														File:   "groupByArea_test.flux",
														Source: "2019-11-01T00:00:00Z",
														Start: ast.Position{
															Column: 21,
															Line:   204,
														},
													},
												},
												Value: parser.MustParseTime("2019-11-01T00:00:00Z"),
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 42,
												Line:   204,
											},
											File:   "groupByArea_test.flux",
											Source: "range(start: 2019-11-01T00:00:00Z)",
											Start: ast.Position{
												Column: 8,
												Line:   204,
											},
										},
									},
									Callee: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 13,
													Line:   204,
												},
												File:   "groupByArea_test.flux",
												Source: "range",
												Start: ast.Position{
													Column: 8,
													Line:   204,
												},
											},
										},
										Name: "range",
									},
								},
							},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 20,
										Line:   205,
									},
									File:   "groupByArea_test.flux",
									Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.toRows()",
									Start: ast.Position{
										Column: 3,
										Line:   203,
									},
								},
							},
							Call: &ast.CallExpression{
								Arguments: nil,
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 20,
											Line:   205,
										},
										File:   "groupByArea_test.flux",
										Source: "geo.toRows()",
										Start: ast.Position{
											Column: 8,
											Line:   205,
										},
									},
								},
								Callee: &ast.MemberExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 18,
												Line:   205,
											},
											File:   "groupByArea_test.flux",
											Source: "geo.toRows",
											Start: ast.Position{
												Column: 8,
												Line:   205,
											},
										},
									},
									Object: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 11,
													Line:   205,
												},
												File:   "groupByArea_test.flux",
												Source: "geo",
												Start: ast.Position{
													Column: 8,
													Line:   205,
												},
											},
										},
										Name: "geo",
									},
									Property: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 18,
													Line:   205,
												},
												File:   "groupByArea_test.flux",
												Source: "toRows",
												Start: ast.Position{
													Column: 12,
													Line:   205,
												},
											},
										},
										Name: "toRows",
									},
								},
							},
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 51,
									Line:   206,
								},
								File:   "groupByArea_test.flux",
								Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.toRows()\n    |> geo.groupByArea(newColumn: \"ci9\", level: 9)",
								Start: ast.Position{
									Column: 3,
									Line:   203,
								},
							},
						},
						Call: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 50,
											Line:   206,
										},
										File:   "groupByArea_test.flux",
										Source: "newColumn: \"ci9\", level: 9",
										Start: ast.Position{
											Column: 24,
											Line:   206,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 40,
												Line:   206,
											},
											File:   "groupByArea_test.flux",
											Source: "newColumn: \"ci9\"",
											Start: ast.Position{
												Column: 24,
												Line:   206,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 33,
													Line:   206,
												},
												File:   "groupByArea_test.flux",
												Source: "newColumn",
												Start: ast.Position{
													Column: 24,
													Line:   206,
												},
											},
										},
										Name: "newColumn",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 40,
													Line:   206,
												},
												File:   "groupByArea_test.flux",
												Source: "\"ci9\"",
												Start: ast.Position{
													Column: 35,
													Line:   206,
												},
											},
										},
										Value: "ci9",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 50,
												Line:   206,
											},
											File:   "groupByArea_test.flux",
											Source: "level: 9",
											Start: ast.Position{
												Column: 42,
												Line:   206,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 47,
													Line:   206,
												},
												File:   "groupByArea_test.flux",
												Source: "level",
												Start: ast.Position{
													Column: 42,
													Line:   206,
												},
											},
										},
										Name: "level",
									},
									Value: &ast.IntegerLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 50,
													Line:   206,
												},
												File:   "groupByArea_test.flux",
												Source: "9",
												Start: ast.Position{
													Column: 49,
													Line:   206,
												},
											},
										},
										Value: int64(9),
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 51,
										Line:   206,
									},
									File:   "groupByArea_test.flux",
									Source: "geo.groupByArea(newColumn: \"ci9\", level: 9)",
									Start: ast.Position{
										Column: 8,
										Line:   206,
									},
								},
							},
							Callee: &ast.MemberExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 23,
											Line:   206,
										},
										File:   "groupByArea_test.flux",
										Source: "geo.groupByArea",
										Start: ast.Position{
											Column: 8,
											Line:   206,
										},
									},
								},
								Object: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 11,
												Line:   206,
											},
											File:   "groupByArea_test.flux",
											Source: "geo",
											Start: ast.Position{
												Column: 8,
												Line:   206,
											},
										},
									},
									Name: "geo",
								},
								Property: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 23,
												Line:   206,
											},
											File:   "groupByArea_test.flux",
											Source: "groupByArea",
											Start: ast.Position{
												Column: 12,
												Line:   206,
											},
										},
									},
									Name: "groupByArea",
								},
							},
						},
					},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   207,
							},
							File:   "groupByArea_test.flux",
							Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.toRows()\n    |> geo.groupByArea(newColumn: \"ci9\", level: 9)\n    |> drop(columns: [\"_start\", \"_stop\"])",
							Start: ast.Position{
								Column: 3,
								Line:   203,
							},
						},
					},
					Call: &ast.CallExpression{
						Arguments: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   207,
									},
									File:   "groupByArea_test.flux",
									Source: "columns: [\"_start\", \"_stop\"]",
									Start: ast.Position{
										Column: 13,
										Line:   207,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 41,
											Line:   207,
										},
										File:   "groupByArea_test.flux",
										Source: "columns: [\"_start\", \"_stop\"]",
										Start: ast.Position{
											Column: 13,
											Line:   207,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 20,
												Line:   207,
											},
											File:   "groupByArea_test.flux",
											Source: "columns",
											Start: ast.Position{
												Column: 13,
												Line:   207,
											},
										},
									},
									Name: "columns",
								},
								Value: &ast.ArrayExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 41,
												Line:   207,
											},
											File:   "groupByArea_test.flux",
											Source: "[\"_start\", \"_stop\"]",
											Start: ast.Position{
												Column: 22,
												Line:   207,
											},
										},
									},
									Elements: []ast.Expression{&ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 31,
													Line:   207,
												},
												File:   "groupByArea_test.flux",
												Source: "\"_start\"",
												Start: ast.Position{
													Column: 23,
													Line:   207,
												},
											},
										},
										Value: "_start",
									}, &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 40,
													Line:   207,
												},
												File:   "groupByArea_test.flux",
												Source: "\"_stop\"",
												Start: ast.Position{
													Column: 33,
													Line:   207,
												},
											},
										},
										Value: "_stop",
									}},
								},
							}},
							With: nil,
						}},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   207,
								},
								File:   "groupByArea_test.flux",
								Source: "drop(columns: [\"_start\", \"_stop\"])",
								Start: ast.Position{
									Column: 8,
									Line:   207,
								},
							},
						},
						Callee: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 12,
										Line:   207,
									},
									File:   "groupByArea_test.flux",
									Source: "drop",
									Start: ast.Position{
										Column: 8,
										Line:   207,
									},
								},
							},
							Name: "drop",
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 26,
								Line:   202,
							},
							File:   "groupByArea_test.flux",
							Source: "table=<-",
							Start: ast.Position{
								Column: 18,
								Line:   202,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 23,
									Line:   202,
								},
								File:   "groupByArea_test.flux",
								Source: "table",
								Start: ast.Position{
									Column: 18,
									Line:   202,
								},
							},
						},
						Name: "table",
					},
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 26,
								Line:   202,
							},
							File:   "groupByArea_test.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 24,
								Line:   202,
							},
						},
					}},
				}},
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 101,
							Line:   209,
						},
						File:   "groupByArea_test.flux",
						Source: "_groupByArea = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_groupByArea})",
						Start: ast.Position{
							Column: 6,
							Line:   208,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 18,
								Line:   208,
							},
							File:   "groupByArea_test.flux",
							Source: "_groupByArea",
							Start: ast.Position{
								Column: 6,
								Line:   208,
							},
						},
					},
					Name: "_groupByArea",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 101,
								Line:   209,
							},
							File:   "groupByArea_test.flux",
							Source: "() =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_groupByArea})",
							Start: ast.Position{
								Column: 21,
								Line:   208,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 101,
									Line:   209,
								},
								File:   "groupByArea_test.flux",
								Source: "({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_groupByArea})",
								Start: ast.Position{
									Column: 2,
									Line:   209,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 100,
										Line:   209,
									},
									File:   "groupByArea_test.flux",
									Source: "{input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_groupByArea}",
									Start: ast.Position{
										Column: 3,
										Line:   209,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 43,
											Line:   209,
										},
										File:   "groupByArea_test.flux",
										Source: "input: testing.loadStorage(csv: inData)",
										Start: ast.Position{
											Column: 4,
											Line:   209,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 9,
												Line:   209,
											},
											File:   "groupByArea_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 4,
												Line:   209,
											},
										},
									},
									Name: "input",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   209,
												},
												File:   "groupByArea_test.flux",
												Source: "csv: inData",
												Start: ast.Position{
													Column: 31,
													Line:   209,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 42,
														Line:   209,
													},
													File:   "groupByArea_test.flux",
													Source: "csv: inData",
													Start: ast.Position{
														Column: 31,
														Line:   209,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 34,
															Line:   209,
														},
														File:   "groupByArea_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 31,
															Line:   209,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 42,
															Line:   209,
														},
														File:   "groupByArea_test.flux",
														Source: "inData",
														Start: ast.Position{
															Column: 36,
															Line:   209,
														},
													},
												},
												Name: "inData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 43,
												Line:   209,
											},
											File:   "groupByArea_test.flux",
											Source: "testing.loadStorage(csv: inData)",
											Start: ast.Position{
												Column: 11,
												Line:   209,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   209,
												},
												File:   "groupByArea_test.flux",
												Source: "testing.loadStorage",
												Start: ast.Position{
													Column: 11,
													Line:   209,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   209,
													},
													File:   "groupByArea_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 11,
														Line:   209,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 30,
														Line:   209,
													},
													File:   "groupByArea_test.flux",
													Source: "loadStorage",
													Start: ast.Position{
														Column: 19,
														Line:   209,
													},
												},
											},
											Name: "loadStorage",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 80,
											Line:   209,
										},
										File:   "groupByArea_test.flux",
										Source: "want: testing.loadMem(csv: outData)",
										Start: ast.Position{
											Column: 45,
											Line:   209,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 49,
												Line:   209,
											},
											File:   "groupByArea_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 45,
												Line:   209,
											},
										},
									},
									Name: "want",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 79,
													Line:   209,
												},
												File:   "groupByArea_test.flux",
												Source: "csv: outData",
												Start: ast.Position{
													Column: 67,
													Line:   209,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 79,
														Line:   209,
													},
													File:   "groupByArea_test.flux",
													Source: "csv: outData",
													Start: ast.Position{
														Column: 67,
														Line:   209,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 70,
															Line:   209,
														},
														File:   "groupByArea_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 67,
															Line:   209,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 79,
															Line:   209,
														},
														File:   "groupByArea_test.flux",
														Source: "outData",
														Start: ast.Position{
															Column: 72,
															Line:   209,
														},
													},
												},
												Name: "outData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 80,
												Line:   209,
											},
											File:   "groupByArea_test.flux",
											Source: "testing.loadMem(csv: outData)",
											Start: ast.Position{
												Column: 51,
												Line:   209,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   209,
												},
												File:   "groupByArea_test.flux",
												Source: "testing.loadMem",
												Start: ast.Position{
													Column: 51,
													Line:   209,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 58,
														Line:   209,
													},
													File:   "groupByArea_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 51,
														Line:   209,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 66,
														Line:   209,
													},
													File:   "groupByArea_test.flux",
													Source: "loadMem",
													Start: ast.Position{
														Column: 59,
														Line:   209,
													},
												},
											},
											Name: "loadMem",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 99,
											Line:   209,
										},
										File:   "groupByArea_test.flux",
										Source: "fn: t_groupByArea",
										Start: ast.Position{
											Column: 82,
											Line:   209,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 84,
												Line:   209,
											},
											File:   "groupByArea_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 82,
												Line:   209,
											},
										},
									},
									Name: "fn",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 99,
												Line:   209,
											},
											File:   "groupByArea_test.flux",
											Source: "t_groupByArea",
											Start: ast.Position{
												Column: 86,
												Line:   209,
											},
										},
									},
									Name: "t_groupByArea",
								},
							}},
							With: nil,
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 101,
						Line:   209,
					},
					File:   "groupByArea_test.flux",
					Source: "test _groupByArea = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_groupByArea})",
					Start: ast.Position{
						Column: 1,
						Line:   208,
					},
				},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 26,
						Line:   3,
					},
					File:   "groupByArea_test.flux",
					Source: "import \"experimental/geo\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 26,
							Line:   3,
						},
						File:   "groupByArea_test.flux",
						Source: "\"experimental/geo\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "experimental/geo",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   4,
					},
					File:   "groupByArea_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   4,
						},
						File:   "groupByArea_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "testing",
			},
		}},
		Metadata: "parser-type=go",
		Name:     "groupByArea_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   1,
					},
					File:   "groupByArea_test.flux",
					Source: "package geo_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   1,
						},
						File:   "groupByArea_test.flux",
						Source: "geo_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "geo_test",
			},
		},
	}, &ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 109,
					Line:   98,
				},
				File:   "shapeDataWithFilter_test.flux",
				Source: "package geo_test\n\nimport \"experimental/geo\"\nimport \"testing\"\n\noption now = () => (2030-01-01T00:00:00Z)\n\ninData = \"\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,string,double\n#group,false,false,false,true,true,true,true,true,false\n#default,,,,,,,,,\n,result,table,_time,_start,_stop,_measurement,id,_field,_value\n,,0,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.03383\n,,0,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.14267\n,,0,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16667\n,,0,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.18183\n,,0,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17367\n,,0,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.2935\n,,0,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.3485\n,,0,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17167\n,,0,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.14683\n,,0,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17367\n,,0,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17433\n,,0,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.1595\n,,0,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16\n,,0,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17433\n,,1,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.09867\n,,1,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17567\n,,1,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16933\n,,1,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17\n,,1,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.187\n,,1,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18217\n,,1,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.15833\n,,1,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.15083\n,,1,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.181\n,,1,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16883\n,,1,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16883\n,,1,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1815\n,,1,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1845\n,,1,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17433\n,,1,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18667\n,,1,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18167\n,,1,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16733\n,,1,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1665\n,,1,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16817\n,,1,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18417\n\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,string,string\n#group,false,false,false,true,true,true,true,true,false\n#default,,,,,,,,,\n,result,table,_time,_start,_stop,_measurement,id,_field,_value\n,,2,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n\"\n\noutData = \"\n#group,false,false,true,true,true,false,false,true,false,false,true\n#datatype,string,long,string,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,double,double,string\n#default,_result,,,,,,,,,,\n,result,table,_measurement,_start,_stop,_time,control,id,lat,lon,s2_cell_id\n,,0,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T07:00:00Z,ctrlField,91916A,21.03383,39.09867,15c309\n,,1,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-02T04:00:00Z,ctrlField,91916A,21.14267,39.17567,15c3a9\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T04:00:00Z,ctrlField,91916A,21.14683,39.17433,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T04:00:00Z,ctrlField,91916A,21.1595,39.16733,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T07:00:00Z,ctrlField,91916A,21.16,39.1665,15c3af\n\"\n\nt_shapeDataWithFilter = (table=<-) =>\n  table\n    |> range(start: 2019-01-01T00:00:00Z)\n    |> geo.shapeData(latField: \"latitude\", lonField: \"longitude\", level: 10)\n    |> geo.filterRows(region: {lat: 21.0, lon: 39.0, radius: 25.0})\ntest _shapeDataWithFilter = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_shapeDataWithFilter})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   6,
						},
						File:   "shapeDataWithFilter_test.flux",
						Source: "now = () => (2030-01-01T00:00:00Z)",
						Start: ast.Position{
							Column: 8,
							Line:   6,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   6,
							},
							File:   "shapeDataWithFilter_test.flux",
							Source: "now",
							Start: ast.Position{
								Column: 8,
								Line:   6,
							},
						},
					},
					Name: "now",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   6,
							},
							File:   "shapeDataWithFilter_test.flux",
							Source: "() => (2030-01-01T00:00:00Z)",
							Start: ast.Position{
								Column: 14,
								Line:   6,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   6,
								},
								File:   "shapeDataWithFilter_test.flux",
								Source: "(2030-01-01T00:00:00Z)",
								Start: ast.Position{
									Column: 20,
									Line:   6,
								},
							},
						},
						Expression: &ast.DateTimeLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   6,
									},
									File:   "shapeDataWithFilter_test.flux",
									Source: "2030-01-01T00:00:00Z",
									Start: ast.Position{
										Column: 21,
										Line:   6,
									},
								},
							},
							Value: parser.MustParseTime("2030-01-01T00:00:00Z"),
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   6,
					},
					File:   "shapeDataWithFilter_test.flux",
					Source: "option now = () => (2030-01-01T00:00:00Z)",
					Start: ast.Position{
						Column: 1,
						Line:   6,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   78,
					},
					File:   "shapeDataWithFilter_test.flux",
					Source: "inData = \"\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,string,double\n#group,false,false,false,true,true,true,true,true,false\n#default,,,,,,,,,\n,result,table,_time,_start,_stop,_measurement,id,_field,_value\n,,0,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.03383\n,,0,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.14267\n,,0,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16667\n,,0,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.18183\n,,0,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17367\n,,0,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.2935\n,,0,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.3485\n,,0,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17167\n,,0,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.14683\n,,0,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17367\n,,0,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17433\n,,0,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.1595\n,,0,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16\n,,0,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17433\n,,1,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.09867\n,,1,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17567\n,,1,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16933\n,,1,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17\n,,1,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.187\n,,1,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18217\n,,1,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.15833\n,,1,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.15083\n,,1,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.181\n,,1,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16883\n,,1,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16883\n,,1,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1815\n,,1,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1845\n,,1,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17433\n,,1,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18667\n,,1,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18167\n,,1,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16733\n,,1,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1665\n,,1,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16817\n,,1,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18417\n\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,string,string\n#group,false,false,false,true,true,true,true,true,false\n#default,,,,,,,,,\n,result,table,_time,_start,_stop,_measurement,id,_field,_value\n,,2,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   8,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 7,
							Line:   8,
						},
						File:   "shapeDataWithFilter_test.flux",
						Source: "inData",
						Start: ast.Position{
							Column: 1,
							Line:   8,
						},
					},
				},
				Name: "inData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   78,
						},
						File:   "shapeDataWithFilter_test.flux",
						Source: "\"\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,string,double\n#group,false,false,false,true,true,true,true,true,false\n#default,,,,,,,,,\n,result,table,_time,_start,_stop,_measurement,id,_field,_value\n,,0,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.03383\n,,0,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.14267\n,,0,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16667\n,,0,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.18183\n,,0,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17367\n,,0,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.2935\n,,0,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.3485\n,,0,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17167\n,,0,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.14683\n,,0,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17367\n,,0,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17433\n,,0,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.1595\n,,0,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16\n,,0,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17433\n,,1,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.09867\n,,1,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17567\n,,1,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16933\n,,1,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17\n,,1,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.187\n,,1,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18217\n,,1,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.15833\n,,1,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.15083\n,,1,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.181\n,,1,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16883\n,,1,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16883\n,,1,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1815\n,,1,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1845\n,,1,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17433\n,,1,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18667\n,,1,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18167\n,,1,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16733\n,,1,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1665\n,,1,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16817\n,,1,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18417\n\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,string,string\n#group,false,false,false,true,true,true,true,true,false\n#default,,,,,,,,,\n,result,table,_time,_start,_stop,_measurement,id,_field,_value\n,,2,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n\"",
						Start: ast.Position{
							Column: 10,
							Line:   8,
						},
					},
				},
				Value: "\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,string,double\n#group,false,false,false,true,true,true,true,true,false\n#default,,,,,,,,,\n,result,table,_time,_start,_stop,_measurement,id,_field,_value\n,,0,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.03383\n,,0,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.14267\n,,0,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16667\n,,0,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.18183\n,,0,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17367\n,,0,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.2935\n,,0,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.3485\n,,0,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17167\n,,0,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.14683\n,,0,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17367\n,,0,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17433\n,,0,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.1595\n,,0,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16\n,,0,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17433\n,,1,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.09867\n,,1,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17567\n,,1,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16933\n,,1,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17\n,,1,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.187\n,,1,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18217\n,,1,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.15833\n,,1,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.15083\n,,1,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.181\n,,1,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16883\n,,1,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16883\n,,1,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1815\n,,1,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1845\n,,1,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17433\n,,1,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18667\n,,1,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18167\n,,1,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16733\n,,1,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1665\n,,1,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16817\n,,1,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18417\n\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,string,string\n#group,false,false,false,true,true,true,true,true,false\n#default,,,,,,,,,\n,result,table,_time,_start,_stop,_measurement,id,_field,_value\n,,2,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   90,
					},
					File:   "shapeDataWithFilter_test.flux",
					Source: "outData = \"\n#group,false,false,true,true,true,false,false,true,false,false,true\n#datatype,string,long,string,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,double,double,string\n#default,_result,,,,,,,,,,\n,result,table,_measurement,_start,_stop,_time,control,id,lat,lon,s2_cell_id\n,,0,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T07:00:00Z,ctrlField,91916A,21.03383,39.09867,15c309\n,,1,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-02T04:00:00Z,ctrlField,91916A,21.14267,39.17567,15c3a9\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T04:00:00Z,ctrlField,91916A,21.14683,39.17433,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T04:00:00Z,ctrlField,91916A,21.1595,39.16733,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T07:00:00Z,ctrlField,91916A,21.16,39.1665,15c3af\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   80,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 8,
							Line:   80,
						},
						File:   "shapeDataWithFilter_test.flux",
						Source: "outData",
						Start: ast.Position{
							Column: 1,
							Line:   80,
						},
					},
				},
				Name: "outData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   90,
						},
						File:   "shapeDataWithFilter_test.flux",
						Source: "\"\n#group,false,false,true,true,true,false,false,true,false,false,true\n#datatype,string,long,string,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,double,double,string\n#default,_result,,,,,,,,,,\n,result,table,_measurement,_start,_stop,_time,control,id,lat,lon,s2_cell_id\n,,0,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T07:00:00Z,ctrlField,91916A,21.03383,39.09867,15c309\n,,1,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-02T04:00:00Z,ctrlField,91916A,21.14267,39.17567,15c3a9\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T04:00:00Z,ctrlField,91916A,21.14683,39.17433,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T04:00:00Z,ctrlField,91916A,21.1595,39.16733,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T07:00:00Z,ctrlField,91916A,21.16,39.1665,15c3af\n\"",
						Start: ast.Position{
							Column: 11,
							Line:   80,
						},
					},
				},
				Value: "\n#group,false,false,true,true,true,false,false,true,false,false,true\n#datatype,string,long,string,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,double,double,string\n#default,_result,,,,,,,,,,\n,result,table,_measurement,_start,_stop,_time,control,id,lat,lon,s2_cell_id\n,,0,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T07:00:00Z,ctrlField,91916A,21.03383,39.09867,15c309\n,,1,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-02T04:00:00Z,ctrlField,91916A,21.14267,39.17567,15c3a9\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T04:00:00Z,ctrlField,91916A,21.14683,39.17433,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T04:00:00Z,ctrlField,91916A,21.1595,39.16733,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T07:00:00Z,ctrlField,91916A,21.16,39.1665,15c3af\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 68,
						Line:   96,
					},
					File:   "shapeDataWithFilter_test.flux",
					Source: "t_shapeDataWithFilter = (table=<-) =>\n  table\n    |> range(start: 2019-01-01T00:00:00Z)\n    |> geo.shapeData(latField: \"latitude\", lonField: \"longitude\", level: 10)\n    |> geo.filterRows(region: {lat: 21.0, lon: 39.0, radius: 25.0})",
					Start: ast.Position{
						Column: 1,
						Line:   92,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 22,
							Line:   92,
						},
						File:   "shapeDataWithFilter_test.flux",
						Source: "t_shapeDataWithFilter",
						Start: ast.Position{
							Column: 1,
							Line:   92,
						},
					},
				},
				Name: "t_shapeDataWithFilter",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 68,
							Line:   96,
						},
						File:   "shapeDataWithFilter_test.flux",
						Source: "(table=<-) =>\n  table\n    |> range(start: 2019-01-01T00:00:00Z)\n    |> geo.shapeData(latField: \"latitude\", lonField: \"longitude\", level: 10)\n    |> geo.filterRows(region: {lat: 21.0, lon: 39.0, radius: 25.0})",
						Start: ast.Position{
							Column: 25,
							Line:   92,
						},
					},
				},
				Body: &ast.PipeExpression{
					Argument: &ast.PipeExpression{
						Argument: &ast.PipeExpression{
							Argument: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 8,
											Line:   93,
										},
										File:   "shapeDataWithFilter_test.flux",
										Source: "table",
										Start: ast.Position{
											Column: 3,
											Line:   93,
										},
									},
								},
								Name: "table",
							},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 42,
										Line:   94,
									},
									File:   "shapeDataWithFilter_test.flux",
									Source: "table\n    |> range(start: 2019-01-01T00:00:00Z)",
									Start: ast.Position{
										Column: 3,
										Line:   93,
									},
								},
							},
							Call: &ast.CallExpression{
								Arguments: []ast.Expression{&ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 41,
												Line:   94,
											},
											File:   "shapeDataWithFilter_test.flux",
											Source: "start: 2019-01-01T00:00:00Z",
											Start: ast.Position{
												Column: 14,
												Line:   94,
											},
										},
									},
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 41,
													Line:   94,
												},
												File:   "shapeDataWithFilter_test.flux",
												Source: "start: 2019-01-01T00:00:00Z",
												Start: ast.Position{
													Column: 14,
													Line:   94,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 19,
														Line:   94,
													},
													File:   "shapeDataWithFilter_test.flux",
													Source: "start",
													Start: ast.Position{
														Column: 14,
														Line:   94,
													},
												},
											},
											Name: "start",
										},
										Value: &ast.DateTimeLiteral{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 41,
														Line:   94,
													},
													File:   "shapeDataWithFilter_test.flux",
													Source: "2019-01-01T00:00:00Z",
													Start: ast.Position{
														Column: 21,
														Line:   94,
													},
												},
											},
											Value: parser.MustParseTime("2019-01-01T00:00:00Z"),
										},
									}},
									With: nil,
								}},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 42,
											Line:   94,
										},
										File:   "shapeDataWithFilter_test.flux",
										Source: "range(start: 2019-01-01T00:00:00Z)",
										Start: ast.Position{
											Column: 8,
											Line:   94,
										},
									},
								},
								Callee: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 13,
												Line:   94,
											},
											File:   "shapeDataWithFilter_test.flux",
											Source: "range",
											Start: ast.Position{
												Column: 8,
												Line:   94,
											},
										},
									},
									Name: "range",
								},
							},
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 77,
									Line:   95,
								},
								File:   "shapeDataWithFilter_test.flux",
								Source: "table\n    |> range(start: 2019-01-01T00:00:00Z)\n    |> geo.shapeData(latField: \"latitude\", lonField: \"longitude\", level: 10)",
								Start: ast.Position{
									Column: 3,
									Line:   93,
								},
							},
						},
						Call: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 76,
											Line:   95,
										},
										File:   "shapeDataWithFilter_test.flux",
										Source: "latField: \"latitude\", lonField: \"longitude\", level: 10",
										Start: ast.Position{
											Column: 22,
											Line:   95,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 42,
												Line:   95,
											},
											File:   "shapeDataWithFilter_test.flux",
											Source: "latField: \"latitude\"",
											Start: ast.Position{
												Column: 22,
												Line:   95,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   95,
												},
												File:   "shapeDataWithFilter_test.flux",
												Source: "latField",
												Start: ast.Position{
													Column: 22,
													Line:   95,
												},
											},
										},
										Name: "latField",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   95,
												},
												File:   "shapeDataWithFilter_test.flux",
												Source: "\"latitude\"",
												Start: ast.Position{
													Column: 32,
													Line:   95,
												},
											},
										},
										Value: "latitude",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 65,
												Line:   95,
											},
											File:   "shapeDataWithFilter_test.flux",
											Source: "lonField: \"longitude\"",
											Start: ast.Position{
												Column: 44,
												Line:   95,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 52,
													Line:   95,
												},
												File:   "shapeDataWithFilter_test.flux",
												Source: "lonField",
												Start: ast.Position{
													Column: 44,
													Line:   95,
												},
											},
										},
										Name: "lonField",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 65,
													Line:   95,
												},
												File:   "shapeDataWithFilter_test.flux",
												Source: "\"longitude\"",
												Start: ast.Position{
													Column: 54,
													Line:   95,
												},
											},
										},
										Value: "longitude",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 76,
												Line:   95,
											},
											File:   "shapeDataWithFilter_test.flux",
											Source: "level: 10",
											Start: ast.Position{
												Column: 67,
												Line:   95,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 72,
													Line:   95,
												},
												File:   "shapeDataWithFilter_test.flux",
												Source: "level",
												Start: ast.Position{
													Column: 67,
													Line:   95,
												},
											},
										},
										Name: "level",
									},
									Value: &ast.IntegerLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 76,
													Line:   95,
												},
												File:   "shapeDataWithFilter_test.flux",
												Source: "10",
												Start: ast.Position{
													Column: 74,
													Line:   95,
												},
											},
										},
										Value: int64(10),
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 77,
										Line:   95,
									},
									File:   "shapeDataWithFilter_test.flux",
									Source: "geo.shapeData(latField: \"latitude\", lonField: \"longitude\", level: 10)",
									Start: ast.Position{
										Column: 8,
										Line:   95,
									},
								},
							},
							Callee: &ast.MemberExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 21,
											Line:   95,
										},
										File:   "shapeDataWithFilter_test.flux",
										Source: "geo.shapeData",
										Start: ast.Position{
											Column: 8,
											Line:   95,
										},
									},
								},
								Object: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 11,
												Line:   95,
											},
											File:   "shapeDataWithFilter_test.flux",
											Source: "geo",
											Start: ast.Position{
												Column: 8,
												Line:   95,
											},
										},
									},
									Name: "geo",
								},
								Property: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 21,
												Line:   95,
											},
											File:   "shapeDataWithFilter_test.flux",
											Source: "shapeData",
											Start: ast.Position{
												Column: 12,
												Line:   95,
											},
										},
									},
									Name: "shapeData",
								},
							},
						},
					},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 68,
								Line:   96,
							},
							File:   "shapeDataWithFilter_test.flux",
							Source: "table\n    |> range(start: 2019-01-01T00:00:00Z)\n    |> geo.shapeData(latField: \"latitude\", lonField: \"longitude\", level: 10)\n    |> geo.filterRows(region: {lat: 21.0, lon: 39.0, radius: 25.0})",
							Start: ast.Position{
								Column: 3,
								Line:   93,
							},
						},
					},
					Call: &ast.CallExpression{
						Arguments: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 67,
										Line:   96,
									},
									File:   "shapeDataWithFilter_test.flux",
									Source: "region: {lat: 21.0, lon: 39.0, radius: 25.0}",
									Start: ast.Position{
										Column: 23,
										Line:   96,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 67,
											Line:   96,
										},
										File:   "shapeDataWithFilter_test.flux",
										Source: "region: {lat: 21.0, lon: 39.0, radius: 25.0}",
										Start: ast.Position{
											Column: 23,
											Line:   96,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 29,
												Line:   96,
											},
											File:   "shapeDataWithFilter_test.flux",
											Source: "region",
											Start: ast.Position{
												Column: 23,
												Line:   96,
											},
										},
									},
									Name: "region",
								},
								Value: &ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 67,
												Line:   96,
											},
											File:   "shapeDataWithFilter_test.flux",
											Source: "{lat: 21.0, lon: 39.0, radius: 25.0}",
											Start: ast.Position{
												Column: 31,
												Line:   96,
											},
										},
									},
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 41,
													Line:   96,
												},
												File:   "shapeDataWithFilter_test.flux",
												Source: "lat: 21.0",
												Start: ast.Position{
													Column: 32,
													Line:   96,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 35,
														Line:   96,
													},
													File:   "shapeDataWithFilter_test.flux",
													Source: "lat",
													Start: ast.Position{
														Column: 32,
														Line:   96,
													},
												},
											},
											Name: "lat",
										},
										Value: &ast.FloatLiteral{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 41,
														Line:   96,
													},
													File:   "shapeDataWithFilter_test.flux",
													Source: "21.0",
													Start: ast.Position{
														Column: 37,
														Line:   96,
													},
												},
											},
											Value: 21.0,
										},
									}, &ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 52,
													Line:   96,
												},
												File:   "shapeDataWithFilter_test.flux",
												Source: "lon: 39.0",
												Start: ast.Position{
													Column: 43,
													Line:   96,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 46,
														Line:   96,
													},
													File:   "shapeDataWithFilter_test.flux",
													Source: "lon",
													Start: ast.Position{
														Column: 43,
														Line:   96,
													},
												},
											},
											Name: "lon",
										},
										Value: &ast.FloatLiteral{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 52,
														Line:   96,
													},
													File:   "shapeDataWithFilter_test.flux",
													Source: "39.0",
													Start: ast.Position{
														Column: 48,
														Line:   96,
													},
												},
											},
											Value: 39.0,
										},
									}, &ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   96,
												},
												File:   "shapeDataWithFilter_test.flux",
												Source: "radius: 25.0",
												Start: ast.Position{
													Column: 54,
													Line:   96,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 60,
														Line:   96,
													},
													File:   "shapeDataWithFilter_test.flux",
													Source: "radius",
													Start: ast.Position{
														Column: 54,
														Line:   96,
													},
												},
											},
											Name: "radius",
										},
										Value: &ast.FloatLiteral{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 66,
														Line:   96,
													},
													File:   "shapeDataWithFilter_test.flux",
													Source: "25.0",
													Start: ast.Position{
														Column: 62,
														Line:   96,
													},
												},
											},
											Value: 25.0,
										},
									}},
									With: nil,
								},
							}},
							With: nil,
						}},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 68,
									Line:   96,
								},
								File:   "shapeDataWithFilter_test.flux",
								Source: "geo.filterRows(region: {lat: 21.0, lon: 39.0, radius: 25.0})",
								Start: ast.Position{
									Column: 8,
									Line:   96,
								},
							},
						},
						Callee: &ast.MemberExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 22,
										Line:   96,
									},
									File:   "shapeDataWithFilter_test.flux",
									Source: "geo.filterRows",
									Start: ast.Position{
										Column: 8,
										Line:   96,
									},
								},
							},
							Object: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 11,
											Line:   96,
										},
										File:   "shapeDataWithFilter_test.flux",
										Source: "geo",
										Start: ast.Position{
											Column: 8,
											Line:   96,
										},
									},
								},
								Name: "geo",
							},
							Property: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 22,
											Line:   96,
										},
										File:   "shapeDataWithFilter_test.flux",
										Source: "filterRows",
										Start: ast.Position{
											Column: 12,
											Line:   96,
										},
									},
								},
								Name: "filterRows",
							},
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 34,
								Line:   92,
							},
							File:   "shapeDataWithFilter_test.flux",
							Source: "table=<-",
							Start: ast.Position{
								Column: 26,
								Line:   92,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 31,
									Line:   92,
								},
								File:   "shapeDataWithFilter_test.flux",
								Source: "table",
								Start: ast.Position{
									Column: 26,
									Line:   92,
								},
							},
						},
						Name: "table",
					},
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 34,
								Line:   92,
							},
							File:   "shapeDataWithFilter_test.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 32,
								Line:   92,
							},
						},
					}},
				}},
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 109,
							Line:   98,
						},
						File:   "shapeDataWithFilter_test.flux",
						Source: "_shapeDataWithFilter = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_shapeDataWithFilter})",
						Start: ast.Position{
							Column: 6,
							Line:   97,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 26,
								Line:   97,
							},
							File:   "shapeDataWithFilter_test.flux",
							Source: "_shapeDataWithFilter",
							Start: ast.Position{
								Column: 6,
								Line:   97,
							},
						},
					},
					Name: "_shapeDataWithFilter",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 109,
								Line:   98,
							},
							File:   "shapeDataWithFilter_test.flux",
							Source: "() =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_shapeDataWithFilter})",
							Start: ast.Position{
								Column: 29,
								Line:   97,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 109,
									Line:   98,
								},
								File:   "shapeDataWithFilter_test.flux",
								Source: "({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_shapeDataWithFilter})",
								Start: ast.Position{
									Column: 2,
									Line:   98,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 108,
										Line:   98,
									},
									File:   "shapeDataWithFilter_test.flux",
									Source: "{input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_shapeDataWithFilter}",
									Start: ast.Position{
										Column: 3,
										Line:   98,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 43,
											Line:   98,
										},
										File:   "shapeDataWithFilter_test.flux",
										Source: "input: testing.loadStorage(csv: inData)",
										Start: ast.Position{
											Column: 4,
											Line:   98,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 9,
												Line:   98,
											},
											File:   "shapeDataWithFilter_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 4,
												Line:   98,
											},
										},
									},
									Name: "input",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   98,
												},
												File:   "shapeDataWithFilter_test.flux",
												Source: "csv: inData",
												Start: ast.Position{
													Column: 31,
													Line:   98,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 42,
														Line:   98,
													},
													File:   "shapeDataWithFilter_test.flux",
													Source: "csv: inData",
													Start: ast.Position{
														Column: 31,
														Line:   98,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 34,
															Line:   98,
														},
														File:   "shapeDataWithFilter_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 31,
															Line:   98,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 42,
															Line:   98,
														},
														File:   "shapeDataWithFilter_test.flux",
														Source: "inData",
														Start: ast.Position{
															Column: 36,
															Line:   98,
														},
													},
												},
												Name: "inData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 43,
												Line:   98,
											},
											File:   "shapeDataWithFilter_test.flux",
											Source: "testing.loadStorage(csv: inData)",
											Start: ast.Position{
												Column: 11,
												Line:   98,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   98,
												},
												File:   "shapeDataWithFilter_test.flux",
												Source: "testing.loadStorage",
												Start: ast.Position{
													Column: 11,
													Line:   98,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   98,
													},
													File:   "shapeDataWithFilter_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 11,
														Line:   98,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 30,
														Line:   98,
													},
													File:   "shapeDataWithFilter_test.flux",
													Source: "loadStorage",
													Start: ast.Position{
														Column: 19,
														Line:   98,
													},
												},
											},
											Name: "loadStorage",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 80,
											Line:   98,
										},
										File:   "shapeDataWithFilter_test.flux",
										Source: "want: testing.loadMem(csv: outData)",
										Start: ast.Position{
											Column: 45,
											Line:   98,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 49,
												Line:   98,
											},
											File:   "shapeDataWithFilter_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 45,
												Line:   98,
											},
										},
									},
									Name: "want",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 79,
													Line:   98,
												},
												File:   "shapeDataWithFilter_test.flux",
												Source: "csv: outData",
												Start: ast.Position{
													Column: 67,
													Line:   98,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 79,
														Line:   98,
													},
													File:   "shapeDataWithFilter_test.flux",
													Source: "csv: outData",
													Start: ast.Position{
														Column: 67,
														Line:   98,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 70,
															Line:   98,
														},
														File:   "shapeDataWithFilter_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 67,
															Line:   98,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 79,
															Line:   98,
														},
														File:   "shapeDataWithFilter_test.flux",
														Source: "outData",
														Start: ast.Position{
															Column: 72,
															Line:   98,
														},
													},
												},
												Name: "outData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 80,
												Line:   98,
											},
											File:   "shapeDataWithFilter_test.flux",
											Source: "testing.loadMem(csv: outData)",
											Start: ast.Position{
												Column: 51,
												Line:   98,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   98,
												},
												File:   "shapeDataWithFilter_test.flux",
												Source: "testing.loadMem",
												Start: ast.Position{
													Column: 51,
													Line:   98,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 58,
														Line:   98,
													},
													File:   "shapeDataWithFilter_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 51,
														Line:   98,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 66,
														Line:   98,
													},
													File:   "shapeDataWithFilter_test.flux",
													Source: "loadMem",
													Start: ast.Position{
														Column: 59,
														Line:   98,
													},
												},
											},
											Name: "loadMem",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 107,
											Line:   98,
										},
										File:   "shapeDataWithFilter_test.flux",
										Source: "fn: t_shapeDataWithFilter",
										Start: ast.Position{
											Column: 82,
											Line:   98,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 84,
												Line:   98,
											},
											File:   "shapeDataWithFilter_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 82,
												Line:   98,
											},
										},
									},
									Name: "fn",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 107,
												Line:   98,
											},
											File:   "shapeDataWithFilter_test.flux",
											Source: "t_shapeDataWithFilter",
											Start: ast.Position{
												Column: 86,
												Line:   98,
											},
										},
									},
									Name: "t_shapeDataWithFilter",
								},
							}},
							With: nil,
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 109,
						Line:   98,
					},
					File:   "shapeDataWithFilter_test.flux",
					Source: "test _shapeDataWithFilter = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_shapeDataWithFilter})",
					Start: ast.Position{
						Column: 1,
						Line:   97,
					},
				},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 26,
						Line:   3,
					},
					File:   "shapeDataWithFilter_test.flux",
					Source: "import \"experimental/geo\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 26,
							Line:   3,
						},
						File:   "shapeDataWithFilter_test.flux",
						Source: "\"experimental/geo\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "experimental/geo",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   4,
					},
					File:   "shapeDataWithFilter_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   4,
						},
						File:   "shapeDataWithFilter_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "testing",
			},
		}},
		Metadata: "parser-type=go",
		Name:     "shapeDataWithFilter_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   1,
					},
					File:   "shapeDataWithFilter_test.flux",
					Source: "package geo_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   1,
						},
						File:   "shapeDataWithFilter_test.flux",
						Source: "geo_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "geo_test",
			},
		},
	}, &ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 99,
					Line:   112,
				},
				File:   "shapeData_test.flux",
				Source: "package geo_test\n\nimport \"experimental/geo\"\nimport \"testing\"\n\noption now = () => (2030-01-01T00:00:00Z)\n\ninData = \"\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,string,double\n#group,false,false,false,true,true,true,true,true,false\n#default,,,,,,,,,\n,result,table,_time,_start,_stop,_measurement,id,_field,_value\n,,0,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.03383\n,,0,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.14267\n,,0,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16667\n,,0,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.18183\n,,0,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17367\n,,0,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.2935\n,,0,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.3485\n,,0,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17167\n,,0,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.14683\n,,0,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17367\n,,0,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17433\n,,0,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.1595\n,,0,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16\n,,0,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17433\n,,1,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.09867\n,,1,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17567\n,,1,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16933\n,,1,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17\n,,1,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.187\n,,1,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18217\n,,1,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.15833\n,,1,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.15083\n,,1,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.181\n,,1,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16883\n,,1,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16883\n,,1,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1815\n,,1,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1845\n,,1,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17433\n,,1,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18667\n,,1,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18167\n,,1,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16733\n,,1,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1665\n,,1,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16817\n,,1,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18417\n\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,string,string\n#group,false,false,false,true,true,true,true,true,false\n#default,,,,,,,,,\n,result,table,_time,_start,_stop,_measurement,id,_field,_value\n,,2,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n\"\n\noutData = \"\n#group,false,false,true,true,true,false,false,true,false,false,true\n#datatype,string,long,string,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,double,double,string\n#default,_result,,,,,,,,,,\n,result,table,_measurement,_start,_stop,_time,control,id,lat,lon,s2_cell_id\n,,0,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T07:00:00Z,ctrlField,91916A,21.03383,39.09867,15c309\n,,1,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-02T04:00:00Z,ctrlField,91916A,21.14267,39.17567,15c3a9\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-01T04:00:00Z,ctrlField,91916A,21.16667,39.16933,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-01T07:00:00Z,ctrlField,91916A,21.18183,39.17,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-01T13:00:00Z,ctrlField,91916A,21.17367,39.187,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-01T19:00:00Z,ctrlField,91916A,21.17383,39.18217,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-02T19:00:00Z,ctrlField,91916A,21.17383,39.181,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-03T04:00:00Z,ctrlField,91916A,21.16633,39.16883,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-03T07:00:00Z,ctrlField,91916A,21.16633,39.16883,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-03T13:00:00Z,ctrlField,91916A,21.17167,39.1815,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-03T19:00:00Z,ctrlField,91916A,21.17383,39.1845,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T04:00:00Z,ctrlField,91916A,21.14683,39.17433,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T13:00:00Z,ctrlField,91916A,21.17367,39.18667,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T19:00:00Z,ctrlField,91916A,21.17433,39.18167,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T04:00:00Z,ctrlField,91916A,21.1595,39.16733,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T07:00:00Z,ctrlField,91916A,21.16,39.1665,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T13:00:00Z,ctrlField,91916A,21.16633,39.16817,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T19:00:00Z,ctrlField,91916A,21.17433,39.18417,15c3af\n,,3,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-02T07:00:00Z,ctrlField,91916A,21.2935,39.15833,15c3b1\n,,4,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-02T13:00:00Z,ctrlField,91916A,21.3485,39.15083,15c3b9\n\"\n\nt_shapeData = (table=<-) =>\n  table\n    |> range(start: 2019-01-01T00:00:00Z)\n    |> geo.shapeData(latField: \"latitude\", lonField: \"longitude\", level: 10)\ntest _shapeData = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_shapeData})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   6,
						},
						File:   "shapeData_test.flux",
						Source: "now = () => (2030-01-01T00:00:00Z)",
						Start: ast.Position{
							Column: 8,
							Line:   6,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   6,
							},
							File:   "shapeData_test.flux",
							Source: "now",
							Start: ast.Position{
								Column: 8,
								Line:   6,
							},
						},
					},
					Name: "now",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   6,
							},
							File:   "shapeData_test.flux",
							Source: "() => (2030-01-01T00:00:00Z)",
							Start: ast.Position{
								Column: 14,
								Line:   6,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   6,
								},
								File:   "shapeData_test.flux",
								Source: "(2030-01-01T00:00:00Z)",
								Start: ast.Position{
									Column: 20,
									Line:   6,
								},
							},
						},
						Expression: &ast.DateTimeLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   6,
									},
									File:   "shapeData_test.flux",
									Source: "2030-01-01T00:00:00Z",
									Start: ast.Position{
										Column: 21,
										Line:   6,
									},
								},
							},
							Value: parser.MustParseTime("2030-01-01T00:00:00Z"),
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   6,
					},
					File:   "shapeData_test.flux",
					Source: "option now = () => (2030-01-01T00:00:00Z)",
					Start: ast.Position{
						Column: 1,
						Line:   6,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   78,
					},
					File:   "shapeData_test.flux",
					Source: "inData = \"\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,string,double\n#group,false,false,false,true,true,true,true,true,false\n#default,,,,,,,,,\n,result,table,_time,_start,_stop,_measurement,id,_field,_value\n,,0,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.03383\n,,0,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.14267\n,,0,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16667\n,,0,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.18183\n,,0,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17367\n,,0,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.2935\n,,0,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.3485\n,,0,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17167\n,,0,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.14683\n,,0,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17367\n,,0,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17433\n,,0,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.1595\n,,0,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16\n,,0,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17433\n,,1,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.09867\n,,1,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17567\n,,1,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16933\n,,1,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17\n,,1,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.187\n,,1,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18217\n,,1,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.15833\n,,1,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.15083\n,,1,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.181\n,,1,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16883\n,,1,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16883\n,,1,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1815\n,,1,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1845\n,,1,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17433\n,,1,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18667\n,,1,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18167\n,,1,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16733\n,,1,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1665\n,,1,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16817\n,,1,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18417\n\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,string,string\n#group,false,false,false,true,true,true,true,true,false\n#default,,,,,,,,,\n,result,table,_time,_start,_stop,_measurement,id,_field,_value\n,,2,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   8,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 7,
							Line:   8,
						},
						File:   "shapeData_test.flux",
						Source: "inData",
						Start: ast.Position{
							Column: 1,
							Line:   8,
						},
					},
				},
				Name: "inData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   78,
						},
						File:   "shapeData_test.flux",
						Source: "\"\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,string,double\n#group,false,false,false,true,true,true,true,true,false\n#default,,,,,,,,,\n,result,table,_time,_start,_stop,_measurement,id,_field,_value\n,,0,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.03383\n,,0,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.14267\n,,0,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16667\n,,0,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.18183\n,,0,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17367\n,,0,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.2935\n,,0,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.3485\n,,0,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17167\n,,0,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.14683\n,,0,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17367\n,,0,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17433\n,,0,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.1595\n,,0,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16\n,,0,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17433\n,,1,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.09867\n,,1,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17567\n,,1,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16933\n,,1,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17\n,,1,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.187\n,,1,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18217\n,,1,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.15833\n,,1,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.15083\n,,1,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.181\n,,1,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16883\n,,1,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16883\n,,1,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1815\n,,1,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1845\n,,1,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17433\n,,1,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18667\n,,1,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18167\n,,1,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16733\n,,1,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1665\n,,1,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16817\n,,1,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18417\n\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,string,string\n#group,false,false,false,true,true,true,true,true,false\n#default,,,,,,,,,\n,result,table,_time,_start,_stop,_measurement,id,_field,_value\n,,2,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n\"",
						Start: ast.Position{
							Column: 10,
							Line:   8,
						},
					},
				},
				Value: "\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,string,double\n#group,false,false,false,true,true,true,true,true,false\n#default,,,,,,,,,\n,result,table,_time,_start,_stop,_measurement,id,_field,_value\n,,0,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.03383\n,,0,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.14267\n,,0,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16667\n,,0,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.18183\n,,0,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17367\n,,0,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.2935\n,,0,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.3485\n,,0,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17167\n,,0,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.14683\n,,0,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17367\n,,0,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17433\n,,0,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.1595\n,,0,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16\n,,0,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17433\n,,1,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.09867\n,,1,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17567\n,,1,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16933\n,,1,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17\n,,1,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.187\n,,1,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18217\n,,1,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.15833\n,,1,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.15083\n,,1,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.181\n,,1,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16883\n,,1,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16883\n,,1,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1815\n,,1,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1845\n,,1,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17433\n,,1,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18667\n,,1,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18167\n,,1,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16733\n,,1,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1665\n,,1,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16817\n,,1,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18417\n\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,string,string\n#group,false,false,false,true,true,true,true,true,false\n#default,,,,,,,,,\n,result,table,_time,_start,_stop,_measurement,id,_field,_value\n,,2,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   105,
					},
					File:   "shapeData_test.flux",
					Source: "outData = \"\n#group,false,false,true,true,true,false,false,true,false,false,true\n#datatype,string,long,string,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,double,double,string\n#default,_result,,,,,,,,,,\n,result,table,_measurement,_start,_stop,_time,control,id,lat,lon,s2_cell_id\n,,0,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T07:00:00Z,ctrlField,91916A,21.03383,39.09867,15c309\n,,1,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-02T04:00:00Z,ctrlField,91916A,21.14267,39.17567,15c3a9\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-01T04:00:00Z,ctrlField,91916A,21.16667,39.16933,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-01T07:00:00Z,ctrlField,91916A,21.18183,39.17,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-01T13:00:00Z,ctrlField,91916A,21.17367,39.187,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-01T19:00:00Z,ctrlField,91916A,21.17383,39.18217,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-02T19:00:00Z,ctrlField,91916A,21.17383,39.181,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-03T04:00:00Z,ctrlField,91916A,21.16633,39.16883,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-03T07:00:00Z,ctrlField,91916A,21.16633,39.16883,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-03T13:00:00Z,ctrlField,91916A,21.17167,39.1815,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-03T19:00:00Z,ctrlField,91916A,21.17383,39.1845,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T04:00:00Z,ctrlField,91916A,21.14683,39.17433,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T13:00:00Z,ctrlField,91916A,21.17367,39.18667,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T19:00:00Z,ctrlField,91916A,21.17433,39.18167,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T04:00:00Z,ctrlField,91916A,21.1595,39.16733,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T07:00:00Z,ctrlField,91916A,21.16,39.1665,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T13:00:00Z,ctrlField,91916A,21.16633,39.16817,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T19:00:00Z,ctrlField,91916A,21.17433,39.18417,15c3af\n,,3,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-02T07:00:00Z,ctrlField,91916A,21.2935,39.15833,15c3b1\n,,4,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-02T13:00:00Z,ctrlField,91916A,21.3485,39.15083,15c3b9\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   80,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 8,
							Line:   80,
						},
						File:   "shapeData_test.flux",
						Source: "outData",
						Start: ast.Position{
							Column: 1,
							Line:   80,
						},
					},
				},
				Name: "outData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   105,
						},
						File:   "shapeData_test.flux",
						Source: "\"\n#group,false,false,true,true,true,false,false,true,false,false,true\n#datatype,string,long,string,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,double,double,string\n#default,_result,,,,,,,,,,\n,result,table,_measurement,_start,_stop,_time,control,id,lat,lon,s2_cell_id\n,,0,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T07:00:00Z,ctrlField,91916A,21.03383,39.09867,15c309\n,,1,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-02T04:00:00Z,ctrlField,91916A,21.14267,39.17567,15c3a9\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-01T04:00:00Z,ctrlField,91916A,21.16667,39.16933,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-01T07:00:00Z,ctrlField,91916A,21.18183,39.17,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-01T13:00:00Z,ctrlField,91916A,21.17367,39.187,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-01T19:00:00Z,ctrlField,91916A,21.17383,39.18217,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-02T19:00:00Z,ctrlField,91916A,21.17383,39.181,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-03T04:00:00Z,ctrlField,91916A,21.16633,39.16883,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-03T07:00:00Z,ctrlField,91916A,21.16633,39.16883,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-03T13:00:00Z,ctrlField,91916A,21.17167,39.1815,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-03T19:00:00Z,ctrlField,91916A,21.17383,39.1845,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T04:00:00Z,ctrlField,91916A,21.14683,39.17433,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T13:00:00Z,ctrlField,91916A,21.17367,39.18667,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T19:00:00Z,ctrlField,91916A,21.17433,39.18167,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T04:00:00Z,ctrlField,91916A,21.1595,39.16733,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T07:00:00Z,ctrlField,91916A,21.16,39.1665,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T13:00:00Z,ctrlField,91916A,21.16633,39.16817,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T19:00:00Z,ctrlField,91916A,21.17433,39.18417,15c3af\n,,3,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-02T07:00:00Z,ctrlField,91916A,21.2935,39.15833,15c3b1\n,,4,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-02T13:00:00Z,ctrlField,91916A,21.3485,39.15083,15c3b9\n\"",
						Start: ast.Position{
							Column: 11,
							Line:   80,
						},
					},
				},
				Value: "\n#group,false,false,true,true,true,false,false,true,false,false,true\n#datatype,string,long,string,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,double,double,string\n#default,_result,,,,,,,,,,\n,result,table,_measurement,_start,_stop,_time,control,id,lat,lon,s2_cell_id\n,,0,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T07:00:00Z,ctrlField,91916A,21.03383,39.09867,15c309\n,,1,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-02T04:00:00Z,ctrlField,91916A,21.14267,39.17567,15c3a9\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-01T04:00:00Z,ctrlField,91916A,21.16667,39.16933,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-01T07:00:00Z,ctrlField,91916A,21.18183,39.17,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-01T13:00:00Z,ctrlField,91916A,21.17367,39.187,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-01T19:00:00Z,ctrlField,91916A,21.17383,39.18217,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-02T19:00:00Z,ctrlField,91916A,21.17383,39.181,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-03T04:00:00Z,ctrlField,91916A,21.16633,39.16883,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-03T07:00:00Z,ctrlField,91916A,21.16633,39.16883,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-03T13:00:00Z,ctrlField,91916A,21.17167,39.1815,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-03T19:00:00Z,ctrlField,91916A,21.17383,39.1845,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T04:00:00Z,ctrlField,91916A,21.14683,39.17433,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T13:00:00Z,ctrlField,91916A,21.17367,39.18667,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T19:00:00Z,ctrlField,91916A,21.17433,39.18167,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T04:00:00Z,ctrlField,91916A,21.1595,39.16733,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T07:00:00Z,ctrlField,91916A,21.16,39.1665,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T13:00:00Z,ctrlField,91916A,21.16633,39.16817,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T19:00:00Z,ctrlField,91916A,21.17433,39.18417,15c3af\n,,3,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-02T07:00:00Z,ctrlField,91916A,21.2935,39.15833,15c3b1\n,,4,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-02T13:00:00Z,ctrlField,91916A,21.3485,39.15083,15c3b9\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 77,
						Line:   110,
					},
					File:   "shapeData_test.flux",
					Source: "t_shapeData = (table=<-) =>\n  table\n    |> range(start: 2019-01-01T00:00:00Z)\n    |> geo.shapeData(latField: \"latitude\", lonField: \"longitude\", level: 10)",
					Start: ast.Position{
						Column: 1,
						Line:   107,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 12,
							Line:   107,
						},
						File:   "shapeData_test.flux",
						Source: "t_shapeData",
						Start: ast.Position{
							Column: 1,
							Line:   107,
						},
					},
				},
				Name: "t_shapeData",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 77,
							Line:   110,
						},
						File:   "shapeData_test.flux",
						Source: "(table=<-) =>\n  table\n    |> range(start: 2019-01-01T00:00:00Z)\n    |> geo.shapeData(latField: \"latitude\", lonField: \"longitude\", level: 10)",
						Start: ast.Position{
							Column: 15,
							Line:   107,
						},
					},
				},
				Body: &ast.PipeExpression{
					Argument: &ast.PipeExpression{
						Argument: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 8,
										Line:   108,
									},
									File:   "shapeData_test.flux",
									Source: "table",
									Start: ast.Position{
										Column: 3,
										Line:   108,
									},
								},
							},
							Name: "table",
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   109,
								},
								File:   "shapeData_test.flux",
								Source: "table\n    |> range(start: 2019-01-01T00:00:00Z)",
								Start: ast.Position{
									Column: 3,
									Line:   108,
								},
							},
						},
						Call: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 41,
											Line:   109,
										},
										File:   "shapeData_test.flux",
										Source: "start: 2019-01-01T00:00:00Z",
										Start: ast.Position{
											Column: 14,
											Line:   109,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 41,
												Line:   109,
											},
											File:   "shapeData_test.flux",
											Source: "start: 2019-01-01T00:00:00Z",
											Start: ast.Position{
												Column: 14,
												Line:   109,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 19,
													Line:   109,
												},
												File:   "shapeData_test.flux",
												Source: "start",
												Start: ast.Position{
													Column: 14,
													Line:   109,
												},
											},
										},
										Name: "start",
									},
									Value: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 41,
													Line:   109,
												},
												File:   "shapeData_test.flux",
												Source: "2019-01-01T00:00:00Z",
												Start: ast.Position{
													Column: 21,
													Line:   109,
												},
											},
										},
										Value: parser.MustParseTime("2019-01-01T00:00:00Z"),
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 42,
										Line:   109,
									},
									File:   "shapeData_test.flux",
									Source: "range(start: 2019-01-01T00:00:00Z)",
									Start: ast.Position{
										Column: 8,
										Line:   109,
									},
								},
							},
							Callee: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 13,
											Line:   109,
										},
										File:   "shapeData_test.flux",
										Source: "range",
										Start: ast.Position{
											Column: 8,
											Line:   109,
										},
									},
								},
								Name: "range",
							},
						},
					},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 77,
								Line:   110,
							},
							File:   "shapeData_test.flux",
							Source: "table\n    |> range(start: 2019-01-01T00:00:00Z)\n    |> geo.shapeData(latField: \"latitude\", lonField: \"longitude\", level: 10)",
							Start: ast.Position{
								Column: 3,
								Line:   108,
							},
						},
					},
					Call: &ast.CallExpression{
						Arguments: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 76,
										Line:   110,
									},
									File:   "shapeData_test.flux",
									Source: "latField: \"latitude\", lonField: \"longitude\", level: 10",
									Start: ast.Position{
										Column: 22,
										Line:   110,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 42,
											Line:   110,
										},
										File:   "shapeData_test.flux",
										Source: "latField: \"latitude\"",
										Start: ast.Position{
											Column: 22,
											Line:   110,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 30,
												Line:   110,
											},
											File:   "shapeData_test.flux",
											Source: "latField",
											Start: ast.Position{
												Column: 22,
												Line:   110,
											},
										},
									},
									Name: "latField",
								},
								Value: &ast.StringLiteral{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 42,
												Line:   110,
											},
											File:   "shapeData_test.flux",
											Source: "\"latitude\"",
											Start: ast.Position{
												Column: 32,
												Line:   110,
											},
										},
									},
									Value: "latitude",
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 65,
											Line:   110,
										},
										File:   "shapeData_test.flux",
										Source: "lonField: \"longitude\"",
										Start: ast.Position{
											Column: 44,
											Line:   110,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 52,
												Line:   110,
											},
											File:   "shapeData_test.flux",
											Source: "lonField",
											Start: ast.Position{
												Column: 44,
												Line:   110,
											},
										},
									},
									Name: "lonField",
								},
								Value: &ast.StringLiteral{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 65,
												Line:   110,
											},
											File:   "shapeData_test.flux",
											Source: "\"longitude\"",
											Start: ast.Position{
												Column: 54,
												Line:   110,
											},
										},
									},
									Value: "longitude",
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 76,
											Line:   110,
										},
										File:   "shapeData_test.flux",
										Source: "level: 10",
										Start: ast.Position{
											Column: 67,
											Line:   110,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 72,
												Line:   110,
											},
											File:   "shapeData_test.flux",
											Source: "level",
											Start: ast.Position{
												Column: 67,
												Line:   110,
											},
										},
									},
									Name: "level",
								},
								Value: &ast.IntegerLiteral{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 76,
												Line:   110,
											},
											File:   "shapeData_test.flux",
											Source: "10",
											Start: ast.Position{
												Column: 74,
												Line:   110,
											},
										},
									},
									Value: int64(10),
								},
							}},
							With: nil,
						}},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 77,
									Line:   110,
								},
								File:   "shapeData_test.flux",
								Source: "geo.shapeData(latField: \"latitude\", lonField: \"longitude\", level: 10)",
								Start: ast.Position{
									Column: 8,
									Line:   110,
								},
							},
						},
						Callee: &ast.MemberExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 21,
										Line:   110,
									},
									File:   "shapeData_test.flux",
									Source: "geo.shapeData",
									Start: ast.Position{
										Column: 8,
										Line:   110,
									},
								},
							},
							Object: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 11,
											Line:   110,
										},
										File:   "shapeData_test.flux",
										Source: "geo",
										Start: ast.Position{
											Column: 8,
											Line:   110,
										},
									},
								},
								Name: "geo",
							},
							Property: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 21,
											Line:   110,
										},
										File:   "shapeData_test.flux",
										Source: "shapeData",
										Start: ast.Position{
											Column: 12,
											Line:   110,
										},
									},
								},
								Name: "shapeData",
							},
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 24,
								Line:   107,
							},
							File:   "shapeData_test.flux",
							Source: "table=<-",
							Start: ast.Position{
								Column: 16,
								Line:   107,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 21,
									Line:   107,
								},
								File:   "shapeData_test.flux",
								Source: "table",
								Start: ast.Position{
									Column: 16,
									Line:   107,
								},
							},
						},
						Name: "table",
					},
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 24,
								Line:   107,
							},
							File:   "shapeData_test.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 22,
								Line:   107,
							},
						},
					}},
				}},
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 99,
							Line:   112,
						},
						File:   "shapeData_test.flux",
						Source: "_shapeData = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_shapeData})",
						Start: ast.Position{
							Column: 6,
							Line:   111,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 16,
								Line:   111,
							},
							File:   "shapeData_test.flux",
							Source: "_shapeData",
							Start: ast.Position{
								Column: 6,
								Line:   111,
							},
						},
					},
					Name: "_shapeData",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 99,
								Line:   112,
							},
							File:   "shapeData_test.flux",
							Source: "() =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_shapeData})",
							Start: ast.Position{
								Column: 19,
								Line:   111,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 99,
									Line:   112,
								},
								File:   "shapeData_test.flux",
								Source: "({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_shapeData})",
								Start: ast.Position{
									Column: 2,
									Line:   112,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 98,
										Line:   112,
									},
									File:   "shapeData_test.flux",
									Source: "{input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_shapeData}",
									Start: ast.Position{
										Column: 3,
										Line:   112,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 43,
											Line:   112,
										},
										File:   "shapeData_test.flux",
										Source: "input: testing.loadStorage(csv: inData)",
										Start: ast.Position{
											Column: 4,
											Line:   112,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 9,
												Line:   112,
											},
											File:   "shapeData_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 4,
												Line:   112,
											},
										},
									},
									Name: "input",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   112,
												},
												File:   "shapeData_test.flux",
												Source: "csv: inData",
												Start: ast.Position{
													Column: 31,
													Line:   112,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 42,
														Line:   112,
													},
													File:   "shapeData_test.flux",
													Source: "csv: inData",
													Start: ast.Position{
														Column: 31,
														Line:   112,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 34,
															Line:   112,
														},
														File:   "shapeData_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 31,
															Line:   112,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 42,
															Line:   112,
														},
														File:   "shapeData_test.flux",
														Source: "inData",
														Start: ast.Position{
															Column: 36,
															Line:   112,
														},
													},
												},
												Name: "inData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 43,
												Line:   112,
											},
											File:   "shapeData_test.flux",
											Source: "testing.loadStorage(csv: inData)",
											Start: ast.Position{
												Column: 11,
												Line:   112,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   112,
												},
												File:   "shapeData_test.flux",
												Source: "testing.loadStorage",
												Start: ast.Position{
													Column: 11,
													Line:   112,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   112,
													},
													File:   "shapeData_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 11,
														Line:   112,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 30,
														Line:   112,
													},
													File:   "shapeData_test.flux",
													Source: "loadStorage",
													Start: ast.Position{
														Column: 19,
														Line:   112,
													},
												},
											},
											Name: "loadStorage",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 80,
											Line:   112,
										},
										File:   "shapeData_test.flux",
										Source: "want: testing.loadMem(csv: outData)",
										Start: ast.Position{
											Column: 45,
											Line:   112,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 49,
												Line:   112,
											},
											File:   "shapeData_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 45,
												Line:   112,
											},
										},
									},
									Name: "want",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 79,
													Line:   112,
												},
												File:   "shapeData_test.flux",
												Source: "csv: outData",
												Start: ast.Position{
													Column: 67,
													Line:   112,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 79,
														Line:   112,
													},
													File:   "shapeData_test.flux",
													Source: "csv: outData",
													Start: ast.Position{
														Column: 67,
														Line:   112,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 70,
															Line:   112,
														},
														File:   "shapeData_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 67,
															Line:   112,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 79,
															Line:   112,
														},
														File:   "shapeData_test.flux",
														Source: "outData",
														Start: ast.Position{
															Column: 72,
															Line:   112,
														},
													},
												},
												Name: "outData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 80,
												Line:   112,
											},
											File:   "shapeData_test.flux",
											Source: "testing.loadMem(csv: outData)",
											Start: ast.Position{
												Column: 51,
												Line:   112,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   112,
												},
												File:   "shapeData_test.flux",
												Source: "testing.loadMem",
												Start: ast.Position{
													Column: 51,
													Line:   112,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 58,
														Line:   112,
													},
													File:   "shapeData_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 51,
														Line:   112,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 66,
														Line:   112,
													},
													File:   "shapeData_test.flux",
													Source: "loadMem",
													Start: ast.Position{
														Column: 59,
														Line:   112,
													},
												},
											},
											Name: "loadMem",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 97,
											Line:   112,
										},
										File:   "shapeData_test.flux",
										Source: "fn: t_shapeData",
										Start: ast.Position{
											Column: 82,
											Line:   112,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 84,
												Line:   112,
											},
											File:   "shapeData_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 82,
												Line:   112,
											},
										},
									},
									Name: "fn",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 97,
												Line:   112,
											},
											File:   "shapeData_test.flux",
											Source: "t_shapeData",
											Start: ast.Position{
												Column: 86,
												Line:   112,
											},
										},
									},
									Name: "t_shapeData",
								},
							}},
							With: nil,
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 99,
						Line:   112,
					},
					File:   "shapeData_test.flux",
					Source: "test _shapeData = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_shapeData})",
					Start: ast.Position{
						Column: 1,
						Line:   111,
					},
				},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 26,
						Line:   3,
					},
					File:   "shapeData_test.flux",
					Source: "import \"experimental/geo\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 26,
							Line:   3,
						},
						File:   "shapeData_test.flux",
						Source: "\"experimental/geo\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "experimental/geo",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   4,
					},
					File:   "shapeData_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   4,
						},
						File:   "shapeData_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "testing",
			},
		}},
		Metadata: "parser-type=go",
		Name:     "shapeData_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   1,
					},
					File:   "shapeData_test.flux",
					Source: "package geo_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   1,
						},
						File:   "shapeData_test.flux",
						Source: "geo_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "geo_test",
			},
		},
	}, &ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 102,
					Line:   214,
				},
				File:   "strictFilter_test.flux",
				Source: "package geo_test\n\nimport \"experimental/geo\"\nimport \"testing\"\n\noption now = () => (2030-01-01T00:00:00Z)\n\ninData = \"\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n\"\n\noutData = \"\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n\"\n\nt_strictFilter = (table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> geo.strictFilter(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0})\n    |> drop(columns: [\"_start\", \"_stop\"])\ntest _strictFilter = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_strictFilter})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   6,
						},
						File:   "strictFilter_test.flux",
						Source: "now = () => (2030-01-01T00:00:00Z)",
						Start: ast.Position{
							Column: 8,
							Line:   6,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   6,
							},
							File:   "strictFilter_test.flux",
							Source: "now",
							Start: ast.Position{
								Column: 8,
								Line:   6,
							},
						},
					},
					Name: "now",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   6,
							},
							File:   "strictFilter_test.flux",
							Source: "() => (2030-01-01T00:00:00Z)",
							Start: ast.Position{
								Column: 14,
								Line:   6,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   6,
								},
								File:   "strictFilter_test.flux",
								Source: "(2030-01-01T00:00:00Z)",
								Start: ast.Position{
									Column: 20,
									Line:   6,
								},
							},
						},
						Expression: &ast.DateTimeLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   6,
									},
									File:   "strictFilter_test.flux",
									Source: "2030-01-01T00:00:00Z",
									Start: ast.Position{
										Column: 21,
										Line:   6,
									},
								},
							},
							Value: parser.MustParseTime("2030-01-01T00:00:00Z"),
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   6,
					},
					File:   "strictFilter_test.flux",
					Source: "option now = () => (2030-01-01T00:00:00Z)",
					Start: ast.Position{
						Column: 1,
						Line:   6,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   185,
					},
					File:   "strictFilter_test.flux",
					Source: "inData = \"\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   8,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 7,
							Line:   8,
						},
						File:   "strictFilter_test.flux",
						Source: "inData",
						Start: ast.Position{
							Column: 1,
							Line:   8,
						},
					},
				},
				Name: "inData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   185,
						},
						File:   "strictFilter_test.flux",
						Source: "\"\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n\"",
						Start: ast.Position{
							Column: 10,
							Line:   8,
						},
					},
				},
				Value: "\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   205,
					},
					File:   "strictFilter_test.flux",
					Source: "outData = \"\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   187,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 8,
							Line:   187,
						},
						File:   "strictFilter_test.flux",
						Source: "outData",
						Start: ast.Position{
							Column: 1,
							Line:   187,
						},
					},
				},
				Name: "outData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   205,
						},
						File:   "strictFilter_test.flux",
						Source: "\"\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n\"",
						Start: ast.Position{
							Column: 11,
							Line:   187,
						},
					},
				},
				Value: "\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   212,
					},
					File:   "strictFilter_test.flux",
					Source: "t_strictFilter = (table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> geo.strictFilter(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0})\n    |> drop(columns: [\"_start\", \"_stop\"])",
					Start: ast.Position{
						Column: 1,
						Line:   207,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 15,
							Line:   207,
						},
						File:   "strictFilter_test.flux",
						Source: "t_strictFilter",
						Start: ast.Position{
							Column: 1,
							Line:   207,
						},
					},
				},
				Name: "t_strictFilter",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   212,
						},
						File:   "strictFilter_test.flux",
						Source: "(table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> geo.strictFilter(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0})\n    |> drop(columns: [\"_start\", \"_stop\"])",
						Start: ast.Position{
							Column: 18,
							Line:   207,
						},
					},
				},
				Body: &ast.PipeExpression{
					Argument: &ast.PipeExpression{
						Argument: &ast.PipeExpression{
							Argument: &ast.PipeExpression{
								Argument: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 8,
												Line:   208,
											},
											File:   "strictFilter_test.flux",
											Source: "table",
											Start: ast.Position{
												Column: 3,
												Line:   208,
											},
										},
									},
									Name: "table",
								},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 42,
											Line:   209,
										},
										File:   "strictFilter_test.flux",
										Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)",
										Start: ast.Position{
											Column: 3,
											Line:   208,
										},
									},
								},
								Call: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 41,
													Line:   209,
												},
												File:   "strictFilter_test.flux",
												Source: "start: 2019-11-01T00:00:00Z",
												Start: ast.Position{
													Column: 14,
													Line:   209,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 41,
														Line:   209,
													},
													File:   "strictFilter_test.flux",
													Source: "start: 2019-11-01T00:00:00Z",
													Start: ast.Position{
														Column: 14,
														Line:   209,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 19,
															Line:   209,
														},
														File:   "strictFilter_test.flux",
														Source: "start",
														Start: ast.Position{
															Column: 14,
															Line:   209,
														},
													},
												},
												Name: "start",
											},
											Value: &ast.DateTimeLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 41,
															Line:   209,
														},
														File:   "strictFilter_test.flux",
														Source: "2019-11-01T00:00:00Z",
														Start: ast.Position{
															Column: 21,
															Line:   209,
														},
													},
												},
												Value: parser.MustParseTime("2019-11-01T00:00:00Z"),
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 42,
												Line:   209,
											},
											File:   "strictFilter_test.flux",
											Source: "range(start: 2019-11-01T00:00:00Z)",
											Start: ast.Position{
												Column: 8,
												Line:   209,
											},
										},
									},
									Callee: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 13,
													Line:   209,
												},
												File:   "strictFilter_test.flux",
												Source: "range",
												Start: ast.Position{
													Column: 8,
													Line:   209,
												},
											},
										},
										Name: "range",
									},
								},
							},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 77,
										Line:   210,
									},
									File:   "strictFilter_test.flux",
									Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")",
									Start: ast.Position{
										Column: 3,
										Line:   208,
									},
								},
							},
							Call: &ast.CallExpression{
								Arguments: []ast.Expression{&ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 76,
												Line:   210,
											},
											File:   "strictFilter_test.flux",
											Source: "rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\"",
											Start: ast.Position{
												Column: 14,
												Line:   210,
											},
										},
									},
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   210,
												},
												File:   "strictFilter_test.flux",
												Source: "rowKey:[\"_time\"]",
												Start: ast.Position{
													Column: 14,
													Line:   210,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 20,
														Line:   210,
													},
													File:   "strictFilter_test.flux",
													Source: "rowKey",
													Start: ast.Position{
														Column: 14,
														Line:   210,
													},
												},
											},
											Name: "rowKey",
										},
										Value: &ast.ArrayExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 30,
														Line:   210,
													},
													File:   "strictFilter_test.flux",
													Source: "[\"_time\"]",
													Start: ast.Position{
														Column: 21,
														Line:   210,
													},
												},
											},
											Elements: []ast.Expression{&ast.StringLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 29,
															Line:   210,
														},
														File:   "strictFilter_test.flux",
														Source: "\"_time\"",
														Start: ast.Position{
															Column: 22,
															Line:   210,
														},
													},
												},
												Value: "_time",
											}},
										},
									}, &ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 53,
													Line:   210,
												},
												File:   "strictFilter_test.flux",
												Source: "columnKey: [\"_field\"]",
												Start: ast.Position{
													Column: 32,
													Line:   210,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 41,
														Line:   210,
													},
													File:   "strictFilter_test.flux",
													Source: "columnKey",
													Start: ast.Position{
														Column: 32,
														Line:   210,
													},
												},
											},
											Name: "columnKey",
										},
										Value: &ast.ArrayExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 53,
														Line:   210,
													},
													File:   "strictFilter_test.flux",
													Source: "[\"_field\"]",
													Start: ast.Position{
														Column: 43,
														Line:   210,
													},
												},
											},
											Elements: []ast.Expression{&ast.StringLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 52,
															Line:   210,
														},
														File:   "strictFilter_test.flux",
														Source: "\"_field\"",
														Start: ast.Position{
															Column: 44,
															Line:   210,
														},
													},
												},
												Value: "_field",
											}},
										},
									}, &ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 76,
													Line:   210,
												},
												File:   "strictFilter_test.flux",
												Source: "valueColumn: \"_value\"",
												Start: ast.Position{
													Column: 55,
													Line:   210,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 66,
														Line:   210,
													},
													File:   "strictFilter_test.flux",
													Source: "valueColumn",
													Start: ast.Position{
														Column: 55,
														Line:   210,
													},
												},
											},
											Name: "valueColumn",
										},
										Value: &ast.StringLiteral{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 76,
														Line:   210,
													},
													File:   "strictFilter_test.flux",
													Source: "\"_value\"",
													Start: ast.Position{
														Column: 68,
														Line:   210,
													},
												},
											},
											Value: "_value",
										},
									}},
									With: nil,
								}},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 77,
											Line:   210,
										},
										File:   "strictFilter_test.flux",
										Source: "pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")",
										Start: ast.Position{
											Column: 8,
											Line:   210,
										},
									},
								},
								Callee: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 13,
												Line:   210,
											},
											File:   "strictFilter_test.flux",
											Source: "pivot",
											Start: ast.Position{
												Column: 8,
												Line:   210,
											},
										},
									},
									Name: "pivot",
								},
							},
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 81,
									Line:   211,
								},
								File:   "strictFilter_test.flux",
								Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> geo.strictFilter(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0})",
								Start: ast.Position{
									Column: 3,
									Line:   208,
								},
							},
						},
						Call: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 80,
											Line:   211,
										},
										File:   "strictFilter_test.flux",
										Source: "region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}",
										Start: ast.Position{
											Column: 25,
											Line:   211,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 80,
												Line:   211,
											},
											File:   "strictFilter_test.flux",
											Source: "region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}",
											Start: ast.Position{
												Column: 25,
												Line:   211,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 31,
													Line:   211,
												},
												File:   "strictFilter_test.flux",
												Source: "region",
												Start: ast.Position{
													Column: 25,
													Line:   211,
												},
											},
										},
										Name: "region",
									},
									Value: &ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 80,
													Line:   211,
												},
												File:   "strictFilter_test.flux",
												Source: "{lat: 40.7090214, lon: -73.61846, radius: 15.0}",
												Start: ast.Position{
													Column: 33,
													Line:   211,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 49,
														Line:   211,
													},
													File:   "strictFilter_test.flux",
													Source: "lat: 40.7090214",
													Start: ast.Position{
														Column: 34,
														Line:   211,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 37,
															Line:   211,
														},
														File:   "strictFilter_test.flux",
														Source: "lat",
														Start: ast.Position{
															Column: 34,
															Line:   211,
														},
													},
												},
												Name: "lat",
											},
											Value: &ast.FloatLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 49,
															Line:   211,
														},
														File:   "strictFilter_test.flux",
														Source: "40.7090214",
														Start: ast.Position{
															Column: 39,
															Line:   211,
														},
													},
												},
												Value: 40.7090214,
											},
										}, &ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 65,
														Line:   211,
													},
													File:   "strictFilter_test.flux",
													Source: "lon: -73.61846",
													Start: ast.Position{
														Column: 51,
														Line:   211,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 54,
															Line:   211,
														},
														File:   "strictFilter_test.flux",
														Source: "lon",
														Start: ast.Position{
															Column: 51,
															Line:   211,
														},
													},
												},
												Name: "lon",
											},
											Value: &ast.UnaryExpression{
												Argument: &ast.FloatLiteral{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 65,
																Line:   211,
															},
															File:   "strictFilter_test.flux",
															Source: "73.61846",
															Start: ast.Position{
																Column: 57,
																Line:   211,
															},
														},
													},
													Value: 73.61846,
												},
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 65,
															Line:   211,
														},
														File:   "strictFilter_test.flux",
														Source: "-73.61846",
														Start: ast.Position{
															Column: 56,
															Line:   211,
														},
													},
												},
												Operator: 6,
											},
										}, &ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 79,
														Line:   211,
													},
													File:   "strictFilter_test.flux",
													Source: "radius: 15.0",
													Start: ast.Position{
														Column: 67,
														Line:   211,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 73,
															Line:   211,
														},
														File:   "strictFilter_test.flux",
														Source: "radius",
														Start: ast.Position{
															Column: 67,
															Line:   211,
														},
													},
												},
												Name: "radius",
											},
											Value: &ast.FloatLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 79,
															Line:   211,
														},
														File:   "strictFilter_test.flux",
														Source: "15.0",
														Start: ast.Position{
															Column: 75,
															Line:   211,
														},
													},
												},
												Value: 15.0,
											},
										}},
										With: nil,
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 81,
										Line:   211,
									},
									File:   "strictFilter_test.flux",
									Source: "geo.strictFilter(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0})",
									Start: ast.Position{
										Column: 8,
										Line:   211,
									},
								},
							},
							Callee: &ast.MemberExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 24,
											Line:   211,
										},
										File:   "strictFilter_test.flux",
										Source: "geo.strictFilter",
										Start: ast.Position{
											Column: 8,
											Line:   211,
										},
									},
								},
								Object: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 11,
												Line:   211,
											},
											File:   "strictFilter_test.flux",
											Source: "geo",
											Start: ast.Position{
												Column: 8,
												Line:   211,
											},
										},
									},
									Name: "geo",
								},
								Property: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 24,
												Line:   211,
											},
											File:   "strictFilter_test.flux",
											Source: "strictFilter",
											Start: ast.Position{
												Column: 12,
												Line:   211,
											},
										},
									},
									Name: "strictFilter",
								},
							},
						},
					},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   212,
							},
							File:   "strictFilter_test.flux",
							Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> geo.strictFilter(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0})\n    |> drop(columns: [\"_start\", \"_stop\"])",
							Start: ast.Position{
								Column: 3,
								Line:   208,
							},
						},
					},
					Call: &ast.CallExpression{
						Arguments: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   212,
									},
									File:   "strictFilter_test.flux",
									Source: "columns: [\"_start\", \"_stop\"]",
									Start: ast.Position{
										Column: 13,
										Line:   212,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 41,
											Line:   212,
										},
										File:   "strictFilter_test.flux",
										Source: "columns: [\"_start\", \"_stop\"]",
										Start: ast.Position{
											Column: 13,
											Line:   212,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 20,
												Line:   212,
											},
											File:   "strictFilter_test.flux",
											Source: "columns",
											Start: ast.Position{
												Column: 13,
												Line:   212,
											},
										},
									},
									Name: "columns",
								},
								Value: &ast.ArrayExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 41,
												Line:   212,
											},
											File:   "strictFilter_test.flux",
											Source: "[\"_start\", \"_stop\"]",
											Start: ast.Position{
												Column: 22,
												Line:   212,
											},
										},
									},
									Elements: []ast.Expression{&ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 31,
													Line:   212,
												},
												File:   "strictFilter_test.flux",
												Source: "\"_start\"",
												Start: ast.Position{
													Column: 23,
													Line:   212,
												},
											},
										},
										Value: "_start",
									}, &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 40,
													Line:   212,
												},
												File:   "strictFilter_test.flux",
												Source: "\"_stop\"",
												Start: ast.Position{
													Column: 33,
													Line:   212,
												},
											},
										},
										Value: "_stop",
									}},
								},
							}},
							With: nil,
						}},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   212,
								},
								File:   "strictFilter_test.flux",
								Source: "drop(columns: [\"_start\", \"_stop\"])",
								Start: ast.Position{
									Column: 8,
									Line:   212,
								},
							},
						},
						Callee: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 12,
										Line:   212,
									},
									File:   "strictFilter_test.flux",
									Source: "drop",
									Start: ast.Position{
										Column: 8,
										Line:   212,
									},
								},
							},
							Name: "drop",
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 27,
								Line:   207,
							},
							File:   "strictFilter_test.flux",
							Source: "table=<-",
							Start: ast.Position{
								Column: 19,
								Line:   207,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 24,
									Line:   207,
								},
								File:   "strictFilter_test.flux",
								Source: "table",
								Start: ast.Position{
									Column: 19,
									Line:   207,
								},
							},
						},
						Name: "table",
					},
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 27,
								Line:   207,
							},
							File:   "strictFilter_test.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 25,
								Line:   207,
							},
						},
					}},
				}},
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 102,
							Line:   214,
						},
						File:   "strictFilter_test.flux",
						Source: "_strictFilter = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_strictFilter})",
						Start: ast.Position{
							Column: 6,
							Line:   213,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 19,
								Line:   213,
							},
							File:   "strictFilter_test.flux",
							Source: "_strictFilter",
							Start: ast.Position{
								Column: 6,
								Line:   213,
							},
						},
					},
					Name: "_strictFilter",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 102,
								Line:   214,
							},
							File:   "strictFilter_test.flux",
							Source: "() =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_strictFilter})",
							Start: ast.Position{
								Column: 22,
								Line:   213,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 102,
									Line:   214,
								},
								File:   "strictFilter_test.flux",
								Source: "({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_strictFilter})",
								Start: ast.Position{
									Column: 2,
									Line:   214,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 101,
										Line:   214,
									},
									File:   "strictFilter_test.flux",
									Source: "{input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_strictFilter}",
									Start: ast.Position{
										Column: 3,
										Line:   214,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 43,
											Line:   214,
										},
										File:   "strictFilter_test.flux",
										Source: "input: testing.loadStorage(csv: inData)",
										Start: ast.Position{
											Column: 4,
											Line:   214,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 9,
												Line:   214,
											},
											File:   "strictFilter_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 4,
												Line:   214,
											},
										},
									},
									Name: "input",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   214,
												},
												File:   "strictFilter_test.flux",
												Source: "csv: inData",
												Start: ast.Position{
													Column: 31,
													Line:   214,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 42,
														Line:   214,
													},
													File:   "strictFilter_test.flux",
													Source: "csv: inData",
													Start: ast.Position{
														Column: 31,
														Line:   214,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 34,
															Line:   214,
														},
														File:   "strictFilter_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 31,
															Line:   214,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 42,
															Line:   214,
														},
														File:   "strictFilter_test.flux",
														Source: "inData",
														Start: ast.Position{
															Column: 36,
															Line:   214,
														},
													},
												},
												Name: "inData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 43,
												Line:   214,
											},
											File:   "strictFilter_test.flux",
											Source: "testing.loadStorage(csv: inData)",
											Start: ast.Position{
												Column: 11,
												Line:   214,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   214,
												},
												File:   "strictFilter_test.flux",
												Source: "testing.loadStorage",
												Start: ast.Position{
													Column: 11,
													Line:   214,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   214,
													},
													File:   "strictFilter_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 11,
														Line:   214,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 30,
														Line:   214,
													},
													File:   "strictFilter_test.flux",
													Source: "loadStorage",
													Start: ast.Position{
														Column: 19,
														Line:   214,
													},
												},
											},
											Name: "loadStorage",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 80,
											Line:   214,
										},
										File:   "strictFilter_test.flux",
										Source: "want: testing.loadMem(csv: outData)",
										Start: ast.Position{
											Column: 45,
											Line:   214,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 49,
												Line:   214,
											},
											File:   "strictFilter_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 45,
												Line:   214,
											},
										},
									},
									Name: "want",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 79,
													Line:   214,
												},
												File:   "strictFilter_test.flux",
												Source: "csv: outData",
												Start: ast.Position{
													Column: 67,
													Line:   214,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 79,
														Line:   214,
													},
													File:   "strictFilter_test.flux",
													Source: "csv: outData",
													Start: ast.Position{
														Column: 67,
														Line:   214,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 70,
															Line:   214,
														},
														File:   "strictFilter_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 67,
															Line:   214,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 79,
															Line:   214,
														},
														File:   "strictFilter_test.flux",
														Source: "outData",
														Start: ast.Position{
															Column: 72,
															Line:   214,
														},
													},
												},
												Name: "outData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 80,
												Line:   214,
											},
											File:   "strictFilter_test.flux",
											Source: "testing.loadMem(csv: outData)",
											Start: ast.Position{
												Column: 51,
												Line:   214,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   214,
												},
												File:   "strictFilter_test.flux",
												Source: "testing.loadMem",
												Start: ast.Position{
													Column: 51,
													Line:   214,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 58,
														Line:   214,
													},
													File:   "strictFilter_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 51,
														Line:   214,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 66,
														Line:   214,
													},
													File:   "strictFilter_test.flux",
													Source: "loadMem",
													Start: ast.Position{
														Column: 59,
														Line:   214,
													},
												},
											},
											Name: "loadMem",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 100,
											Line:   214,
										},
										File:   "strictFilter_test.flux",
										Source: "fn: t_strictFilter",
										Start: ast.Position{
											Column: 82,
											Line:   214,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 84,
												Line:   214,
											},
											File:   "strictFilter_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 82,
												Line:   214,
											},
										},
									},
									Name: "fn",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 100,
												Line:   214,
											},
											File:   "strictFilter_test.flux",
											Source: "t_strictFilter",
											Start: ast.Position{
												Column: 86,
												Line:   214,
											},
										},
									},
									Name: "t_strictFilter",
								},
							}},
							With: nil,
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 102,
						Line:   214,
					},
					File:   "strictFilter_test.flux",
					Source: "test _strictFilter = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_strictFilter})",
					Start: ast.Position{
						Column: 1,
						Line:   213,
					},
				},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 26,
						Line:   3,
					},
					File:   "strictFilter_test.flux",
					Source: "import \"experimental/geo\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 26,
							Line:   3,
						},
						File:   "strictFilter_test.flux",
						Source: "\"experimental/geo\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "experimental/geo",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   4,
					},
					File:   "strictFilter_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   4,
						},
						File:   "strictFilter_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "testing",
			},
		}},
		Metadata: "parser-type=go",
		Name:     "strictFilter_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   1,
					},
					File:   "strictFilter_test.flux",
					Source: "package geo_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   1,
						},
						File:   "strictFilter_test.flux",
						Source: "geo_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "geo_test",
			},
		},
	}},
	Package: "geo_test",
	Path:    "experimental/geo",
}}
