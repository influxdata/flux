// DO NOT EDIT: This file is autogenerated via the builtin command.

package geo

import (
	ast "github.com/influxdata/flux/ast"
	parser "github.com/influxdata/flux/internal/parser"
)

var FluxTestPackages = []*ast.Package{&ast.Package{
	BaseNode: ast.BaseNode{
		Errors: nil,
		Loc:    nil,
	},
	Files: []*ast.File{&ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 98,
					Line:   170,
				},
				File:   "asTracks_test.flux",
				Source: "package geo_test\n\nimport \"experimental/geo\"\nimport \"testing\"\n\noption now = () => (2030-01-01T00:00:00Z)\n\ninData = \"\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,0,2019-11-10T11:08:34Z,40.762662,89c258c,lat,bikes,end,vehicleB\n,,0,2019-11-10T21:17:47Z,40.762424,89c258c,lat,bikes,end,vehicleB\n,,1,2019-11-10T11:07:12Z,40.762096,89c258c,lat,bikes,start,vehicleB\n,,1,2019-11-10T21:16:00Z,40.763126,89c258c,lat,bikes,start,vehicleB\n,,2,2019-11-10T11:07:35Z,40.762225,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:07:38Z,40.762247,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:07:43Z,40.762331,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:07:48Z,40.762408,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:07:52Z,40.762484,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:08:01Z,40.762597,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:08:16Z,40.762574,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:16:06Z,40.76309,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:16:18Z,40.763036,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:16:31Z,40.763006,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:16:48Z,40.762904,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:17:08Z,40.762836,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:17:23Z,40.762736,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:17:36Z,40.762469,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:17:46Z,40.762418,89c258c,lat,bikes,via,vehicleB\n,,3,2019-11-10T11:08:34Z,-73.967971,89c258c,lon,bikes,end,vehicleB\n,,3,2019-11-10T21:17:47Z,-73.965583,89c258c,lon,bikes,end,vehicleB\n,,4,2019-11-10T11:07:12Z,-73.967104,89c258c,lon,bikes,start,vehicleB\n,,4,2019-11-10T21:16:00Z,-73.966333,89c258c,lon,bikes,start,vehicleB\n,,5,2019-11-10T11:07:35Z,-73.967081,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:07:38Z,-73.967129,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:07:43Z,-73.967261,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:07:48Z,-73.967422,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:07:52Z,-73.967542,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:08:01Z,-73.967718,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:08:16Z,-73.967803,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:16:06Z,-73.966254,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:16:18Z,-73.966091,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:16:31Z,-73.965889,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:16:48Z,-73.96573,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:17:08Z,-73.965721,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:17:23Z,-73.965801,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:17:36Z,-73.96559,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:17:46Z,-73.965579,89c258c,lon,bikes,via,vehicleB\n\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,6,2019-11-10T11:08:34Z,1573384032,89c258c,tid,bikes,end,vehicleB\n,,6,2019-11-10T21:17:47Z,1573420560,89c258c,tid,bikes,end,vehicleB\n,,7,2019-11-10T11:07:12Z,1573384032,89c258c,tid,bikes,start,vehicleB\n,,7,2019-11-10T21:16:00Z,1573420560,89c258c,tid,bikes,start,vehicleB\n,,8,2019-11-10T11:07:35Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:07:38Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:07:43Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:07:48Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:07:52Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:08:01Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:08:16Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:16:06Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:16:18Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:16:31Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:16:48Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:17:08Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:17:23Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:17:36Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:17:46Z,1573420560,89c258c,tid,bikes,via,vehicleB\n\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,9,2019-11-20T10:17:17Z,40.700344,89e82cc,lat,bikes,start,vehicleA\n,,10,2019-11-20T10:17:18Z,40.700348,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:24Z,40.700397,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:26Z,40.700413,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:32Z,40.700474,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:35Z,40.700481,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:42Z,40.700459,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:47Z,40.700455,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:54Z,40.700542,89e82cc,lat,bikes,via,vehicleA\n,,11,2019-11-20T10:17:17Z,-73.324814,89e82cc,lon,bikes,start,vehicleA\n,,12,2019-11-20T10:17:18Z,-73.324799,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:24Z,-73.324699,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:26Z,-73.324638,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:32Z,-73.324471,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:35Z,-73.324371,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:42Z,-73.324181,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:47Z,-73.323982,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:54Z,-73.323769,89e82cc,lon,bikes,via,vehicleA\n\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,13,2019-11-20T10:17:17Z,1574245037,89e82cc,tid,bikes,start,vehicleA\n,,14,2019-11-20T10:17:18Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:24Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:26Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:32Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:35Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:42Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:47Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:54Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,15,2019-11-20T10:18:00Z,40.700684,89e82d4,lat,bikes,end,vehicleA\n,,16,2019-11-20T10:18:00Z,-73.323692,89e82d4,lon,bikes,end,vehicleA\n\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,17,2019-11-20T10:18:00Z,1574245037,89e82d4,tid,bikes,end,vehicleA\n\"\n\noutData = \"\n#group,false,false,false,false,false,false,true,false,true,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,string,double,long,double\n#default,_result,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,id,lat,tid,lon\n,,0,2019-11-20T10:17:17Z,89e82cc,bikes,start,vehicleA,40.700344,1574245037,-73.324814\n,,0,2019-11-20T10:17:18Z,89e82cc,bikes,via,vehicleA,40.700348,1574245037,-73.324799\n,,0,2019-11-20T10:17:24Z,89e82cc,bikes,via,vehicleA,40.700397,1574245037,-73.324699\n,,0,2019-11-20T10:17:26Z,89e82cc,bikes,via,vehicleA,40.700413,1574245037,-73.324638\n,,0,2019-11-20T10:17:32Z,89e82cc,bikes,via,vehicleA,40.700474,1574245037,-73.324471\n,,0,2019-11-20T10:17:35Z,89e82cc,bikes,via,vehicleA,40.700481,1574245037,-73.324371\n,,0,2019-11-20T10:17:42Z,89e82cc,bikes,via,vehicleA,40.700459,1574245037,-73.324181\n,,0,2019-11-20T10:17:47Z,89e82cc,bikes,via,vehicleA,40.700455,1574245037,-73.323982\n,,0,2019-11-20T10:17:54Z,89e82cc,bikes,via,vehicleA,40.700542,1574245037,-73.323769\n,,0,2019-11-20T10:18:00Z,89e82d4,bikes,end,vehicleA,40.700684,1574245037,-73.323692\n,,1,2019-11-10T11:07:12Z,89c258c,bikes,start,vehicleB,40.762096,1573384032,-73.967104\n,,1,2019-11-10T11:07:35Z,89c258c,bikes,via,vehicleB,40.762225,1573384032,-73.967081\n,,1,2019-11-10T11:07:38Z,89c258c,bikes,via,vehicleB,40.762247,1573384032,-73.967129\n,,1,2019-11-10T11:07:43Z,89c258c,bikes,via,vehicleB,40.762331,1573384032,-73.967261\n,,1,2019-11-10T11:07:48Z,89c258c,bikes,via,vehicleB,40.762408,1573384032,-73.967422\n,,1,2019-11-10T11:07:52Z,89c258c,bikes,via,vehicleB,40.762484,1573384032,-73.967542\n,,1,2019-11-10T11:08:01Z,89c258c,bikes,via,vehicleB,40.762597,1573384032,-73.967718\n,,1,2019-11-10T11:08:16Z,89c258c,bikes,via,vehicleB,40.762574,1573384032,-73.967803\n,,1,2019-11-10T11:08:34Z,89c258c,bikes,end,vehicleB,40.762662,1573384032,-73.967971\n,,2,2019-11-10T21:16:00Z,89c258c,bikes,start,vehicleB,40.763126,1573420560,-73.966333\n,,2,2019-11-10T21:16:06Z,89c258c,bikes,via,vehicleB,40.76309,1573420560,-73.966254\n,,2,2019-11-10T21:16:18Z,89c258c,bikes,via,vehicleB,40.763036,1573420560,-73.966091\n,,2,2019-11-10T21:16:31Z,89c258c,bikes,via,vehicleB,40.763006,1573420560,-73.965889\n,,2,2019-11-10T21:16:48Z,89c258c,bikes,via,vehicleB,40.762904,1573420560,-73.96573\n,,2,2019-11-10T21:17:08Z,89c258c,bikes,via,vehicleB,40.762836,1573420560,-73.965721\n,,2,2019-11-10T21:17:23Z,89c258c,bikes,via,vehicleB,40.762736,1573420560,-73.965801\n,,2,2019-11-10T21:17:36Z,89c258c,bikes,via,vehicleB,40.762469,1573420560,-73.96559\n,,2,2019-11-10T21:17:46Z,89c258c,bikes,via,vehicleB,40.762418,1573420560,-73.965579\n,,2,2019-11-10T21:17:47Z,89c258c,bikes,end,vehicleB,40.762424,1573420560,-73.965583\n\"\n\nt_asTracks = (table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.toRows()\n    |> geo.asTracks()\n    |> drop(columns: [\"_start\", \"_stop\"])\ntest _asTracks = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_asTracks})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   6,
						},
						File:   "asTracks_test.flux",
						Source: "now = () => (2030-01-01T00:00:00Z)",
						Start: ast.Position{
							Column: 8,
							Line:   6,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   6,
							},
							File:   "asTracks_test.flux",
							Source: "now",
							Start: ast.Position{
								Column: 8,
								Line:   6,
							},
						},
					},
					Name: "now",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   6,
							},
							File:   "asTracks_test.flux",
							Source: "() => (2030-01-01T00:00:00Z)",
							Start: ast.Position{
								Column: 14,
								Line:   6,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   6,
								},
								File:   "asTracks_test.flux",
								Source: "(2030-01-01T00:00:00Z)",
								Start: ast.Position{
									Column: 20,
									Line:   6,
								},
							},
						},
						Expression: &ast.DateTimeLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   6,
									},
									File:   "asTracks_test.flux",
									Source: "2030-01-01T00:00:00Z",
									Start: ast.Position{
										Column: 21,
										Line:   6,
									},
								},
							},
							Value: parser.MustParseTime("2030-01-01T00:00:00Z"),
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   6,
					},
					File:   "asTracks_test.flux",
					Source: "option now = () => (2030-01-01T00:00:00Z)",
					Start: ast.Position{
						Column: 1,
						Line:   6,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   125,
					},
					File:   "asTracks_test.flux",
					Source: "inData = \"\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,0,2019-11-10T11:08:34Z,40.762662,89c258c,lat,bikes,end,vehicleB\n,,0,2019-11-10T21:17:47Z,40.762424,89c258c,lat,bikes,end,vehicleB\n,,1,2019-11-10T11:07:12Z,40.762096,89c258c,lat,bikes,start,vehicleB\n,,1,2019-11-10T21:16:00Z,40.763126,89c258c,lat,bikes,start,vehicleB\n,,2,2019-11-10T11:07:35Z,40.762225,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:07:38Z,40.762247,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:07:43Z,40.762331,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:07:48Z,40.762408,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:07:52Z,40.762484,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:08:01Z,40.762597,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:08:16Z,40.762574,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:16:06Z,40.76309,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:16:18Z,40.763036,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:16:31Z,40.763006,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:16:48Z,40.762904,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:17:08Z,40.762836,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:17:23Z,40.762736,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:17:36Z,40.762469,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:17:46Z,40.762418,89c258c,lat,bikes,via,vehicleB\n,,3,2019-11-10T11:08:34Z,-73.967971,89c258c,lon,bikes,end,vehicleB\n,,3,2019-11-10T21:17:47Z,-73.965583,89c258c,lon,bikes,end,vehicleB\n,,4,2019-11-10T11:07:12Z,-73.967104,89c258c,lon,bikes,start,vehicleB\n,,4,2019-11-10T21:16:00Z,-73.966333,89c258c,lon,bikes,start,vehicleB\n,,5,2019-11-10T11:07:35Z,-73.967081,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:07:38Z,-73.967129,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:07:43Z,-73.967261,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:07:48Z,-73.967422,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:07:52Z,-73.967542,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:08:01Z,-73.967718,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:08:16Z,-73.967803,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:16:06Z,-73.966254,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:16:18Z,-73.966091,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:16:31Z,-73.965889,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:16:48Z,-73.96573,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:17:08Z,-73.965721,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:17:23Z,-73.965801,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:17:36Z,-73.96559,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:17:46Z,-73.965579,89c258c,lon,bikes,via,vehicleB\n\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,6,2019-11-10T11:08:34Z,1573384032,89c258c,tid,bikes,end,vehicleB\n,,6,2019-11-10T21:17:47Z,1573420560,89c258c,tid,bikes,end,vehicleB\n,,7,2019-11-10T11:07:12Z,1573384032,89c258c,tid,bikes,start,vehicleB\n,,7,2019-11-10T21:16:00Z,1573420560,89c258c,tid,bikes,start,vehicleB\n,,8,2019-11-10T11:07:35Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:07:38Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:07:43Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:07:48Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:07:52Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:08:01Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:08:16Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:16:06Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:16:18Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:16:31Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:16:48Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:17:08Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:17:23Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:17:36Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:17:46Z,1573420560,89c258c,tid,bikes,via,vehicleB\n\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,9,2019-11-20T10:17:17Z,40.700344,89e82cc,lat,bikes,start,vehicleA\n,,10,2019-11-20T10:17:18Z,40.700348,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:24Z,40.700397,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:26Z,40.700413,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:32Z,40.700474,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:35Z,40.700481,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:42Z,40.700459,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:47Z,40.700455,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:54Z,40.700542,89e82cc,lat,bikes,via,vehicleA\n,,11,2019-11-20T10:17:17Z,-73.324814,89e82cc,lon,bikes,start,vehicleA\n,,12,2019-11-20T10:17:18Z,-73.324799,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:24Z,-73.324699,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:26Z,-73.324638,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:32Z,-73.324471,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:35Z,-73.324371,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:42Z,-73.324181,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:47Z,-73.323982,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:54Z,-73.323769,89e82cc,lon,bikes,via,vehicleA\n\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,13,2019-11-20T10:17:17Z,1574245037,89e82cc,tid,bikes,start,vehicleA\n,,14,2019-11-20T10:17:18Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:24Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:26Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:32Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:35Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:42Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:47Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:54Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,15,2019-11-20T10:18:00Z,40.700684,89e82d4,lat,bikes,end,vehicleA\n,,16,2019-11-20T10:18:00Z,-73.323692,89e82d4,lon,bikes,end,vehicleA\n\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,17,2019-11-20T10:18:00Z,1574245037,89e82d4,tid,bikes,end,vehicleA\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   8,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 7,
							Line:   8,
						},
						File:   "asTracks_test.flux",
						Source: "inData",
						Start: ast.Position{
							Column: 1,
							Line:   8,
						},
					},
				},
				Name: "inData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   125,
						},
						File:   "asTracks_test.flux",
						Source: "\"\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,0,2019-11-10T11:08:34Z,40.762662,89c258c,lat,bikes,end,vehicleB\n,,0,2019-11-10T21:17:47Z,40.762424,89c258c,lat,bikes,end,vehicleB\n,,1,2019-11-10T11:07:12Z,40.762096,89c258c,lat,bikes,start,vehicleB\n,,1,2019-11-10T21:16:00Z,40.763126,89c258c,lat,bikes,start,vehicleB\n,,2,2019-11-10T11:07:35Z,40.762225,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:07:38Z,40.762247,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:07:43Z,40.762331,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:07:48Z,40.762408,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:07:52Z,40.762484,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:08:01Z,40.762597,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:08:16Z,40.762574,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:16:06Z,40.76309,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:16:18Z,40.763036,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:16:31Z,40.763006,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:16:48Z,40.762904,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:17:08Z,40.762836,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:17:23Z,40.762736,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:17:36Z,40.762469,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:17:46Z,40.762418,89c258c,lat,bikes,via,vehicleB\n,,3,2019-11-10T11:08:34Z,-73.967971,89c258c,lon,bikes,end,vehicleB\n,,3,2019-11-10T21:17:47Z,-73.965583,89c258c,lon,bikes,end,vehicleB\n,,4,2019-11-10T11:07:12Z,-73.967104,89c258c,lon,bikes,start,vehicleB\n,,4,2019-11-10T21:16:00Z,-73.966333,89c258c,lon,bikes,start,vehicleB\n,,5,2019-11-10T11:07:35Z,-73.967081,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:07:38Z,-73.967129,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:07:43Z,-73.967261,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:07:48Z,-73.967422,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:07:52Z,-73.967542,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:08:01Z,-73.967718,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:08:16Z,-73.967803,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:16:06Z,-73.966254,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:16:18Z,-73.966091,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:16:31Z,-73.965889,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:16:48Z,-73.96573,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:17:08Z,-73.965721,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:17:23Z,-73.965801,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:17:36Z,-73.96559,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:17:46Z,-73.965579,89c258c,lon,bikes,via,vehicleB\n\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,6,2019-11-10T11:08:34Z,1573384032,89c258c,tid,bikes,end,vehicleB\n,,6,2019-11-10T21:17:47Z,1573420560,89c258c,tid,bikes,end,vehicleB\n,,7,2019-11-10T11:07:12Z,1573384032,89c258c,tid,bikes,start,vehicleB\n,,7,2019-11-10T21:16:00Z,1573420560,89c258c,tid,bikes,start,vehicleB\n,,8,2019-11-10T11:07:35Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:07:38Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:07:43Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:07:48Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:07:52Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:08:01Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:08:16Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:16:06Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:16:18Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:16:31Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:16:48Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:17:08Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:17:23Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:17:36Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:17:46Z,1573420560,89c258c,tid,bikes,via,vehicleB\n\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,9,2019-11-20T10:17:17Z,40.700344,89e82cc,lat,bikes,start,vehicleA\n,,10,2019-11-20T10:17:18Z,40.700348,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:24Z,40.700397,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:26Z,40.700413,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:32Z,40.700474,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:35Z,40.700481,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:42Z,40.700459,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:47Z,40.700455,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:54Z,40.700542,89e82cc,lat,bikes,via,vehicleA\n,,11,2019-11-20T10:17:17Z,-73.324814,89e82cc,lon,bikes,start,vehicleA\n,,12,2019-11-20T10:17:18Z,-73.324799,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:24Z,-73.324699,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:26Z,-73.324638,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:32Z,-73.324471,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:35Z,-73.324371,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:42Z,-73.324181,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:47Z,-73.323982,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:54Z,-73.323769,89e82cc,lon,bikes,via,vehicleA\n\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,13,2019-11-20T10:17:17Z,1574245037,89e82cc,tid,bikes,start,vehicleA\n,,14,2019-11-20T10:17:18Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:24Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:26Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:32Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:35Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:42Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:47Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:54Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,15,2019-11-20T10:18:00Z,40.700684,89e82d4,lat,bikes,end,vehicleA\n,,16,2019-11-20T10:18:00Z,-73.323692,89e82d4,lon,bikes,end,vehicleA\n\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,17,2019-11-20T10:18:00Z,1574245037,89e82d4,tid,bikes,end,vehicleA\n\"",
						Start: ast.Position{
							Column: 10,
							Line:   8,
						},
					},
				},
				Value: "\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,0,2019-11-10T11:08:34Z,40.762662,89c258c,lat,bikes,end,vehicleB\n,,0,2019-11-10T21:17:47Z,40.762424,89c258c,lat,bikes,end,vehicleB\n,,1,2019-11-10T11:07:12Z,40.762096,89c258c,lat,bikes,start,vehicleB\n,,1,2019-11-10T21:16:00Z,40.763126,89c258c,lat,bikes,start,vehicleB\n,,2,2019-11-10T11:07:35Z,40.762225,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:07:38Z,40.762247,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:07:43Z,40.762331,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:07:48Z,40.762408,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:07:52Z,40.762484,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:08:01Z,40.762597,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T11:08:16Z,40.762574,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:16:06Z,40.76309,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:16:18Z,40.763036,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:16:31Z,40.763006,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:16:48Z,40.762904,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:17:08Z,40.762836,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:17:23Z,40.762736,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:17:36Z,40.762469,89c258c,lat,bikes,via,vehicleB\n,,2,2019-11-10T21:17:46Z,40.762418,89c258c,lat,bikes,via,vehicleB\n,,3,2019-11-10T11:08:34Z,-73.967971,89c258c,lon,bikes,end,vehicleB\n,,3,2019-11-10T21:17:47Z,-73.965583,89c258c,lon,bikes,end,vehicleB\n,,4,2019-11-10T11:07:12Z,-73.967104,89c258c,lon,bikes,start,vehicleB\n,,4,2019-11-10T21:16:00Z,-73.966333,89c258c,lon,bikes,start,vehicleB\n,,5,2019-11-10T11:07:35Z,-73.967081,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:07:38Z,-73.967129,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:07:43Z,-73.967261,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:07:48Z,-73.967422,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:07:52Z,-73.967542,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:08:01Z,-73.967718,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T11:08:16Z,-73.967803,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:16:06Z,-73.966254,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:16:18Z,-73.966091,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:16:31Z,-73.965889,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:16:48Z,-73.96573,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:17:08Z,-73.965721,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:17:23Z,-73.965801,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:17:36Z,-73.96559,89c258c,lon,bikes,via,vehicleB\n,,5,2019-11-10T21:17:46Z,-73.965579,89c258c,lon,bikes,via,vehicleB\n\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,6,2019-11-10T11:08:34Z,1573384032,89c258c,tid,bikes,end,vehicleB\n,,6,2019-11-10T21:17:47Z,1573420560,89c258c,tid,bikes,end,vehicleB\n,,7,2019-11-10T11:07:12Z,1573384032,89c258c,tid,bikes,start,vehicleB\n,,7,2019-11-10T21:16:00Z,1573420560,89c258c,tid,bikes,start,vehicleB\n,,8,2019-11-10T11:07:35Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:07:38Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:07:43Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:07:48Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:07:52Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:08:01Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T11:08:16Z,1573384032,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:16:06Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:16:18Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:16:31Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:16:48Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:17:08Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:17:23Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:17:36Z,1573420560,89c258c,tid,bikes,via,vehicleB\n,,8,2019-11-10T21:17:46Z,1573420560,89c258c,tid,bikes,via,vehicleB\n\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,9,2019-11-20T10:17:17Z,40.700344,89e82cc,lat,bikes,start,vehicleA\n,,10,2019-11-20T10:17:18Z,40.700348,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:24Z,40.700397,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:26Z,40.700413,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:32Z,40.700474,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:35Z,40.700481,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:42Z,40.700459,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:47Z,40.700455,89e82cc,lat,bikes,via,vehicleA\n,,10,2019-11-20T10:17:54Z,40.700542,89e82cc,lat,bikes,via,vehicleA\n,,11,2019-11-20T10:17:17Z,-73.324814,89e82cc,lon,bikes,start,vehicleA\n,,12,2019-11-20T10:17:18Z,-73.324799,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:24Z,-73.324699,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:26Z,-73.324638,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:32Z,-73.324471,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:35Z,-73.324371,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:42Z,-73.324181,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:47Z,-73.323982,89e82cc,lon,bikes,via,vehicleA\n,,12,2019-11-20T10:17:54Z,-73.323769,89e82cc,lon,bikes,via,vehicleA\n\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,13,2019-11-20T10:17:17Z,1574245037,89e82cc,tid,bikes,start,vehicleA\n,,14,2019-11-20T10:17:18Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:24Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:26Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:32Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:35Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:42Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:47Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n,,14,2019-11-20T10:17:54Z,1574245037,89e82cc,tid,bikes,via,vehicleA\n\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,15,2019-11-20T10:18:00Z,40.700684,89e82d4,lat,bikes,end,vehicleA\n,,16,2019-11-20T10:18:00Z,-73.323692,89e82d4,lon,bikes,end,vehicleA\n\n#group,false,false,false,false,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string\n#default,_result,,,,,,,,\n,result,table,_time,_value,s2_cell_id,_field,_measurement,_pt,id\n,,17,2019-11-20T10:18:00Z,1574245037,89e82d4,tid,bikes,end,vehicleA\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   161,
					},
					File:   "asTracks_test.flux",
					Source: "outData = \"\n#group,false,false,false,false,false,false,true,false,true,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,string,double,long,double\n#default,_result,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,id,lat,tid,lon\n,,0,2019-11-20T10:17:17Z,89e82cc,bikes,start,vehicleA,40.700344,1574245037,-73.324814\n,,0,2019-11-20T10:17:18Z,89e82cc,bikes,via,vehicleA,40.700348,1574245037,-73.324799\n,,0,2019-11-20T10:17:24Z,89e82cc,bikes,via,vehicleA,40.700397,1574245037,-73.324699\n,,0,2019-11-20T10:17:26Z,89e82cc,bikes,via,vehicleA,40.700413,1574245037,-73.324638\n,,0,2019-11-20T10:17:32Z,89e82cc,bikes,via,vehicleA,40.700474,1574245037,-73.324471\n,,0,2019-11-20T10:17:35Z,89e82cc,bikes,via,vehicleA,40.700481,1574245037,-73.324371\n,,0,2019-11-20T10:17:42Z,89e82cc,bikes,via,vehicleA,40.700459,1574245037,-73.324181\n,,0,2019-11-20T10:17:47Z,89e82cc,bikes,via,vehicleA,40.700455,1574245037,-73.323982\n,,0,2019-11-20T10:17:54Z,89e82cc,bikes,via,vehicleA,40.700542,1574245037,-73.323769\n,,0,2019-11-20T10:18:00Z,89e82d4,bikes,end,vehicleA,40.700684,1574245037,-73.323692\n,,1,2019-11-10T11:07:12Z,89c258c,bikes,start,vehicleB,40.762096,1573384032,-73.967104\n,,1,2019-11-10T11:07:35Z,89c258c,bikes,via,vehicleB,40.762225,1573384032,-73.967081\n,,1,2019-11-10T11:07:38Z,89c258c,bikes,via,vehicleB,40.762247,1573384032,-73.967129\n,,1,2019-11-10T11:07:43Z,89c258c,bikes,via,vehicleB,40.762331,1573384032,-73.967261\n,,1,2019-11-10T11:07:48Z,89c258c,bikes,via,vehicleB,40.762408,1573384032,-73.967422\n,,1,2019-11-10T11:07:52Z,89c258c,bikes,via,vehicleB,40.762484,1573384032,-73.967542\n,,1,2019-11-10T11:08:01Z,89c258c,bikes,via,vehicleB,40.762597,1573384032,-73.967718\n,,1,2019-11-10T11:08:16Z,89c258c,bikes,via,vehicleB,40.762574,1573384032,-73.967803\n,,1,2019-11-10T11:08:34Z,89c258c,bikes,end,vehicleB,40.762662,1573384032,-73.967971\n,,2,2019-11-10T21:16:00Z,89c258c,bikes,start,vehicleB,40.763126,1573420560,-73.966333\n,,2,2019-11-10T21:16:06Z,89c258c,bikes,via,vehicleB,40.76309,1573420560,-73.966254\n,,2,2019-11-10T21:16:18Z,89c258c,bikes,via,vehicleB,40.763036,1573420560,-73.966091\n,,2,2019-11-10T21:16:31Z,89c258c,bikes,via,vehicleB,40.763006,1573420560,-73.965889\n,,2,2019-11-10T21:16:48Z,89c258c,bikes,via,vehicleB,40.762904,1573420560,-73.96573\n,,2,2019-11-10T21:17:08Z,89c258c,bikes,via,vehicleB,40.762836,1573420560,-73.965721\n,,2,2019-11-10T21:17:23Z,89c258c,bikes,via,vehicleB,40.762736,1573420560,-73.965801\n,,2,2019-11-10T21:17:36Z,89c258c,bikes,via,vehicleB,40.762469,1573420560,-73.96559\n,,2,2019-11-10T21:17:46Z,89c258c,bikes,via,vehicleB,40.762418,1573420560,-73.965579\n,,2,2019-11-10T21:17:47Z,89c258c,bikes,end,vehicleB,40.762424,1573420560,-73.965583\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   127,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 8,
							Line:   127,
						},
						File:   "asTracks_test.flux",
						Source: "outData",
						Start: ast.Position{
							Column: 1,
							Line:   127,
						},
					},
				},
				Name: "outData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   161,
						},
						File:   "asTracks_test.flux",
						Source: "\"\n#group,false,false,false,false,false,false,true,false,true,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,string,double,long,double\n#default,_result,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,id,lat,tid,lon\n,,0,2019-11-20T10:17:17Z,89e82cc,bikes,start,vehicleA,40.700344,1574245037,-73.324814\n,,0,2019-11-20T10:17:18Z,89e82cc,bikes,via,vehicleA,40.700348,1574245037,-73.324799\n,,0,2019-11-20T10:17:24Z,89e82cc,bikes,via,vehicleA,40.700397,1574245037,-73.324699\n,,0,2019-11-20T10:17:26Z,89e82cc,bikes,via,vehicleA,40.700413,1574245037,-73.324638\n,,0,2019-11-20T10:17:32Z,89e82cc,bikes,via,vehicleA,40.700474,1574245037,-73.324471\n,,0,2019-11-20T10:17:35Z,89e82cc,bikes,via,vehicleA,40.700481,1574245037,-73.324371\n,,0,2019-11-20T10:17:42Z,89e82cc,bikes,via,vehicleA,40.700459,1574245037,-73.324181\n,,0,2019-11-20T10:17:47Z,89e82cc,bikes,via,vehicleA,40.700455,1574245037,-73.323982\n,,0,2019-11-20T10:17:54Z,89e82cc,bikes,via,vehicleA,40.700542,1574245037,-73.323769\n,,0,2019-11-20T10:18:00Z,89e82d4,bikes,end,vehicleA,40.700684,1574245037,-73.323692\n,,1,2019-11-10T11:07:12Z,89c258c,bikes,start,vehicleB,40.762096,1573384032,-73.967104\n,,1,2019-11-10T11:07:35Z,89c258c,bikes,via,vehicleB,40.762225,1573384032,-73.967081\n,,1,2019-11-10T11:07:38Z,89c258c,bikes,via,vehicleB,40.762247,1573384032,-73.967129\n,,1,2019-11-10T11:07:43Z,89c258c,bikes,via,vehicleB,40.762331,1573384032,-73.967261\n,,1,2019-11-10T11:07:48Z,89c258c,bikes,via,vehicleB,40.762408,1573384032,-73.967422\n,,1,2019-11-10T11:07:52Z,89c258c,bikes,via,vehicleB,40.762484,1573384032,-73.967542\n,,1,2019-11-10T11:08:01Z,89c258c,bikes,via,vehicleB,40.762597,1573384032,-73.967718\n,,1,2019-11-10T11:08:16Z,89c258c,bikes,via,vehicleB,40.762574,1573384032,-73.967803\n,,1,2019-11-10T11:08:34Z,89c258c,bikes,end,vehicleB,40.762662,1573384032,-73.967971\n,,2,2019-11-10T21:16:00Z,89c258c,bikes,start,vehicleB,40.763126,1573420560,-73.966333\n,,2,2019-11-10T21:16:06Z,89c258c,bikes,via,vehicleB,40.76309,1573420560,-73.966254\n,,2,2019-11-10T21:16:18Z,89c258c,bikes,via,vehicleB,40.763036,1573420560,-73.966091\n,,2,2019-11-10T21:16:31Z,89c258c,bikes,via,vehicleB,40.763006,1573420560,-73.965889\n,,2,2019-11-10T21:16:48Z,89c258c,bikes,via,vehicleB,40.762904,1573420560,-73.96573\n,,2,2019-11-10T21:17:08Z,89c258c,bikes,via,vehicleB,40.762836,1573420560,-73.965721\n,,2,2019-11-10T21:17:23Z,89c258c,bikes,via,vehicleB,40.762736,1573420560,-73.965801\n,,2,2019-11-10T21:17:36Z,89c258c,bikes,via,vehicleB,40.762469,1573420560,-73.96559\n,,2,2019-11-10T21:17:46Z,89c258c,bikes,via,vehicleB,40.762418,1573420560,-73.965579\n,,2,2019-11-10T21:17:47Z,89c258c,bikes,end,vehicleB,40.762424,1573420560,-73.965583\n\"",
						Start: ast.Position{
							Column: 11,
							Line:   127,
						},
					},
				},
				Value: "\n#group,false,false,false,false,false,false,true,false,true,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,string,double,long,double\n#default,_result,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,id,lat,tid,lon\n,,0,2019-11-20T10:17:17Z,89e82cc,bikes,start,vehicleA,40.700344,1574245037,-73.324814\n,,0,2019-11-20T10:17:18Z,89e82cc,bikes,via,vehicleA,40.700348,1574245037,-73.324799\n,,0,2019-11-20T10:17:24Z,89e82cc,bikes,via,vehicleA,40.700397,1574245037,-73.324699\n,,0,2019-11-20T10:17:26Z,89e82cc,bikes,via,vehicleA,40.700413,1574245037,-73.324638\n,,0,2019-11-20T10:17:32Z,89e82cc,bikes,via,vehicleA,40.700474,1574245037,-73.324471\n,,0,2019-11-20T10:17:35Z,89e82cc,bikes,via,vehicleA,40.700481,1574245037,-73.324371\n,,0,2019-11-20T10:17:42Z,89e82cc,bikes,via,vehicleA,40.700459,1574245037,-73.324181\n,,0,2019-11-20T10:17:47Z,89e82cc,bikes,via,vehicleA,40.700455,1574245037,-73.323982\n,,0,2019-11-20T10:17:54Z,89e82cc,bikes,via,vehicleA,40.700542,1574245037,-73.323769\n,,0,2019-11-20T10:18:00Z,89e82d4,bikes,end,vehicleA,40.700684,1574245037,-73.323692\n,,1,2019-11-10T11:07:12Z,89c258c,bikes,start,vehicleB,40.762096,1573384032,-73.967104\n,,1,2019-11-10T11:07:35Z,89c258c,bikes,via,vehicleB,40.762225,1573384032,-73.967081\n,,1,2019-11-10T11:07:38Z,89c258c,bikes,via,vehicleB,40.762247,1573384032,-73.967129\n,,1,2019-11-10T11:07:43Z,89c258c,bikes,via,vehicleB,40.762331,1573384032,-73.967261\n,,1,2019-11-10T11:07:48Z,89c258c,bikes,via,vehicleB,40.762408,1573384032,-73.967422\n,,1,2019-11-10T11:07:52Z,89c258c,bikes,via,vehicleB,40.762484,1573384032,-73.967542\n,,1,2019-11-10T11:08:01Z,89c258c,bikes,via,vehicleB,40.762597,1573384032,-73.967718\n,,1,2019-11-10T11:08:16Z,89c258c,bikes,via,vehicleB,40.762574,1573384032,-73.967803\n,,1,2019-11-10T11:08:34Z,89c258c,bikes,end,vehicleB,40.762662,1573384032,-73.967971\n,,2,2019-11-10T21:16:00Z,89c258c,bikes,start,vehicleB,40.763126,1573420560,-73.966333\n,,2,2019-11-10T21:16:06Z,89c258c,bikes,via,vehicleB,40.76309,1573420560,-73.966254\n,,2,2019-11-10T21:16:18Z,89c258c,bikes,via,vehicleB,40.763036,1573420560,-73.966091\n,,2,2019-11-10T21:16:31Z,89c258c,bikes,via,vehicleB,40.763006,1573420560,-73.965889\n,,2,2019-11-10T21:16:48Z,89c258c,bikes,via,vehicleB,40.762904,1573420560,-73.96573\n,,2,2019-11-10T21:17:08Z,89c258c,bikes,via,vehicleB,40.762836,1573420560,-73.965721\n,,2,2019-11-10T21:17:23Z,89c258c,bikes,via,vehicleB,40.762736,1573420560,-73.965801\n,,2,2019-11-10T21:17:36Z,89c258c,bikes,via,vehicleB,40.762469,1573420560,-73.96559\n,,2,2019-11-10T21:17:46Z,89c258c,bikes,via,vehicleB,40.762418,1573420560,-73.965579\n,,2,2019-11-10T21:17:47Z,89c258c,bikes,end,vehicleB,40.762424,1573420560,-73.965583\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   168,
					},
					File:   "asTracks_test.flux",
					Source: "t_asTracks = (table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.toRows()\n    |> geo.asTracks()\n    |> drop(columns: [\"_start\", \"_stop\"])",
					Start: ast.Position{
						Column: 1,
						Line:   163,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 11,
							Line:   163,
						},
						File:   "asTracks_test.flux",
						Source: "t_asTracks",
						Start: ast.Position{
							Column: 1,
							Line:   163,
						},
					},
				},
				Name: "t_asTracks",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   168,
						},
						File:   "asTracks_test.flux",
						Source: "(table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.toRows()\n    |> geo.asTracks()\n    |> drop(columns: [\"_start\", \"_stop\"])",
						Start: ast.Position{
							Column: 14,
							Line:   163,
						},
					},
				},
				Body: &ast.PipeExpression{
					Argument: &ast.PipeExpression{
						Argument: &ast.PipeExpression{
							Argument: &ast.PipeExpression{
								Argument: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 8,
												Line:   164,
											},
											File:   "asTracks_test.flux",
											Source: "table",
											Start: ast.Position{
												Column: 3,
												Line:   164,
											},
										},
									},
									Name: "table",
								},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 42,
											Line:   165,
										},
										File:   "asTracks_test.flux",
										Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)",
										Start: ast.Position{
											Column: 3,
											Line:   164,
										},
									},
								},
								Call: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 41,
													Line:   165,
												},
												File:   "asTracks_test.flux",
												Source: "start: 2019-11-01T00:00:00Z",
												Start: ast.Position{
													Column: 14,
													Line:   165,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 41,
														Line:   165,
													},
													File:   "asTracks_test.flux",
													Source: "start: 2019-11-01T00:00:00Z",
													Start: ast.Position{
														Column: 14,
														Line:   165,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 19,
															Line:   165,
														},
														File:   "asTracks_test.flux",
														Source: "start",
														Start: ast.Position{
															Column: 14,
															Line:   165,
														},
													},
												},
												Name: "start",
											},
											Value: &ast.DateTimeLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 41,
															Line:   165,
														},
														File:   "asTracks_test.flux",
														Source: "2019-11-01T00:00:00Z",
														Start: ast.Position{
															Column: 21,
															Line:   165,
														},
													},
												},
												Value: parser.MustParseTime("2019-11-01T00:00:00Z"),
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 42,
												Line:   165,
											},
											File:   "asTracks_test.flux",
											Source: "range(start: 2019-11-01T00:00:00Z)",
											Start: ast.Position{
												Column: 8,
												Line:   165,
											},
										},
									},
									Callee: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 13,
													Line:   165,
												},
												File:   "asTracks_test.flux",
												Source: "range",
												Start: ast.Position{
													Column: 8,
													Line:   165,
												},
											},
										},
										Name: "range",
									},
								},
							},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 20,
										Line:   166,
									},
									File:   "asTracks_test.flux",
									Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.toRows()",
									Start: ast.Position{
										Column: 3,
										Line:   164,
									},
								},
							},
							Call: &ast.CallExpression{
								Arguments: nil,
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 20,
											Line:   166,
										},
										File:   "asTracks_test.flux",
										Source: "geo.toRows()",
										Start: ast.Position{
											Column: 8,
											Line:   166,
										},
									},
								},
								Callee: &ast.MemberExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 18,
												Line:   166,
											},
											File:   "asTracks_test.flux",
											Source: "geo.toRows",
											Start: ast.Position{
												Column: 8,
												Line:   166,
											},
										},
									},
									Object: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 11,
													Line:   166,
												},
												File:   "asTracks_test.flux",
												Source: "geo",
												Start: ast.Position{
													Column: 8,
													Line:   166,
												},
											},
										},
										Name: "geo",
									},
									Property: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 18,
													Line:   166,
												},
												File:   "asTracks_test.flux",
												Source: "toRows",
												Start: ast.Position{
													Column: 12,
													Line:   166,
												},
											},
										},
										Name: "toRows",
									},
								},
							},
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 22,
									Line:   167,
								},
								File:   "asTracks_test.flux",
								Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.toRows()\n    |> geo.asTracks()",
								Start: ast.Position{
									Column: 3,
									Line:   164,
								},
							},
						},
						Call: &ast.CallExpression{
							Arguments: nil,
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 22,
										Line:   167,
									},
									File:   "asTracks_test.flux",
									Source: "geo.asTracks()",
									Start: ast.Position{
										Column: 8,
										Line:   167,
									},
								},
							},
							Callee: &ast.MemberExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 20,
											Line:   167,
										},
										File:   "asTracks_test.flux",
										Source: "geo.asTracks",
										Start: ast.Position{
											Column: 8,
											Line:   167,
										},
									},
								},
								Object: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 11,
												Line:   167,
											},
											File:   "asTracks_test.flux",
											Source: "geo",
											Start: ast.Position{
												Column: 8,
												Line:   167,
											},
										},
									},
									Name: "geo",
								},
								Property: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 20,
												Line:   167,
											},
											File:   "asTracks_test.flux",
											Source: "asTracks",
											Start: ast.Position{
												Column: 12,
												Line:   167,
											},
										},
									},
									Name: "asTracks",
								},
							},
						},
					},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   168,
							},
							File:   "asTracks_test.flux",
							Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.toRows()\n    |> geo.asTracks()\n    |> drop(columns: [\"_start\", \"_stop\"])",
							Start: ast.Position{
								Column: 3,
								Line:   164,
							},
						},
					},
					Call: &ast.CallExpression{
						Arguments: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   168,
									},
									File:   "asTracks_test.flux",
									Source: "columns: [\"_start\", \"_stop\"]",
									Start: ast.Position{
										Column: 13,
										Line:   168,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 41,
											Line:   168,
										},
										File:   "asTracks_test.flux",
										Source: "columns: [\"_start\", \"_stop\"]",
										Start: ast.Position{
											Column: 13,
											Line:   168,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 20,
												Line:   168,
											},
											File:   "asTracks_test.flux",
											Source: "columns",
											Start: ast.Position{
												Column: 13,
												Line:   168,
											},
										},
									},
									Name: "columns",
								},
								Value: &ast.ArrayExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 41,
												Line:   168,
											},
											File:   "asTracks_test.flux",
											Source: "[\"_start\", \"_stop\"]",
											Start: ast.Position{
												Column: 22,
												Line:   168,
											},
										},
									},
									Elements: []ast.Expression{&ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 31,
													Line:   168,
												},
												File:   "asTracks_test.flux",
												Source: "\"_start\"",
												Start: ast.Position{
													Column: 23,
													Line:   168,
												},
											},
										},
										Value: "_start",
									}, &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 40,
													Line:   168,
												},
												File:   "asTracks_test.flux",
												Source: "\"_stop\"",
												Start: ast.Position{
													Column: 33,
													Line:   168,
												},
											},
										},
										Value: "_stop",
									}},
								},
							}},
							With: nil,
						}},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   168,
								},
								File:   "asTracks_test.flux",
								Source: "drop(columns: [\"_start\", \"_stop\"])",
								Start: ast.Position{
									Column: 8,
									Line:   168,
								},
							},
						},
						Callee: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 12,
										Line:   168,
									},
									File:   "asTracks_test.flux",
									Source: "drop",
									Start: ast.Position{
										Column: 8,
										Line:   168,
									},
								},
							},
							Name: "drop",
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 23,
								Line:   163,
							},
							File:   "asTracks_test.flux",
							Source: "table=<-",
							Start: ast.Position{
								Column: 15,
								Line:   163,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 20,
									Line:   163,
								},
								File:   "asTracks_test.flux",
								Source: "table",
								Start: ast.Position{
									Column: 15,
									Line:   163,
								},
							},
						},
						Name: "table",
					},
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 23,
								Line:   163,
							},
							File:   "asTracks_test.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 21,
								Line:   163,
							},
						},
					}},
				}},
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 98,
							Line:   170,
						},
						File:   "asTracks_test.flux",
						Source: "_asTracks = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_asTracks})",
						Start: ast.Position{
							Column: 6,
							Line:   169,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 15,
								Line:   169,
							},
							File:   "asTracks_test.flux",
							Source: "_asTracks",
							Start: ast.Position{
								Column: 6,
								Line:   169,
							},
						},
					},
					Name: "_asTracks",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 98,
								Line:   170,
							},
							File:   "asTracks_test.flux",
							Source: "() =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_asTracks})",
							Start: ast.Position{
								Column: 18,
								Line:   169,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 98,
									Line:   170,
								},
								File:   "asTracks_test.flux",
								Source: "({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_asTracks})",
								Start: ast.Position{
									Column: 2,
									Line:   170,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 97,
										Line:   170,
									},
									File:   "asTracks_test.flux",
									Source: "{input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_asTracks}",
									Start: ast.Position{
										Column: 3,
										Line:   170,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 43,
											Line:   170,
										},
										File:   "asTracks_test.flux",
										Source: "input: testing.loadStorage(csv: inData)",
										Start: ast.Position{
											Column: 4,
											Line:   170,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 9,
												Line:   170,
											},
											File:   "asTracks_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 4,
												Line:   170,
											},
										},
									},
									Name: "input",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   170,
												},
												File:   "asTracks_test.flux",
												Source: "csv: inData",
												Start: ast.Position{
													Column: 31,
													Line:   170,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 42,
														Line:   170,
													},
													File:   "asTracks_test.flux",
													Source: "csv: inData",
													Start: ast.Position{
														Column: 31,
														Line:   170,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 34,
															Line:   170,
														},
														File:   "asTracks_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 31,
															Line:   170,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 42,
															Line:   170,
														},
														File:   "asTracks_test.flux",
														Source: "inData",
														Start: ast.Position{
															Column: 36,
															Line:   170,
														},
													},
												},
												Name: "inData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 43,
												Line:   170,
											},
											File:   "asTracks_test.flux",
											Source: "testing.loadStorage(csv: inData)",
											Start: ast.Position{
												Column: 11,
												Line:   170,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   170,
												},
												File:   "asTracks_test.flux",
												Source: "testing.loadStorage",
												Start: ast.Position{
													Column: 11,
													Line:   170,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   170,
													},
													File:   "asTracks_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 11,
														Line:   170,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 30,
														Line:   170,
													},
													File:   "asTracks_test.flux",
													Source: "loadStorage",
													Start: ast.Position{
														Column: 19,
														Line:   170,
													},
												},
											},
											Name: "loadStorage",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 80,
											Line:   170,
										},
										File:   "asTracks_test.flux",
										Source: "want: testing.loadMem(csv: outData)",
										Start: ast.Position{
											Column: 45,
											Line:   170,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 49,
												Line:   170,
											},
											File:   "asTracks_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 45,
												Line:   170,
											},
										},
									},
									Name: "want",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 79,
													Line:   170,
												},
												File:   "asTracks_test.flux",
												Source: "csv: outData",
												Start: ast.Position{
													Column: 67,
													Line:   170,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 79,
														Line:   170,
													},
													File:   "asTracks_test.flux",
													Source: "csv: outData",
													Start: ast.Position{
														Column: 67,
														Line:   170,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 70,
															Line:   170,
														},
														File:   "asTracks_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 67,
															Line:   170,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 79,
															Line:   170,
														},
														File:   "asTracks_test.flux",
														Source: "outData",
														Start: ast.Position{
															Column: 72,
															Line:   170,
														},
													},
												},
												Name: "outData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 80,
												Line:   170,
											},
											File:   "asTracks_test.flux",
											Source: "testing.loadMem(csv: outData)",
											Start: ast.Position{
												Column: 51,
												Line:   170,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   170,
												},
												File:   "asTracks_test.flux",
												Source: "testing.loadMem",
												Start: ast.Position{
													Column: 51,
													Line:   170,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 58,
														Line:   170,
													},
													File:   "asTracks_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 51,
														Line:   170,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 66,
														Line:   170,
													},
													File:   "asTracks_test.flux",
													Source: "loadMem",
													Start: ast.Position{
														Column: 59,
														Line:   170,
													},
												},
											},
											Name: "loadMem",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 96,
											Line:   170,
										},
										File:   "asTracks_test.flux",
										Source: "fn: t_asTracks",
										Start: ast.Position{
											Column: 82,
											Line:   170,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 84,
												Line:   170,
											},
											File:   "asTracks_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 82,
												Line:   170,
											},
										},
									},
									Name: "fn",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 96,
												Line:   170,
											},
											File:   "asTracks_test.flux",
											Source: "t_asTracks",
											Start: ast.Position{
												Column: 86,
												Line:   170,
											},
										},
									},
									Name: "t_asTracks",
								},
							}},
							With: nil,
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 98,
						Line:   170,
					},
					File:   "asTracks_test.flux",
					Source: "test _asTracks = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_asTracks})",
					Start: ast.Position{
						Column: 1,
						Line:   169,
					},
				},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 26,
						Line:   3,
					},
					File:   "asTracks_test.flux",
					Source: "import \"experimental/geo\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 26,
							Line:   3,
						},
						File:   "asTracks_test.flux",
						Source: "\"experimental/geo\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "experimental/geo",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   4,
					},
					File:   "asTracks_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   4,
						},
						File:   "asTracks_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "testing",
			},
		}},
		Metadata: "parser-type=rust",
		Name:     "asTracks_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   1,
					},
					File:   "asTracks_test.flux",
					Source: "package geo_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   1,
						},
						File:   "asTracks_test.flux",
						Source: "geo_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "geo_test",
			},
		},
	}, &ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 109,
					Line:   219,
				},
				File:   "filterRowsNotStrict_test.flux",
				Source: "package geo_test\n\nimport \"experimental/geo\"\nimport \"testing\"\n\noption now = () => (2030-01-01T00:00:00Z)\n\ninData = \"\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n\"\n\noutData = \"\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,lat\n,,3,2019-11-01T00:17:38.287113937Z,89c2664,taxi,start,1572567458287113937,-73.776665,40.645245\n\"\n\nt_filterRowsNotStrict = (table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.filterRows(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, strict: false)\n    |> drop(columns: [\"_start\", \"_stop\"])\ntest _filterRowsNotStrict = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_filterRowsNotStrict})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   6,
						},
						File:   "filterRowsNotStrict_test.flux",
						Source: "now = () => (2030-01-01T00:00:00Z)",
						Start: ast.Position{
							Column: 8,
							Line:   6,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   6,
							},
							File:   "filterRowsNotStrict_test.flux",
							Source: "now",
							Start: ast.Position{
								Column: 8,
								Line:   6,
							},
						},
					},
					Name: "now",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   6,
							},
							File:   "filterRowsNotStrict_test.flux",
							Source: "() => (2030-01-01T00:00:00Z)",
							Start: ast.Position{
								Column: 14,
								Line:   6,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   6,
								},
								File:   "filterRowsNotStrict_test.flux",
								Source: "(2030-01-01T00:00:00Z)",
								Start: ast.Position{
									Column: 20,
									Line:   6,
								},
							},
						},
						Expression: &ast.DateTimeLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   6,
									},
									File:   "filterRowsNotStrict_test.flux",
									Source: "2030-01-01T00:00:00Z",
									Start: ast.Position{
										Column: 21,
										Line:   6,
									},
								},
							},
							Value: parser.MustParseTime("2030-01-01T00:00:00Z"),
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   6,
					},
					File:   "filterRowsNotStrict_test.flux",
					Source: "option now = () => (2030-01-01T00:00:00Z)",
					Start: ast.Position{
						Column: 1,
						Line:   6,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   185,
					},
					File:   "filterRowsNotStrict_test.flux",
					Source: "inData = \"\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   8,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 7,
							Line:   8,
						},
						File:   "filterRowsNotStrict_test.flux",
						Source: "inData",
						Start: ast.Position{
							Column: 1,
							Line:   8,
						},
					},
				},
				Name: "inData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   185,
						},
						File:   "filterRowsNotStrict_test.flux",
						Source: "\"\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n\"",
						Start: ast.Position{
							Column: 10,
							Line:   8,
						},
					},
				},
				Value: "\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   211,
					},
					File:   "filterRowsNotStrict_test.flux",
					Source: "outData = \"\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,lat\n,,3,2019-11-01T00:17:38.287113937Z,89c2664,taxi,start,1572567458287113937,-73.776665,40.645245\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   187,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 8,
							Line:   187,
						},
						File:   "filterRowsNotStrict_test.flux",
						Source: "outData",
						Start: ast.Position{
							Column: 1,
							Line:   187,
						},
					},
				},
				Name: "outData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   211,
						},
						File:   "filterRowsNotStrict_test.flux",
						Source: "\"\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,lat\n,,3,2019-11-01T00:17:38.287113937Z,89c2664,taxi,start,1572567458287113937,-73.776665,40.645245\n\"",
						Start: ast.Position{
							Column: 11,
							Line:   187,
						},
					},
				},
				Value: "\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,lat\n,,3,2019-11-01T00:17:38.287113937Z,89c2664,taxi,start,1572567458287113937,-73.776665,40.645245\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   217,
					},
					File:   "filterRowsNotStrict_test.flux",
					Source: "t_filterRowsNotStrict = (table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.filterRows(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, strict: false)\n    |> drop(columns: [\"_start\", \"_stop\"])",
					Start: ast.Position{
						Column: 1,
						Line:   213,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 22,
							Line:   213,
						},
						File:   "filterRowsNotStrict_test.flux",
						Source: "t_filterRowsNotStrict",
						Start: ast.Position{
							Column: 1,
							Line:   213,
						},
					},
				},
				Name: "t_filterRowsNotStrict",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   217,
						},
						File:   "filterRowsNotStrict_test.flux",
						Source: "(table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.filterRows(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, strict: false)\n    |> drop(columns: [\"_start\", \"_stop\"])",
						Start: ast.Position{
							Column: 25,
							Line:   213,
						},
					},
				},
				Body: &ast.PipeExpression{
					Argument: &ast.PipeExpression{
						Argument: &ast.PipeExpression{
							Argument: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 8,
											Line:   214,
										},
										File:   "filterRowsNotStrict_test.flux",
										Source: "table",
										Start: ast.Position{
											Column: 3,
											Line:   214,
										},
									},
								},
								Name: "table",
							},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 42,
										Line:   215,
									},
									File:   "filterRowsNotStrict_test.flux",
									Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)",
									Start: ast.Position{
										Column: 3,
										Line:   214,
									},
								},
							},
							Call: &ast.CallExpression{
								Arguments: []ast.Expression{&ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 41,
												Line:   215,
											},
											File:   "filterRowsNotStrict_test.flux",
											Source: "start: 2019-11-01T00:00:00Z",
											Start: ast.Position{
												Column: 14,
												Line:   215,
											},
										},
									},
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 41,
													Line:   215,
												},
												File:   "filterRowsNotStrict_test.flux",
												Source: "start: 2019-11-01T00:00:00Z",
												Start: ast.Position{
													Column: 14,
													Line:   215,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 19,
														Line:   215,
													},
													File:   "filterRowsNotStrict_test.flux",
													Source: "start",
													Start: ast.Position{
														Column: 14,
														Line:   215,
													},
												},
											},
											Name: "start",
										},
										Value: &ast.DateTimeLiteral{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 41,
														Line:   215,
													},
													File:   "filterRowsNotStrict_test.flux",
													Source: "2019-11-01T00:00:00Z",
													Start: ast.Position{
														Column: 21,
														Line:   215,
													},
												},
											},
											Value: parser.MustParseTime("2019-11-01T00:00:00Z"),
										},
									}},
									With: nil,
								}},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 42,
											Line:   215,
										},
										File:   "filterRowsNotStrict_test.flux",
										Source: "range(start: 2019-11-01T00:00:00Z)",
										Start: ast.Position{
											Column: 8,
											Line:   215,
										},
									},
								},
								Callee: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 13,
												Line:   215,
											},
											File:   "filterRowsNotStrict_test.flux",
											Source: "range",
											Start: ast.Position{
												Column: 8,
												Line:   215,
											},
										},
									},
									Name: "range",
								},
							},
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 94,
									Line:   216,
								},
								File:   "filterRowsNotStrict_test.flux",
								Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.filterRows(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, strict: false)",
								Start: ast.Position{
									Column: 3,
									Line:   214,
								},
							},
						},
						Call: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 93,
											Line:   216,
										},
										File:   "filterRowsNotStrict_test.flux",
										Source: "region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, strict: false",
										Start: ast.Position{
											Column: 23,
											Line:   216,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 78,
												Line:   216,
											},
											File:   "filterRowsNotStrict_test.flux",
											Source: "region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}",
											Start: ast.Position{
												Column: 23,
												Line:   216,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 29,
													Line:   216,
												},
												File:   "filterRowsNotStrict_test.flux",
												Source: "region",
												Start: ast.Position{
													Column: 23,
													Line:   216,
												},
											},
										},
										Name: "region",
									},
									Value: &ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 78,
													Line:   216,
												},
												File:   "filterRowsNotStrict_test.flux",
												Source: "{lat: 40.7090214, lon: -73.61846, radius: 15.0}",
												Start: ast.Position{
													Column: 31,
													Line:   216,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 47,
														Line:   216,
													},
													File:   "filterRowsNotStrict_test.flux",
													Source: "lat: 40.7090214",
													Start: ast.Position{
														Column: 32,
														Line:   216,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 35,
															Line:   216,
														},
														File:   "filterRowsNotStrict_test.flux",
														Source: "lat",
														Start: ast.Position{
															Column: 32,
															Line:   216,
														},
													},
												},
												Name: "lat",
											},
											Value: &ast.FloatLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 47,
															Line:   216,
														},
														File:   "filterRowsNotStrict_test.flux",
														Source: "40.7090214",
														Start: ast.Position{
															Column: 37,
															Line:   216,
														},
													},
												},
												Value: 40.7090214,
											},
										}, &ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 63,
														Line:   216,
													},
													File:   "filterRowsNotStrict_test.flux",
													Source: "lon: -73.61846",
													Start: ast.Position{
														Column: 49,
														Line:   216,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 52,
															Line:   216,
														},
														File:   "filterRowsNotStrict_test.flux",
														Source: "lon",
														Start: ast.Position{
															Column: 49,
															Line:   216,
														},
													},
												},
												Name: "lon",
											},
											Value: &ast.UnaryExpression{
												Argument: &ast.FloatLiteral{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 63,
																Line:   216,
															},
															File:   "filterRowsNotStrict_test.flux",
															Source: "73.61846",
															Start: ast.Position{
																Column: 55,
																Line:   216,
															},
														},
													},
													Value: 73.61846,
												},
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 63,
															Line:   216,
														},
														File:   "filterRowsNotStrict_test.flux",
														Source: "-73.61846",
														Start: ast.Position{
															Column: 54,
															Line:   216,
														},
													},
												},
												Operator: 6,
											},
										}, &ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 77,
														Line:   216,
													},
													File:   "filterRowsNotStrict_test.flux",
													Source: "radius: 15.0",
													Start: ast.Position{
														Column: 65,
														Line:   216,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 71,
															Line:   216,
														},
														File:   "filterRowsNotStrict_test.flux",
														Source: "radius",
														Start: ast.Position{
															Column: 65,
															Line:   216,
														},
													},
												},
												Name: "radius",
											},
											Value: &ast.FloatLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 77,
															Line:   216,
														},
														File:   "filterRowsNotStrict_test.flux",
														Source: "15.0",
														Start: ast.Position{
															Column: 73,
															Line:   216,
														},
													},
												},
												Value: 15.0,
											},
										}},
										With: nil,
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 93,
												Line:   216,
											},
											File:   "filterRowsNotStrict_test.flux",
											Source: "strict: false",
											Start: ast.Position{
												Column: 80,
												Line:   216,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 86,
													Line:   216,
												},
												File:   "filterRowsNotStrict_test.flux",
												Source: "strict",
												Start: ast.Position{
													Column: 80,
													Line:   216,
												},
											},
										},
										Name: "strict",
									},
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 93,
													Line:   216,
												},
												File:   "filterRowsNotStrict_test.flux",
												Source: "false",
												Start: ast.Position{
													Column: 88,
													Line:   216,
												},
											},
										},
										Name: "false",
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 94,
										Line:   216,
									},
									File:   "filterRowsNotStrict_test.flux",
									Source: "geo.filterRows(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, strict: false)",
									Start: ast.Position{
										Column: 8,
										Line:   216,
									},
								},
							},
							Callee: &ast.MemberExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 22,
											Line:   216,
										},
										File:   "filterRowsNotStrict_test.flux",
										Source: "geo.filterRows",
										Start: ast.Position{
											Column: 8,
											Line:   216,
										},
									},
								},
								Object: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 11,
												Line:   216,
											},
											File:   "filterRowsNotStrict_test.flux",
											Source: "geo",
											Start: ast.Position{
												Column: 8,
												Line:   216,
											},
										},
									},
									Name: "geo",
								},
								Property: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 22,
												Line:   216,
											},
											File:   "filterRowsNotStrict_test.flux",
											Source: "filterRows",
											Start: ast.Position{
												Column: 12,
												Line:   216,
											},
										},
									},
									Name: "filterRows",
								},
							},
						},
					},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   217,
							},
							File:   "filterRowsNotStrict_test.flux",
							Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.filterRows(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, strict: false)\n    |> drop(columns: [\"_start\", \"_stop\"])",
							Start: ast.Position{
								Column: 3,
								Line:   214,
							},
						},
					},
					Call: &ast.CallExpression{
						Arguments: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   217,
									},
									File:   "filterRowsNotStrict_test.flux",
									Source: "columns: [\"_start\", \"_stop\"]",
									Start: ast.Position{
										Column: 13,
										Line:   217,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 41,
											Line:   217,
										},
										File:   "filterRowsNotStrict_test.flux",
										Source: "columns: [\"_start\", \"_stop\"]",
										Start: ast.Position{
											Column: 13,
											Line:   217,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 20,
												Line:   217,
											},
											File:   "filterRowsNotStrict_test.flux",
											Source: "columns",
											Start: ast.Position{
												Column: 13,
												Line:   217,
											},
										},
									},
									Name: "columns",
								},
								Value: &ast.ArrayExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 41,
												Line:   217,
											},
											File:   "filterRowsNotStrict_test.flux",
											Source: "[\"_start\", \"_stop\"]",
											Start: ast.Position{
												Column: 22,
												Line:   217,
											},
										},
									},
									Elements: []ast.Expression{&ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 31,
													Line:   217,
												},
												File:   "filterRowsNotStrict_test.flux",
												Source: "\"_start\"",
												Start: ast.Position{
													Column: 23,
													Line:   217,
												},
											},
										},
										Value: "_start",
									}, &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 40,
													Line:   217,
												},
												File:   "filterRowsNotStrict_test.flux",
												Source: "\"_stop\"",
												Start: ast.Position{
													Column: 33,
													Line:   217,
												},
											},
										},
										Value: "_stop",
									}},
								},
							}},
							With: nil,
						}},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   217,
								},
								File:   "filterRowsNotStrict_test.flux",
								Source: "drop(columns: [\"_start\", \"_stop\"])",
								Start: ast.Position{
									Column: 8,
									Line:   217,
								},
							},
						},
						Callee: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 12,
										Line:   217,
									},
									File:   "filterRowsNotStrict_test.flux",
									Source: "drop",
									Start: ast.Position{
										Column: 8,
										Line:   217,
									},
								},
							},
							Name: "drop",
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 34,
								Line:   213,
							},
							File:   "filterRowsNotStrict_test.flux",
							Source: "table=<-",
							Start: ast.Position{
								Column: 26,
								Line:   213,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 31,
									Line:   213,
								},
								File:   "filterRowsNotStrict_test.flux",
								Source: "table",
								Start: ast.Position{
									Column: 26,
									Line:   213,
								},
							},
						},
						Name: "table",
					},
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 34,
								Line:   213,
							},
							File:   "filterRowsNotStrict_test.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 32,
								Line:   213,
							},
						},
					}},
				}},
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 109,
							Line:   219,
						},
						File:   "filterRowsNotStrict_test.flux",
						Source: "_filterRowsNotStrict = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_filterRowsNotStrict})",
						Start: ast.Position{
							Column: 6,
							Line:   218,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 26,
								Line:   218,
							},
							File:   "filterRowsNotStrict_test.flux",
							Source: "_filterRowsNotStrict",
							Start: ast.Position{
								Column: 6,
								Line:   218,
							},
						},
					},
					Name: "_filterRowsNotStrict",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 109,
								Line:   219,
							},
							File:   "filterRowsNotStrict_test.flux",
							Source: "() =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_filterRowsNotStrict})",
							Start: ast.Position{
								Column: 29,
								Line:   218,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 109,
									Line:   219,
								},
								File:   "filterRowsNotStrict_test.flux",
								Source: "({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_filterRowsNotStrict})",
								Start: ast.Position{
									Column: 2,
									Line:   219,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 108,
										Line:   219,
									},
									File:   "filterRowsNotStrict_test.flux",
									Source: "{input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_filterRowsNotStrict}",
									Start: ast.Position{
										Column: 3,
										Line:   219,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 43,
											Line:   219,
										},
										File:   "filterRowsNotStrict_test.flux",
										Source: "input: testing.loadStorage(csv: inData)",
										Start: ast.Position{
											Column: 4,
											Line:   219,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 9,
												Line:   219,
											},
											File:   "filterRowsNotStrict_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 4,
												Line:   219,
											},
										},
									},
									Name: "input",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   219,
												},
												File:   "filterRowsNotStrict_test.flux",
												Source: "csv: inData",
												Start: ast.Position{
													Column: 31,
													Line:   219,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 42,
														Line:   219,
													},
													File:   "filterRowsNotStrict_test.flux",
													Source: "csv: inData",
													Start: ast.Position{
														Column: 31,
														Line:   219,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 34,
															Line:   219,
														},
														File:   "filterRowsNotStrict_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 31,
															Line:   219,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 42,
															Line:   219,
														},
														File:   "filterRowsNotStrict_test.flux",
														Source: "inData",
														Start: ast.Position{
															Column: 36,
															Line:   219,
														},
													},
												},
												Name: "inData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 43,
												Line:   219,
											},
											File:   "filterRowsNotStrict_test.flux",
											Source: "testing.loadStorage(csv: inData)",
											Start: ast.Position{
												Column: 11,
												Line:   219,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   219,
												},
												File:   "filterRowsNotStrict_test.flux",
												Source: "testing.loadStorage",
												Start: ast.Position{
													Column: 11,
													Line:   219,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   219,
													},
													File:   "filterRowsNotStrict_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 11,
														Line:   219,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 30,
														Line:   219,
													},
													File:   "filterRowsNotStrict_test.flux",
													Source: "loadStorage",
													Start: ast.Position{
														Column: 19,
														Line:   219,
													},
												},
											},
											Name: "loadStorage",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 80,
											Line:   219,
										},
										File:   "filterRowsNotStrict_test.flux",
										Source: "want: testing.loadMem(csv: outData)",
										Start: ast.Position{
											Column: 45,
											Line:   219,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 49,
												Line:   219,
											},
											File:   "filterRowsNotStrict_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 45,
												Line:   219,
											},
										},
									},
									Name: "want",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 79,
													Line:   219,
												},
												File:   "filterRowsNotStrict_test.flux",
												Source: "csv: outData",
												Start: ast.Position{
													Column: 67,
													Line:   219,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 79,
														Line:   219,
													},
													File:   "filterRowsNotStrict_test.flux",
													Source: "csv: outData",
													Start: ast.Position{
														Column: 67,
														Line:   219,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 70,
															Line:   219,
														},
														File:   "filterRowsNotStrict_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 67,
															Line:   219,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 79,
															Line:   219,
														},
														File:   "filterRowsNotStrict_test.flux",
														Source: "outData",
														Start: ast.Position{
															Column: 72,
															Line:   219,
														},
													},
												},
												Name: "outData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 80,
												Line:   219,
											},
											File:   "filterRowsNotStrict_test.flux",
											Source: "testing.loadMem(csv: outData)",
											Start: ast.Position{
												Column: 51,
												Line:   219,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   219,
												},
												File:   "filterRowsNotStrict_test.flux",
												Source: "testing.loadMem",
												Start: ast.Position{
													Column: 51,
													Line:   219,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 58,
														Line:   219,
													},
													File:   "filterRowsNotStrict_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 51,
														Line:   219,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 66,
														Line:   219,
													},
													File:   "filterRowsNotStrict_test.flux",
													Source: "loadMem",
													Start: ast.Position{
														Column: 59,
														Line:   219,
													},
												},
											},
											Name: "loadMem",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 107,
											Line:   219,
										},
										File:   "filterRowsNotStrict_test.flux",
										Source: "fn: t_filterRowsNotStrict",
										Start: ast.Position{
											Column: 82,
											Line:   219,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 84,
												Line:   219,
											},
											File:   "filterRowsNotStrict_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 82,
												Line:   219,
											},
										},
									},
									Name: "fn",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 107,
												Line:   219,
											},
											File:   "filterRowsNotStrict_test.flux",
											Source: "t_filterRowsNotStrict",
											Start: ast.Position{
												Column: 86,
												Line:   219,
											},
										},
									},
									Name: "t_filterRowsNotStrict",
								},
							}},
							With: nil,
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 109,
						Line:   219,
					},
					File:   "filterRowsNotStrict_test.flux",
					Source: "test _filterRowsNotStrict = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_filterRowsNotStrict})",
					Start: ast.Position{
						Column: 1,
						Line:   218,
					},
				},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 26,
						Line:   3,
					},
					File:   "filterRowsNotStrict_test.flux",
					Source: "import \"experimental/geo\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 26,
							Line:   3,
						},
						File:   "filterRowsNotStrict_test.flux",
						Source: "\"experimental/geo\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "experimental/geo",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   4,
					},
					File:   "filterRowsNotStrict_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   4,
						},
						File:   "filterRowsNotStrict_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "testing",
			},
		}},
		Metadata: "parser-type=rust",
		Name:     "filterRowsNotStrict_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   1,
					},
					File:   "filterRowsNotStrict_test.flux",
					Source: "package geo_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   1,
						},
						File:   "filterRowsNotStrict_test.flux",
						Source: "geo_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "geo_test",
			},
		},
	}, &ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 107,
					Line:   213,
				},
				File:   "filterRowsPivoted_test.flux",
				Source: "package geo_test\n\nimport \"experimental/geo\"\nimport \"testing\"\n\noption now = () => (2030-01-01T00:00:00Z)\n\ninData = \"#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n\"\n\noutData = \"\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n\"\n\nt_filterRowsPivoted = (table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> geo.filterRows(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, strict: true)\n    |> drop(columns: [\"_start\", \"_stop\"])\ntest _filterRowsPivoted = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_filterRowsPivoted})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   6,
						},
						File:   "filterRowsPivoted_test.flux",
						Source: "now = () => (2030-01-01T00:00:00Z)",
						Start: ast.Position{
							Column: 8,
							Line:   6,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   6,
							},
							File:   "filterRowsPivoted_test.flux",
							Source: "now",
							Start: ast.Position{
								Column: 8,
								Line:   6,
							},
						},
					},
					Name: "now",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   6,
							},
							File:   "filterRowsPivoted_test.flux",
							Source: "() => (2030-01-01T00:00:00Z)",
							Start: ast.Position{
								Column: 14,
								Line:   6,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   6,
								},
								File:   "filterRowsPivoted_test.flux",
								Source: "(2030-01-01T00:00:00Z)",
								Start: ast.Position{
									Column: 20,
									Line:   6,
								},
							},
						},
						Expression: &ast.DateTimeLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   6,
									},
									File:   "filterRowsPivoted_test.flux",
									Source: "2030-01-01T00:00:00Z",
									Start: ast.Position{
										Column: 21,
										Line:   6,
									},
								},
							},
							Value: parser.MustParseTime("2030-01-01T00:00:00Z"),
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   6,
					},
					File:   "filterRowsPivoted_test.flux",
					Source: "option now = () => (2030-01-01T00:00:00Z)",
					Start: ast.Position{
						Column: 1,
						Line:   6,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   184,
					},
					File:   "filterRowsPivoted_test.flux",
					Source: "inData = \"#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   8,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 7,
							Line:   8,
						},
						File:   "filterRowsPivoted_test.flux",
						Source: "inData",
						Start: ast.Position{
							Column: 1,
							Line:   8,
						},
					},
				},
				Name: "inData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   184,
						},
						File:   "filterRowsPivoted_test.flux",
						Source: "\"#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n\"",
						Start: ast.Position{
							Column: 10,
							Line:   8,
						},
					},
				},
				Value: "#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   204,
					},
					File:   "filterRowsPivoted_test.flux",
					Source: "outData = \"\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   186,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 8,
							Line:   186,
						},
						File:   "filterRowsPivoted_test.flux",
						Source: "outData",
						Start: ast.Position{
							Column: 1,
							Line:   186,
						},
					},
				},
				Name: "outData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   204,
						},
						File:   "filterRowsPivoted_test.flux",
						Source: "\"\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n\"",
						Start: ast.Position{
							Column: 11,
							Line:   186,
						},
					},
				},
				Value: "\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   211,
					},
					File:   "filterRowsPivoted_test.flux",
					Source: "t_filterRowsPivoted = (table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> geo.filterRows(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, strict: true)\n    |> drop(columns: [\"_start\", \"_stop\"])",
					Start: ast.Position{
						Column: 1,
						Line:   206,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 20,
							Line:   206,
						},
						File:   "filterRowsPivoted_test.flux",
						Source: "t_filterRowsPivoted",
						Start: ast.Position{
							Column: 1,
							Line:   206,
						},
					},
				},
				Name: "t_filterRowsPivoted",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   211,
						},
						File:   "filterRowsPivoted_test.flux",
						Source: "(table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> geo.filterRows(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, strict: true)\n    |> drop(columns: [\"_start\", \"_stop\"])",
						Start: ast.Position{
							Column: 23,
							Line:   206,
						},
					},
				},
				Body: &ast.PipeExpression{
					Argument: &ast.PipeExpression{
						Argument: &ast.PipeExpression{
							Argument: &ast.PipeExpression{
								Argument: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 8,
												Line:   207,
											},
											File:   "filterRowsPivoted_test.flux",
											Source: "table",
											Start: ast.Position{
												Column: 3,
												Line:   207,
											},
										},
									},
									Name: "table",
								},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 42,
											Line:   208,
										},
										File:   "filterRowsPivoted_test.flux",
										Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)",
										Start: ast.Position{
											Column: 3,
											Line:   207,
										},
									},
								},
								Call: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 41,
													Line:   208,
												},
												File:   "filterRowsPivoted_test.flux",
												Source: "start: 2019-11-01T00:00:00Z",
												Start: ast.Position{
													Column: 14,
													Line:   208,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 41,
														Line:   208,
													},
													File:   "filterRowsPivoted_test.flux",
													Source: "start: 2019-11-01T00:00:00Z",
													Start: ast.Position{
														Column: 14,
														Line:   208,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 19,
															Line:   208,
														},
														File:   "filterRowsPivoted_test.flux",
														Source: "start",
														Start: ast.Position{
															Column: 14,
															Line:   208,
														},
													},
												},
												Name: "start",
											},
											Value: &ast.DateTimeLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 41,
															Line:   208,
														},
														File:   "filterRowsPivoted_test.flux",
														Source: "2019-11-01T00:00:00Z",
														Start: ast.Position{
															Column: 21,
															Line:   208,
														},
													},
												},
												Value: parser.MustParseTime("2019-11-01T00:00:00Z"),
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 42,
												Line:   208,
											},
											File:   "filterRowsPivoted_test.flux",
											Source: "range(start: 2019-11-01T00:00:00Z)",
											Start: ast.Position{
												Column: 8,
												Line:   208,
											},
										},
									},
									Callee: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 13,
													Line:   208,
												},
												File:   "filterRowsPivoted_test.flux",
												Source: "range",
												Start: ast.Position{
													Column: 8,
													Line:   208,
												},
											},
										},
										Name: "range",
									},
								},
							},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 77,
										Line:   209,
									},
									File:   "filterRowsPivoted_test.flux",
									Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")",
									Start: ast.Position{
										Column: 3,
										Line:   207,
									},
								},
							},
							Call: &ast.CallExpression{
								Arguments: []ast.Expression{&ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 76,
												Line:   209,
											},
											File:   "filterRowsPivoted_test.flux",
											Source: "rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\"",
											Start: ast.Position{
												Column: 14,
												Line:   209,
											},
										},
									},
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   209,
												},
												File:   "filterRowsPivoted_test.flux",
												Source: "rowKey:[\"_time\"]",
												Start: ast.Position{
													Column: 14,
													Line:   209,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 20,
														Line:   209,
													},
													File:   "filterRowsPivoted_test.flux",
													Source: "rowKey",
													Start: ast.Position{
														Column: 14,
														Line:   209,
													},
												},
											},
											Name: "rowKey",
										},
										Value: &ast.ArrayExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 30,
														Line:   209,
													},
													File:   "filterRowsPivoted_test.flux",
													Source: "[\"_time\"]",
													Start: ast.Position{
														Column: 21,
														Line:   209,
													},
												},
											},
											Elements: []ast.Expression{&ast.StringLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 29,
															Line:   209,
														},
														File:   "filterRowsPivoted_test.flux",
														Source: "\"_time\"",
														Start: ast.Position{
															Column: 22,
															Line:   209,
														},
													},
												},
												Value: "_time",
											}},
										},
									}, &ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 53,
													Line:   209,
												},
												File:   "filterRowsPivoted_test.flux",
												Source: "columnKey: [\"_field\"]",
												Start: ast.Position{
													Column: 32,
													Line:   209,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 41,
														Line:   209,
													},
													File:   "filterRowsPivoted_test.flux",
													Source: "columnKey",
													Start: ast.Position{
														Column: 32,
														Line:   209,
													},
												},
											},
											Name: "columnKey",
										},
										Value: &ast.ArrayExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 53,
														Line:   209,
													},
													File:   "filterRowsPivoted_test.flux",
													Source: "[\"_field\"]",
													Start: ast.Position{
														Column: 43,
														Line:   209,
													},
												},
											},
											Elements: []ast.Expression{&ast.StringLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 52,
															Line:   209,
														},
														File:   "filterRowsPivoted_test.flux",
														Source: "\"_field\"",
														Start: ast.Position{
															Column: 44,
															Line:   209,
														},
													},
												},
												Value: "_field",
											}},
										},
									}, &ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 76,
													Line:   209,
												},
												File:   "filterRowsPivoted_test.flux",
												Source: "valueColumn: \"_value\"",
												Start: ast.Position{
													Column: 55,
													Line:   209,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 66,
														Line:   209,
													},
													File:   "filterRowsPivoted_test.flux",
													Source: "valueColumn",
													Start: ast.Position{
														Column: 55,
														Line:   209,
													},
												},
											},
											Name: "valueColumn",
										},
										Value: &ast.StringLiteral{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 76,
														Line:   209,
													},
													File:   "filterRowsPivoted_test.flux",
													Source: "\"_value\"",
													Start: ast.Position{
														Column: 68,
														Line:   209,
													},
												},
											},
											Value: "_value",
										},
									}},
									With: nil,
								}},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 77,
											Line:   209,
										},
										File:   "filterRowsPivoted_test.flux",
										Source: "pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")",
										Start: ast.Position{
											Column: 8,
											Line:   209,
										},
									},
								},
								Callee: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 13,
												Line:   209,
											},
											File:   "filterRowsPivoted_test.flux",
											Source: "pivot",
											Start: ast.Position{
												Column: 8,
												Line:   209,
											},
										},
									},
									Name: "pivot",
								},
							},
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 93,
									Line:   210,
								},
								File:   "filterRowsPivoted_test.flux",
								Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> geo.filterRows(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, strict: true)",
								Start: ast.Position{
									Column: 3,
									Line:   207,
								},
							},
						},
						Call: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 92,
											Line:   210,
										},
										File:   "filterRowsPivoted_test.flux",
										Source: "region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, strict: true",
										Start: ast.Position{
											Column: 23,
											Line:   210,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 78,
												Line:   210,
											},
											File:   "filterRowsPivoted_test.flux",
											Source: "region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}",
											Start: ast.Position{
												Column: 23,
												Line:   210,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 29,
													Line:   210,
												},
												File:   "filterRowsPivoted_test.flux",
												Source: "region",
												Start: ast.Position{
													Column: 23,
													Line:   210,
												},
											},
										},
										Name: "region",
									},
									Value: &ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 78,
													Line:   210,
												},
												File:   "filterRowsPivoted_test.flux",
												Source: "{lat: 40.7090214, lon: -73.61846, radius: 15.0}",
												Start: ast.Position{
													Column: 31,
													Line:   210,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 47,
														Line:   210,
													},
													File:   "filterRowsPivoted_test.flux",
													Source: "lat: 40.7090214",
													Start: ast.Position{
														Column: 32,
														Line:   210,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 35,
															Line:   210,
														},
														File:   "filterRowsPivoted_test.flux",
														Source: "lat",
														Start: ast.Position{
															Column: 32,
															Line:   210,
														},
													},
												},
												Name: "lat",
											},
											Value: &ast.FloatLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 47,
															Line:   210,
														},
														File:   "filterRowsPivoted_test.flux",
														Source: "40.7090214",
														Start: ast.Position{
															Column: 37,
															Line:   210,
														},
													},
												},
												Value: 40.7090214,
											},
										}, &ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 63,
														Line:   210,
													},
													File:   "filterRowsPivoted_test.flux",
													Source: "lon: -73.61846",
													Start: ast.Position{
														Column: 49,
														Line:   210,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 52,
															Line:   210,
														},
														File:   "filterRowsPivoted_test.flux",
														Source: "lon",
														Start: ast.Position{
															Column: 49,
															Line:   210,
														},
													},
												},
												Name: "lon",
											},
											Value: &ast.UnaryExpression{
												Argument: &ast.FloatLiteral{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 63,
																Line:   210,
															},
															File:   "filterRowsPivoted_test.flux",
															Source: "73.61846",
															Start: ast.Position{
																Column: 55,
																Line:   210,
															},
														},
													},
													Value: 73.61846,
												},
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 63,
															Line:   210,
														},
														File:   "filterRowsPivoted_test.flux",
														Source: "-73.61846",
														Start: ast.Position{
															Column: 54,
															Line:   210,
														},
													},
												},
												Operator: 6,
											},
										}, &ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 77,
														Line:   210,
													},
													File:   "filterRowsPivoted_test.flux",
													Source: "radius: 15.0",
													Start: ast.Position{
														Column: 65,
														Line:   210,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 71,
															Line:   210,
														},
														File:   "filterRowsPivoted_test.flux",
														Source: "radius",
														Start: ast.Position{
															Column: 65,
															Line:   210,
														},
													},
												},
												Name: "radius",
											},
											Value: &ast.FloatLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 77,
															Line:   210,
														},
														File:   "filterRowsPivoted_test.flux",
														Source: "15.0",
														Start: ast.Position{
															Column: 73,
															Line:   210,
														},
													},
												},
												Value: 15.0,
											},
										}},
										With: nil,
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 92,
												Line:   210,
											},
											File:   "filterRowsPivoted_test.flux",
											Source: "strict: true",
											Start: ast.Position{
												Column: 80,
												Line:   210,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 86,
													Line:   210,
												},
												File:   "filterRowsPivoted_test.flux",
												Source: "strict",
												Start: ast.Position{
													Column: 80,
													Line:   210,
												},
											},
										},
										Name: "strict",
									},
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 92,
													Line:   210,
												},
												File:   "filterRowsPivoted_test.flux",
												Source: "true",
												Start: ast.Position{
													Column: 88,
													Line:   210,
												},
											},
										},
										Name: "true",
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 93,
										Line:   210,
									},
									File:   "filterRowsPivoted_test.flux",
									Source: "geo.filterRows(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, strict: true)",
									Start: ast.Position{
										Column: 8,
										Line:   210,
									},
								},
							},
							Callee: &ast.MemberExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 22,
											Line:   210,
										},
										File:   "filterRowsPivoted_test.flux",
										Source: "geo.filterRows",
										Start: ast.Position{
											Column: 8,
											Line:   210,
										},
									},
								},
								Object: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 11,
												Line:   210,
											},
											File:   "filterRowsPivoted_test.flux",
											Source: "geo",
											Start: ast.Position{
												Column: 8,
												Line:   210,
											},
										},
									},
									Name: "geo",
								},
								Property: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 22,
												Line:   210,
											},
											File:   "filterRowsPivoted_test.flux",
											Source: "filterRows",
											Start: ast.Position{
												Column: 12,
												Line:   210,
											},
										},
									},
									Name: "filterRows",
								},
							},
						},
					},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   211,
							},
							File:   "filterRowsPivoted_test.flux",
							Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> geo.filterRows(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, strict: true)\n    |> drop(columns: [\"_start\", \"_stop\"])",
							Start: ast.Position{
								Column: 3,
								Line:   207,
							},
						},
					},
					Call: &ast.CallExpression{
						Arguments: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   211,
									},
									File:   "filterRowsPivoted_test.flux",
									Source: "columns: [\"_start\", \"_stop\"]",
									Start: ast.Position{
										Column: 13,
										Line:   211,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 41,
											Line:   211,
										},
										File:   "filterRowsPivoted_test.flux",
										Source: "columns: [\"_start\", \"_stop\"]",
										Start: ast.Position{
											Column: 13,
											Line:   211,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 20,
												Line:   211,
											},
											File:   "filterRowsPivoted_test.flux",
											Source: "columns",
											Start: ast.Position{
												Column: 13,
												Line:   211,
											},
										},
									},
									Name: "columns",
								},
								Value: &ast.ArrayExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 41,
												Line:   211,
											},
											File:   "filterRowsPivoted_test.flux",
											Source: "[\"_start\", \"_stop\"]",
											Start: ast.Position{
												Column: 22,
												Line:   211,
											},
										},
									},
									Elements: []ast.Expression{&ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 31,
													Line:   211,
												},
												File:   "filterRowsPivoted_test.flux",
												Source: "\"_start\"",
												Start: ast.Position{
													Column: 23,
													Line:   211,
												},
											},
										},
										Value: "_start",
									}, &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 40,
													Line:   211,
												},
												File:   "filterRowsPivoted_test.flux",
												Source: "\"_stop\"",
												Start: ast.Position{
													Column: 33,
													Line:   211,
												},
											},
										},
										Value: "_stop",
									}},
								},
							}},
							With: nil,
						}},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   211,
								},
								File:   "filterRowsPivoted_test.flux",
								Source: "drop(columns: [\"_start\", \"_stop\"])",
								Start: ast.Position{
									Column: 8,
									Line:   211,
								},
							},
						},
						Callee: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 12,
										Line:   211,
									},
									File:   "filterRowsPivoted_test.flux",
									Source: "drop",
									Start: ast.Position{
										Column: 8,
										Line:   211,
									},
								},
							},
							Name: "drop",
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 32,
								Line:   206,
							},
							File:   "filterRowsPivoted_test.flux",
							Source: "table=<-",
							Start: ast.Position{
								Column: 24,
								Line:   206,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 29,
									Line:   206,
								},
								File:   "filterRowsPivoted_test.flux",
								Source: "table",
								Start: ast.Position{
									Column: 24,
									Line:   206,
								},
							},
						},
						Name: "table",
					},
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 32,
								Line:   206,
							},
							File:   "filterRowsPivoted_test.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 30,
								Line:   206,
							},
						},
					}},
				}},
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 107,
							Line:   213,
						},
						File:   "filterRowsPivoted_test.flux",
						Source: "_filterRowsPivoted = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_filterRowsPivoted})",
						Start: ast.Position{
							Column: 6,
							Line:   212,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 24,
								Line:   212,
							},
							File:   "filterRowsPivoted_test.flux",
							Source: "_filterRowsPivoted",
							Start: ast.Position{
								Column: 6,
								Line:   212,
							},
						},
					},
					Name: "_filterRowsPivoted",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 107,
								Line:   213,
							},
							File:   "filterRowsPivoted_test.flux",
							Source: "() =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_filterRowsPivoted})",
							Start: ast.Position{
								Column: 27,
								Line:   212,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 107,
									Line:   213,
								},
								File:   "filterRowsPivoted_test.flux",
								Source: "({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_filterRowsPivoted})",
								Start: ast.Position{
									Column: 2,
									Line:   213,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 106,
										Line:   213,
									},
									File:   "filterRowsPivoted_test.flux",
									Source: "{input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_filterRowsPivoted}",
									Start: ast.Position{
										Column: 3,
										Line:   213,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 43,
											Line:   213,
										},
										File:   "filterRowsPivoted_test.flux",
										Source: "input: testing.loadStorage(csv: inData)",
										Start: ast.Position{
											Column: 4,
											Line:   213,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 9,
												Line:   213,
											},
											File:   "filterRowsPivoted_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 4,
												Line:   213,
											},
										},
									},
									Name: "input",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   213,
												},
												File:   "filterRowsPivoted_test.flux",
												Source: "csv: inData",
												Start: ast.Position{
													Column: 31,
													Line:   213,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 42,
														Line:   213,
													},
													File:   "filterRowsPivoted_test.flux",
													Source: "csv: inData",
													Start: ast.Position{
														Column: 31,
														Line:   213,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 34,
															Line:   213,
														},
														File:   "filterRowsPivoted_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 31,
															Line:   213,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 42,
															Line:   213,
														},
														File:   "filterRowsPivoted_test.flux",
														Source: "inData",
														Start: ast.Position{
															Column: 36,
															Line:   213,
														},
													},
												},
												Name: "inData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 43,
												Line:   213,
											},
											File:   "filterRowsPivoted_test.flux",
											Source: "testing.loadStorage(csv: inData)",
											Start: ast.Position{
												Column: 11,
												Line:   213,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   213,
												},
												File:   "filterRowsPivoted_test.flux",
												Source: "testing.loadStorage",
												Start: ast.Position{
													Column: 11,
													Line:   213,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   213,
													},
													File:   "filterRowsPivoted_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 11,
														Line:   213,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 30,
														Line:   213,
													},
													File:   "filterRowsPivoted_test.flux",
													Source: "loadStorage",
													Start: ast.Position{
														Column: 19,
														Line:   213,
													},
												},
											},
											Name: "loadStorage",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 80,
											Line:   213,
										},
										File:   "filterRowsPivoted_test.flux",
										Source: "want: testing.loadMem(csv: outData)",
										Start: ast.Position{
											Column: 45,
											Line:   213,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 49,
												Line:   213,
											},
											File:   "filterRowsPivoted_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 45,
												Line:   213,
											},
										},
									},
									Name: "want",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 79,
													Line:   213,
												},
												File:   "filterRowsPivoted_test.flux",
												Source: "csv: outData",
												Start: ast.Position{
													Column: 67,
													Line:   213,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 79,
														Line:   213,
													},
													File:   "filterRowsPivoted_test.flux",
													Source: "csv: outData",
													Start: ast.Position{
														Column: 67,
														Line:   213,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 70,
															Line:   213,
														},
														File:   "filterRowsPivoted_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 67,
															Line:   213,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 79,
															Line:   213,
														},
														File:   "filterRowsPivoted_test.flux",
														Source: "outData",
														Start: ast.Position{
															Column: 72,
															Line:   213,
														},
													},
												},
												Name: "outData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 80,
												Line:   213,
											},
											File:   "filterRowsPivoted_test.flux",
											Source: "testing.loadMem(csv: outData)",
											Start: ast.Position{
												Column: 51,
												Line:   213,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   213,
												},
												File:   "filterRowsPivoted_test.flux",
												Source: "testing.loadMem",
												Start: ast.Position{
													Column: 51,
													Line:   213,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 58,
														Line:   213,
													},
													File:   "filterRowsPivoted_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 51,
														Line:   213,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 66,
														Line:   213,
													},
													File:   "filterRowsPivoted_test.flux",
													Source: "loadMem",
													Start: ast.Position{
														Column: 59,
														Line:   213,
													},
												},
											},
											Name: "loadMem",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 105,
											Line:   213,
										},
										File:   "filterRowsPivoted_test.flux",
										Source: "fn: t_filterRowsPivoted",
										Start: ast.Position{
											Column: 82,
											Line:   213,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 84,
												Line:   213,
											},
											File:   "filterRowsPivoted_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 82,
												Line:   213,
											},
										},
									},
									Name: "fn",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 105,
												Line:   213,
											},
											File:   "filterRowsPivoted_test.flux",
											Source: "t_filterRowsPivoted",
											Start: ast.Position{
												Column: 86,
												Line:   213,
											},
										},
									},
									Name: "t_filterRowsPivoted",
								},
							}},
							With: nil,
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 107,
						Line:   213,
					},
					File:   "filterRowsPivoted_test.flux",
					Source: "test _filterRowsPivoted = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_filterRowsPivoted})",
					Start: ast.Position{
						Column: 1,
						Line:   212,
					},
				},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 26,
						Line:   3,
					},
					File:   "filterRowsPivoted_test.flux",
					Source: "import \"experimental/geo\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 26,
							Line:   3,
						},
						File:   "filterRowsPivoted_test.flux",
						Source: "\"experimental/geo\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "experimental/geo",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   4,
					},
					File:   "filterRowsPivoted_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   4,
						},
						File:   "filterRowsPivoted_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "testing",
			},
		}},
		Metadata: "parser-type=rust",
		Name:     "filterRowsPivoted_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   1,
					},
					File:   "filterRowsPivoted_test.flux",
					Source: "package geo_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   1,
						},
						File:   "filterRowsPivoted_test.flux",
						Source: "geo_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "geo_test",
			},
		},
	}, &ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 106,
					Line:   213,
				},
				File:   "filterRowsStrict_test.flux",
				Source: "package geo_test\n\nimport \"experimental/geo\"\nimport \"testing\"\n\noption now = () => (2030-01-01T00:00:00Z)\n\ninData = \"\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n\"\n\noutData = \"\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n\"\n\nt_filterRowsStrict = (table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.filterRows(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, strict: true)\n    |> drop(columns: [\"_start\", \"_stop\"])\ntest _filterRowsStrict = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_filterRowsStrict})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   6,
						},
						File:   "filterRowsStrict_test.flux",
						Source: "now = () => (2030-01-01T00:00:00Z)",
						Start: ast.Position{
							Column: 8,
							Line:   6,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   6,
							},
							File:   "filterRowsStrict_test.flux",
							Source: "now",
							Start: ast.Position{
								Column: 8,
								Line:   6,
							},
						},
					},
					Name: "now",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   6,
							},
							File:   "filterRowsStrict_test.flux",
							Source: "() => (2030-01-01T00:00:00Z)",
							Start: ast.Position{
								Column: 14,
								Line:   6,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   6,
								},
								File:   "filterRowsStrict_test.flux",
								Source: "(2030-01-01T00:00:00Z)",
								Start: ast.Position{
									Column: 20,
									Line:   6,
								},
							},
						},
						Expression: &ast.DateTimeLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   6,
									},
									File:   "filterRowsStrict_test.flux",
									Source: "2030-01-01T00:00:00Z",
									Start: ast.Position{
										Column: 21,
										Line:   6,
									},
								},
							},
							Value: parser.MustParseTime("2030-01-01T00:00:00Z"),
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   6,
					},
					File:   "filterRowsStrict_test.flux",
					Source: "option now = () => (2030-01-01T00:00:00Z)",
					Start: ast.Position{
						Column: 1,
						Line:   6,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   185,
					},
					File:   "filterRowsStrict_test.flux",
					Source: "inData = \"\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   8,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 7,
							Line:   8,
						},
						File:   "filterRowsStrict_test.flux",
						Source: "inData",
						Start: ast.Position{
							Column: 1,
							Line:   8,
						},
					},
				},
				Name: "inData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   185,
						},
						File:   "filterRowsStrict_test.flux",
						Source: "\"\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n\"",
						Start: ast.Position{
							Column: 10,
							Line:   8,
						},
					},
				},
				Value: "\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   205,
					},
					File:   "filterRowsStrict_test.flux",
					Source: "outData = \"\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   187,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 8,
							Line:   187,
						},
						File:   "filterRowsStrict_test.flux",
						Source: "outData",
						Start: ast.Position{
							Column: 1,
							Line:   187,
						},
					},
				},
				Name: "outData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   205,
						},
						File:   "filterRowsStrict_test.flux",
						Source: "\"\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n\"",
						Start: ast.Position{
							Column: 11,
							Line:   187,
						},
					},
				},
				Value: "\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   211,
					},
					File:   "filterRowsStrict_test.flux",
					Source: "t_filterRowsStrict = (table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.filterRows(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, strict: true)\n    |> drop(columns: [\"_start\", \"_stop\"])",
					Start: ast.Position{
						Column: 1,
						Line:   207,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 19,
							Line:   207,
						},
						File:   "filterRowsStrict_test.flux",
						Source: "t_filterRowsStrict",
						Start: ast.Position{
							Column: 1,
							Line:   207,
						},
					},
				},
				Name: "t_filterRowsStrict",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   211,
						},
						File:   "filterRowsStrict_test.flux",
						Source: "(table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.filterRows(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, strict: true)\n    |> drop(columns: [\"_start\", \"_stop\"])",
						Start: ast.Position{
							Column: 22,
							Line:   207,
						},
					},
				},
				Body: &ast.PipeExpression{
					Argument: &ast.PipeExpression{
						Argument: &ast.PipeExpression{
							Argument: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 8,
											Line:   208,
										},
										File:   "filterRowsStrict_test.flux",
										Source: "table",
										Start: ast.Position{
											Column: 3,
											Line:   208,
										},
									},
								},
								Name: "table",
							},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 42,
										Line:   209,
									},
									File:   "filterRowsStrict_test.flux",
									Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)",
									Start: ast.Position{
										Column: 3,
										Line:   208,
									},
								},
							},
							Call: &ast.CallExpression{
								Arguments: []ast.Expression{&ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 41,
												Line:   209,
											},
											File:   "filterRowsStrict_test.flux",
											Source: "start: 2019-11-01T00:00:00Z",
											Start: ast.Position{
												Column: 14,
												Line:   209,
											},
										},
									},
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 41,
													Line:   209,
												},
												File:   "filterRowsStrict_test.flux",
												Source: "start: 2019-11-01T00:00:00Z",
												Start: ast.Position{
													Column: 14,
													Line:   209,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 19,
														Line:   209,
													},
													File:   "filterRowsStrict_test.flux",
													Source: "start",
													Start: ast.Position{
														Column: 14,
														Line:   209,
													},
												},
											},
											Name: "start",
										},
										Value: &ast.DateTimeLiteral{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 41,
														Line:   209,
													},
													File:   "filterRowsStrict_test.flux",
													Source: "2019-11-01T00:00:00Z",
													Start: ast.Position{
														Column: 21,
														Line:   209,
													},
												},
											},
											Value: parser.MustParseTime("2019-11-01T00:00:00Z"),
										},
									}},
									With: nil,
								}},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 42,
											Line:   209,
										},
										File:   "filterRowsStrict_test.flux",
										Source: "range(start: 2019-11-01T00:00:00Z)",
										Start: ast.Position{
											Column: 8,
											Line:   209,
										},
									},
								},
								Callee: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 13,
												Line:   209,
											},
											File:   "filterRowsStrict_test.flux",
											Source: "range",
											Start: ast.Position{
												Column: 8,
												Line:   209,
											},
										},
									},
									Name: "range",
								},
							},
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 93,
									Line:   210,
								},
								File:   "filterRowsStrict_test.flux",
								Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.filterRows(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, strict: true)",
								Start: ast.Position{
									Column: 3,
									Line:   208,
								},
							},
						},
						Call: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 92,
											Line:   210,
										},
										File:   "filterRowsStrict_test.flux",
										Source: "region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, strict: true",
										Start: ast.Position{
											Column: 23,
											Line:   210,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 78,
												Line:   210,
											},
											File:   "filterRowsStrict_test.flux",
											Source: "region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}",
											Start: ast.Position{
												Column: 23,
												Line:   210,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 29,
													Line:   210,
												},
												File:   "filterRowsStrict_test.flux",
												Source: "region",
												Start: ast.Position{
													Column: 23,
													Line:   210,
												},
											},
										},
										Name: "region",
									},
									Value: &ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 78,
													Line:   210,
												},
												File:   "filterRowsStrict_test.flux",
												Source: "{lat: 40.7090214, lon: -73.61846, radius: 15.0}",
												Start: ast.Position{
													Column: 31,
													Line:   210,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 47,
														Line:   210,
													},
													File:   "filterRowsStrict_test.flux",
													Source: "lat: 40.7090214",
													Start: ast.Position{
														Column: 32,
														Line:   210,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 35,
															Line:   210,
														},
														File:   "filterRowsStrict_test.flux",
														Source: "lat",
														Start: ast.Position{
															Column: 32,
															Line:   210,
														},
													},
												},
												Name: "lat",
											},
											Value: &ast.FloatLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 47,
															Line:   210,
														},
														File:   "filterRowsStrict_test.flux",
														Source: "40.7090214",
														Start: ast.Position{
															Column: 37,
															Line:   210,
														},
													},
												},
												Value: 40.7090214,
											},
										}, &ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 63,
														Line:   210,
													},
													File:   "filterRowsStrict_test.flux",
													Source: "lon: -73.61846",
													Start: ast.Position{
														Column: 49,
														Line:   210,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 52,
															Line:   210,
														},
														File:   "filterRowsStrict_test.flux",
														Source: "lon",
														Start: ast.Position{
															Column: 49,
															Line:   210,
														},
													},
												},
												Name: "lon",
											},
											Value: &ast.UnaryExpression{
												Argument: &ast.FloatLiteral{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 63,
																Line:   210,
															},
															File:   "filterRowsStrict_test.flux",
															Source: "73.61846",
															Start: ast.Position{
																Column: 55,
																Line:   210,
															},
														},
													},
													Value: 73.61846,
												},
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 63,
															Line:   210,
														},
														File:   "filterRowsStrict_test.flux",
														Source: "-73.61846",
														Start: ast.Position{
															Column: 54,
															Line:   210,
														},
													},
												},
												Operator: 6,
											},
										}, &ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 77,
														Line:   210,
													},
													File:   "filterRowsStrict_test.flux",
													Source: "radius: 15.0",
													Start: ast.Position{
														Column: 65,
														Line:   210,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 71,
															Line:   210,
														},
														File:   "filterRowsStrict_test.flux",
														Source: "radius",
														Start: ast.Position{
															Column: 65,
															Line:   210,
														},
													},
												},
												Name: "radius",
											},
											Value: &ast.FloatLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 77,
															Line:   210,
														},
														File:   "filterRowsStrict_test.flux",
														Source: "15.0",
														Start: ast.Position{
															Column: 73,
															Line:   210,
														},
													},
												},
												Value: 15.0,
											},
										}},
										With: nil,
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 92,
												Line:   210,
											},
											File:   "filterRowsStrict_test.flux",
											Source: "strict: true",
											Start: ast.Position{
												Column: 80,
												Line:   210,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 86,
													Line:   210,
												},
												File:   "filterRowsStrict_test.flux",
												Source: "strict",
												Start: ast.Position{
													Column: 80,
													Line:   210,
												},
											},
										},
										Name: "strict",
									},
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 92,
													Line:   210,
												},
												File:   "filterRowsStrict_test.flux",
												Source: "true",
												Start: ast.Position{
													Column: 88,
													Line:   210,
												},
											},
										},
										Name: "true",
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 93,
										Line:   210,
									},
									File:   "filterRowsStrict_test.flux",
									Source: "geo.filterRows(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, strict: true)",
									Start: ast.Position{
										Column: 8,
										Line:   210,
									},
								},
							},
							Callee: &ast.MemberExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 22,
											Line:   210,
										},
										File:   "filterRowsStrict_test.flux",
										Source: "geo.filterRows",
										Start: ast.Position{
											Column: 8,
											Line:   210,
										},
									},
								},
								Object: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 11,
												Line:   210,
											},
											File:   "filterRowsStrict_test.flux",
											Source: "geo",
											Start: ast.Position{
												Column: 8,
												Line:   210,
											},
										},
									},
									Name: "geo",
								},
								Property: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 22,
												Line:   210,
											},
											File:   "filterRowsStrict_test.flux",
											Source: "filterRows",
											Start: ast.Position{
												Column: 12,
												Line:   210,
											},
										},
									},
									Name: "filterRows",
								},
							},
						},
					},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   211,
							},
							File:   "filterRowsStrict_test.flux",
							Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.filterRows(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, strict: true)\n    |> drop(columns: [\"_start\", \"_stop\"])",
							Start: ast.Position{
								Column: 3,
								Line:   208,
							},
						},
					},
					Call: &ast.CallExpression{
						Arguments: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   211,
									},
									File:   "filterRowsStrict_test.flux",
									Source: "columns: [\"_start\", \"_stop\"]",
									Start: ast.Position{
										Column: 13,
										Line:   211,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 41,
											Line:   211,
										},
										File:   "filterRowsStrict_test.flux",
										Source: "columns: [\"_start\", \"_stop\"]",
										Start: ast.Position{
											Column: 13,
											Line:   211,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 20,
												Line:   211,
											},
											File:   "filterRowsStrict_test.flux",
											Source: "columns",
											Start: ast.Position{
												Column: 13,
												Line:   211,
											},
										},
									},
									Name: "columns",
								},
								Value: &ast.ArrayExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 41,
												Line:   211,
											},
											File:   "filterRowsStrict_test.flux",
											Source: "[\"_start\", \"_stop\"]",
											Start: ast.Position{
												Column: 22,
												Line:   211,
											},
										},
									},
									Elements: []ast.Expression{&ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 31,
													Line:   211,
												},
												File:   "filterRowsStrict_test.flux",
												Source: "\"_start\"",
												Start: ast.Position{
													Column: 23,
													Line:   211,
												},
											},
										},
										Value: "_start",
									}, &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 40,
													Line:   211,
												},
												File:   "filterRowsStrict_test.flux",
												Source: "\"_stop\"",
												Start: ast.Position{
													Column: 33,
													Line:   211,
												},
											},
										},
										Value: "_stop",
									}},
								},
							}},
							With: nil,
						}},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   211,
								},
								File:   "filterRowsStrict_test.flux",
								Source: "drop(columns: [\"_start\", \"_stop\"])",
								Start: ast.Position{
									Column: 8,
									Line:   211,
								},
							},
						},
						Callee: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 12,
										Line:   211,
									},
									File:   "filterRowsStrict_test.flux",
									Source: "drop",
									Start: ast.Position{
										Column: 8,
										Line:   211,
									},
								},
							},
							Name: "drop",
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 31,
								Line:   207,
							},
							File:   "filterRowsStrict_test.flux",
							Source: "table=<-",
							Start: ast.Position{
								Column: 23,
								Line:   207,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 28,
									Line:   207,
								},
								File:   "filterRowsStrict_test.flux",
								Source: "table",
								Start: ast.Position{
									Column: 23,
									Line:   207,
								},
							},
						},
						Name: "table",
					},
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 31,
								Line:   207,
							},
							File:   "filterRowsStrict_test.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 29,
								Line:   207,
							},
						},
					}},
				}},
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 106,
							Line:   213,
						},
						File:   "filterRowsStrict_test.flux",
						Source: "_filterRowsStrict = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_filterRowsStrict})",
						Start: ast.Position{
							Column: 6,
							Line:   212,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 23,
								Line:   212,
							},
							File:   "filterRowsStrict_test.flux",
							Source: "_filterRowsStrict",
							Start: ast.Position{
								Column: 6,
								Line:   212,
							},
						},
					},
					Name: "_filterRowsStrict",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 106,
								Line:   213,
							},
							File:   "filterRowsStrict_test.flux",
							Source: "() =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_filterRowsStrict})",
							Start: ast.Position{
								Column: 26,
								Line:   212,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 106,
									Line:   213,
								},
								File:   "filterRowsStrict_test.flux",
								Source: "({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_filterRowsStrict})",
								Start: ast.Position{
									Column: 2,
									Line:   213,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 105,
										Line:   213,
									},
									File:   "filterRowsStrict_test.flux",
									Source: "{input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_filterRowsStrict}",
									Start: ast.Position{
										Column: 3,
										Line:   213,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 43,
											Line:   213,
										},
										File:   "filterRowsStrict_test.flux",
										Source: "input: testing.loadStorage(csv: inData)",
										Start: ast.Position{
											Column: 4,
											Line:   213,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 9,
												Line:   213,
											},
											File:   "filterRowsStrict_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 4,
												Line:   213,
											},
										},
									},
									Name: "input",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   213,
												},
												File:   "filterRowsStrict_test.flux",
												Source: "csv: inData",
												Start: ast.Position{
													Column: 31,
													Line:   213,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 42,
														Line:   213,
													},
													File:   "filterRowsStrict_test.flux",
													Source: "csv: inData",
													Start: ast.Position{
														Column: 31,
														Line:   213,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 34,
															Line:   213,
														},
														File:   "filterRowsStrict_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 31,
															Line:   213,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 42,
															Line:   213,
														},
														File:   "filterRowsStrict_test.flux",
														Source: "inData",
														Start: ast.Position{
															Column: 36,
															Line:   213,
														},
													},
												},
												Name: "inData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 43,
												Line:   213,
											},
											File:   "filterRowsStrict_test.flux",
											Source: "testing.loadStorage(csv: inData)",
											Start: ast.Position{
												Column: 11,
												Line:   213,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   213,
												},
												File:   "filterRowsStrict_test.flux",
												Source: "testing.loadStorage",
												Start: ast.Position{
													Column: 11,
													Line:   213,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   213,
													},
													File:   "filterRowsStrict_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 11,
														Line:   213,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 30,
														Line:   213,
													},
													File:   "filterRowsStrict_test.flux",
													Source: "loadStorage",
													Start: ast.Position{
														Column: 19,
														Line:   213,
													},
												},
											},
											Name: "loadStorage",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 80,
											Line:   213,
										},
										File:   "filterRowsStrict_test.flux",
										Source: "want: testing.loadMem(csv: outData)",
										Start: ast.Position{
											Column: 45,
											Line:   213,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 49,
												Line:   213,
											},
											File:   "filterRowsStrict_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 45,
												Line:   213,
											},
										},
									},
									Name: "want",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 79,
													Line:   213,
												},
												File:   "filterRowsStrict_test.flux",
												Source: "csv: outData",
												Start: ast.Position{
													Column: 67,
													Line:   213,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 79,
														Line:   213,
													},
													File:   "filterRowsStrict_test.flux",
													Source: "csv: outData",
													Start: ast.Position{
														Column: 67,
														Line:   213,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 70,
															Line:   213,
														},
														File:   "filterRowsStrict_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 67,
															Line:   213,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 79,
															Line:   213,
														},
														File:   "filterRowsStrict_test.flux",
														Source: "outData",
														Start: ast.Position{
															Column: 72,
															Line:   213,
														},
													},
												},
												Name: "outData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 80,
												Line:   213,
											},
											File:   "filterRowsStrict_test.flux",
											Source: "testing.loadMem(csv: outData)",
											Start: ast.Position{
												Column: 51,
												Line:   213,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   213,
												},
												File:   "filterRowsStrict_test.flux",
												Source: "testing.loadMem",
												Start: ast.Position{
													Column: 51,
													Line:   213,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 58,
														Line:   213,
													},
													File:   "filterRowsStrict_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 51,
														Line:   213,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 66,
														Line:   213,
													},
													File:   "filterRowsStrict_test.flux",
													Source: "loadMem",
													Start: ast.Position{
														Column: 59,
														Line:   213,
													},
												},
											},
											Name: "loadMem",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 104,
											Line:   213,
										},
										File:   "filterRowsStrict_test.flux",
										Source: "fn: t_filterRowsStrict",
										Start: ast.Position{
											Column: 82,
											Line:   213,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 84,
												Line:   213,
											},
											File:   "filterRowsStrict_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 82,
												Line:   213,
											},
										},
									},
									Name: "fn",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 104,
												Line:   213,
											},
											File:   "filterRowsStrict_test.flux",
											Source: "t_filterRowsStrict",
											Start: ast.Position{
												Column: 86,
												Line:   213,
											},
										},
									},
									Name: "t_filterRowsStrict",
								},
							}},
							With: nil,
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 106,
						Line:   213,
					},
					File:   "filterRowsStrict_test.flux",
					Source: "test _filterRowsStrict = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_filterRowsStrict})",
					Start: ast.Position{
						Column: 1,
						Line:   212,
					},
				},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 26,
						Line:   3,
					},
					File:   "filterRowsStrict_test.flux",
					Source: "import \"experimental/geo\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 26,
							Line:   3,
						},
						File:   "filterRowsStrict_test.flux",
						Source: "\"experimental/geo\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "experimental/geo",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   4,
					},
					File:   "filterRowsStrict_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   4,
						},
						File:   "filterRowsStrict_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "testing",
			},
		}},
		Metadata: "parser-type=rust",
		Name:     "filterRowsStrict_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   1,
					},
					File:   "filterRowsStrict_test.flux",
					Source: "package geo_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   1,
						},
						File:   "filterRowsStrict_test.flux",
						Source: "geo_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "geo_test",
			},
		},
	}, &ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 100,
					Line:   221,
				},
				File:   "gridFilterLevel_test.flux",
				Source: "package geo_test\n\nimport \"experimental/geo\"\nimport \"testing\"\n\noption now = () => (2030-01-01T00:00:00Z)\n\ninData = \"\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n\"\n\noutData = \"\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,lat\n,,3,2019-11-01T00:17:38.287113937Z,89c2664,taxi,start,1572567458287113937,-73.776665,40.645245\n\"\n\n// grid level 9 is still fine enough not to cover large area so we only get Long Island points\nt_gridFilter = (table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.gridFilter(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, level: 9)\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> drop(columns: [\"_start\", \"_stop\"])\ntest _gridFilter = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_gridFilter})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   6,
						},
						File:   "gridFilterLevel_test.flux",
						Source: "now = () => (2030-01-01T00:00:00Z)",
						Start: ast.Position{
							Column: 8,
							Line:   6,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   6,
							},
							File:   "gridFilterLevel_test.flux",
							Source: "now",
							Start: ast.Position{
								Column: 8,
								Line:   6,
							},
						},
					},
					Name: "now",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   6,
							},
							File:   "gridFilterLevel_test.flux",
							Source: "() => (2030-01-01T00:00:00Z)",
							Start: ast.Position{
								Column: 14,
								Line:   6,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   6,
								},
								File:   "gridFilterLevel_test.flux",
								Source: "(2030-01-01T00:00:00Z)",
								Start: ast.Position{
									Column: 20,
									Line:   6,
								},
							},
						},
						Expression: &ast.DateTimeLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   6,
									},
									File:   "gridFilterLevel_test.flux",
									Source: "2030-01-01T00:00:00Z",
									Start: ast.Position{
										Column: 21,
										Line:   6,
									},
								},
							},
							Value: parser.MustParseTime("2030-01-01T00:00:00Z"),
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   6,
					},
					File:   "gridFilterLevel_test.flux",
					Source: "option now = () => (2030-01-01T00:00:00Z)",
					Start: ast.Position{
						Column: 1,
						Line:   6,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   185,
					},
					File:   "gridFilterLevel_test.flux",
					Source: "inData = \"\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   8,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 7,
							Line:   8,
						},
						File:   "gridFilterLevel_test.flux",
						Source: "inData",
						Start: ast.Position{
							Column: 1,
							Line:   8,
						},
					},
				},
				Name: "inData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   185,
						},
						File:   "gridFilterLevel_test.flux",
						Source: "\"\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n\"",
						Start: ast.Position{
							Column: 10,
							Line:   8,
						},
					},
				},
				Value: "\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   211,
					},
					File:   "gridFilterLevel_test.flux",
					Source: "outData = \"\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,lat\n,,3,2019-11-01T00:17:38.287113937Z,89c2664,taxi,start,1572567458287113937,-73.776665,40.645245\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   187,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 8,
							Line:   187,
						},
						File:   "gridFilterLevel_test.flux",
						Source: "outData",
						Start: ast.Position{
							Column: 1,
							Line:   187,
						},
					},
				},
				Name: "outData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   211,
						},
						File:   "gridFilterLevel_test.flux",
						Source: "\"\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,lat\n,,3,2019-11-01T00:17:38.287113937Z,89c2664,taxi,start,1572567458287113937,-73.776665,40.645245\n\"",
						Start: ast.Position{
							Column: 11,
							Line:   187,
						},
					},
				},
				Value: "\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,lat\n,,3,2019-11-01T00:17:38.287113937Z,89c2664,taxi,start,1572567458287113937,-73.776665,40.645245\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   219,
					},
					File:   "gridFilterLevel_test.flux",
					Source: "t_gridFilter = (table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.gridFilter(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, level: 9)\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> drop(columns: [\"_start\", \"_stop\"])",
					Start: ast.Position{
						Column: 1,
						Line:   214,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 13,
							Line:   214,
						},
						File:   "gridFilterLevel_test.flux",
						Source: "t_gridFilter",
						Start: ast.Position{
							Column: 1,
							Line:   214,
						},
					},
				},
				Name: "t_gridFilter",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   219,
						},
						File:   "gridFilterLevel_test.flux",
						Source: "(table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.gridFilter(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, level: 9)\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> drop(columns: [\"_start\", \"_stop\"])",
						Start: ast.Position{
							Column: 16,
							Line:   214,
						},
					},
				},
				Body: &ast.PipeExpression{
					Argument: &ast.PipeExpression{
						Argument: &ast.PipeExpression{
							Argument: &ast.PipeExpression{
								Argument: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 8,
												Line:   215,
											},
											File:   "gridFilterLevel_test.flux",
											Source: "table",
											Start: ast.Position{
												Column: 3,
												Line:   215,
											},
										},
									},
									Name: "table",
								},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 42,
											Line:   216,
										},
										File:   "gridFilterLevel_test.flux",
										Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)",
										Start: ast.Position{
											Column: 3,
											Line:   215,
										},
									},
								},
								Call: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 41,
													Line:   216,
												},
												File:   "gridFilterLevel_test.flux",
												Source: "start: 2019-11-01T00:00:00Z",
												Start: ast.Position{
													Column: 14,
													Line:   216,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 41,
														Line:   216,
													},
													File:   "gridFilterLevel_test.flux",
													Source: "start: 2019-11-01T00:00:00Z",
													Start: ast.Position{
														Column: 14,
														Line:   216,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 19,
															Line:   216,
														},
														File:   "gridFilterLevel_test.flux",
														Source: "start",
														Start: ast.Position{
															Column: 14,
															Line:   216,
														},
													},
												},
												Name: "start",
											},
											Value: &ast.DateTimeLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 41,
															Line:   216,
														},
														File:   "gridFilterLevel_test.flux",
														Source: "2019-11-01T00:00:00Z",
														Start: ast.Position{
															Column: 21,
															Line:   216,
														},
													},
												},
												Value: parser.MustParseTime("2019-11-01T00:00:00Z"),
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 42,
												Line:   216,
											},
											File:   "gridFilterLevel_test.flux",
											Source: "range(start: 2019-11-01T00:00:00Z)",
											Start: ast.Position{
												Column: 8,
												Line:   216,
											},
										},
									},
									Callee: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 13,
													Line:   216,
												},
												File:   "gridFilterLevel_test.flux",
												Source: "range",
												Start: ast.Position{
													Column: 8,
													Line:   216,
												},
											},
										},
										Name: "range",
									},
								},
							},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 89,
										Line:   217,
									},
									File:   "gridFilterLevel_test.flux",
									Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.gridFilter(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, level: 9)",
									Start: ast.Position{
										Column: 3,
										Line:   215,
									},
								},
							},
							Call: &ast.CallExpression{
								Arguments: []ast.Expression{&ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 88,
												Line:   217,
											},
											File:   "gridFilterLevel_test.flux",
											Source: "region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, level: 9",
											Start: ast.Position{
												Column: 23,
												Line:   217,
											},
										},
									},
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 78,
													Line:   217,
												},
												File:   "gridFilterLevel_test.flux",
												Source: "region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}",
												Start: ast.Position{
													Column: 23,
													Line:   217,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 29,
														Line:   217,
													},
													File:   "gridFilterLevel_test.flux",
													Source: "region",
													Start: ast.Position{
														Column: 23,
														Line:   217,
													},
												},
											},
											Name: "region",
										},
										Value: &ast.ObjectExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 78,
														Line:   217,
													},
													File:   "gridFilterLevel_test.flux",
													Source: "{lat: 40.7090214, lon: -73.61846, radius: 15.0}",
													Start: ast.Position{
														Column: 31,
														Line:   217,
													},
												},
											},
											Properties: []*ast.Property{&ast.Property{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 47,
															Line:   217,
														},
														File:   "gridFilterLevel_test.flux",
														Source: "lat: 40.7090214",
														Start: ast.Position{
															Column: 32,
															Line:   217,
														},
													},
												},
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 35,
																Line:   217,
															},
															File:   "gridFilterLevel_test.flux",
															Source: "lat",
															Start: ast.Position{
																Column: 32,
																Line:   217,
															},
														},
													},
													Name: "lat",
												},
												Value: &ast.FloatLiteral{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 47,
																Line:   217,
															},
															File:   "gridFilterLevel_test.flux",
															Source: "40.7090214",
															Start: ast.Position{
																Column: 37,
																Line:   217,
															},
														},
													},
													Value: 40.7090214,
												},
											}, &ast.Property{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 63,
															Line:   217,
														},
														File:   "gridFilterLevel_test.flux",
														Source: "lon: -73.61846",
														Start: ast.Position{
															Column: 49,
															Line:   217,
														},
													},
												},
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 52,
																Line:   217,
															},
															File:   "gridFilterLevel_test.flux",
															Source: "lon",
															Start: ast.Position{
																Column: 49,
																Line:   217,
															},
														},
													},
													Name: "lon",
												},
												Value: &ast.UnaryExpression{
													Argument: &ast.FloatLiteral{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 63,
																	Line:   217,
																},
																File:   "gridFilterLevel_test.flux",
																Source: "73.61846",
																Start: ast.Position{
																	Column: 55,
																	Line:   217,
																},
															},
														},
														Value: 73.61846,
													},
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 63,
																Line:   217,
															},
															File:   "gridFilterLevel_test.flux",
															Source: "-73.61846",
															Start: ast.Position{
																Column: 54,
																Line:   217,
															},
														},
													},
													Operator: 6,
												},
											}, &ast.Property{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 77,
															Line:   217,
														},
														File:   "gridFilterLevel_test.flux",
														Source: "radius: 15.0",
														Start: ast.Position{
															Column: 65,
															Line:   217,
														},
													},
												},
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 71,
																Line:   217,
															},
															File:   "gridFilterLevel_test.flux",
															Source: "radius",
															Start: ast.Position{
																Column: 65,
																Line:   217,
															},
														},
													},
													Name: "radius",
												},
												Value: &ast.FloatLiteral{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 77,
																Line:   217,
															},
															File:   "gridFilterLevel_test.flux",
															Source: "15.0",
															Start: ast.Position{
																Column: 73,
																Line:   217,
															},
														},
													},
													Value: 15.0,
												},
											}},
											With: nil,
										},
									}, &ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 88,
													Line:   217,
												},
												File:   "gridFilterLevel_test.flux",
												Source: "level: 9",
												Start: ast.Position{
													Column: 80,
													Line:   217,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 85,
														Line:   217,
													},
													File:   "gridFilterLevel_test.flux",
													Source: "level",
													Start: ast.Position{
														Column: 80,
														Line:   217,
													},
												},
											},
											Name: "level",
										},
										Value: &ast.IntegerLiteral{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 88,
														Line:   217,
													},
													File:   "gridFilterLevel_test.flux",
													Source: "9",
													Start: ast.Position{
														Column: 87,
														Line:   217,
													},
												},
											},
											Value: int64(9),
										},
									}},
									With: nil,
								}},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 89,
											Line:   217,
										},
										File:   "gridFilterLevel_test.flux",
										Source: "geo.gridFilter(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, level: 9)",
										Start: ast.Position{
											Column: 8,
											Line:   217,
										},
									},
								},
								Callee: &ast.MemberExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 22,
												Line:   217,
											},
											File:   "gridFilterLevel_test.flux",
											Source: "geo.gridFilter",
											Start: ast.Position{
												Column: 8,
												Line:   217,
											},
										},
									},
									Object: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 11,
													Line:   217,
												},
												File:   "gridFilterLevel_test.flux",
												Source: "geo",
												Start: ast.Position{
													Column: 8,
													Line:   217,
												},
											},
										},
										Name: "geo",
									},
									Property: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 22,
													Line:   217,
												},
												File:   "gridFilterLevel_test.flux",
												Source: "gridFilter",
												Start: ast.Position{
													Column: 12,
													Line:   217,
												},
											},
										},
										Name: "gridFilter",
									},
								},
							},
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 77,
									Line:   218,
								},
								File:   "gridFilterLevel_test.flux",
								Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.gridFilter(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, level: 9)\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")",
								Start: ast.Position{
									Column: 3,
									Line:   215,
								},
							},
						},
						Call: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 76,
											Line:   218,
										},
										File:   "gridFilterLevel_test.flux",
										Source: "rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\"",
										Start: ast.Position{
											Column: 14,
											Line:   218,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 30,
												Line:   218,
											},
											File:   "gridFilterLevel_test.flux",
											Source: "rowKey:[\"_time\"]",
											Start: ast.Position{
												Column: 14,
												Line:   218,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 20,
													Line:   218,
												},
												File:   "gridFilterLevel_test.flux",
												Source: "rowKey",
												Start: ast.Position{
													Column: 14,
													Line:   218,
												},
											},
										},
										Name: "rowKey",
									},
									Value: &ast.ArrayExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   218,
												},
												File:   "gridFilterLevel_test.flux",
												Source: "[\"_time\"]",
												Start: ast.Position{
													Column: 21,
													Line:   218,
												},
											},
										},
										Elements: []ast.Expression{&ast.StringLiteral{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 29,
														Line:   218,
													},
													File:   "gridFilterLevel_test.flux",
													Source: "\"_time\"",
													Start: ast.Position{
														Column: 22,
														Line:   218,
													},
												},
											},
											Value: "_time",
										}},
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 53,
												Line:   218,
											},
											File:   "gridFilterLevel_test.flux",
											Source: "columnKey: [\"_field\"]",
											Start: ast.Position{
												Column: 32,
												Line:   218,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 41,
													Line:   218,
												},
												File:   "gridFilterLevel_test.flux",
												Source: "columnKey",
												Start: ast.Position{
													Column: 32,
													Line:   218,
												},
											},
										},
										Name: "columnKey",
									},
									Value: &ast.ArrayExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 53,
													Line:   218,
												},
												File:   "gridFilterLevel_test.flux",
												Source: "[\"_field\"]",
												Start: ast.Position{
													Column: 43,
													Line:   218,
												},
											},
										},
										Elements: []ast.Expression{&ast.StringLiteral{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 52,
														Line:   218,
													},
													File:   "gridFilterLevel_test.flux",
													Source: "\"_field\"",
													Start: ast.Position{
														Column: 44,
														Line:   218,
													},
												},
											},
											Value: "_field",
										}},
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 76,
												Line:   218,
											},
											File:   "gridFilterLevel_test.flux",
											Source: "valueColumn: \"_value\"",
											Start: ast.Position{
												Column: 55,
												Line:   218,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   218,
												},
												File:   "gridFilterLevel_test.flux",
												Source: "valueColumn",
												Start: ast.Position{
													Column: 55,
													Line:   218,
												},
											},
										},
										Name: "valueColumn",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 76,
													Line:   218,
												},
												File:   "gridFilterLevel_test.flux",
												Source: "\"_value\"",
												Start: ast.Position{
													Column: 68,
													Line:   218,
												},
											},
										},
										Value: "_value",
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 77,
										Line:   218,
									},
									File:   "gridFilterLevel_test.flux",
									Source: "pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")",
									Start: ast.Position{
										Column: 8,
										Line:   218,
									},
								},
							},
							Callee: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 13,
											Line:   218,
										},
										File:   "gridFilterLevel_test.flux",
										Source: "pivot",
										Start: ast.Position{
											Column: 8,
											Line:   218,
										},
									},
								},
								Name: "pivot",
							},
						},
					},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   219,
							},
							File:   "gridFilterLevel_test.flux",
							Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.gridFilter(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}, level: 9)\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> drop(columns: [\"_start\", \"_stop\"])",
							Start: ast.Position{
								Column: 3,
								Line:   215,
							},
						},
					},
					Call: &ast.CallExpression{
						Arguments: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   219,
									},
									File:   "gridFilterLevel_test.flux",
									Source: "columns: [\"_start\", \"_stop\"]",
									Start: ast.Position{
										Column: 13,
										Line:   219,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 41,
											Line:   219,
										},
										File:   "gridFilterLevel_test.flux",
										Source: "columns: [\"_start\", \"_stop\"]",
										Start: ast.Position{
											Column: 13,
											Line:   219,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 20,
												Line:   219,
											},
											File:   "gridFilterLevel_test.flux",
											Source: "columns",
											Start: ast.Position{
												Column: 13,
												Line:   219,
											},
										},
									},
									Name: "columns",
								},
								Value: &ast.ArrayExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 41,
												Line:   219,
											},
											File:   "gridFilterLevel_test.flux",
											Source: "[\"_start\", \"_stop\"]",
											Start: ast.Position{
												Column: 22,
												Line:   219,
											},
										},
									},
									Elements: []ast.Expression{&ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 31,
													Line:   219,
												},
												File:   "gridFilterLevel_test.flux",
												Source: "\"_start\"",
												Start: ast.Position{
													Column: 23,
													Line:   219,
												},
											},
										},
										Value: "_start",
									}, &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 40,
													Line:   219,
												},
												File:   "gridFilterLevel_test.flux",
												Source: "\"_stop\"",
												Start: ast.Position{
													Column: 33,
													Line:   219,
												},
											},
										},
										Value: "_stop",
									}},
								},
							}},
							With: nil,
						}},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   219,
								},
								File:   "gridFilterLevel_test.flux",
								Source: "drop(columns: [\"_start\", \"_stop\"])",
								Start: ast.Position{
									Column: 8,
									Line:   219,
								},
							},
						},
						Callee: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 12,
										Line:   219,
									},
									File:   "gridFilterLevel_test.flux",
									Source: "drop",
									Start: ast.Position{
										Column: 8,
										Line:   219,
									},
								},
							},
							Name: "drop",
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 25,
								Line:   214,
							},
							File:   "gridFilterLevel_test.flux",
							Source: "table=<-",
							Start: ast.Position{
								Column: 17,
								Line:   214,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 22,
									Line:   214,
								},
								File:   "gridFilterLevel_test.flux",
								Source: "table",
								Start: ast.Position{
									Column: 17,
									Line:   214,
								},
							},
						},
						Name: "table",
					},
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 25,
								Line:   214,
							},
							File:   "gridFilterLevel_test.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 23,
								Line:   214,
							},
						},
					}},
				}},
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 100,
							Line:   221,
						},
						File:   "gridFilterLevel_test.flux",
						Source: "_gridFilter = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_gridFilter})",
						Start: ast.Position{
							Column: 6,
							Line:   220,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 17,
								Line:   220,
							},
							File:   "gridFilterLevel_test.flux",
							Source: "_gridFilter",
							Start: ast.Position{
								Column: 6,
								Line:   220,
							},
						},
					},
					Name: "_gridFilter",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 100,
								Line:   221,
							},
							File:   "gridFilterLevel_test.flux",
							Source: "() =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_gridFilter})",
							Start: ast.Position{
								Column: 20,
								Line:   220,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 100,
									Line:   221,
								},
								File:   "gridFilterLevel_test.flux",
								Source: "({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_gridFilter})",
								Start: ast.Position{
									Column: 2,
									Line:   221,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 99,
										Line:   221,
									},
									File:   "gridFilterLevel_test.flux",
									Source: "{input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_gridFilter}",
									Start: ast.Position{
										Column: 3,
										Line:   221,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 43,
											Line:   221,
										},
										File:   "gridFilterLevel_test.flux",
										Source: "input: testing.loadStorage(csv: inData)",
										Start: ast.Position{
											Column: 4,
											Line:   221,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 9,
												Line:   221,
											},
											File:   "gridFilterLevel_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 4,
												Line:   221,
											},
										},
									},
									Name: "input",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   221,
												},
												File:   "gridFilterLevel_test.flux",
												Source: "csv: inData",
												Start: ast.Position{
													Column: 31,
													Line:   221,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 42,
														Line:   221,
													},
													File:   "gridFilterLevel_test.flux",
													Source: "csv: inData",
													Start: ast.Position{
														Column: 31,
														Line:   221,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 34,
															Line:   221,
														},
														File:   "gridFilterLevel_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 31,
															Line:   221,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 42,
															Line:   221,
														},
														File:   "gridFilterLevel_test.flux",
														Source: "inData",
														Start: ast.Position{
															Column: 36,
															Line:   221,
														},
													},
												},
												Name: "inData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 43,
												Line:   221,
											},
											File:   "gridFilterLevel_test.flux",
											Source: "testing.loadStorage(csv: inData)",
											Start: ast.Position{
												Column: 11,
												Line:   221,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   221,
												},
												File:   "gridFilterLevel_test.flux",
												Source: "testing.loadStorage",
												Start: ast.Position{
													Column: 11,
													Line:   221,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   221,
													},
													File:   "gridFilterLevel_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 11,
														Line:   221,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 30,
														Line:   221,
													},
													File:   "gridFilterLevel_test.flux",
													Source: "loadStorage",
													Start: ast.Position{
														Column: 19,
														Line:   221,
													},
												},
											},
											Name: "loadStorage",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 80,
											Line:   221,
										},
										File:   "gridFilterLevel_test.flux",
										Source: "want: testing.loadMem(csv: outData)",
										Start: ast.Position{
											Column: 45,
											Line:   221,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 49,
												Line:   221,
											},
											File:   "gridFilterLevel_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 45,
												Line:   221,
											},
										},
									},
									Name: "want",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 79,
													Line:   221,
												},
												File:   "gridFilterLevel_test.flux",
												Source: "csv: outData",
												Start: ast.Position{
													Column: 67,
													Line:   221,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 79,
														Line:   221,
													},
													File:   "gridFilterLevel_test.flux",
													Source: "csv: outData",
													Start: ast.Position{
														Column: 67,
														Line:   221,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 70,
															Line:   221,
														},
														File:   "gridFilterLevel_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 67,
															Line:   221,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 79,
															Line:   221,
														},
														File:   "gridFilterLevel_test.flux",
														Source: "outData",
														Start: ast.Position{
															Column: 72,
															Line:   221,
														},
													},
												},
												Name: "outData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 80,
												Line:   221,
											},
											File:   "gridFilterLevel_test.flux",
											Source: "testing.loadMem(csv: outData)",
											Start: ast.Position{
												Column: 51,
												Line:   221,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   221,
												},
												File:   "gridFilterLevel_test.flux",
												Source: "testing.loadMem",
												Start: ast.Position{
													Column: 51,
													Line:   221,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 58,
														Line:   221,
													},
													File:   "gridFilterLevel_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 51,
														Line:   221,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 66,
														Line:   221,
													},
													File:   "gridFilterLevel_test.flux",
													Source: "loadMem",
													Start: ast.Position{
														Column: 59,
														Line:   221,
													},
												},
											},
											Name: "loadMem",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 98,
											Line:   221,
										},
										File:   "gridFilterLevel_test.flux",
										Source: "fn: t_gridFilter",
										Start: ast.Position{
											Column: 82,
											Line:   221,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 84,
												Line:   221,
											},
											File:   "gridFilterLevel_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 82,
												Line:   221,
											},
										},
									},
									Name: "fn",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 98,
												Line:   221,
											},
											File:   "gridFilterLevel_test.flux",
											Source: "t_gridFilter",
											Start: ast.Position{
												Column: 86,
												Line:   221,
											},
										},
									},
									Name: "t_gridFilter",
								},
							}},
							With: nil,
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 100,
						Line:   221,
					},
					File:   "gridFilterLevel_test.flux",
					Source: "test _gridFilter = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_gridFilter})",
					Start: ast.Position{
						Column: 1,
						Line:   220,
					},
				},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 26,
						Line:   3,
					},
					File:   "gridFilterLevel_test.flux",
					Source: "import \"experimental/geo\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 26,
							Line:   3,
						},
						File:   "gridFilterLevel_test.flux",
						Source: "\"experimental/geo\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "experimental/geo",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   4,
					},
					File:   "gridFilterLevel_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   4,
						},
						File:   "gridFilterLevel_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "testing",
			},
		}},
		Metadata: "parser-type=rust",
		Name:     "gridFilterLevel_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   1,
					},
					File:   "gridFilterLevel_test.flux",
					Source: "package geo_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   1,
						},
						File:   "gridFilterLevel_test.flux",
						Source: "geo_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "geo_test",
			},
		},
	}, &ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 100,
					Line:   220,
				},
				File:   "gridFilter_test.flux",
				Source: "package geo_test\n\nimport \"experimental/geo\"\nimport \"testing\"\n\noption now = () => (2030-01-01T00:00:00Z)\n\ninData = \"\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n\"\n\noutData = \"\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,lat\n,,3,2019-11-01T00:17:38.287113937Z,89c2664,taxi,start,1572567458287113937,-73.776665,40.645245\n\"\n\nt_gridFilter = (table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.gridFilter(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0})\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> drop(columns: [\"_start\", \"_stop\"])\ntest _gridFilter = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_gridFilter})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   6,
						},
						File:   "gridFilter_test.flux",
						Source: "now = () => (2030-01-01T00:00:00Z)",
						Start: ast.Position{
							Column: 8,
							Line:   6,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   6,
							},
							File:   "gridFilter_test.flux",
							Source: "now",
							Start: ast.Position{
								Column: 8,
								Line:   6,
							},
						},
					},
					Name: "now",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   6,
							},
							File:   "gridFilter_test.flux",
							Source: "() => (2030-01-01T00:00:00Z)",
							Start: ast.Position{
								Column: 14,
								Line:   6,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   6,
								},
								File:   "gridFilter_test.flux",
								Source: "(2030-01-01T00:00:00Z)",
								Start: ast.Position{
									Column: 20,
									Line:   6,
								},
							},
						},
						Expression: &ast.DateTimeLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   6,
									},
									File:   "gridFilter_test.flux",
									Source: "2030-01-01T00:00:00Z",
									Start: ast.Position{
										Column: 21,
										Line:   6,
									},
								},
							},
							Value: parser.MustParseTime("2030-01-01T00:00:00Z"),
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   6,
					},
					File:   "gridFilter_test.flux",
					Source: "option now = () => (2030-01-01T00:00:00Z)",
					Start: ast.Position{
						Column: 1,
						Line:   6,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   185,
					},
					File:   "gridFilter_test.flux",
					Source: "inData = \"\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   8,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 7,
							Line:   8,
						},
						File:   "gridFilter_test.flux",
						Source: "inData",
						Start: ast.Position{
							Column: 1,
							Line:   8,
						},
					},
				},
				Name: "inData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   185,
						},
						File:   "gridFilter_test.flux",
						Source: "\"\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n\"",
						Start: ast.Position{
							Column: 10,
							Line:   8,
						},
					},
				},
				Value: "\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   211,
					},
					File:   "gridFilter_test.flux",
					Source: "outData = \"\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,lat\n,,3,2019-11-01T00:17:38.287113937Z,89c2664,taxi,start,1572567458287113937,-73.776665,40.645245\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   187,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 8,
							Line:   187,
						},
						File:   "gridFilter_test.flux",
						Source: "outData",
						Start: ast.Position{
							Column: 1,
							Line:   187,
						},
					},
				},
				Name: "outData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   211,
						},
						File:   "gridFilter_test.flux",
						Source: "\"\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,lat\n,,3,2019-11-01T00:17:38.287113937Z,89c2664,taxi,start,1572567458287113937,-73.776665,40.645245\n\"",
						Start: ast.Position{
							Column: 11,
							Line:   187,
						},
					},
				},
				Value: "\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,lat\n,,3,2019-11-01T00:17:38.287113937Z,89c2664,taxi,start,1572567458287113937,-73.776665,40.645245\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   218,
					},
					File:   "gridFilter_test.flux",
					Source: "t_gridFilter = (table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.gridFilter(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0})\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> drop(columns: [\"_start\", \"_stop\"])",
					Start: ast.Position{
						Column: 1,
						Line:   213,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 13,
							Line:   213,
						},
						File:   "gridFilter_test.flux",
						Source: "t_gridFilter",
						Start: ast.Position{
							Column: 1,
							Line:   213,
						},
					},
				},
				Name: "t_gridFilter",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   218,
						},
						File:   "gridFilter_test.flux",
						Source: "(table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.gridFilter(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0})\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> drop(columns: [\"_start\", \"_stop\"])",
						Start: ast.Position{
							Column: 16,
							Line:   213,
						},
					},
				},
				Body: &ast.PipeExpression{
					Argument: &ast.PipeExpression{
						Argument: &ast.PipeExpression{
							Argument: &ast.PipeExpression{
								Argument: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 8,
												Line:   214,
											},
											File:   "gridFilter_test.flux",
											Source: "table",
											Start: ast.Position{
												Column: 3,
												Line:   214,
											},
										},
									},
									Name: "table",
								},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 42,
											Line:   215,
										},
										File:   "gridFilter_test.flux",
										Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)",
										Start: ast.Position{
											Column: 3,
											Line:   214,
										},
									},
								},
								Call: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 41,
													Line:   215,
												},
												File:   "gridFilter_test.flux",
												Source: "start: 2019-11-01T00:00:00Z",
												Start: ast.Position{
													Column: 14,
													Line:   215,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 41,
														Line:   215,
													},
													File:   "gridFilter_test.flux",
													Source: "start: 2019-11-01T00:00:00Z",
													Start: ast.Position{
														Column: 14,
														Line:   215,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 19,
															Line:   215,
														},
														File:   "gridFilter_test.flux",
														Source: "start",
														Start: ast.Position{
															Column: 14,
															Line:   215,
														},
													},
												},
												Name: "start",
											},
											Value: &ast.DateTimeLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 41,
															Line:   215,
														},
														File:   "gridFilter_test.flux",
														Source: "2019-11-01T00:00:00Z",
														Start: ast.Position{
															Column: 21,
															Line:   215,
														},
													},
												},
												Value: parser.MustParseTime("2019-11-01T00:00:00Z"),
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 42,
												Line:   215,
											},
											File:   "gridFilter_test.flux",
											Source: "range(start: 2019-11-01T00:00:00Z)",
											Start: ast.Position{
												Column: 8,
												Line:   215,
											},
										},
									},
									Callee: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 13,
													Line:   215,
												},
												File:   "gridFilter_test.flux",
												Source: "range",
												Start: ast.Position{
													Column: 8,
													Line:   215,
												},
											},
										},
										Name: "range",
									},
								},
							},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 79,
										Line:   216,
									},
									File:   "gridFilter_test.flux",
									Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.gridFilter(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0})",
									Start: ast.Position{
										Column: 3,
										Line:   214,
									},
								},
							},
							Call: &ast.CallExpression{
								Arguments: []ast.Expression{&ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 78,
												Line:   216,
											},
											File:   "gridFilter_test.flux",
											Source: "region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}",
											Start: ast.Position{
												Column: 23,
												Line:   216,
											},
										},
									},
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 78,
													Line:   216,
												},
												File:   "gridFilter_test.flux",
												Source: "region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}",
												Start: ast.Position{
													Column: 23,
													Line:   216,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 29,
														Line:   216,
													},
													File:   "gridFilter_test.flux",
													Source: "region",
													Start: ast.Position{
														Column: 23,
														Line:   216,
													},
												},
											},
											Name: "region",
										},
										Value: &ast.ObjectExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 78,
														Line:   216,
													},
													File:   "gridFilter_test.flux",
													Source: "{lat: 40.7090214, lon: -73.61846, radius: 15.0}",
													Start: ast.Position{
														Column: 31,
														Line:   216,
													},
												},
											},
											Properties: []*ast.Property{&ast.Property{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 47,
															Line:   216,
														},
														File:   "gridFilter_test.flux",
														Source: "lat: 40.7090214",
														Start: ast.Position{
															Column: 32,
															Line:   216,
														},
													},
												},
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 35,
																Line:   216,
															},
															File:   "gridFilter_test.flux",
															Source: "lat",
															Start: ast.Position{
																Column: 32,
																Line:   216,
															},
														},
													},
													Name: "lat",
												},
												Value: &ast.FloatLiteral{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 47,
																Line:   216,
															},
															File:   "gridFilter_test.flux",
															Source: "40.7090214",
															Start: ast.Position{
																Column: 37,
																Line:   216,
															},
														},
													},
													Value: 40.7090214,
												},
											}, &ast.Property{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 63,
															Line:   216,
														},
														File:   "gridFilter_test.flux",
														Source: "lon: -73.61846",
														Start: ast.Position{
															Column: 49,
															Line:   216,
														},
													},
												},
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 52,
																Line:   216,
															},
															File:   "gridFilter_test.flux",
															Source: "lon",
															Start: ast.Position{
																Column: 49,
																Line:   216,
															},
														},
													},
													Name: "lon",
												},
												Value: &ast.UnaryExpression{
													Argument: &ast.FloatLiteral{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 63,
																	Line:   216,
																},
																File:   "gridFilter_test.flux",
																Source: "73.61846",
																Start: ast.Position{
																	Column: 55,
																	Line:   216,
																},
															},
														},
														Value: 73.61846,
													},
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 63,
																Line:   216,
															},
															File:   "gridFilter_test.flux",
															Source: "-73.61846",
															Start: ast.Position{
																Column: 54,
																Line:   216,
															},
														},
													},
													Operator: 6,
												},
											}, &ast.Property{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 77,
															Line:   216,
														},
														File:   "gridFilter_test.flux",
														Source: "radius: 15.0",
														Start: ast.Position{
															Column: 65,
															Line:   216,
														},
													},
												},
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 71,
																Line:   216,
															},
															File:   "gridFilter_test.flux",
															Source: "radius",
															Start: ast.Position{
																Column: 65,
																Line:   216,
															},
														},
													},
													Name: "radius",
												},
												Value: &ast.FloatLiteral{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 77,
																Line:   216,
															},
															File:   "gridFilter_test.flux",
															Source: "15.0",
															Start: ast.Position{
																Column: 73,
																Line:   216,
															},
														},
													},
													Value: 15.0,
												},
											}},
											With: nil,
										},
									}},
									With: nil,
								}},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 79,
											Line:   216,
										},
										File:   "gridFilter_test.flux",
										Source: "geo.gridFilter(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0})",
										Start: ast.Position{
											Column: 8,
											Line:   216,
										},
									},
								},
								Callee: &ast.MemberExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 22,
												Line:   216,
											},
											File:   "gridFilter_test.flux",
											Source: "geo.gridFilter",
											Start: ast.Position{
												Column: 8,
												Line:   216,
											},
										},
									},
									Object: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 11,
													Line:   216,
												},
												File:   "gridFilter_test.flux",
												Source: "geo",
												Start: ast.Position{
													Column: 8,
													Line:   216,
												},
											},
										},
										Name: "geo",
									},
									Property: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 22,
													Line:   216,
												},
												File:   "gridFilter_test.flux",
												Source: "gridFilter",
												Start: ast.Position{
													Column: 12,
													Line:   216,
												},
											},
										},
										Name: "gridFilter",
									},
								},
							},
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 77,
									Line:   217,
								},
								File:   "gridFilter_test.flux",
								Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.gridFilter(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0})\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")",
								Start: ast.Position{
									Column: 3,
									Line:   214,
								},
							},
						},
						Call: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 76,
											Line:   217,
										},
										File:   "gridFilter_test.flux",
										Source: "rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\"",
										Start: ast.Position{
											Column: 14,
											Line:   217,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 30,
												Line:   217,
											},
											File:   "gridFilter_test.flux",
											Source: "rowKey:[\"_time\"]",
											Start: ast.Position{
												Column: 14,
												Line:   217,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 20,
													Line:   217,
												},
												File:   "gridFilter_test.flux",
												Source: "rowKey",
												Start: ast.Position{
													Column: 14,
													Line:   217,
												},
											},
										},
										Name: "rowKey",
									},
									Value: &ast.ArrayExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   217,
												},
												File:   "gridFilter_test.flux",
												Source: "[\"_time\"]",
												Start: ast.Position{
													Column: 21,
													Line:   217,
												},
											},
										},
										Elements: []ast.Expression{&ast.StringLiteral{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 29,
														Line:   217,
													},
													File:   "gridFilter_test.flux",
													Source: "\"_time\"",
													Start: ast.Position{
														Column: 22,
														Line:   217,
													},
												},
											},
											Value: "_time",
										}},
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 53,
												Line:   217,
											},
											File:   "gridFilter_test.flux",
											Source: "columnKey: [\"_field\"]",
											Start: ast.Position{
												Column: 32,
												Line:   217,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 41,
													Line:   217,
												},
												File:   "gridFilter_test.flux",
												Source: "columnKey",
												Start: ast.Position{
													Column: 32,
													Line:   217,
												},
											},
										},
										Name: "columnKey",
									},
									Value: &ast.ArrayExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 53,
													Line:   217,
												},
												File:   "gridFilter_test.flux",
												Source: "[\"_field\"]",
												Start: ast.Position{
													Column: 43,
													Line:   217,
												},
											},
										},
										Elements: []ast.Expression{&ast.StringLiteral{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 52,
														Line:   217,
													},
													File:   "gridFilter_test.flux",
													Source: "\"_field\"",
													Start: ast.Position{
														Column: 44,
														Line:   217,
													},
												},
											},
											Value: "_field",
										}},
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 76,
												Line:   217,
											},
											File:   "gridFilter_test.flux",
											Source: "valueColumn: \"_value\"",
											Start: ast.Position{
												Column: 55,
												Line:   217,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   217,
												},
												File:   "gridFilter_test.flux",
												Source: "valueColumn",
												Start: ast.Position{
													Column: 55,
													Line:   217,
												},
											},
										},
										Name: "valueColumn",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 76,
													Line:   217,
												},
												File:   "gridFilter_test.flux",
												Source: "\"_value\"",
												Start: ast.Position{
													Column: 68,
													Line:   217,
												},
											},
										},
										Value: "_value",
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 77,
										Line:   217,
									},
									File:   "gridFilter_test.flux",
									Source: "pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")",
									Start: ast.Position{
										Column: 8,
										Line:   217,
									},
								},
							},
							Callee: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 13,
											Line:   217,
										},
										File:   "gridFilter_test.flux",
										Source: "pivot",
										Start: ast.Position{
											Column: 8,
											Line:   217,
										},
									},
								},
								Name: "pivot",
							},
						},
					},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   218,
							},
							File:   "gridFilter_test.flux",
							Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.gridFilter(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0})\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> drop(columns: [\"_start\", \"_stop\"])",
							Start: ast.Position{
								Column: 3,
								Line:   214,
							},
						},
					},
					Call: &ast.CallExpression{
						Arguments: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   218,
									},
									File:   "gridFilter_test.flux",
									Source: "columns: [\"_start\", \"_stop\"]",
									Start: ast.Position{
										Column: 13,
										Line:   218,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 41,
											Line:   218,
										},
										File:   "gridFilter_test.flux",
										Source: "columns: [\"_start\", \"_stop\"]",
										Start: ast.Position{
											Column: 13,
											Line:   218,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 20,
												Line:   218,
											},
											File:   "gridFilter_test.flux",
											Source: "columns",
											Start: ast.Position{
												Column: 13,
												Line:   218,
											},
										},
									},
									Name: "columns",
								},
								Value: &ast.ArrayExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 41,
												Line:   218,
											},
											File:   "gridFilter_test.flux",
											Source: "[\"_start\", \"_stop\"]",
											Start: ast.Position{
												Column: 22,
												Line:   218,
											},
										},
									},
									Elements: []ast.Expression{&ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 31,
													Line:   218,
												},
												File:   "gridFilter_test.flux",
												Source: "\"_start\"",
												Start: ast.Position{
													Column: 23,
													Line:   218,
												},
											},
										},
										Value: "_start",
									}, &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 40,
													Line:   218,
												},
												File:   "gridFilter_test.flux",
												Source: "\"_stop\"",
												Start: ast.Position{
													Column: 33,
													Line:   218,
												},
											},
										},
										Value: "_stop",
									}},
								},
							}},
							With: nil,
						}},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   218,
								},
								File:   "gridFilter_test.flux",
								Source: "drop(columns: [\"_start\", \"_stop\"])",
								Start: ast.Position{
									Column: 8,
									Line:   218,
								},
							},
						},
						Callee: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 12,
										Line:   218,
									},
									File:   "gridFilter_test.flux",
									Source: "drop",
									Start: ast.Position{
										Column: 8,
										Line:   218,
									},
								},
							},
							Name: "drop",
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 25,
								Line:   213,
							},
							File:   "gridFilter_test.flux",
							Source: "table=<-",
							Start: ast.Position{
								Column: 17,
								Line:   213,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 22,
									Line:   213,
								},
								File:   "gridFilter_test.flux",
								Source: "table",
								Start: ast.Position{
									Column: 17,
									Line:   213,
								},
							},
						},
						Name: "table",
					},
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 25,
								Line:   213,
							},
							File:   "gridFilter_test.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 23,
								Line:   213,
							},
						},
					}},
				}},
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 100,
							Line:   220,
						},
						File:   "gridFilter_test.flux",
						Source: "_gridFilter = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_gridFilter})",
						Start: ast.Position{
							Column: 6,
							Line:   219,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 17,
								Line:   219,
							},
							File:   "gridFilter_test.flux",
							Source: "_gridFilter",
							Start: ast.Position{
								Column: 6,
								Line:   219,
							},
						},
					},
					Name: "_gridFilter",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 100,
								Line:   220,
							},
							File:   "gridFilter_test.flux",
							Source: "() =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_gridFilter})",
							Start: ast.Position{
								Column: 20,
								Line:   219,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 100,
									Line:   220,
								},
								File:   "gridFilter_test.flux",
								Source: "({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_gridFilter})",
								Start: ast.Position{
									Column: 2,
									Line:   220,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 99,
										Line:   220,
									},
									File:   "gridFilter_test.flux",
									Source: "{input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_gridFilter}",
									Start: ast.Position{
										Column: 3,
										Line:   220,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 43,
											Line:   220,
										},
										File:   "gridFilter_test.flux",
										Source: "input: testing.loadStorage(csv: inData)",
										Start: ast.Position{
											Column: 4,
											Line:   220,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 9,
												Line:   220,
											},
											File:   "gridFilter_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 4,
												Line:   220,
											},
										},
									},
									Name: "input",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   220,
												},
												File:   "gridFilter_test.flux",
												Source: "csv: inData",
												Start: ast.Position{
													Column: 31,
													Line:   220,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 42,
														Line:   220,
													},
													File:   "gridFilter_test.flux",
													Source: "csv: inData",
													Start: ast.Position{
														Column: 31,
														Line:   220,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 34,
															Line:   220,
														},
														File:   "gridFilter_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 31,
															Line:   220,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 42,
															Line:   220,
														},
														File:   "gridFilter_test.flux",
														Source: "inData",
														Start: ast.Position{
															Column: 36,
															Line:   220,
														},
													},
												},
												Name: "inData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 43,
												Line:   220,
											},
											File:   "gridFilter_test.flux",
											Source: "testing.loadStorage(csv: inData)",
											Start: ast.Position{
												Column: 11,
												Line:   220,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   220,
												},
												File:   "gridFilter_test.flux",
												Source: "testing.loadStorage",
												Start: ast.Position{
													Column: 11,
													Line:   220,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   220,
													},
													File:   "gridFilter_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 11,
														Line:   220,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 30,
														Line:   220,
													},
													File:   "gridFilter_test.flux",
													Source: "loadStorage",
													Start: ast.Position{
														Column: 19,
														Line:   220,
													},
												},
											},
											Name: "loadStorage",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 80,
											Line:   220,
										},
										File:   "gridFilter_test.flux",
										Source: "want: testing.loadMem(csv: outData)",
										Start: ast.Position{
											Column: 45,
											Line:   220,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 49,
												Line:   220,
											},
											File:   "gridFilter_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 45,
												Line:   220,
											},
										},
									},
									Name: "want",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 79,
													Line:   220,
												},
												File:   "gridFilter_test.flux",
												Source: "csv: outData",
												Start: ast.Position{
													Column: 67,
													Line:   220,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 79,
														Line:   220,
													},
													File:   "gridFilter_test.flux",
													Source: "csv: outData",
													Start: ast.Position{
														Column: 67,
														Line:   220,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 70,
															Line:   220,
														},
														File:   "gridFilter_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 67,
															Line:   220,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 79,
															Line:   220,
														},
														File:   "gridFilter_test.flux",
														Source: "outData",
														Start: ast.Position{
															Column: 72,
															Line:   220,
														},
													},
												},
												Name: "outData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 80,
												Line:   220,
											},
											File:   "gridFilter_test.flux",
											Source: "testing.loadMem(csv: outData)",
											Start: ast.Position{
												Column: 51,
												Line:   220,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   220,
												},
												File:   "gridFilter_test.flux",
												Source: "testing.loadMem",
												Start: ast.Position{
													Column: 51,
													Line:   220,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 58,
														Line:   220,
													},
													File:   "gridFilter_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 51,
														Line:   220,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 66,
														Line:   220,
													},
													File:   "gridFilter_test.flux",
													Source: "loadMem",
													Start: ast.Position{
														Column: 59,
														Line:   220,
													},
												},
											},
											Name: "loadMem",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 98,
											Line:   220,
										},
										File:   "gridFilter_test.flux",
										Source: "fn: t_gridFilter",
										Start: ast.Position{
											Column: 82,
											Line:   220,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 84,
												Line:   220,
											},
											File:   "gridFilter_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 82,
												Line:   220,
											},
										},
									},
									Name: "fn",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 98,
												Line:   220,
											},
											File:   "gridFilter_test.flux",
											Source: "t_gridFilter",
											Start: ast.Position{
												Column: 86,
												Line:   220,
											},
										},
									},
									Name: "t_gridFilter",
								},
							}},
							With: nil,
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 100,
						Line:   220,
					},
					File:   "gridFilter_test.flux",
					Source: "test _gridFilter = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_gridFilter})",
					Start: ast.Position{
						Column: 1,
						Line:   219,
					},
				},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 26,
						Line:   3,
					},
					File:   "gridFilter_test.flux",
					Source: "import \"experimental/geo\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 26,
							Line:   3,
						},
						File:   "gridFilter_test.flux",
						Source: "\"experimental/geo\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "experimental/geo",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   4,
					},
					File:   "gridFilter_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   4,
						},
						File:   "gridFilter_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "testing",
			},
		}},
		Metadata: "parser-type=rust",
		Name:     "gridFilter_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   1,
					},
					File:   "gridFilter_test.flux",
					Source: "package geo_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   1,
						},
						File:   "gridFilter_test.flux",
						Source: "geo_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "geo_test",
			},
		},
	}, &ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 101,
					Line:   209,
				},
				File:   "groupByArea_test.flux",
				Source: "package geo_test\n\nimport \"experimental/geo\"\nimport \"testing\"\n\noption now = () => (2030-01-01T00:00:00Z)\n\ninData = \"\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n\"\n\noutData = \"\n#group,false,false,false,true,false,false,false,false,false,false,false,false\n#datatype,string,long,string,string,string,string,dateTime:RFC3339,double,double,double,long,double\n#default,_result,,,,,,,,,,,\n,result,table,s2_cell_id,ci9,_measurement,_pt,_time,dist,lat,lon,tid,tip\n,,0,89c2594,89c25c,taxi,end,2019-11-01T00:07:18.082153551Z,1.2,40.7122,-73.951332,1572566409947779410,0\n,,0,89c25b4,89c25c,taxi,end,2019-11-01T00:07:41.235010051Z,1.3,40.671928,-73.962692,1572566426666145821,1.75\n,,0,89c25bc,89c25c,taxi,start,2019-11-01T00:00:09.94777941Z,,40.712173,-73.963913,1572566409947779410,\n,,0,89c25bc,89c25c,taxi,start,2019-11-01T00:00:26.666145821Z,,40.688564,-73.965881,1572566426666145821,\n,,1,89c261c,89c264,taxi,end,2019-11-01T13:41:59.331776148Z,1.3,40.725647,-73.752579,1572615165632969758,0\n,,1,89c2624,89c264,taxi,end,2019-11-01T00:33:07.54916732Z,9.7,40.728077,-73.716583,1572567458287113937,5\n,,1,89c2624,89c264,taxi,start,2019-11-01T13:32:45.632969758Z,,40.733585,-73.737175,1572615165632969758,\n,,1,89c2664,89c264,taxi,start,2019-11-01T00:17:38.287113937Z,,40.645245,-73.776665,1572567458287113937,\n\"\n\nt_groupByArea = (table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.toRows()\n    |> geo.groupByArea(newColumn: \"ci9\", level: 9)\n    |> drop(columns: [\"_start\", \"_stop\"])\ntest _groupByArea = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_groupByArea})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   6,
						},
						File:   "groupByArea_test.flux",
						Source: "now = () => (2030-01-01T00:00:00Z)",
						Start: ast.Position{
							Column: 8,
							Line:   6,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   6,
							},
							File:   "groupByArea_test.flux",
							Source: "now",
							Start: ast.Position{
								Column: 8,
								Line:   6,
							},
						},
					},
					Name: "now",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   6,
							},
							File:   "groupByArea_test.flux",
							Source: "() => (2030-01-01T00:00:00Z)",
							Start: ast.Position{
								Column: 14,
								Line:   6,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   6,
								},
								File:   "groupByArea_test.flux",
								Source: "(2030-01-01T00:00:00Z)",
								Start: ast.Position{
									Column: 20,
									Line:   6,
								},
							},
						},
						Expression: &ast.DateTimeLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   6,
									},
									File:   "groupByArea_test.flux",
									Source: "2030-01-01T00:00:00Z",
									Start: ast.Position{
										Column: 21,
										Line:   6,
									},
								},
							},
							Value: parser.MustParseTime("2030-01-01T00:00:00Z"),
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   6,
					},
					File:   "groupByArea_test.flux",
					Source: "option now = () => (2030-01-01T00:00:00Z)",
					Start: ast.Position{
						Column: 1,
						Line:   6,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   185,
					},
					File:   "groupByArea_test.flux",
					Source: "inData = \"\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   8,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 7,
							Line:   8,
						},
						File:   "groupByArea_test.flux",
						Source: "inData",
						Start: ast.Position{
							Column: 1,
							Line:   8,
						},
					},
				},
				Name: "inData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   185,
						},
						File:   "groupByArea_test.flux",
						Source: "\"\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n\"",
						Start: ast.Position{
							Column: 10,
							Line:   8,
						},
					},
				},
				Value: "\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   200,
					},
					File:   "groupByArea_test.flux",
					Source: "outData = \"\n#group,false,false,false,true,false,false,false,false,false,false,false,false\n#datatype,string,long,string,string,string,string,dateTime:RFC3339,double,double,double,long,double\n#default,_result,,,,,,,,,,,\n,result,table,s2_cell_id,ci9,_measurement,_pt,_time,dist,lat,lon,tid,tip\n,,0,89c2594,89c25c,taxi,end,2019-11-01T00:07:18.082153551Z,1.2,40.7122,-73.951332,1572566409947779410,0\n,,0,89c25b4,89c25c,taxi,end,2019-11-01T00:07:41.235010051Z,1.3,40.671928,-73.962692,1572566426666145821,1.75\n,,0,89c25bc,89c25c,taxi,start,2019-11-01T00:00:09.94777941Z,,40.712173,-73.963913,1572566409947779410,\n,,0,89c25bc,89c25c,taxi,start,2019-11-01T00:00:26.666145821Z,,40.688564,-73.965881,1572566426666145821,\n,,1,89c261c,89c264,taxi,end,2019-11-01T13:41:59.331776148Z,1.3,40.725647,-73.752579,1572615165632969758,0\n,,1,89c2624,89c264,taxi,end,2019-11-01T00:33:07.54916732Z,9.7,40.728077,-73.716583,1572567458287113937,5\n,,1,89c2624,89c264,taxi,start,2019-11-01T13:32:45.632969758Z,,40.733585,-73.737175,1572615165632969758,\n,,1,89c2664,89c264,taxi,start,2019-11-01T00:17:38.287113937Z,,40.645245,-73.776665,1572567458287113937,\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   187,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 8,
							Line:   187,
						},
						File:   "groupByArea_test.flux",
						Source: "outData",
						Start: ast.Position{
							Column: 1,
							Line:   187,
						},
					},
				},
				Name: "outData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   200,
						},
						File:   "groupByArea_test.flux",
						Source: "\"\n#group,false,false,false,true,false,false,false,false,false,false,false,false\n#datatype,string,long,string,string,string,string,dateTime:RFC3339,double,double,double,long,double\n#default,_result,,,,,,,,,,,\n,result,table,s2_cell_id,ci9,_measurement,_pt,_time,dist,lat,lon,tid,tip\n,,0,89c2594,89c25c,taxi,end,2019-11-01T00:07:18.082153551Z,1.2,40.7122,-73.951332,1572566409947779410,0\n,,0,89c25b4,89c25c,taxi,end,2019-11-01T00:07:41.235010051Z,1.3,40.671928,-73.962692,1572566426666145821,1.75\n,,0,89c25bc,89c25c,taxi,start,2019-11-01T00:00:09.94777941Z,,40.712173,-73.963913,1572566409947779410,\n,,0,89c25bc,89c25c,taxi,start,2019-11-01T00:00:26.666145821Z,,40.688564,-73.965881,1572566426666145821,\n,,1,89c261c,89c264,taxi,end,2019-11-01T13:41:59.331776148Z,1.3,40.725647,-73.752579,1572615165632969758,0\n,,1,89c2624,89c264,taxi,end,2019-11-01T00:33:07.54916732Z,9.7,40.728077,-73.716583,1572567458287113937,5\n,,1,89c2624,89c264,taxi,start,2019-11-01T13:32:45.632969758Z,,40.733585,-73.737175,1572615165632969758,\n,,1,89c2664,89c264,taxi,start,2019-11-01T00:17:38.287113937Z,,40.645245,-73.776665,1572567458287113937,\n\"",
						Start: ast.Position{
							Column: 11,
							Line:   187,
						},
					},
				},
				Value: "\n#group,false,false,false,true,false,false,false,false,false,false,false,false\n#datatype,string,long,string,string,string,string,dateTime:RFC3339,double,double,double,long,double\n#default,_result,,,,,,,,,,,\n,result,table,s2_cell_id,ci9,_measurement,_pt,_time,dist,lat,lon,tid,tip\n,,0,89c2594,89c25c,taxi,end,2019-11-01T00:07:18.082153551Z,1.2,40.7122,-73.951332,1572566409947779410,0\n,,0,89c25b4,89c25c,taxi,end,2019-11-01T00:07:41.235010051Z,1.3,40.671928,-73.962692,1572566426666145821,1.75\n,,0,89c25bc,89c25c,taxi,start,2019-11-01T00:00:09.94777941Z,,40.712173,-73.963913,1572566409947779410,\n,,0,89c25bc,89c25c,taxi,start,2019-11-01T00:00:26.666145821Z,,40.688564,-73.965881,1572566426666145821,\n,,1,89c261c,89c264,taxi,end,2019-11-01T13:41:59.331776148Z,1.3,40.725647,-73.752579,1572615165632969758,0\n,,1,89c2624,89c264,taxi,end,2019-11-01T00:33:07.54916732Z,9.7,40.728077,-73.716583,1572567458287113937,5\n,,1,89c2624,89c264,taxi,start,2019-11-01T13:32:45.632969758Z,,40.733585,-73.737175,1572615165632969758,\n,,1,89c2664,89c264,taxi,start,2019-11-01T00:17:38.287113937Z,,40.645245,-73.776665,1572567458287113937,\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   207,
					},
					File:   "groupByArea_test.flux",
					Source: "t_groupByArea = (table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.toRows()\n    |> geo.groupByArea(newColumn: \"ci9\", level: 9)\n    |> drop(columns: [\"_start\", \"_stop\"])",
					Start: ast.Position{
						Column: 1,
						Line:   202,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 14,
							Line:   202,
						},
						File:   "groupByArea_test.flux",
						Source: "t_groupByArea",
						Start: ast.Position{
							Column: 1,
							Line:   202,
						},
					},
				},
				Name: "t_groupByArea",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   207,
						},
						File:   "groupByArea_test.flux",
						Source: "(table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.toRows()\n    |> geo.groupByArea(newColumn: \"ci9\", level: 9)\n    |> drop(columns: [\"_start\", \"_stop\"])",
						Start: ast.Position{
							Column: 17,
							Line:   202,
						},
					},
				},
				Body: &ast.PipeExpression{
					Argument: &ast.PipeExpression{
						Argument: &ast.PipeExpression{
							Argument: &ast.PipeExpression{
								Argument: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 8,
												Line:   203,
											},
											File:   "groupByArea_test.flux",
											Source: "table",
											Start: ast.Position{
												Column: 3,
												Line:   203,
											},
										},
									},
									Name: "table",
								},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 42,
											Line:   204,
										},
										File:   "groupByArea_test.flux",
										Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)",
										Start: ast.Position{
											Column: 3,
											Line:   203,
										},
									},
								},
								Call: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 41,
													Line:   204,
												},
												File:   "groupByArea_test.flux",
												Source: "start: 2019-11-01T00:00:00Z",
												Start: ast.Position{
													Column: 14,
													Line:   204,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 41,
														Line:   204,
													},
													File:   "groupByArea_test.flux",
													Source: "start: 2019-11-01T00:00:00Z",
													Start: ast.Position{
														Column: 14,
														Line:   204,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 19,
															Line:   204,
														},
														File:   "groupByArea_test.flux",
														Source: "start",
														Start: ast.Position{
															Column: 14,
															Line:   204,
														},
													},
												},
												Name: "start",
											},
											Value: &ast.DateTimeLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 41,
															Line:   204,
														},
														File:   "groupByArea_test.flux",
														Source: "2019-11-01T00:00:00Z",
														Start: ast.Position{
															Column: 21,
															Line:   204,
														},
													},
												},
												Value: parser.MustParseTime("2019-11-01T00:00:00Z"),
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 42,
												Line:   204,
											},
											File:   "groupByArea_test.flux",
											Source: "range(start: 2019-11-01T00:00:00Z)",
											Start: ast.Position{
												Column: 8,
												Line:   204,
											},
										},
									},
									Callee: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 13,
													Line:   204,
												},
												File:   "groupByArea_test.flux",
												Source: "range",
												Start: ast.Position{
													Column: 8,
													Line:   204,
												},
											},
										},
										Name: "range",
									},
								},
							},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 20,
										Line:   205,
									},
									File:   "groupByArea_test.flux",
									Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.toRows()",
									Start: ast.Position{
										Column: 3,
										Line:   203,
									},
								},
							},
							Call: &ast.CallExpression{
								Arguments: nil,
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 20,
											Line:   205,
										},
										File:   "groupByArea_test.flux",
										Source: "geo.toRows()",
										Start: ast.Position{
											Column: 8,
											Line:   205,
										},
									},
								},
								Callee: &ast.MemberExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 18,
												Line:   205,
											},
											File:   "groupByArea_test.flux",
											Source: "geo.toRows",
											Start: ast.Position{
												Column: 8,
												Line:   205,
											},
										},
									},
									Object: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 11,
													Line:   205,
												},
												File:   "groupByArea_test.flux",
												Source: "geo",
												Start: ast.Position{
													Column: 8,
													Line:   205,
												},
											},
										},
										Name: "geo",
									},
									Property: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 18,
													Line:   205,
												},
												File:   "groupByArea_test.flux",
												Source: "toRows",
												Start: ast.Position{
													Column: 12,
													Line:   205,
												},
											},
										},
										Name: "toRows",
									},
								},
							},
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 51,
									Line:   206,
								},
								File:   "groupByArea_test.flux",
								Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.toRows()\n    |> geo.groupByArea(newColumn: \"ci9\", level: 9)",
								Start: ast.Position{
									Column: 3,
									Line:   203,
								},
							},
						},
						Call: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 50,
											Line:   206,
										},
										File:   "groupByArea_test.flux",
										Source: "newColumn: \"ci9\", level: 9",
										Start: ast.Position{
											Column: 24,
											Line:   206,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 40,
												Line:   206,
											},
											File:   "groupByArea_test.flux",
											Source: "newColumn: \"ci9\"",
											Start: ast.Position{
												Column: 24,
												Line:   206,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 33,
													Line:   206,
												},
												File:   "groupByArea_test.flux",
												Source: "newColumn",
												Start: ast.Position{
													Column: 24,
													Line:   206,
												},
											},
										},
										Name: "newColumn",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 40,
													Line:   206,
												},
												File:   "groupByArea_test.flux",
												Source: "\"ci9\"",
												Start: ast.Position{
													Column: 35,
													Line:   206,
												},
											},
										},
										Value: "ci9",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 50,
												Line:   206,
											},
											File:   "groupByArea_test.flux",
											Source: "level: 9",
											Start: ast.Position{
												Column: 42,
												Line:   206,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 47,
													Line:   206,
												},
												File:   "groupByArea_test.flux",
												Source: "level",
												Start: ast.Position{
													Column: 42,
													Line:   206,
												},
											},
										},
										Name: "level",
									},
									Value: &ast.IntegerLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 50,
													Line:   206,
												},
												File:   "groupByArea_test.flux",
												Source: "9",
												Start: ast.Position{
													Column: 49,
													Line:   206,
												},
											},
										},
										Value: int64(9),
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 51,
										Line:   206,
									},
									File:   "groupByArea_test.flux",
									Source: "geo.groupByArea(newColumn: \"ci9\", level: 9)",
									Start: ast.Position{
										Column: 8,
										Line:   206,
									},
								},
							},
							Callee: &ast.MemberExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 23,
											Line:   206,
										},
										File:   "groupByArea_test.flux",
										Source: "geo.groupByArea",
										Start: ast.Position{
											Column: 8,
											Line:   206,
										},
									},
								},
								Object: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 11,
												Line:   206,
											},
											File:   "groupByArea_test.flux",
											Source: "geo",
											Start: ast.Position{
												Column: 8,
												Line:   206,
											},
										},
									},
									Name: "geo",
								},
								Property: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 23,
												Line:   206,
											},
											File:   "groupByArea_test.flux",
											Source: "groupByArea",
											Start: ast.Position{
												Column: 12,
												Line:   206,
											},
										},
									},
									Name: "groupByArea",
								},
							},
						},
					},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   207,
							},
							File:   "groupByArea_test.flux",
							Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> geo.toRows()\n    |> geo.groupByArea(newColumn: \"ci9\", level: 9)\n    |> drop(columns: [\"_start\", \"_stop\"])",
							Start: ast.Position{
								Column: 3,
								Line:   203,
							},
						},
					},
					Call: &ast.CallExpression{
						Arguments: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   207,
									},
									File:   "groupByArea_test.flux",
									Source: "columns: [\"_start\", \"_stop\"]",
									Start: ast.Position{
										Column: 13,
										Line:   207,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 41,
											Line:   207,
										},
										File:   "groupByArea_test.flux",
										Source: "columns: [\"_start\", \"_stop\"]",
										Start: ast.Position{
											Column: 13,
											Line:   207,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 20,
												Line:   207,
											},
											File:   "groupByArea_test.flux",
											Source: "columns",
											Start: ast.Position{
												Column: 13,
												Line:   207,
											},
										},
									},
									Name: "columns",
								},
								Value: &ast.ArrayExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 41,
												Line:   207,
											},
											File:   "groupByArea_test.flux",
											Source: "[\"_start\", \"_stop\"]",
											Start: ast.Position{
												Column: 22,
												Line:   207,
											},
										},
									},
									Elements: []ast.Expression{&ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 31,
													Line:   207,
												},
												File:   "groupByArea_test.flux",
												Source: "\"_start\"",
												Start: ast.Position{
													Column: 23,
													Line:   207,
												},
											},
										},
										Value: "_start",
									}, &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 40,
													Line:   207,
												},
												File:   "groupByArea_test.flux",
												Source: "\"_stop\"",
												Start: ast.Position{
													Column: 33,
													Line:   207,
												},
											},
										},
										Value: "_stop",
									}},
								},
							}},
							With: nil,
						}},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   207,
								},
								File:   "groupByArea_test.flux",
								Source: "drop(columns: [\"_start\", \"_stop\"])",
								Start: ast.Position{
									Column: 8,
									Line:   207,
								},
							},
						},
						Callee: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 12,
										Line:   207,
									},
									File:   "groupByArea_test.flux",
									Source: "drop",
									Start: ast.Position{
										Column: 8,
										Line:   207,
									},
								},
							},
							Name: "drop",
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 26,
								Line:   202,
							},
							File:   "groupByArea_test.flux",
							Source: "table=<-",
							Start: ast.Position{
								Column: 18,
								Line:   202,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 23,
									Line:   202,
								},
								File:   "groupByArea_test.flux",
								Source: "table",
								Start: ast.Position{
									Column: 18,
									Line:   202,
								},
							},
						},
						Name: "table",
					},
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 26,
								Line:   202,
							},
							File:   "groupByArea_test.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 24,
								Line:   202,
							},
						},
					}},
				}},
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 101,
							Line:   209,
						},
						File:   "groupByArea_test.flux",
						Source: "_groupByArea = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_groupByArea})",
						Start: ast.Position{
							Column: 6,
							Line:   208,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 18,
								Line:   208,
							},
							File:   "groupByArea_test.flux",
							Source: "_groupByArea",
							Start: ast.Position{
								Column: 6,
								Line:   208,
							},
						},
					},
					Name: "_groupByArea",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 101,
								Line:   209,
							},
							File:   "groupByArea_test.flux",
							Source: "() =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_groupByArea})",
							Start: ast.Position{
								Column: 21,
								Line:   208,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 101,
									Line:   209,
								},
								File:   "groupByArea_test.flux",
								Source: "({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_groupByArea})",
								Start: ast.Position{
									Column: 2,
									Line:   209,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 100,
										Line:   209,
									},
									File:   "groupByArea_test.flux",
									Source: "{input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_groupByArea}",
									Start: ast.Position{
										Column: 3,
										Line:   209,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 43,
											Line:   209,
										},
										File:   "groupByArea_test.flux",
										Source: "input: testing.loadStorage(csv: inData)",
										Start: ast.Position{
											Column: 4,
											Line:   209,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 9,
												Line:   209,
											},
											File:   "groupByArea_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 4,
												Line:   209,
											},
										},
									},
									Name: "input",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   209,
												},
												File:   "groupByArea_test.flux",
												Source: "csv: inData",
												Start: ast.Position{
													Column: 31,
													Line:   209,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 42,
														Line:   209,
													},
													File:   "groupByArea_test.flux",
													Source: "csv: inData",
													Start: ast.Position{
														Column: 31,
														Line:   209,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 34,
															Line:   209,
														},
														File:   "groupByArea_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 31,
															Line:   209,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 42,
															Line:   209,
														},
														File:   "groupByArea_test.flux",
														Source: "inData",
														Start: ast.Position{
															Column: 36,
															Line:   209,
														},
													},
												},
												Name: "inData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 43,
												Line:   209,
											},
											File:   "groupByArea_test.flux",
											Source: "testing.loadStorage(csv: inData)",
											Start: ast.Position{
												Column: 11,
												Line:   209,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   209,
												},
												File:   "groupByArea_test.flux",
												Source: "testing.loadStorage",
												Start: ast.Position{
													Column: 11,
													Line:   209,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   209,
													},
													File:   "groupByArea_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 11,
														Line:   209,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 30,
														Line:   209,
													},
													File:   "groupByArea_test.flux",
													Source: "loadStorage",
													Start: ast.Position{
														Column: 19,
														Line:   209,
													},
												},
											},
											Name: "loadStorage",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 80,
											Line:   209,
										},
										File:   "groupByArea_test.flux",
										Source: "want: testing.loadMem(csv: outData)",
										Start: ast.Position{
											Column: 45,
											Line:   209,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 49,
												Line:   209,
											},
											File:   "groupByArea_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 45,
												Line:   209,
											},
										},
									},
									Name: "want",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 79,
													Line:   209,
												},
												File:   "groupByArea_test.flux",
												Source: "csv: outData",
												Start: ast.Position{
													Column: 67,
													Line:   209,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 79,
														Line:   209,
													},
													File:   "groupByArea_test.flux",
													Source: "csv: outData",
													Start: ast.Position{
														Column: 67,
														Line:   209,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 70,
															Line:   209,
														},
														File:   "groupByArea_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 67,
															Line:   209,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 79,
															Line:   209,
														},
														File:   "groupByArea_test.flux",
														Source: "outData",
														Start: ast.Position{
															Column: 72,
															Line:   209,
														},
													},
												},
												Name: "outData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 80,
												Line:   209,
											},
											File:   "groupByArea_test.flux",
											Source: "testing.loadMem(csv: outData)",
											Start: ast.Position{
												Column: 51,
												Line:   209,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   209,
												},
												File:   "groupByArea_test.flux",
												Source: "testing.loadMem",
												Start: ast.Position{
													Column: 51,
													Line:   209,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 58,
														Line:   209,
													},
													File:   "groupByArea_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 51,
														Line:   209,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 66,
														Line:   209,
													},
													File:   "groupByArea_test.flux",
													Source: "loadMem",
													Start: ast.Position{
														Column: 59,
														Line:   209,
													},
												},
											},
											Name: "loadMem",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 99,
											Line:   209,
										},
										File:   "groupByArea_test.flux",
										Source: "fn: t_groupByArea",
										Start: ast.Position{
											Column: 82,
											Line:   209,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 84,
												Line:   209,
											},
											File:   "groupByArea_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 82,
												Line:   209,
											},
										},
									},
									Name: "fn",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 99,
												Line:   209,
											},
											File:   "groupByArea_test.flux",
											Source: "t_groupByArea",
											Start: ast.Position{
												Column: 86,
												Line:   209,
											},
										},
									},
									Name: "t_groupByArea",
								},
							}},
							With: nil,
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 101,
						Line:   209,
					},
					File:   "groupByArea_test.flux",
					Source: "test _groupByArea = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_groupByArea})",
					Start: ast.Position{
						Column: 1,
						Line:   208,
					},
				},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 26,
						Line:   3,
					},
					File:   "groupByArea_test.flux",
					Source: "import \"experimental/geo\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 26,
							Line:   3,
						},
						File:   "groupByArea_test.flux",
						Source: "\"experimental/geo\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "experimental/geo",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   4,
					},
					File:   "groupByArea_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   4,
						},
						File:   "groupByArea_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "testing",
			},
		}},
		Metadata: "parser-type=rust",
		Name:     "groupByArea_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   1,
					},
					File:   "groupByArea_test.flux",
					Source: "package geo_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   1,
						},
						File:   "groupByArea_test.flux",
						Source: "geo_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "geo_test",
			},
		},
	}, &ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 109,
					Line:   98,
				},
				File:   "shapeDataWithFilter_test.flux",
				Source: "package geo_test\n\nimport \"experimental/geo\"\nimport \"testing\"\n\noption now = () => (2030-01-01T00:00:00Z)\n\ninData = \"\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,string,double\n#group,false,false,false,true,true,true,true,true,false\n#default,,,,,,,,,\n,result,table,_time,_start,_stop,_measurement,id,_field,_value\n,,0,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.03383\n,,0,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.14267\n,,0,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16667\n,,0,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.18183\n,,0,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17367\n,,0,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.2935\n,,0,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.3485\n,,0,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17167\n,,0,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.14683\n,,0,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17367\n,,0,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17433\n,,0,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.1595\n,,0,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16\n,,0,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17433\n,,1,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.09867\n,,1,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17567\n,,1,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16933\n,,1,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17\n,,1,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.187\n,,1,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18217\n,,1,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.15833\n,,1,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.15083\n,,1,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.181\n,,1,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16883\n,,1,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16883\n,,1,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1815\n,,1,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1845\n,,1,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17433\n,,1,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18667\n,,1,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18167\n,,1,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16733\n,,1,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1665\n,,1,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16817\n,,1,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18417\n\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,string,string\n#group,false,false,false,true,true,true,true,true,false\n#default,,,,,,,,,\n,result,table,_time,_start,_stop,_measurement,id,_field,_value\n,,2,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n\"\n\noutData = \"\n#group,false,false,true,true,true,false,false,true,false,false,true\n#datatype,string,long,string,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,double,double,string\n#default,_result,,,,,,,,,,\n,result,table,_measurement,_start,_stop,_time,control,id,lat,lon,s2_cell_id\n,,0,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T07:00:00Z,ctrlField,91916A,21.03383,39.09867,15c309\n,,1,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-02T04:00:00Z,ctrlField,91916A,21.14267,39.17567,15c3a9\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T04:00:00Z,ctrlField,91916A,21.14683,39.17433,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T04:00:00Z,ctrlField,91916A,21.1595,39.16733,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T07:00:00Z,ctrlField,91916A,21.16,39.1665,15c3af\n\"\n\nt_shapeDataWithFilter = (table=<-) =>\n  table\n    |> range(start: 2019-01-01T00:00:00Z)\n    |> geo.shapeData(latField: \"latitude\", lonField: \"longitude\", level: 10)\n    |> geo.filterRows(region: {lat: 21.0, lon: 39.0, radius: 25.0})\ntest _shapeDataWithFilter = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_shapeDataWithFilter})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   6,
						},
						File:   "shapeDataWithFilter_test.flux",
						Source: "now = () => (2030-01-01T00:00:00Z)",
						Start: ast.Position{
							Column: 8,
							Line:   6,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   6,
							},
							File:   "shapeDataWithFilter_test.flux",
							Source: "now",
							Start: ast.Position{
								Column: 8,
								Line:   6,
							},
						},
					},
					Name: "now",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   6,
							},
							File:   "shapeDataWithFilter_test.flux",
							Source: "() => (2030-01-01T00:00:00Z)",
							Start: ast.Position{
								Column: 14,
								Line:   6,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   6,
								},
								File:   "shapeDataWithFilter_test.flux",
								Source: "(2030-01-01T00:00:00Z)",
								Start: ast.Position{
									Column: 20,
									Line:   6,
								},
							},
						},
						Expression: &ast.DateTimeLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   6,
									},
									File:   "shapeDataWithFilter_test.flux",
									Source: "2030-01-01T00:00:00Z",
									Start: ast.Position{
										Column: 21,
										Line:   6,
									},
								},
							},
							Value: parser.MustParseTime("2030-01-01T00:00:00Z"),
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   6,
					},
					File:   "shapeDataWithFilter_test.flux",
					Source: "option now = () => (2030-01-01T00:00:00Z)",
					Start: ast.Position{
						Column: 1,
						Line:   6,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   78,
					},
					File:   "shapeDataWithFilter_test.flux",
					Source: "inData = \"\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,string,double\n#group,false,false,false,true,true,true,true,true,false\n#default,,,,,,,,,\n,result,table,_time,_start,_stop,_measurement,id,_field,_value\n,,0,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.03383\n,,0,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.14267\n,,0,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16667\n,,0,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.18183\n,,0,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17367\n,,0,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.2935\n,,0,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.3485\n,,0,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17167\n,,0,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.14683\n,,0,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17367\n,,0,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17433\n,,0,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.1595\n,,0,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16\n,,0,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17433\n,,1,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.09867\n,,1,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17567\n,,1,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16933\n,,1,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17\n,,1,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.187\n,,1,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18217\n,,1,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.15833\n,,1,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.15083\n,,1,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.181\n,,1,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16883\n,,1,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16883\n,,1,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1815\n,,1,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1845\n,,1,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17433\n,,1,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18667\n,,1,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18167\n,,1,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16733\n,,1,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1665\n,,1,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16817\n,,1,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18417\n\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,string,string\n#group,false,false,false,true,true,true,true,true,false\n#default,,,,,,,,,\n,result,table,_time,_start,_stop,_measurement,id,_field,_value\n,,2,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   8,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 7,
							Line:   8,
						},
						File:   "shapeDataWithFilter_test.flux",
						Source: "inData",
						Start: ast.Position{
							Column: 1,
							Line:   8,
						},
					},
				},
				Name: "inData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   78,
						},
						File:   "shapeDataWithFilter_test.flux",
						Source: "\"\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,string,double\n#group,false,false,false,true,true,true,true,true,false\n#default,,,,,,,,,\n,result,table,_time,_start,_stop,_measurement,id,_field,_value\n,,0,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.03383\n,,0,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.14267\n,,0,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16667\n,,0,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.18183\n,,0,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17367\n,,0,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.2935\n,,0,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.3485\n,,0,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17167\n,,0,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.14683\n,,0,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17367\n,,0,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17433\n,,0,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.1595\n,,0,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16\n,,0,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17433\n,,1,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.09867\n,,1,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17567\n,,1,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16933\n,,1,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17\n,,1,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.187\n,,1,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18217\n,,1,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.15833\n,,1,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.15083\n,,1,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.181\n,,1,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16883\n,,1,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16883\n,,1,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1815\n,,1,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1845\n,,1,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17433\n,,1,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18667\n,,1,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18167\n,,1,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16733\n,,1,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1665\n,,1,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16817\n,,1,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18417\n\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,string,string\n#group,false,false,false,true,true,true,true,true,false\n#default,,,,,,,,,\n,result,table,_time,_start,_stop,_measurement,id,_field,_value\n,,2,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n\"",
						Start: ast.Position{
							Column: 10,
							Line:   8,
						},
					},
				},
				Value: "\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,string,double\n#group,false,false,false,true,true,true,true,true,false\n#default,,,,,,,,,\n,result,table,_time,_start,_stop,_measurement,id,_field,_value\n,,0,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.03383\n,,0,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.14267\n,,0,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16667\n,,0,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.18183\n,,0,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17367\n,,0,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.2935\n,,0,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.3485\n,,0,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17167\n,,0,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.14683\n,,0,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17367\n,,0,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17433\n,,0,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.1595\n,,0,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16\n,,0,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17433\n,,1,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.09867\n,,1,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17567\n,,1,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16933\n,,1,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17\n,,1,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.187\n,,1,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18217\n,,1,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.15833\n,,1,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.15083\n,,1,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.181\n,,1,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16883\n,,1,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16883\n,,1,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1815\n,,1,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1845\n,,1,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17433\n,,1,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18667\n,,1,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18167\n,,1,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16733\n,,1,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1665\n,,1,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16817\n,,1,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18417\n\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,string,string\n#group,false,false,false,true,true,true,true,true,false\n#default,,,,,,,,,\n,result,table,_time,_start,_stop,_measurement,id,_field,_value\n,,2,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   90,
					},
					File:   "shapeDataWithFilter_test.flux",
					Source: "outData = \"\n#group,false,false,true,true,true,false,false,true,false,false,true\n#datatype,string,long,string,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,double,double,string\n#default,_result,,,,,,,,,,\n,result,table,_measurement,_start,_stop,_time,control,id,lat,lon,s2_cell_id\n,,0,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T07:00:00Z,ctrlField,91916A,21.03383,39.09867,15c309\n,,1,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-02T04:00:00Z,ctrlField,91916A,21.14267,39.17567,15c3a9\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T04:00:00Z,ctrlField,91916A,21.14683,39.17433,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T04:00:00Z,ctrlField,91916A,21.1595,39.16733,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T07:00:00Z,ctrlField,91916A,21.16,39.1665,15c3af\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   80,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 8,
							Line:   80,
						},
						File:   "shapeDataWithFilter_test.flux",
						Source: "outData",
						Start: ast.Position{
							Column: 1,
							Line:   80,
						},
					},
				},
				Name: "outData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   90,
						},
						File:   "shapeDataWithFilter_test.flux",
						Source: "\"\n#group,false,false,true,true,true,false,false,true,false,false,true\n#datatype,string,long,string,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,double,double,string\n#default,_result,,,,,,,,,,\n,result,table,_measurement,_start,_stop,_time,control,id,lat,lon,s2_cell_id\n,,0,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T07:00:00Z,ctrlField,91916A,21.03383,39.09867,15c309\n,,1,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-02T04:00:00Z,ctrlField,91916A,21.14267,39.17567,15c3a9\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T04:00:00Z,ctrlField,91916A,21.14683,39.17433,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T04:00:00Z,ctrlField,91916A,21.1595,39.16733,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T07:00:00Z,ctrlField,91916A,21.16,39.1665,15c3af\n\"",
						Start: ast.Position{
							Column: 11,
							Line:   80,
						},
					},
				},
				Value: "\n#group,false,false,true,true,true,false,false,true,false,false,true\n#datatype,string,long,string,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,double,double,string\n#default,_result,,,,,,,,,,\n,result,table,_measurement,_start,_stop,_time,control,id,lat,lon,s2_cell_id\n,,0,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T07:00:00Z,ctrlField,91916A,21.03383,39.09867,15c309\n,,1,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-02T04:00:00Z,ctrlField,91916A,21.14267,39.17567,15c3a9\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T04:00:00Z,ctrlField,91916A,21.14683,39.17433,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T04:00:00Z,ctrlField,91916A,21.1595,39.16733,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T07:00:00Z,ctrlField,91916A,21.16,39.1665,15c3af\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 68,
						Line:   96,
					},
					File:   "shapeDataWithFilter_test.flux",
					Source: "t_shapeDataWithFilter = (table=<-) =>\n  table\n    |> range(start: 2019-01-01T00:00:00Z)\n    |> geo.shapeData(latField: \"latitude\", lonField: \"longitude\", level: 10)\n    |> geo.filterRows(region: {lat: 21.0, lon: 39.0, radius: 25.0})",
					Start: ast.Position{
						Column: 1,
						Line:   92,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 22,
							Line:   92,
						},
						File:   "shapeDataWithFilter_test.flux",
						Source: "t_shapeDataWithFilter",
						Start: ast.Position{
							Column: 1,
							Line:   92,
						},
					},
				},
				Name: "t_shapeDataWithFilter",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 68,
							Line:   96,
						},
						File:   "shapeDataWithFilter_test.flux",
						Source: "(table=<-) =>\n  table\n    |> range(start: 2019-01-01T00:00:00Z)\n    |> geo.shapeData(latField: \"latitude\", lonField: \"longitude\", level: 10)\n    |> geo.filterRows(region: {lat: 21.0, lon: 39.0, radius: 25.0})",
						Start: ast.Position{
							Column: 25,
							Line:   92,
						},
					},
				},
				Body: &ast.PipeExpression{
					Argument: &ast.PipeExpression{
						Argument: &ast.PipeExpression{
							Argument: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 8,
											Line:   93,
										},
										File:   "shapeDataWithFilter_test.flux",
										Source: "table",
										Start: ast.Position{
											Column: 3,
											Line:   93,
										},
									},
								},
								Name: "table",
							},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 42,
										Line:   94,
									},
									File:   "shapeDataWithFilter_test.flux",
									Source: "table\n    |> range(start: 2019-01-01T00:00:00Z)",
									Start: ast.Position{
										Column: 3,
										Line:   93,
									},
								},
							},
							Call: &ast.CallExpression{
								Arguments: []ast.Expression{&ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 41,
												Line:   94,
											},
											File:   "shapeDataWithFilter_test.flux",
											Source: "start: 2019-01-01T00:00:00Z",
											Start: ast.Position{
												Column: 14,
												Line:   94,
											},
										},
									},
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 41,
													Line:   94,
												},
												File:   "shapeDataWithFilter_test.flux",
												Source: "start: 2019-01-01T00:00:00Z",
												Start: ast.Position{
													Column: 14,
													Line:   94,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 19,
														Line:   94,
													},
													File:   "shapeDataWithFilter_test.flux",
													Source: "start",
													Start: ast.Position{
														Column: 14,
														Line:   94,
													},
												},
											},
											Name: "start",
										},
										Value: &ast.DateTimeLiteral{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 41,
														Line:   94,
													},
													File:   "shapeDataWithFilter_test.flux",
													Source: "2019-01-01T00:00:00Z",
													Start: ast.Position{
														Column: 21,
														Line:   94,
													},
												},
											},
											Value: parser.MustParseTime("2019-01-01T00:00:00Z"),
										},
									}},
									With: nil,
								}},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 42,
											Line:   94,
										},
										File:   "shapeDataWithFilter_test.flux",
										Source: "range(start: 2019-01-01T00:00:00Z)",
										Start: ast.Position{
											Column: 8,
											Line:   94,
										},
									},
								},
								Callee: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 13,
												Line:   94,
											},
											File:   "shapeDataWithFilter_test.flux",
											Source: "range",
											Start: ast.Position{
												Column: 8,
												Line:   94,
											},
										},
									},
									Name: "range",
								},
							},
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 77,
									Line:   95,
								},
								File:   "shapeDataWithFilter_test.flux",
								Source: "table\n    |> range(start: 2019-01-01T00:00:00Z)\n    |> geo.shapeData(latField: \"latitude\", lonField: \"longitude\", level: 10)",
								Start: ast.Position{
									Column: 3,
									Line:   93,
								},
							},
						},
						Call: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 76,
											Line:   95,
										},
										File:   "shapeDataWithFilter_test.flux",
										Source: "latField: \"latitude\", lonField: \"longitude\", level: 10",
										Start: ast.Position{
											Column: 22,
											Line:   95,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 42,
												Line:   95,
											},
											File:   "shapeDataWithFilter_test.flux",
											Source: "latField: \"latitude\"",
											Start: ast.Position{
												Column: 22,
												Line:   95,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   95,
												},
												File:   "shapeDataWithFilter_test.flux",
												Source: "latField",
												Start: ast.Position{
													Column: 22,
													Line:   95,
												},
											},
										},
										Name: "latField",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   95,
												},
												File:   "shapeDataWithFilter_test.flux",
												Source: "\"latitude\"",
												Start: ast.Position{
													Column: 32,
													Line:   95,
												},
											},
										},
										Value: "latitude",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 65,
												Line:   95,
											},
											File:   "shapeDataWithFilter_test.flux",
											Source: "lonField: \"longitude\"",
											Start: ast.Position{
												Column: 44,
												Line:   95,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 52,
													Line:   95,
												},
												File:   "shapeDataWithFilter_test.flux",
												Source: "lonField",
												Start: ast.Position{
													Column: 44,
													Line:   95,
												},
											},
										},
										Name: "lonField",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 65,
													Line:   95,
												},
												File:   "shapeDataWithFilter_test.flux",
												Source: "\"longitude\"",
												Start: ast.Position{
													Column: 54,
													Line:   95,
												},
											},
										},
										Value: "longitude",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 76,
												Line:   95,
											},
											File:   "shapeDataWithFilter_test.flux",
											Source: "level: 10",
											Start: ast.Position{
												Column: 67,
												Line:   95,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 72,
													Line:   95,
												},
												File:   "shapeDataWithFilter_test.flux",
												Source: "level",
												Start: ast.Position{
													Column: 67,
													Line:   95,
												},
											},
										},
										Name: "level",
									},
									Value: &ast.IntegerLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 76,
													Line:   95,
												},
												File:   "shapeDataWithFilter_test.flux",
												Source: "10",
												Start: ast.Position{
													Column: 74,
													Line:   95,
												},
											},
										},
										Value: int64(10),
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 77,
										Line:   95,
									},
									File:   "shapeDataWithFilter_test.flux",
									Source: "geo.shapeData(latField: \"latitude\", lonField: \"longitude\", level: 10)",
									Start: ast.Position{
										Column: 8,
										Line:   95,
									},
								},
							},
							Callee: &ast.MemberExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 21,
											Line:   95,
										},
										File:   "shapeDataWithFilter_test.flux",
										Source: "geo.shapeData",
										Start: ast.Position{
											Column: 8,
											Line:   95,
										},
									},
								},
								Object: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 11,
												Line:   95,
											},
											File:   "shapeDataWithFilter_test.flux",
											Source: "geo",
											Start: ast.Position{
												Column: 8,
												Line:   95,
											},
										},
									},
									Name: "geo",
								},
								Property: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 21,
												Line:   95,
											},
											File:   "shapeDataWithFilter_test.flux",
											Source: "shapeData",
											Start: ast.Position{
												Column: 12,
												Line:   95,
											},
										},
									},
									Name: "shapeData",
								},
							},
						},
					},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 68,
								Line:   96,
							},
							File:   "shapeDataWithFilter_test.flux",
							Source: "table\n    |> range(start: 2019-01-01T00:00:00Z)\n    |> geo.shapeData(latField: \"latitude\", lonField: \"longitude\", level: 10)\n    |> geo.filterRows(region: {lat: 21.0, lon: 39.0, radius: 25.0})",
							Start: ast.Position{
								Column: 3,
								Line:   93,
							},
						},
					},
					Call: &ast.CallExpression{
						Arguments: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 67,
										Line:   96,
									},
									File:   "shapeDataWithFilter_test.flux",
									Source: "region: {lat: 21.0, lon: 39.0, radius: 25.0}",
									Start: ast.Position{
										Column: 23,
										Line:   96,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 67,
											Line:   96,
										},
										File:   "shapeDataWithFilter_test.flux",
										Source: "region: {lat: 21.0, lon: 39.0, radius: 25.0}",
										Start: ast.Position{
											Column: 23,
											Line:   96,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 29,
												Line:   96,
											},
											File:   "shapeDataWithFilter_test.flux",
											Source: "region",
											Start: ast.Position{
												Column: 23,
												Line:   96,
											},
										},
									},
									Name: "region",
								},
								Value: &ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 67,
												Line:   96,
											},
											File:   "shapeDataWithFilter_test.flux",
											Source: "{lat: 21.0, lon: 39.0, radius: 25.0}",
											Start: ast.Position{
												Column: 31,
												Line:   96,
											},
										},
									},
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 41,
													Line:   96,
												},
												File:   "shapeDataWithFilter_test.flux",
												Source: "lat: 21.0",
												Start: ast.Position{
													Column: 32,
													Line:   96,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 35,
														Line:   96,
													},
													File:   "shapeDataWithFilter_test.flux",
													Source: "lat",
													Start: ast.Position{
														Column: 32,
														Line:   96,
													},
												},
											},
											Name: "lat",
										},
										Value: &ast.FloatLiteral{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 41,
														Line:   96,
													},
													File:   "shapeDataWithFilter_test.flux",
													Source: "21.0",
													Start: ast.Position{
														Column: 37,
														Line:   96,
													},
												},
											},
											Value: 21.0,
										},
									}, &ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 52,
													Line:   96,
												},
												File:   "shapeDataWithFilter_test.flux",
												Source: "lon: 39.0",
												Start: ast.Position{
													Column: 43,
													Line:   96,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 46,
														Line:   96,
													},
													File:   "shapeDataWithFilter_test.flux",
													Source: "lon",
													Start: ast.Position{
														Column: 43,
														Line:   96,
													},
												},
											},
											Name: "lon",
										},
										Value: &ast.FloatLiteral{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 52,
														Line:   96,
													},
													File:   "shapeDataWithFilter_test.flux",
													Source: "39.0",
													Start: ast.Position{
														Column: 48,
														Line:   96,
													},
												},
											},
											Value: 39.0,
										},
									}, &ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   96,
												},
												File:   "shapeDataWithFilter_test.flux",
												Source: "radius: 25.0",
												Start: ast.Position{
													Column: 54,
													Line:   96,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 60,
														Line:   96,
													},
													File:   "shapeDataWithFilter_test.flux",
													Source: "radius",
													Start: ast.Position{
														Column: 54,
														Line:   96,
													},
												},
											},
											Name: "radius",
										},
										Value: &ast.FloatLiteral{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 66,
														Line:   96,
													},
													File:   "shapeDataWithFilter_test.flux",
													Source: "25.0",
													Start: ast.Position{
														Column: 62,
														Line:   96,
													},
												},
											},
											Value: 25.0,
										},
									}},
									With: nil,
								},
							}},
							With: nil,
						}},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 68,
									Line:   96,
								},
								File:   "shapeDataWithFilter_test.flux",
								Source: "geo.filterRows(region: {lat: 21.0, lon: 39.0, radius: 25.0})",
								Start: ast.Position{
									Column: 8,
									Line:   96,
								},
							},
						},
						Callee: &ast.MemberExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 22,
										Line:   96,
									},
									File:   "shapeDataWithFilter_test.flux",
									Source: "geo.filterRows",
									Start: ast.Position{
										Column: 8,
										Line:   96,
									},
								},
							},
							Object: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 11,
											Line:   96,
										},
										File:   "shapeDataWithFilter_test.flux",
										Source: "geo",
										Start: ast.Position{
											Column: 8,
											Line:   96,
										},
									},
								},
								Name: "geo",
							},
							Property: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 22,
											Line:   96,
										},
										File:   "shapeDataWithFilter_test.flux",
										Source: "filterRows",
										Start: ast.Position{
											Column: 12,
											Line:   96,
										},
									},
								},
								Name: "filterRows",
							},
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 34,
								Line:   92,
							},
							File:   "shapeDataWithFilter_test.flux",
							Source: "table=<-",
							Start: ast.Position{
								Column: 26,
								Line:   92,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 31,
									Line:   92,
								},
								File:   "shapeDataWithFilter_test.flux",
								Source: "table",
								Start: ast.Position{
									Column: 26,
									Line:   92,
								},
							},
						},
						Name: "table",
					},
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 34,
								Line:   92,
							},
							File:   "shapeDataWithFilter_test.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 32,
								Line:   92,
							},
						},
					}},
				}},
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 109,
							Line:   98,
						},
						File:   "shapeDataWithFilter_test.flux",
						Source: "_shapeDataWithFilter = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_shapeDataWithFilter})",
						Start: ast.Position{
							Column: 6,
							Line:   97,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 26,
								Line:   97,
							},
							File:   "shapeDataWithFilter_test.flux",
							Source: "_shapeDataWithFilter",
							Start: ast.Position{
								Column: 6,
								Line:   97,
							},
						},
					},
					Name: "_shapeDataWithFilter",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 109,
								Line:   98,
							},
							File:   "shapeDataWithFilter_test.flux",
							Source: "() =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_shapeDataWithFilter})",
							Start: ast.Position{
								Column: 29,
								Line:   97,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 109,
									Line:   98,
								},
								File:   "shapeDataWithFilter_test.flux",
								Source: "({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_shapeDataWithFilter})",
								Start: ast.Position{
									Column: 2,
									Line:   98,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 108,
										Line:   98,
									},
									File:   "shapeDataWithFilter_test.flux",
									Source: "{input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_shapeDataWithFilter}",
									Start: ast.Position{
										Column: 3,
										Line:   98,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 43,
											Line:   98,
										},
										File:   "shapeDataWithFilter_test.flux",
										Source: "input: testing.loadStorage(csv: inData)",
										Start: ast.Position{
											Column: 4,
											Line:   98,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 9,
												Line:   98,
											},
											File:   "shapeDataWithFilter_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 4,
												Line:   98,
											},
										},
									},
									Name: "input",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   98,
												},
												File:   "shapeDataWithFilter_test.flux",
												Source: "csv: inData",
												Start: ast.Position{
													Column: 31,
													Line:   98,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 42,
														Line:   98,
													},
													File:   "shapeDataWithFilter_test.flux",
													Source: "csv: inData",
													Start: ast.Position{
														Column: 31,
														Line:   98,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 34,
															Line:   98,
														},
														File:   "shapeDataWithFilter_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 31,
															Line:   98,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 42,
															Line:   98,
														},
														File:   "shapeDataWithFilter_test.flux",
														Source: "inData",
														Start: ast.Position{
															Column: 36,
															Line:   98,
														},
													},
												},
												Name: "inData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 43,
												Line:   98,
											},
											File:   "shapeDataWithFilter_test.flux",
											Source: "testing.loadStorage(csv: inData)",
											Start: ast.Position{
												Column: 11,
												Line:   98,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   98,
												},
												File:   "shapeDataWithFilter_test.flux",
												Source: "testing.loadStorage",
												Start: ast.Position{
													Column: 11,
													Line:   98,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   98,
													},
													File:   "shapeDataWithFilter_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 11,
														Line:   98,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 30,
														Line:   98,
													},
													File:   "shapeDataWithFilter_test.flux",
													Source: "loadStorage",
													Start: ast.Position{
														Column: 19,
														Line:   98,
													},
												},
											},
											Name: "loadStorage",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 80,
											Line:   98,
										},
										File:   "shapeDataWithFilter_test.flux",
										Source: "want: testing.loadMem(csv: outData)",
										Start: ast.Position{
											Column: 45,
											Line:   98,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 49,
												Line:   98,
											},
											File:   "shapeDataWithFilter_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 45,
												Line:   98,
											},
										},
									},
									Name: "want",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 79,
													Line:   98,
												},
												File:   "shapeDataWithFilter_test.flux",
												Source: "csv: outData",
												Start: ast.Position{
													Column: 67,
													Line:   98,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 79,
														Line:   98,
													},
													File:   "shapeDataWithFilter_test.flux",
													Source: "csv: outData",
													Start: ast.Position{
														Column: 67,
														Line:   98,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 70,
															Line:   98,
														},
														File:   "shapeDataWithFilter_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 67,
															Line:   98,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 79,
															Line:   98,
														},
														File:   "shapeDataWithFilter_test.flux",
														Source: "outData",
														Start: ast.Position{
															Column: 72,
															Line:   98,
														},
													},
												},
												Name: "outData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 80,
												Line:   98,
											},
											File:   "shapeDataWithFilter_test.flux",
											Source: "testing.loadMem(csv: outData)",
											Start: ast.Position{
												Column: 51,
												Line:   98,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   98,
												},
												File:   "shapeDataWithFilter_test.flux",
												Source: "testing.loadMem",
												Start: ast.Position{
													Column: 51,
													Line:   98,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 58,
														Line:   98,
													},
													File:   "shapeDataWithFilter_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 51,
														Line:   98,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 66,
														Line:   98,
													},
													File:   "shapeDataWithFilter_test.flux",
													Source: "loadMem",
													Start: ast.Position{
														Column: 59,
														Line:   98,
													},
												},
											},
											Name: "loadMem",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 107,
											Line:   98,
										},
										File:   "shapeDataWithFilter_test.flux",
										Source: "fn: t_shapeDataWithFilter",
										Start: ast.Position{
											Column: 82,
											Line:   98,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 84,
												Line:   98,
											},
											File:   "shapeDataWithFilter_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 82,
												Line:   98,
											},
										},
									},
									Name: "fn",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 107,
												Line:   98,
											},
											File:   "shapeDataWithFilter_test.flux",
											Source: "t_shapeDataWithFilter",
											Start: ast.Position{
												Column: 86,
												Line:   98,
											},
										},
									},
									Name: "t_shapeDataWithFilter",
								},
							}},
							With: nil,
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 109,
						Line:   98,
					},
					File:   "shapeDataWithFilter_test.flux",
					Source: "test _shapeDataWithFilter = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_shapeDataWithFilter})",
					Start: ast.Position{
						Column: 1,
						Line:   97,
					},
				},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 26,
						Line:   3,
					},
					File:   "shapeDataWithFilter_test.flux",
					Source: "import \"experimental/geo\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 26,
							Line:   3,
						},
						File:   "shapeDataWithFilter_test.flux",
						Source: "\"experimental/geo\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "experimental/geo",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   4,
					},
					File:   "shapeDataWithFilter_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   4,
						},
						File:   "shapeDataWithFilter_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "testing",
			},
		}},
		Metadata: "parser-type=rust",
		Name:     "shapeDataWithFilter_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   1,
					},
					File:   "shapeDataWithFilter_test.flux",
					Source: "package geo_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   1,
						},
						File:   "shapeDataWithFilter_test.flux",
						Source: "geo_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "geo_test",
			},
		},
	}, &ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 99,
					Line:   112,
				},
				File:   "shapeData_test.flux",
				Source: "package geo_test\n\nimport \"experimental/geo\"\nimport \"testing\"\n\noption now = () => (2030-01-01T00:00:00Z)\n\ninData = \"\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,string,double\n#group,false,false,false,true,true,true,true,true,false\n#default,,,,,,,,,\n,result,table,_time,_start,_stop,_measurement,id,_field,_value\n,,0,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.03383\n,,0,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.14267\n,,0,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16667\n,,0,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.18183\n,,0,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17367\n,,0,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.2935\n,,0,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.3485\n,,0,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17167\n,,0,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.14683\n,,0,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17367\n,,0,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17433\n,,0,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.1595\n,,0,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16\n,,0,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17433\n,,1,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.09867\n,,1,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17567\n,,1,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16933\n,,1,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17\n,,1,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.187\n,,1,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18217\n,,1,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.15833\n,,1,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.15083\n,,1,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.181\n,,1,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16883\n,,1,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16883\n,,1,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1815\n,,1,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1845\n,,1,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17433\n,,1,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18667\n,,1,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18167\n,,1,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16733\n,,1,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1665\n,,1,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16817\n,,1,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18417\n\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,string,string\n#group,false,false,false,true,true,true,true,true,false\n#default,,,,,,,,,\n,result,table,_time,_start,_stop,_measurement,id,_field,_value\n,,2,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n\"\n\noutData = \"\n#group,false,false,true,true,true,false,false,true,false,false,true\n#datatype,string,long,string,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,double,double,string\n#default,_result,,,,,,,,,,\n,result,table,_measurement,_start,_stop,_time,control,id,lat,lon,s2_cell_id\n,,0,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T07:00:00Z,ctrlField,91916A,21.03383,39.09867,15c309\n,,1,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-02T04:00:00Z,ctrlField,91916A,21.14267,39.17567,15c3a9\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-01T04:00:00Z,ctrlField,91916A,21.16667,39.16933,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-01T07:00:00Z,ctrlField,91916A,21.18183,39.17,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-01T13:00:00Z,ctrlField,91916A,21.17367,39.187,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-01T19:00:00Z,ctrlField,91916A,21.17383,39.18217,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-02T19:00:00Z,ctrlField,91916A,21.17383,39.181,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-03T04:00:00Z,ctrlField,91916A,21.16633,39.16883,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-03T07:00:00Z,ctrlField,91916A,21.16633,39.16883,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-03T13:00:00Z,ctrlField,91916A,21.17167,39.1815,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-03T19:00:00Z,ctrlField,91916A,21.17383,39.1845,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T04:00:00Z,ctrlField,91916A,21.14683,39.17433,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T13:00:00Z,ctrlField,91916A,21.17367,39.18667,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T19:00:00Z,ctrlField,91916A,21.17433,39.18167,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T04:00:00Z,ctrlField,91916A,21.1595,39.16733,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T07:00:00Z,ctrlField,91916A,21.16,39.1665,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T13:00:00Z,ctrlField,91916A,21.16633,39.16817,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T19:00:00Z,ctrlField,91916A,21.17433,39.18417,15c3af\n,,3,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-02T07:00:00Z,ctrlField,91916A,21.2935,39.15833,15c3b1\n,,4,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-02T13:00:00Z,ctrlField,91916A,21.3485,39.15083,15c3b9\n\"\n\nt_shapeData = (table=<-) =>\n  table\n    |> range(start: 2019-01-01T00:00:00Z)\n    |> geo.shapeData(latField: \"latitude\", lonField: \"longitude\", level: 10)\ntest _shapeData = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_shapeData})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   6,
						},
						File:   "shapeData_test.flux",
						Source: "now = () => (2030-01-01T00:00:00Z)",
						Start: ast.Position{
							Column: 8,
							Line:   6,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   6,
							},
							File:   "shapeData_test.flux",
							Source: "now",
							Start: ast.Position{
								Column: 8,
								Line:   6,
							},
						},
					},
					Name: "now",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   6,
							},
							File:   "shapeData_test.flux",
							Source: "() => (2030-01-01T00:00:00Z)",
							Start: ast.Position{
								Column: 14,
								Line:   6,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   6,
								},
								File:   "shapeData_test.flux",
								Source: "(2030-01-01T00:00:00Z)",
								Start: ast.Position{
									Column: 20,
									Line:   6,
								},
							},
						},
						Expression: &ast.DateTimeLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   6,
									},
									File:   "shapeData_test.flux",
									Source: "2030-01-01T00:00:00Z",
									Start: ast.Position{
										Column: 21,
										Line:   6,
									},
								},
							},
							Value: parser.MustParseTime("2030-01-01T00:00:00Z"),
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   6,
					},
					File:   "shapeData_test.flux",
					Source: "option now = () => (2030-01-01T00:00:00Z)",
					Start: ast.Position{
						Column: 1,
						Line:   6,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   78,
					},
					File:   "shapeData_test.flux",
					Source: "inData = \"\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,string,double\n#group,false,false,false,true,true,true,true,true,false\n#default,,,,,,,,,\n,result,table,_time,_start,_stop,_measurement,id,_field,_value\n,,0,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.03383\n,,0,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.14267\n,,0,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16667\n,,0,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.18183\n,,0,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17367\n,,0,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.2935\n,,0,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.3485\n,,0,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17167\n,,0,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.14683\n,,0,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17367\n,,0,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17433\n,,0,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.1595\n,,0,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16\n,,0,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17433\n,,1,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.09867\n,,1,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17567\n,,1,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16933\n,,1,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17\n,,1,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.187\n,,1,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18217\n,,1,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.15833\n,,1,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.15083\n,,1,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.181\n,,1,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16883\n,,1,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16883\n,,1,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1815\n,,1,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1845\n,,1,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17433\n,,1,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18667\n,,1,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18167\n,,1,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16733\n,,1,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1665\n,,1,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16817\n,,1,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18417\n\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,string,string\n#group,false,false,false,true,true,true,true,true,false\n#default,,,,,,,,,\n,result,table,_time,_start,_stop,_measurement,id,_field,_value\n,,2,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   8,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 7,
							Line:   8,
						},
						File:   "shapeData_test.flux",
						Source: "inData",
						Start: ast.Position{
							Column: 1,
							Line:   8,
						},
					},
				},
				Name: "inData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   78,
						},
						File:   "shapeData_test.flux",
						Source: "\"\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,string,double\n#group,false,false,false,true,true,true,true,true,false\n#default,,,,,,,,,\n,result,table,_time,_start,_stop,_measurement,id,_field,_value\n,,0,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.03383\n,,0,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.14267\n,,0,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16667\n,,0,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.18183\n,,0,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17367\n,,0,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.2935\n,,0,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.3485\n,,0,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17167\n,,0,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.14683\n,,0,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17367\n,,0,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17433\n,,0,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.1595\n,,0,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16\n,,0,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17433\n,,1,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.09867\n,,1,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17567\n,,1,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16933\n,,1,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17\n,,1,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.187\n,,1,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18217\n,,1,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.15833\n,,1,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.15083\n,,1,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.181\n,,1,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16883\n,,1,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16883\n,,1,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1815\n,,1,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1845\n,,1,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17433\n,,1,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18667\n,,1,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18167\n,,1,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16733\n,,1,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1665\n,,1,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16817\n,,1,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18417\n\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,string,string\n#group,false,false,false,true,true,true,true,true,false\n#default,,,,,,,,,\n,result,table,_time,_start,_stop,_measurement,id,_field,_value\n,,2,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n\"",
						Start: ast.Position{
							Column: 10,
							Line:   8,
						},
					},
				},
				Value: "\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,string,double\n#group,false,false,false,true,true,true,true,true,false\n#default,,,,,,,,,\n,result,table,_time,_start,_stop,_measurement,id,_field,_value\n,,0,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.03383\n,,0,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.14267\n,,0,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16667\n,,0,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.18183\n,,0,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17367\n,,0,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.2935\n,,0,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.3485\n,,0,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17167\n,,0,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17383\n,,0,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.14683\n,,0,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17367\n,,0,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17433\n,,0,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.1595\n,,0,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16\n,,0,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.16633\n,,0,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,latitude,21.17433\n,,1,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.09867\n,,1,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17567\n,,1,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16933\n,,1,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17\n,,1,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.187\n,,1,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18217\n,,1,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.15833\n,,1,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.15083\n,,1,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.181\n,,1,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16883\n,,1,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16883\n,,1,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1815\n,,1,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1845\n,,1,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.17433\n,,1,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18667\n,,1,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18167\n,,1,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16733\n,,1,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.1665\n,,1,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.16817\n,,1,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,longitude,39.18417\n\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,string,string\n#group,false,false,false,true,true,true,true,true,false\n#default,,,,,,,,,\n,result,table,_time,_start,_stop,_measurement,id,_field,_value\n,,2,2019-01-04T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-01T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-02T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-03T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-04T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T04:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T07:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T13:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n,,2,2019-01-05T19:00:00Z,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,migration,91916A,control,ctrlField\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   105,
					},
					File:   "shapeData_test.flux",
					Source: "outData = \"\n#group,false,false,true,true,true,false,false,true,false,false,true\n#datatype,string,long,string,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,double,double,string\n#default,_result,,,,,,,,,,\n,result,table,_measurement,_start,_stop,_time,control,id,lat,lon,s2_cell_id\n,,0,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T07:00:00Z,ctrlField,91916A,21.03383,39.09867,15c309\n,,1,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-02T04:00:00Z,ctrlField,91916A,21.14267,39.17567,15c3a9\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-01T04:00:00Z,ctrlField,91916A,21.16667,39.16933,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-01T07:00:00Z,ctrlField,91916A,21.18183,39.17,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-01T13:00:00Z,ctrlField,91916A,21.17367,39.187,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-01T19:00:00Z,ctrlField,91916A,21.17383,39.18217,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-02T19:00:00Z,ctrlField,91916A,21.17383,39.181,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-03T04:00:00Z,ctrlField,91916A,21.16633,39.16883,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-03T07:00:00Z,ctrlField,91916A,21.16633,39.16883,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-03T13:00:00Z,ctrlField,91916A,21.17167,39.1815,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-03T19:00:00Z,ctrlField,91916A,21.17383,39.1845,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T04:00:00Z,ctrlField,91916A,21.14683,39.17433,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T13:00:00Z,ctrlField,91916A,21.17367,39.18667,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T19:00:00Z,ctrlField,91916A,21.17433,39.18167,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T04:00:00Z,ctrlField,91916A,21.1595,39.16733,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T07:00:00Z,ctrlField,91916A,21.16,39.1665,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T13:00:00Z,ctrlField,91916A,21.16633,39.16817,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T19:00:00Z,ctrlField,91916A,21.17433,39.18417,15c3af\n,,3,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-02T07:00:00Z,ctrlField,91916A,21.2935,39.15833,15c3b1\n,,4,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-02T13:00:00Z,ctrlField,91916A,21.3485,39.15083,15c3b9\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   80,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 8,
							Line:   80,
						},
						File:   "shapeData_test.flux",
						Source: "outData",
						Start: ast.Position{
							Column: 1,
							Line:   80,
						},
					},
				},
				Name: "outData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   105,
						},
						File:   "shapeData_test.flux",
						Source: "\"\n#group,false,false,true,true,true,false,false,true,false,false,true\n#datatype,string,long,string,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,double,double,string\n#default,_result,,,,,,,,,,\n,result,table,_measurement,_start,_stop,_time,control,id,lat,lon,s2_cell_id\n,,0,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T07:00:00Z,ctrlField,91916A,21.03383,39.09867,15c309\n,,1,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-02T04:00:00Z,ctrlField,91916A,21.14267,39.17567,15c3a9\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-01T04:00:00Z,ctrlField,91916A,21.16667,39.16933,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-01T07:00:00Z,ctrlField,91916A,21.18183,39.17,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-01T13:00:00Z,ctrlField,91916A,21.17367,39.187,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-01T19:00:00Z,ctrlField,91916A,21.17383,39.18217,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-02T19:00:00Z,ctrlField,91916A,21.17383,39.181,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-03T04:00:00Z,ctrlField,91916A,21.16633,39.16883,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-03T07:00:00Z,ctrlField,91916A,21.16633,39.16883,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-03T13:00:00Z,ctrlField,91916A,21.17167,39.1815,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-03T19:00:00Z,ctrlField,91916A,21.17383,39.1845,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T04:00:00Z,ctrlField,91916A,21.14683,39.17433,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T13:00:00Z,ctrlField,91916A,21.17367,39.18667,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T19:00:00Z,ctrlField,91916A,21.17433,39.18167,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T04:00:00Z,ctrlField,91916A,21.1595,39.16733,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T07:00:00Z,ctrlField,91916A,21.16,39.1665,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T13:00:00Z,ctrlField,91916A,21.16633,39.16817,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T19:00:00Z,ctrlField,91916A,21.17433,39.18417,15c3af\n,,3,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-02T07:00:00Z,ctrlField,91916A,21.2935,39.15833,15c3b1\n,,4,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-02T13:00:00Z,ctrlField,91916A,21.3485,39.15083,15c3b9\n\"",
						Start: ast.Position{
							Column: 11,
							Line:   80,
						},
					},
				},
				Value: "\n#group,false,false,true,true,true,false,false,true,false,false,true\n#datatype,string,long,string,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,string,string,double,double,string\n#default,_result,,,,,,,,,,\n,result,table,_measurement,_start,_stop,_time,control,id,lat,lon,s2_cell_id\n,,0,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T07:00:00Z,ctrlField,91916A,21.03383,39.09867,15c309\n,,1,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-02T04:00:00Z,ctrlField,91916A,21.14267,39.17567,15c3a9\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-01T04:00:00Z,ctrlField,91916A,21.16667,39.16933,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-01T07:00:00Z,ctrlField,91916A,21.18183,39.17,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-01T13:00:00Z,ctrlField,91916A,21.17367,39.187,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-01T19:00:00Z,ctrlField,91916A,21.17383,39.18217,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-02T19:00:00Z,ctrlField,91916A,21.17383,39.181,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-03T04:00:00Z,ctrlField,91916A,21.16633,39.16883,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-03T07:00:00Z,ctrlField,91916A,21.16633,39.16883,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-03T13:00:00Z,ctrlField,91916A,21.17167,39.1815,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-03T19:00:00Z,ctrlField,91916A,21.17383,39.1845,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T04:00:00Z,ctrlField,91916A,21.14683,39.17433,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T13:00:00Z,ctrlField,91916A,21.17367,39.18667,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-04T19:00:00Z,ctrlField,91916A,21.17433,39.18167,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T04:00:00Z,ctrlField,91916A,21.1595,39.16733,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T07:00:00Z,ctrlField,91916A,21.16,39.1665,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T13:00:00Z,ctrlField,91916A,21.16633,39.16817,15c3af\n,,2,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-05T19:00:00Z,ctrlField,91916A,21.17433,39.18417,15c3af\n,,3,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-02T07:00:00Z,ctrlField,91916A,21.2935,39.15833,15c3b1\n,,4,migration,2019-01-01T00:00:00Z,2019-01-02T00:00:00Z,2019-01-02T13:00:00Z,ctrlField,91916A,21.3485,39.15083,15c3b9\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 77,
						Line:   110,
					},
					File:   "shapeData_test.flux",
					Source: "t_shapeData = (table=<-) =>\n  table\n    |> range(start: 2019-01-01T00:00:00Z)\n    |> geo.shapeData(latField: \"latitude\", lonField: \"longitude\", level: 10)",
					Start: ast.Position{
						Column: 1,
						Line:   107,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 12,
							Line:   107,
						},
						File:   "shapeData_test.flux",
						Source: "t_shapeData",
						Start: ast.Position{
							Column: 1,
							Line:   107,
						},
					},
				},
				Name: "t_shapeData",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 77,
							Line:   110,
						},
						File:   "shapeData_test.flux",
						Source: "(table=<-) =>\n  table\n    |> range(start: 2019-01-01T00:00:00Z)\n    |> geo.shapeData(latField: \"latitude\", lonField: \"longitude\", level: 10)",
						Start: ast.Position{
							Column: 15,
							Line:   107,
						},
					},
				},
				Body: &ast.PipeExpression{
					Argument: &ast.PipeExpression{
						Argument: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 8,
										Line:   108,
									},
									File:   "shapeData_test.flux",
									Source: "table",
									Start: ast.Position{
										Column: 3,
										Line:   108,
									},
								},
							},
							Name: "table",
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   109,
								},
								File:   "shapeData_test.flux",
								Source: "table\n    |> range(start: 2019-01-01T00:00:00Z)",
								Start: ast.Position{
									Column: 3,
									Line:   108,
								},
							},
						},
						Call: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 41,
											Line:   109,
										},
										File:   "shapeData_test.flux",
										Source: "start: 2019-01-01T00:00:00Z",
										Start: ast.Position{
											Column: 14,
											Line:   109,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 41,
												Line:   109,
											},
											File:   "shapeData_test.flux",
											Source: "start: 2019-01-01T00:00:00Z",
											Start: ast.Position{
												Column: 14,
												Line:   109,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 19,
													Line:   109,
												},
												File:   "shapeData_test.flux",
												Source: "start",
												Start: ast.Position{
													Column: 14,
													Line:   109,
												},
											},
										},
										Name: "start",
									},
									Value: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 41,
													Line:   109,
												},
												File:   "shapeData_test.flux",
												Source: "2019-01-01T00:00:00Z",
												Start: ast.Position{
													Column: 21,
													Line:   109,
												},
											},
										},
										Value: parser.MustParseTime("2019-01-01T00:00:00Z"),
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 42,
										Line:   109,
									},
									File:   "shapeData_test.flux",
									Source: "range(start: 2019-01-01T00:00:00Z)",
									Start: ast.Position{
										Column: 8,
										Line:   109,
									},
								},
							},
							Callee: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 13,
											Line:   109,
										},
										File:   "shapeData_test.flux",
										Source: "range",
										Start: ast.Position{
											Column: 8,
											Line:   109,
										},
									},
								},
								Name: "range",
							},
						},
					},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 77,
								Line:   110,
							},
							File:   "shapeData_test.flux",
							Source: "table\n    |> range(start: 2019-01-01T00:00:00Z)\n    |> geo.shapeData(latField: \"latitude\", lonField: \"longitude\", level: 10)",
							Start: ast.Position{
								Column: 3,
								Line:   108,
							},
						},
					},
					Call: &ast.CallExpression{
						Arguments: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 76,
										Line:   110,
									},
									File:   "shapeData_test.flux",
									Source: "latField: \"latitude\", lonField: \"longitude\", level: 10",
									Start: ast.Position{
										Column: 22,
										Line:   110,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 42,
											Line:   110,
										},
										File:   "shapeData_test.flux",
										Source: "latField: \"latitude\"",
										Start: ast.Position{
											Column: 22,
											Line:   110,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 30,
												Line:   110,
											},
											File:   "shapeData_test.flux",
											Source: "latField",
											Start: ast.Position{
												Column: 22,
												Line:   110,
											},
										},
									},
									Name: "latField",
								},
								Value: &ast.StringLiteral{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 42,
												Line:   110,
											},
											File:   "shapeData_test.flux",
											Source: "\"latitude\"",
											Start: ast.Position{
												Column: 32,
												Line:   110,
											},
										},
									},
									Value: "latitude",
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 65,
											Line:   110,
										},
										File:   "shapeData_test.flux",
										Source: "lonField: \"longitude\"",
										Start: ast.Position{
											Column: 44,
											Line:   110,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 52,
												Line:   110,
											},
											File:   "shapeData_test.flux",
											Source: "lonField",
											Start: ast.Position{
												Column: 44,
												Line:   110,
											},
										},
									},
									Name: "lonField",
								},
								Value: &ast.StringLiteral{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 65,
												Line:   110,
											},
											File:   "shapeData_test.flux",
											Source: "\"longitude\"",
											Start: ast.Position{
												Column: 54,
												Line:   110,
											},
										},
									},
									Value: "longitude",
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 76,
											Line:   110,
										},
										File:   "shapeData_test.flux",
										Source: "level: 10",
										Start: ast.Position{
											Column: 67,
											Line:   110,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 72,
												Line:   110,
											},
											File:   "shapeData_test.flux",
											Source: "level",
											Start: ast.Position{
												Column: 67,
												Line:   110,
											},
										},
									},
									Name: "level",
								},
								Value: &ast.IntegerLiteral{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 76,
												Line:   110,
											},
											File:   "shapeData_test.flux",
											Source: "10",
											Start: ast.Position{
												Column: 74,
												Line:   110,
											},
										},
									},
									Value: int64(10),
								},
							}},
							With: nil,
						}},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 77,
									Line:   110,
								},
								File:   "shapeData_test.flux",
								Source: "geo.shapeData(latField: \"latitude\", lonField: \"longitude\", level: 10)",
								Start: ast.Position{
									Column: 8,
									Line:   110,
								},
							},
						},
						Callee: &ast.MemberExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 21,
										Line:   110,
									},
									File:   "shapeData_test.flux",
									Source: "geo.shapeData",
									Start: ast.Position{
										Column: 8,
										Line:   110,
									},
								},
							},
							Object: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 11,
											Line:   110,
										},
										File:   "shapeData_test.flux",
										Source: "geo",
										Start: ast.Position{
											Column: 8,
											Line:   110,
										},
									},
								},
								Name: "geo",
							},
							Property: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 21,
											Line:   110,
										},
										File:   "shapeData_test.flux",
										Source: "shapeData",
										Start: ast.Position{
											Column: 12,
											Line:   110,
										},
									},
								},
								Name: "shapeData",
							},
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 24,
								Line:   107,
							},
							File:   "shapeData_test.flux",
							Source: "table=<-",
							Start: ast.Position{
								Column: 16,
								Line:   107,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 21,
									Line:   107,
								},
								File:   "shapeData_test.flux",
								Source: "table",
								Start: ast.Position{
									Column: 16,
									Line:   107,
								},
							},
						},
						Name: "table",
					},
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 24,
								Line:   107,
							},
							File:   "shapeData_test.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 22,
								Line:   107,
							},
						},
					}},
				}},
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 99,
							Line:   112,
						},
						File:   "shapeData_test.flux",
						Source: "_shapeData = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_shapeData})",
						Start: ast.Position{
							Column: 6,
							Line:   111,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 16,
								Line:   111,
							},
							File:   "shapeData_test.flux",
							Source: "_shapeData",
							Start: ast.Position{
								Column: 6,
								Line:   111,
							},
						},
					},
					Name: "_shapeData",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 99,
								Line:   112,
							},
							File:   "shapeData_test.flux",
							Source: "() =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_shapeData})",
							Start: ast.Position{
								Column: 19,
								Line:   111,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 99,
									Line:   112,
								},
								File:   "shapeData_test.flux",
								Source: "({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_shapeData})",
								Start: ast.Position{
									Column: 2,
									Line:   112,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 98,
										Line:   112,
									},
									File:   "shapeData_test.flux",
									Source: "{input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_shapeData}",
									Start: ast.Position{
										Column: 3,
										Line:   112,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 43,
											Line:   112,
										},
										File:   "shapeData_test.flux",
										Source: "input: testing.loadStorage(csv: inData)",
										Start: ast.Position{
											Column: 4,
											Line:   112,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 9,
												Line:   112,
											},
											File:   "shapeData_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 4,
												Line:   112,
											},
										},
									},
									Name: "input",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   112,
												},
												File:   "shapeData_test.flux",
												Source: "csv: inData",
												Start: ast.Position{
													Column: 31,
													Line:   112,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 42,
														Line:   112,
													},
													File:   "shapeData_test.flux",
													Source: "csv: inData",
													Start: ast.Position{
														Column: 31,
														Line:   112,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 34,
															Line:   112,
														},
														File:   "shapeData_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 31,
															Line:   112,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 42,
															Line:   112,
														},
														File:   "shapeData_test.flux",
														Source: "inData",
														Start: ast.Position{
															Column: 36,
															Line:   112,
														},
													},
												},
												Name: "inData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 43,
												Line:   112,
											},
											File:   "shapeData_test.flux",
											Source: "testing.loadStorage(csv: inData)",
											Start: ast.Position{
												Column: 11,
												Line:   112,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   112,
												},
												File:   "shapeData_test.flux",
												Source: "testing.loadStorage",
												Start: ast.Position{
													Column: 11,
													Line:   112,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   112,
													},
													File:   "shapeData_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 11,
														Line:   112,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 30,
														Line:   112,
													},
													File:   "shapeData_test.flux",
													Source: "loadStorage",
													Start: ast.Position{
														Column: 19,
														Line:   112,
													},
												},
											},
											Name: "loadStorage",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 80,
											Line:   112,
										},
										File:   "shapeData_test.flux",
										Source: "want: testing.loadMem(csv: outData)",
										Start: ast.Position{
											Column: 45,
											Line:   112,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 49,
												Line:   112,
											},
											File:   "shapeData_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 45,
												Line:   112,
											},
										},
									},
									Name: "want",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 79,
													Line:   112,
												},
												File:   "shapeData_test.flux",
												Source: "csv: outData",
												Start: ast.Position{
													Column: 67,
													Line:   112,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 79,
														Line:   112,
													},
													File:   "shapeData_test.flux",
													Source: "csv: outData",
													Start: ast.Position{
														Column: 67,
														Line:   112,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 70,
															Line:   112,
														},
														File:   "shapeData_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 67,
															Line:   112,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 79,
															Line:   112,
														},
														File:   "shapeData_test.flux",
														Source: "outData",
														Start: ast.Position{
															Column: 72,
															Line:   112,
														},
													},
												},
												Name: "outData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 80,
												Line:   112,
											},
											File:   "shapeData_test.flux",
											Source: "testing.loadMem(csv: outData)",
											Start: ast.Position{
												Column: 51,
												Line:   112,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   112,
												},
												File:   "shapeData_test.flux",
												Source: "testing.loadMem",
												Start: ast.Position{
													Column: 51,
													Line:   112,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 58,
														Line:   112,
													},
													File:   "shapeData_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 51,
														Line:   112,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 66,
														Line:   112,
													},
													File:   "shapeData_test.flux",
													Source: "loadMem",
													Start: ast.Position{
														Column: 59,
														Line:   112,
													},
												},
											},
											Name: "loadMem",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 97,
											Line:   112,
										},
										File:   "shapeData_test.flux",
										Source: "fn: t_shapeData",
										Start: ast.Position{
											Column: 82,
											Line:   112,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 84,
												Line:   112,
											},
											File:   "shapeData_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 82,
												Line:   112,
											},
										},
									},
									Name: "fn",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 97,
												Line:   112,
											},
											File:   "shapeData_test.flux",
											Source: "t_shapeData",
											Start: ast.Position{
												Column: 86,
												Line:   112,
											},
										},
									},
									Name: "t_shapeData",
								},
							}},
							With: nil,
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 99,
						Line:   112,
					},
					File:   "shapeData_test.flux",
					Source: "test _shapeData = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_shapeData})",
					Start: ast.Position{
						Column: 1,
						Line:   111,
					},
				},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 26,
						Line:   3,
					},
					File:   "shapeData_test.flux",
					Source: "import \"experimental/geo\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 26,
							Line:   3,
						},
						File:   "shapeData_test.flux",
						Source: "\"experimental/geo\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "experimental/geo",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   4,
					},
					File:   "shapeData_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   4,
						},
						File:   "shapeData_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "testing",
			},
		}},
		Metadata: "parser-type=rust",
		Name:     "shapeData_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   1,
					},
					File:   "shapeData_test.flux",
					Source: "package geo_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   1,
						},
						File:   "shapeData_test.flux",
						Source: "geo_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "geo_test",
			},
		},
	}, &ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 110,
					Line:   190,
				},
				File:   "st_contains_linestring_test.flux",
				Source: "package geo_test\n\nimport \"experimental/geo\"\nimport \"influxdata/influxdb/v1\"\nimport \"testing\"\n\noption now = () => (2030-01-01T00:00:00Z)\n\ninData = \"\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,0,2020-04-08T15:44:58Z,40.820317,lat,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,1,2020-04-08T16:19:27Z,40.745249,lat,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,2,2020-04-08T16:16:50Z,40.751085,lat,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,3,2020-04-08T16:15:59Z,40.748141,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,4,2020-04-08T16:16:16Z,40.748909,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,5,2020-04-08T16:14:32Z,40.743989,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,6,2020-04-08T16:14:49Z,40.745851,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,7,2020-04-08T16:18:18Z,40.748495,lat,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,8,2020-04-08T16:11:03Z,40.749543,lat,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,9,2020-04-08T16:10:46Z,40.750688,lat,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,10,2020-04-08T16:09:36Z,40.757106,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,11,2020-04-08T16:09:53Z,40.7565,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,12,2020-04-08T16:09:01Z,40.757895,lat,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,13,2020-04-08T16:08:19Z,40.759873,lat,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,14,2020-04-08T16:08:38Z,40.759128,lat,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,15,2020-04-08T16:07:43Z,40.762143,lat,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,16,2020-04-08T16:06:49Z,40.762709,lat,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,17,2020-04-08T16:06:31Z,40.762441,lat,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,18,2020-04-08T16:06:11Z,40.762373,lat,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,19,2020-04-08T16:03:54Z,40.76117,lat,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,20,2020-04-08T16:04:28Z,40.761653,lat,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,21,2020-04-08T16:05:46Z,40.761908,lat,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,22,2020-04-08T16:10:29Z,40.753279,lat,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,23,2020-04-08T16:03:36Z,40.761241,lat,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,24,2020-04-08T16:02:33Z,40.761443,lat,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,25,2020-04-08T16:01:55Z,40.761878,lat,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,26,2020-04-08T15:59:24Z,40.763356,lat,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,27,2020-04-08T15:45:33Z,40.815413,lat,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,28,2020-04-08T15:45:51Z,40.814096,lat,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,29,2020-04-08T15:46:12Z,40.810699,lat,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,30,2020-04-08T15:47:45Z,40.808517,lat,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,31,2020-04-08T15:48:04Z,40.806882,lat,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,32,2020-04-08T15:49:01Z,40.800397,lat,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,33,2020-04-08T15:49:22Z,40.796724,lat,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,34,2020-04-08T15:50:44Z,40.794998,lat,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,35,2020-04-08T15:53:56Z,40.786038,lat,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,36,2020-04-08T15:52:38Z,40.787216,lat,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,37,2020-04-08T15:52:16Z,40.788413,lat,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,38,2020-04-08T15:51:55Z,40.789185,lat,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,39,2020-04-08T15:51:20Z,40.791541,lat,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,40,2020-04-08T15:51:37Z,40.791009,lat,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,41,2020-04-08T15:51:03Z,40.793905,lat,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,42,2020-04-08T15:54:57Z,40.775044,lat,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,43,2020-04-08T15:55:54Z,40.773334,lat,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,44,2020-04-08T15:56:13Z,40.772144,lat,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,45,2020-04-08T15:56:33Z,40.770953,lat,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,46,2020-04-08T15:58:10Z,40.76594,lat,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,47,2020-04-08T15:56:53Z,40.768069,lat,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,48,2020-04-08T15:57:52Z,40.76661,lat,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n,,49,2020-04-08T15:44:58Z,-73.68691,lon,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,50,2020-04-08T16:19:27Z,-73.940563,lon,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,51,2020-04-08T16:16:50Z,-73.912119,lon,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,52,2020-04-08T16:15:59Z,-73.905367,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,53,2020-04-08T16:16:16Z,-73.906398,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,54,2020-04-08T16:14:32Z,-73.900815,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,55,2020-04-08T16:14:49Z,-73.902975,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,56,2020-04-08T16:18:18Z,-73.927597,lon,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,57,2020-04-08T16:11:03Z,-73.852242,lon,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,58,2020-04-08T16:10:46Z,-73.848962,lon,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,59,2020-04-08T16:09:36Z,-73.833095,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,60,2020-04-08T16:09:53Z,-73.834298,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,61,2020-04-08T16:09:01Z,-73.831347,lon,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,62,2020-04-08T16:08:19Z,-73.826087,lon,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,63,2020-04-08T16:08:38Z,-73.828799,lon,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,64,2020-04-08T16:07:43Z,-73.817956,lon,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,65,2020-04-08T16:06:49Z,-73.814539,lon,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,66,2020-04-08T16:06:31Z,-73.810154,lon,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,67,2020-04-08T16:06:11Z,-73.809437,lon,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,68,2020-04-08T16:03:54Z,-73.795812,lon,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,69,2020-04-08T16:04:28Z,-73.801766,lon,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,70,2020-04-08T16:05:46Z,-73.804421,lon,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,71,2020-04-08T16:10:29Z,-73.841791,lon,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,72,2020-04-08T16:03:36Z,-73.792932,lon,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,73,2020-04-08T16:02:33Z,-73.789959,lon,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,74,2020-04-08T16:01:55Z,-73.785035,lon,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,75,2020-04-08T15:59:24Z,-73.769272,lon,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,76,2020-04-08T15:45:33Z,-73.690054,lon,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,77,2020-04-08T15:45:51Z,-73.693214,lon,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,78,2020-04-08T15:46:12Z,-73.695214,lon,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,79,2020-04-08T15:47:45Z,-73.695594,lon,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,80,2020-04-08T15:48:04Z,-73.695858,lon,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,81,2020-04-08T15:49:01Z,-73.695023,lon,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,82,2020-04-08T15:49:22Z,-73.699899,lon,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,83,2020-04-08T15:50:44Z,-73.702982,lon,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,84,2020-04-08T15:53:56Z,-73.72924,lon,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,85,2020-04-08T15:52:38Z,-73.7261,lon,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,86,2020-04-08T15:52:16Z,-73.721973,lon,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,87,2020-04-08T15:51:55Z,-73.720059,lon,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,88,2020-04-08T15:51:20Z,-73.713571,lon,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,89,2020-04-08T15:51:37Z,-73.715622,lon,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,90,2020-04-08T15:51:03Z,-73.705485,lon,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,91,2020-04-08T15:54:57Z,-73.740647,lon,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,92,2020-04-08T15:55:54Z,-73.742812,lon,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,93,2020-04-08T15:56:13Z,-73.74431,lon,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,94,2020-04-08T15:56:33Z,-73.745805,lon,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,95,2020-04-08T15:58:10Z,-73.752465,lon,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,96,2020-04-08T15:56:53Z,-73.749413,lon,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,97,2020-04-08T15:57:52Z,-73.751322,lon,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,98,2020-04-08T15:44:58Z,1586304000,tid,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,99,2020-04-08T16:19:27Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,100,2020-04-08T16:16:50Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,101,2020-04-08T16:15:59Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,102,2020-04-08T16:16:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,103,2020-04-08T16:14:32Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,104,2020-04-08T16:14:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,105,2020-04-08T16:18:18Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,106,2020-04-08T16:11:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,107,2020-04-08T16:10:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,108,2020-04-08T16:09:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,109,2020-04-08T16:09:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,110,2020-04-08T16:09:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,111,2020-04-08T16:08:19Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,112,2020-04-08T16:08:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,113,2020-04-08T16:07:43Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,114,2020-04-08T16:06:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,115,2020-04-08T16:06:31Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,116,2020-04-08T16:06:11Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,117,2020-04-08T16:03:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,118,2020-04-08T16:04:28Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,119,2020-04-08T16:05:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,120,2020-04-08T16:10:29Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,121,2020-04-08T16:03:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,122,2020-04-08T16:02:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,123,2020-04-08T16:01:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,124,2020-04-08T15:59:24Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,125,2020-04-08T15:45:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,126,2020-04-08T15:45:51Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,127,2020-04-08T15:46:12Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,128,2020-04-08T15:47:45Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,129,2020-04-08T15:48:04Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,130,2020-04-08T15:49:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,131,2020-04-08T15:49:22Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,132,2020-04-08T15:50:44Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,133,2020-04-08T15:53:56Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,134,2020-04-08T15:52:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,135,2020-04-08T15:52:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,136,2020-04-08T15:51:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,137,2020-04-08T15:51:20Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,138,2020-04-08T15:51:37Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,139,2020-04-08T15:51:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,140,2020-04-08T15:54:57Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,141,2020-04-08T15:55:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,142,2020-04-08T15:56:13Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,143,2020-04-08T15:56:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,144,2020-04-08T15:58:10Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,145,2020-04-08T15:56:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,146,2020-04-08T15:57:52Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\"\n\noutData = \"\n#group,false,false,false,true,false,true\n#datatype,string,long,boolean,string,string,string\n#default,_result,,,,,\n,result,table,_st_contains,id,st_linestring,trip_id\n,,0,false,GO506_20_6431,\\\"-73.68691 40.820317, -73.690054 40.815413, -73.693214 40.814096, -73.695214 40.810699, -73.695594 40.808517, -73.695858 40.806882, -73.695023 40.800397, -73.699899 40.796724, -73.702982 40.794998, -73.705485 40.793905, -73.713571 40.791541, -73.715622 40.791009, -73.720059 40.789185, -73.721973 40.788413, -73.7261 40.787216, -73.72924 40.786038, -73.740647 40.775044, -73.742812 40.773334, -73.74431 40.772144, -73.745805 40.770953, -73.749413 40.768069, -73.751322 40.76661, -73.752465 40.76594, -73.769272 40.763356, -73.785035 40.761878, -73.789959 40.761443, -73.792932 40.761241, -73.795812 40.76117, -73.801766 40.761653, -73.804421 40.761908, -73.809437 40.762373, -73.810154 40.762441, -73.814539 40.762709, -73.817956 40.762143, -73.826087 40.759873, -73.828799 40.759128, -73.831347 40.757895, -73.833095 40.757106, -73.834298 40.7565, -73.841791 40.753279, -73.848962 40.750688, -73.852242 40.749543, -73.900815 40.743989, -73.902975 40.745851, -73.905367 40.748141, -73.906398 40.748909, -73.912119 40.751085, -73.927597 40.748495, -73.940563 40.745249\\\",GO506_20_6431\n\"\n\n// polygon in Brooklyn\nbt = {points: [{lat: 40.671659, lon: -73.936631}, {lat: 40.706543, lon: -73.749177},{lat: 40.791333, lon: -73.880327}]}\n\nt_stContainsLinestring = (table=<-) =>\n  table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to show the train crossing defined region\n    |> geo.ST_LineString()\n    |> map(fn: (r) => ({\n        r with _st_contains: geo.ST_Contains(region: bt, geometry: {linestring: r.st_linestring})\n    }))\n    |> drop(columns: [\"_start\", \"_stop\"])\ntest _stContainsLinestring = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stContainsLinestring})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   7,
						},
						File:   "st_contains_linestring_test.flux",
						Source: "now = () => (2030-01-01T00:00:00Z)",
						Start: ast.Position{
							Column: 8,
							Line:   7,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   7,
							},
							File:   "st_contains_linestring_test.flux",
							Source: "now",
							Start: ast.Position{
								Column: 8,
								Line:   7,
							},
						},
					},
					Name: "now",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   7,
							},
							File:   "st_contains_linestring_test.flux",
							Source: "() => (2030-01-01T00:00:00Z)",
							Start: ast.Position{
								Column: 14,
								Line:   7,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   7,
								},
								File:   "st_contains_linestring_test.flux",
								Source: "(2030-01-01T00:00:00Z)",
								Start: ast.Position{
									Column: 20,
									Line:   7,
								},
							},
						},
						Expression: &ast.DateTimeLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   7,
									},
									File:   "st_contains_linestring_test.flux",
									Source: "2030-01-01T00:00:00Z",
									Start: ast.Position{
										Column: 21,
										Line:   7,
									},
								},
							},
							Value: parser.MustParseTime("2030-01-01T00:00:00Z"),
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   7,
					},
					File:   "st_contains_linestring_test.flux",
					Source: "option now = () => (2030-01-01T00:00:00Z)",
					Start: ast.Position{
						Column: 1,
						Line:   7,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   166,
					},
					File:   "st_contains_linestring_test.flux",
					Source: "inData = \"\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,0,2020-04-08T15:44:58Z,40.820317,lat,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,1,2020-04-08T16:19:27Z,40.745249,lat,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,2,2020-04-08T16:16:50Z,40.751085,lat,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,3,2020-04-08T16:15:59Z,40.748141,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,4,2020-04-08T16:16:16Z,40.748909,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,5,2020-04-08T16:14:32Z,40.743989,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,6,2020-04-08T16:14:49Z,40.745851,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,7,2020-04-08T16:18:18Z,40.748495,lat,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,8,2020-04-08T16:11:03Z,40.749543,lat,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,9,2020-04-08T16:10:46Z,40.750688,lat,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,10,2020-04-08T16:09:36Z,40.757106,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,11,2020-04-08T16:09:53Z,40.7565,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,12,2020-04-08T16:09:01Z,40.757895,lat,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,13,2020-04-08T16:08:19Z,40.759873,lat,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,14,2020-04-08T16:08:38Z,40.759128,lat,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,15,2020-04-08T16:07:43Z,40.762143,lat,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,16,2020-04-08T16:06:49Z,40.762709,lat,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,17,2020-04-08T16:06:31Z,40.762441,lat,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,18,2020-04-08T16:06:11Z,40.762373,lat,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,19,2020-04-08T16:03:54Z,40.76117,lat,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,20,2020-04-08T16:04:28Z,40.761653,lat,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,21,2020-04-08T16:05:46Z,40.761908,lat,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,22,2020-04-08T16:10:29Z,40.753279,lat,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,23,2020-04-08T16:03:36Z,40.761241,lat,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,24,2020-04-08T16:02:33Z,40.761443,lat,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,25,2020-04-08T16:01:55Z,40.761878,lat,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,26,2020-04-08T15:59:24Z,40.763356,lat,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,27,2020-04-08T15:45:33Z,40.815413,lat,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,28,2020-04-08T15:45:51Z,40.814096,lat,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,29,2020-04-08T15:46:12Z,40.810699,lat,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,30,2020-04-08T15:47:45Z,40.808517,lat,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,31,2020-04-08T15:48:04Z,40.806882,lat,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,32,2020-04-08T15:49:01Z,40.800397,lat,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,33,2020-04-08T15:49:22Z,40.796724,lat,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,34,2020-04-08T15:50:44Z,40.794998,lat,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,35,2020-04-08T15:53:56Z,40.786038,lat,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,36,2020-04-08T15:52:38Z,40.787216,lat,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,37,2020-04-08T15:52:16Z,40.788413,lat,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,38,2020-04-08T15:51:55Z,40.789185,lat,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,39,2020-04-08T15:51:20Z,40.791541,lat,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,40,2020-04-08T15:51:37Z,40.791009,lat,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,41,2020-04-08T15:51:03Z,40.793905,lat,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,42,2020-04-08T15:54:57Z,40.775044,lat,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,43,2020-04-08T15:55:54Z,40.773334,lat,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,44,2020-04-08T15:56:13Z,40.772144,lat,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,45,2020-04-08T15:56:33Z,40.770953,lat,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,46,2020-04-08T15:58:10Z,40.76594,lat,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,47,2020-04-08T15:56:53Z,40.768069,lat,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,48,2020-04-08T15:57:52Z,40.76661,lat,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n,,49,2020-04-08T15:44:58Z,-73.68691,lon,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,50,2020-04-08T16:19:27Z,-73.940563,lon,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,51,2020-04-08T16:16:50Z,-73.912119,lon,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,52,2020-04-08T16:15:59Z,-73.905367,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,53,2020-04-08T16:16:16Z,-73.906398,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,54,2020-04-08T16:14:32Z,-73.900815,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,55,2020-04-08T16:14:49Z,-73.902975,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,56,2020-04-08T16:18:18Z,-73.927597,lon,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,57,2020-04-08T16:11:03Z,-73.852242,lon,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,58,2020-04-08T16:10:46Z,-73.848962,lon,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,59,2020-04-08T16:09:36Z,-73.833095,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,60,2020-04-08T16:09:53Z,-73.834298,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,61,2020-04-08T16:09:01Z,-73.831347,lon,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,62,2020-04-08T16:08:19Z,-73.826087,lon,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,63,2020-04-08T16:08:38Z,-73.828799,lon,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,64,2020-04-08T16:07:43Z,-73.817956,lon,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,65,2020-04-08T16:06:49Z,-73.814539,lon,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,66,2020-04-08T16:06:31Z,-73.810154,lon,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,67,2020-04-08T16:06:11Z,-73.809437,lon,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,68,2020-04-08T16:03:54Z,-73.795812,lon,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,69,2020-04-08T16:04:28Z,-73.801766,lon,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,70,2020-04-08T16:05:46Z,-73.804421,lon,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,71,2020-04-08T16:10:29Z,-73.841791,lon,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,72,2020-04-08T16:03:36Z,-73.792932,lon,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,73,2020-04-08T16:02:33Z,-73.789959,lon,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,74,2020-04-08T16:01:55Z,-73.785035,lon,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,75,2020-04-08T15:59:24Z,-73.769272,lon,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,76,2020-04-08T15:45:33Z,-73.690054,lon,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,77,2020-04-08T15:45:51Z,-73.693214,lon,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,78,2020-04-08T15:46:12Z,-73.695214,lon,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,79,2020-04-08T15:47:45Z,-73.695594,lon,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,80,2020-04-08T15:48:04Z,-73.695858,lon,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,81,2020-04-08T15:49:01Z,-73.695023,lon,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,82,2020-04-08T15:49:22Z,-73.699899,lon,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,83,2020-04-08T15:50:44Z,-73.702982,lon,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,84,2020-04-08T15:53:56Z,-73.72924,lon,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,85,2020-04-08T15:52:38Z,-73.7261,lon,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,86,2020-04-08T15:52:16Z,-73.721973,lon,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,87,2020-04-08T15:51:55Z,-73.720059,lon,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,88,2020-04-08T15:51:20Z,-73.713571,lon,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,89,2020-04-08T15:51:37Z,-73.715622,lon,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,90,2020-04-08T15:51:03Z,-73.705485,lon,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,91,2020-04-08T15:54:57Z,-73.740647,lon,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,92,2020-04-08T15:55:54Z,-73.742812,lon,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,93,2020-04-08T15:56:13Z,-73.74431,lon,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,94,2020-04-08T15:56:33Z,-73.745805,lon,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,95,2020-04-08T15:58:10Z,-73.752465,lon,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,96,2020-04-08T15:56:53Z,-73.749413,lon,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,97,2020-04-08T15:57:52Z,-73.751322,lon,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,98,2020-04-08T15:44:58Z,1586304000,tid,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,99,2020-04-08T16:19:27Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,100,2020-04-08T16:16:50Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,101,2020-04-08T16:15:59Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,102,2020-04-08T16:16:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,103,2020-04-08T16:14:32Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,104,2020-04-08T16:14:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,105,2020-04-08T16:18:18Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,106,2020-04-08T16:11:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,107,2020-04-08T16:10:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,108,2020-04-08T16:09:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,109,2020-04-08T16:09:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,110,2020-04-08T16:09:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,111,2020-04-08T16:08:19Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,112,2020-04-08T16:08:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,113,2020-04-08T16:07:43Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,114,2020-04-08T16:06:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,115,2020-04-08T16:06:31Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,116,2020-04-08T16:06:11Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,117,2020-04-08T16:03:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,118,2020-04-08T16:04:28Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,119,2020-04-08T16:05:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,120,2020-04-08T16:10:29Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,121,2020-04-08T16:03:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,122,2020-04-08T16:02:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,123,2020-04-08T16:01:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,124,2020-04-08T15:59:24Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,125,2020-04-08T15:45:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,126,2020-04-08T15:45:51Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,127,2020-04-08T15:46:12Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,128,2020-04-08T15:47:45Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,129,2020-04-08T15:48:04Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,130,2020-04-08T15:49:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,131,2020-04-08T15:49:22Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,132,2020-04-08T15:50:44Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,133,2020-04-08T15:53:56Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,134,2020-04-08T15:52:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,135,2020-04-08T15:52:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,136,2020-04-08T15:51:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,137,2020-04-08T15:51:20Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,138,2020-04-08T15:51:37Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,139,2020-04-08T15:51:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,140,2020-04-08T15:54:57Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,141,2020-04-08T15:55:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,142,2020-04-08T15:56:13Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,143,2020-04-08T15:56:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,144,2020-04-08T15:58:10Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,145,2020-04-08T15:56:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,146,2020-04-08T15:57:52Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   9,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 7,
							Line:   9,
						},
						File:   "st_contains_linestring_test.flux",
						Source: "inData",
						Start: ast.Position{
							Column: 1,
							Line:   9,
						},
					},
				},
				Name: "inData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   166,
						},
						File:   "st_contains_linestring_test.flux",
						Source: "\"\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,0,2020-04-08T15:44:58Z,40.820317,lat,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,1,2020-04-08T16:19:27Z,40.745249,lat,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,2,2020-04-08T16:16:50Z,40.751085,lat,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,3,2020-04-08T16:15:59Z,40.748141,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,4,2020-04-08T16:16:16Z,40.748909,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,5,2020-04-08T16:14:32Z,40.743989,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,6,2020-04-08T16:14:49Z,40.745851,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,7,2020-04-08T16:18:18Z,40.748495,lat,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,8,2020-04-08T16:11:03Z,40.749543,lat,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,9,2020-04-08T16:10:46Z,40.750688,lat,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,10,2020-04-08T16:09:36Z,40.757106,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,11,2020-04-08T16:09:53Z,40.7565,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,12,2020-04-08T16:09:01Z,40.757895,lat,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,13,2020-04-08T16:08:19Z,40.759873,lat,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,14,2020-04-08T16:08:38Z,40.759128,lat,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,15,2020-04-08T16:07:43Z,40.762143,lat,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,16,2020-04-08T16:06:49Z,40.762709,lat,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,17,2020-04-08T16:06:31Z,40.762441,lat,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,18,2020-04-08T16:06:11Z,40.762373,lat,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,19,2020-04-08T16:03:54Z,40.76117,lat,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,20,2020-04-08T16:04:28Z,40.761653,lat,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,21,2020-04-08T16:05:46Z,40.761908,lat,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,22,2020-04-08T16:10:29Z,40.753279,lat,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,23,2020-04-08T16:03:36Z,40.761241,lat,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,24,2020-04-08T16:02:33Z,40.761443,lat,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,25,2020-04-08T16:01:55Z,40.761878,lat,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,26,2020-04-08T15:59:24Z,40.763356,lat,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,27,2020-04-08T15:45:33Z,40.815413,lat,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,28,2020-04-08T15:45:51Z,40.814096,lat,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,29,2020-04-08T15:46:12Z,40.810699,lat,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,30,2020-04-08T15:47:45Z,40.808517,lat,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,31,2020-04-08T15:48:04Z,40.806882,lat,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,32,2020-04-08T15:49:01Z,40.800397,lat,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,33,2020-04-08T15:49:22Z,40.796724,lat,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,34,2020-04-08T15:50:44Z,40.794998,lat,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,35,2020-04-08T15:53:56Z,40.786038,lat,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,36,2020-04-08T15:52:38Z,40.787216,lat,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,37,2020-04-08T15:52:16Z,40.788413,lat,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,38,2020-04-08T15:51:55Z,40.789185,lat,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,39,2020-04-08T15:51:20Z,40.791541,lat,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,40,2020-04-08T15:51:37Z,40.791009,lat,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,41,2020-04-08T15:51:03Z,40.793905,lat,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,42,2020-04-08T15:54:57Z,40.775044,lat,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,43,2020-04-08T15:55:54Z,40.773334,lat,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,44,2020-04-08T15:56:13Z,40.772144,lat,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,45,2020-04-08T15:56:33Z,40.770953,lat,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,46,2020-04-08T15:58:10Z,40.76594,lat,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,47,2020-04-08T15:56:53Z,40.768069,lat,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,48,2020-04-08T15:57:52Z,40.76661,lat,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n,,49,2020-04-08T15:44:58Z,-73.68691,lon,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,50,2020-04-08T16:19:27Z,-73.940563,lon,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,51,2020-04-08T16:16:50Z,-73.912119,lon,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,52,2020-04-08T16:15:59Z,-73.905367,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,53,2020-04-08T16:16:16Z,-73.906398,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,54,2020-04-08T16:14:32Z,-73.900815,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,55,2020-04-08T16:14:49Z,-73.902975,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,56,2020-04-08T16:18:18Z,-73.927597,lon,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,57,2020-04-08T16:11:03Z,-73.852242,lon,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,58,2020-04-08T16:10:46Z,-73.848962,lon,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,59,2020-04-08T16:09:36Z,-73.833095,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,60,2020-04-08T16:09:53Z,-73.834298,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,61,2020-04-08T16:09:01Z,-73.831347,lon,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,62,2020-04-08T16:08:19Z,-73.826087,lon,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,63,2020-04-08T16:08:38Z,-73.828799,lon,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,64,2020-04-08T16:07:43Z,-73.817956,lon,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,65,2020-04-08T16:06:49Z,-73.814539,lon,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,66,2020-04-08T16:06:31Z,-73.810154,lon,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,67,2020-04-08T16:06:11Z,-73.809437,lon,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,68,2020-04-08T16:03:54Z,-73.795812,lon,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,69,2020-04-08T16:04:28Z,-73.801766,lon,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,70,2020-04-08T16:05:46Z,-73.804421,lon,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,71,2020-04-08T16:10:29Z,-73.841791,lon,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,72,2020-04-08T16:03:36Z,-73.792932,lon,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,73,2020-04-08T16:02:33Z,-73.789959,lon,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,74,2020-04-08T16:01:55Z,-73.785035,lon,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,75,2020-04-08T15:59:24Z,-73.769272,lon,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,76,2020-04-08T15:45:33Z,-73.690054,lon,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,77,2020-04-08T15:45:51Z,-73.693214,lon,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,78,2020-04-08T15:46:12Z,-73.695214,lon,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,79,2020-04-08T15:47:45Z,-73.695594,lon,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,80,2020-04-08T15:48:04Z,-73.695858,lon,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,81,2020-04-08T15:49:01Z,-73.695023,lon,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,82,2020-04-08T15:49:22Z,-73.699899,lon,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,83,2020-04-08T15:50:44Z,-73.702982,lon,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,84,2020-04-08T15:53:56Z,-73.72924,lon,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,85,2020-04-08T15:52:38Z,-73.7261,lon,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,86,2020-04-08T15:52:16Z,-73.721973,lon,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,87,2020-04-08T15:51:55Z,-73.720059,lon,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,88,2020-04-08T15:51:20Z,-73.713571,lon,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,89,2020-04-08T15:51:37Z,-73.715622,lon,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,90,2020-04-08T15:51:03Z,-73.705485,lon,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,91,2020-04-08T15:54:57Z,-73.740647,lon,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,92,2020-04-08T15:55:54Z,-73.742812,lon,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,93,2020-04-08T15:56:13Z,-73.74431,lon,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,94,2020-04-08T15:56:33Z,-73.745805,lon,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,95,2020-04-08T15:58:10Z,-73.752465,lon,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,96,2020-04-08T15:56:53Z,-73.749413,lon,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,97,2020-04-08T15:57:52Z,-73.751322,lon,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,98,2020-04-08T15:44:58Z,1586304000,tid,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,99,2020-04-08T16:19:27Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,100,2020-04-08T16:16:50Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,101,2020-04-08T16:15:59Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,102,2020-04-08T16:16:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,103,2020-04-08T16:14:32Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,104,2020-04-08T16:14:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,105,2020-04-08T16:18:18Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,106,2020-04-08T16:11:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,107,2020-04-08T16:10:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,108,2020-04-08T16:09:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,109,2020-04-08T16:09:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,110,2020-04-08T16:09:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,111,2020-04-08T16:08:19Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,112,2020-04-08T16:08:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,113,2020-04-08T16:07:43Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,114,2020-04-08T16:06:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,115,2020-04-08T16:06:31Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,116,2020-04-08T16:06:11Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,117,2020-04-08T16:03:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,118,2020-04-08T16:04:28Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,119,2020-04-08T16:05:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,120,2020-04-08T16:10:29Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,121,2020-04-08T16:03:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,122,2020-04-08T16:02:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,123,2020-04-08T16:01:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,124,2020-04-08T15:59:24Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,125,2020-04-08T15:45:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,126,2020-04-08T15:45:51Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,127,2020-04-08T15:46:12Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,128,2020-04-08T15:47:45Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,129,2020-04-08T15:48:04Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,130,2020-04-08T15:49:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,131,2020-04-08T15:49:22Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,132,2020-04-08T15:50:44Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,133,2020-04-08T15:53:56Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,134,2020-04-08T15:52:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,135,2020-04-08T15:52:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,136,2020-04-08T15:51:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,137,2020-04-08T15:51:20Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,138,2020-04-08T15:51:37Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,139,2020-04-08T15:51:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,140,2020-04-08T15:54:57Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,141,2020-04-08T15:55:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,142,2020-04-08T15:56:13Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,143,2020-04-08T15:56:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,144,2020-04-08T15:58:10Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,145,2020-04-08T15:56:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,146,2020-04-08T15:57:52Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\"",
						Start: ast.Position{
							Column: 10,
							Line:   9,
						},
					},
				},
				Value: "\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,0,2020-04-08T15:44:58Z,40.820317,lat,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,1,2020-04-08T16:19:27Z,40.745249,lat,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,2,2020-04-08T16:16:50Z,40.751085,lat,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,3,2020-04-08T16:15:59Z,40.748141,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,4,2020-04-08T16:16:16Z,40.748909,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,5,2020-04-08T16:14:32Z,40.743989,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,6,2020-04-08T16:14:49Z,40.745851,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,7,2020-04-08T16:18:18Z,40.748495,lat,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,8,2020-04-08T16:11:03Z,40.749543,lat,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,9,2020-04-08T16:10:46Z,40.750688,lat,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,10,2020-04-08T16:09:36Z,40.757106,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,11,2020-04-08T16:09:53Z,40.7565,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,12,2020-04-08T16:09:01Z,40.757895,lat,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,13,2020-04-08T16:08:19Z,40.759873,lat,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,14,2020-04-08T16:08:38Z,40.759128,lat,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,15,2020-04-08T16:07:43Z,40.762143,lat,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,16,2020-04-08T16:06:49Z,40.762709,lat,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,17,2020-04-08T16:06:31Z,40.762441,lat,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,18,2020-04-08T16:06:11Z,40.762373,lat,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,19,2020-04-08T16:03:54Z,40.76117,lat,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,20,2020-04-08T16:04:28Z,40.761653,lat,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,21,2020-04-08T16:05:46Z,40.761908,lat,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,22,2020-04-08T16:10:29Z,40.753279,lat,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,23,2020-04-08T16:03:36Z,40.761241,lat,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,24,2020-04-08T16:02:33Z,40.761443,lat,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,25,2020-04-08T16:01:55Z,40.761878,lat,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,26,2020-04-08T15:59:24Z,40.763356,lat,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,27,2020-04-08T15:45:33Z,40.815413,lat,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,28,2020-04-08T15:45:51Z,40.814096,lat,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,29,2020-04-08T15:46:12Z,40.810699,lat,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,30,2020-04-08T15:47:45Z,40.808517,lat,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,31,2020-04-08T15:48:04Z,40.806882,lat,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,32,2020-04-08T15:49:01Z,40.800397,lat,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,33,2020-04-08T15:49:22Z,40.796724,lat,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,34,2020-04-08T15:50:44Z,40.794998,lat,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,35,2020-04-08T15:53:56Z,40.786038,lat,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,36,2020-04-08T15:52:38Z,40.787216,lat,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,37,2020-04-08T15:52:16Z,40.788413,lat,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,38,2020-04-08T15:51:55Z,40.789185,lat,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,39,2020-04-08T15:51:20Z,40.791541,lat,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,40,2020-04-08T15:51:37Z,40.791009,lat,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,41,2020-04-08T15:51:03Z,40.793905,lat,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,42,2020-04-08T15:54:57Z,40.775044,lat,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,43,2020-04-08T15:55:54Z,40.773334,lat,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,44,2020-04-08T15:56:13Z,40.772144,lat,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,45,2020-04-08T15:56:33Z,40.770953,lat,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,46,2020-04-08T15:58:10Z,40.76594,lat,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,47,2020-04-08T15:56:53Z,40.768069,lat,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,48,2020-04-08T15:57:52Z,40.76661,lat,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n,,49,2020-04-08T15:44:58Z,-73.68691,lon,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,50,2020-04-08T16:19:27Z,-73.940563,lon,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,51,2020-04-08T16:16:50Z,-73.912119,lon,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,52,2020-04-08T16:15:59Z,-73.905367,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,53,2020-04-08T16:16:16Z,-73.906398,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,54,2020-04-08T16:14:32Z,-73.900815,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,55,2020-04-08T16:14:49Z,-73.902975,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,56,2020-04-08T16:18:18Z,-73.927597,lon,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,57,2020-04-08T16:11:03Z,-73.852242,lon,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,58,2020-04-08T16:10:46Z,-73.848962,lon,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,59,2020-04-08T16:09:36Z,-73.833095,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,60,2020-04-08T16:09:53Z,-73.834298,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,61,2020-04-08T16:09:01Z,-73.831347,lon,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,62,2020-04-08T16:08:19Z,-73.826087,lon,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,63,2020-04-08T16:08:38Z,-73.828799,lon,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,64,2020-04-08T16:07:43Z,-73.817956,lon,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,65,2020-04-08T16:06:49Z,-73.814539,lon,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,66,2020-04-08T16:06:31Z,-73.810154,lon,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,67,2020-04-08T16:06:11Z,-73.809437,lon,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,68,2020-04-08T16:03:54Z,-73.795812,lon,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,69,2020-04-08T16:04:28Z,-73.801766,lon,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,70,2020-04-08T16:05:46Z,-73.804421,lon,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,71,2020-04-08T16:10:29Z,-73.841791,lon,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,72,2020-04-08T16:03:36Z,-73.792932,lon,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,73,2020-04-08T16:02:33Z,-73.789959,lon,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,74,2020-04-08T16:01:55Z,-73.785035,lon,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,75,2020-04-08T15:59:24Z,-73.769272,lon,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,76,2020-04-08T15:45:33Z,-73.690054,lon,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,77,2020-04-08T15:45:51Z,-73.693214,lon,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,78,2020-04-08T15:46:12Z,-73.695214,lon,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,79,2020-04-08T15:47:45Z,-73.695594,lon,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,80,2020-04-08T15:48:04Z,-73.695858,lon,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,81,2020-04-08T15:49:01Z,-73.695023,lon,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,82,2020-04-08T15:49:22Z,-73.699899,lon,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,83,2020-04-08T15:50:44Z,-73.702982,lon,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,84,2020-04-08T15:53:56Z,-73.72924,lon,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,85,2020-04-08T15:52:38Z,-73.7261,lon,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,86,2020-04-08T15:52:16Z,-73.721973,lon,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,87,2020-04-08T15:51:55Z,-73.720059,lon,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,88,2020-04-08T15:51:20Z,-73.713571,lon,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,89,2020-04-08T15:51:37Z,-73.715622,lon,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,90,2020-04-08T15:51:03Z,-73.705485,lon,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,91,2020-04-08T15:54:57Z,-73.740647,lon,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,92,2020-04-08T15:55:54Z,-73.742812,lon,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,93,2020-04-08T15:56:13Z,-73.74431,lon,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,94,2020-04-08T15:56:33Z,-73.745805,lon,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,95,2020-04-08T15:58:10Z,-73.752465,lon,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,96,2020-04-08T15:56:53Z,-73.749413,lon,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,97,2020-04-08T15:57:52Z,-73.751322,lon,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,98,2020-04-08T15:44:58Z,1586304000,tid,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,99,2020-04-08T16:19:27Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,100,2020-04-08T16:16:50Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,101,2020-04-08T16:15:59Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,102,2020-04-08T16:16:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,103,2020-04-08T16:14:32Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,104,2020-04-08T16:14:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,105,2020-04-08T16:18:18Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,106,2020-04-08T16:11:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,107,2020-04-08T16:10:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,108,2020-04-08T16:09:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,109,2020-04-08T16:09:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,110,2020-04-08T16:09:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,111,2020-04-08T16:08:19Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,112,2020-04-08T16:08:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,113,2020-04-08T16:07:43Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,114,2020-04-08T16:06:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,115,2020-04-08T16:06:31Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,116,2020-04-08T16:06:11Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,117,2020-04-08T16:03:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,118,2020-04-08T16:04:28Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,119,2020-04-08T16:05:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,120,2020-04-08T16:10:29Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,121,2020-04-08T16:03:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,122,2020-04-08T16:02:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,123,2020-04-08T16:01:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,124,2020-04-08T15:59:24Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,125,2020-04-08T15:45:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,126,2020-04-08T15:45:51Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,127,2020-04-08T15:46:12Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,128,2020-04-08T15:47:45Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,129,2020-04-08T15:48:04Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,130,2020-04-08T15:49:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,131,2020-04-08T15:49:22Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,132,2020-04-08T15:50:44Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,133,2020-04-08T15:53:56Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,134,2020-04-08T15:52:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,135,2020-04-08T15:52:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,136,2020-04-08T15:51:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,137,2020-04-08T15:51:20Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,138,2020-04-08T15:51:37Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,139,2020-04-08T15:51:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,140,2020-04-08T15:54:57Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,141,2020-04-08T15:55:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,142,2020-04-08T15:56:13Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,143,2020-04-08T15:56:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,144,2020-04-08T15:58:10Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,145,2020-04-08T15:56:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,146,2020-04-08T15:57:52Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   174,
					},
					File:   "st_contains_linestring_test.flux",
					Source: "outData = \"\n#group,false,false,false,true,false,true\n#datatype,string,long,boolean,string,string,string\n#default,_result,,,,,\n,result,table,_st_contains,id,st_linestring,trip_id\n,,0,false,GO506_20_6431,\\\"-73.68691 40.820317, -73.690054 40.815413, -73.693214 40.814096, -73.695214 40.810699, -73.695594 40.808517, -73.695858 40.806882, -73.695023 40.800397, -73.699899 40.796724, -73.702982 40.794998, -73.705485 40.793905, -73.713571 40.791541, -73.715622 40.791009, -73.720059 40.789185, -73.721973 40.788413, -73.7261 40.787216, -73.72924 40.786038, -73.740647 40.775044, -73.742812 40.773334, -73.74431 40.772144, -73.745805 40.770953, -73.749413 40.768069, -73.751322 40.76661, -73.752465 40.76594, -73.769272 40.763356, -73.785035 40.761878, -73.789959 40.761443, -73.792932 40.761241, -73.795812 40.76117, -73.801766 40.761653, -73.804421 40.761908, -73.809437 40.762373, -73.810154 40.762441, -73.814539 40.762709, -73.817956 40.762143, -73.826087 40.759873, -73.828799 40.759128, -73.831347 40.757895, -73.833095 40.757106, -73.834298 40.7565, -73.841791 40.753279, -73.848962 40.750688, -73.852242 40.749543, -73.900815 40.743989, -73.902975 40.745851, -73.905367 40.748141, -73.906398 40.748909, -73.912119 40.751085, -73.927597 40.748495, -73.940563 40.745249\\\",GO506_20_6431\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   168,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 8,
							Line:   168,
						},
						File:   "st_contains_linestring_test.flux",
						Source: "outData",
						Start: ast.Position{
							Column: 1,
							Line:   168,
						},
					},
				},
				Name: "outData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   174,
						},
						File:   "st_contains_linestring_test.flux",
						Source: "\"\n#group,false,false,false,true,false,true\n#datatype,string,long,boolean,string,string,string\n#default,_result,,,,,\n,result,table,_st_contains,id,st_linestring,trip_id\n,,0,false,GO506_20_6431,\\\"-73.68691 40.820317, -73.690054 40.815413, -73.693214 40.814096, -73.695214 40.810699, -73.695594 40.808517, -73.695858 40.806882, -73.695023 40.800397, -73.699899 40.796724, -73.702982 40.794998, -73.705485 40.793905, -73.713571 40.791541, -73.715622 40.791009, -73.720059 40.789185, -73.721973 40.788413, -73.7261 40.787216, -73.72924 40.786038, -73.740647 40.775044, -73.742812 40.773334, -73.74431 40.772144, -73.745805 40.770953, -73.749413 40.768069, -73.751322 40.76661, -73.752465 40.76594, -73.769272 40.763356, -73.785035 40.761878, -73.789959 40.761443, -73.792932 40.761241, -73.795812 40.76117, -73.801766 40.761653, -73.804421 40.761908, -73.809437 40.762373, -73.810154 40.762441, -73.814539 40.762709, -73.817956 40.762143, -73.826087 40.759873, -73.828799 40.759128, -73.831347 40.757895, -73.833095 40.757106, -73.834298 40.7565, -73.841791 40.753279, -73.848962 40.750688, -73.852242 40.749543, -73.900815 40.743989, -73.902975 40.745851, -73.905367 40.748141, -73.906398 40.748909, -73.912119 40.751085, -73.927597 40.748495, -73.940563 40.745249\\\",GO506_20_6431\n\"",
						Start: ast.Position{
							Column: 11,
							Line:   168,
						},
					},
				},
				Value: "\n#group,false,false,false,true,false,true\n#datatype,string,long,boolean,string,string,string\n#default,_result,,,,,\n,result,table,_st_contains,id,st_linestring,trip_id\n,,0,false,GO506_20_6431,\"-73.68691 40.820317, -73.690054 40.815413, -73.693214 40.814096, -73.695214 40.810699, -73.695594 40.808517, -73.695858 40.806882, -73.695023 40.800397, -73.699899 40.796724, -73.702982 40.794998, -73.705485 40.793905, -73.713571 40.791541, -73.715622 40.791009, -73.720059 40.789185, -73.721973 40.788413, -73.7261 40.787216, -73.72924 40.786038, -73.740647 40.775044, -73.742812 40.773334, -73.74431 40.772144, -73.745805 40.770953, -73.749413 40.768069, -73.751322 40.76661, -73.752465 40.76594, -73.769272 40.763356, -73.785035 40.761878, -73.789959 40.761443, -73.792932 40.761241, -73.795812 40.76117, -73.801766 40.761653, -73.804421 40.761908, -73.809437 40.762373, -73.810154 40.762441, -73.814539 40.762709, -73.817956 40.762143, -73.826087 40.759873, -73.828799 40.759128, -73.831347 40.757895, -73.833095 40.757106, -73.834298 40.7565, -73.841791 40.753279, -73.848962 40.750688, -73.852242 40.749543, -73.900815 40.743989, -73.902975 40.745851, -73.905367 40.748141, -73.906398 40.748909, -73.912119 40.751085, -73.927597 40.748495, -73.940563 40.745249\",GO506_20_6431\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 120,
						Line:   177,
					},
					File:   "st_contains_linestring_test.flux",
					Source: "bt = {points: [{lat: 40.671659, lon: -73.936631}, {lat: 40.706543, lon: -73.749177},{lat: 40.791333, lon: -73.880327}]}",
					Start: ast.Position{
						Column: 1,
						Line:   177,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 3,
							Line:   177,
						},
						File:   "st_contains_linestring_test.flux",
						Source: "bt",
						Start: ast.Position{
							Column: 1,
							Line:   177,
						},
					},
				},
				Name: "bt",
			},
			Init: &ast.ObjectExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 120,
							Line:   177,
						},
						File:   "st_contains_linestring_test.flux",
						Source: "{points: [{lat: 40.671659, lon: -73.936631}, {lat: 40.706543, lon: -73.749177},{lat: 40.791333, lon: -73.880327}]}",
						Start: ast.Position{
							Column: 6,
							Line:   177,
						},
					},
				},
				Properties: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 119,
								Line:   177,
							},
							File:   "st_contains_linestring_test.flux",
							Source: "points: [{lat: 40.671659, lon: -73.936631}, {lat: 40.706543, lon: -73.749177},{lat: 40.791333, lon: -73.880327}]",
							Start: ast.Position{
								Column: 7,
								Line:   177,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 13,
									Line:   177,
								},
								File:   "st_contains_linestring_test.flux",
								Source: "points",
								Start: ast.Position{
									Column: 7,
									Line:   177,
								},
							},
						},
						Name: "points",
					},
					Value: &ast.ArrayExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 119,
									Line:   177,
								},
								File:   "st_contains_linestring_test.flux",
								Source: "[{lat: 40.671659, lon: -73.936631}, {lat: 40.706543, lon: -73.749177},{lat: 40.791333, lon: -73.880327}]",
								Start: ast.Position{
									Column: 15,
									Line:   177,
								},
							},
						},
						Elements: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 49,
										Line:   177,
									},
									File:   "st_contains_linestring_test.flux",
									Source: "{lat: 40.671659, lon: -73.936631}",
									Start: ast.Position{
										Column: 16,
										Line:   177,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 31,
											Line:   177,
										},
										File:   "st_contains_linestring_test.flux",
										Source: "lat: 40.671659",
										Start: ast.Position{
											Column: 17,
											Line:   177,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 20,
												Line:   177,
											},
											File:   "st_contains_linestring_test.flux",
											Source: "lat",
											Start: ast.Position{
												Column: 17,
												Line:   177,
											},
										},
									},
									Name: "lat",
								},
								Value: &ast.FloatLiteral{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 31,
												Line:   177,
											},
											File:   "st_contains_linestring_test.flux",
											Source: "40.671659",
											Start: ast.Position{
												Column: 22,
												Line:   177,
											},
										},
									},
									Value: 40.671659,
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 48,
											Line:   177,
										},
										File:   "st_contains_linestring_test.flux",
										Source: "lon: -73.936631",
										Start: ast.Position{
											Column: 33,
											Line:   177,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 36,
												Line:   177,
											},
											File:   "st_contains_linestring_test.flux",
											Source: "lon",
											Start: ast.Position{
												Column: 33,
												Line:   177,
											},
										},
									},
									Name: "lon",
								},
								Value: &ast.UnaryExpression{
									Argument: &ast.FloatLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 48,
													Line:   177,
												},
												File:   "st_contains_linestring_test.flux",
												Source: "73.936631",
												Start: ast.Position{
													Column: 39,
													Line:   177,
												},
											},
										},
										Value: 73.936631,
									},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 48,
												Line:   177,
											},
											File:   "st_contains_linestring_test.flux",
											Source: "-73.936631",
											Start: ast.Position{
												Column: 38,
												Line:   177,
											},
										},
									},
									Operator: 6,
								},
							}},
							With: nil,
						}, &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 84,
										Line:   177,
									},
									File:   "st_contains_linestring_test.flux",
									Source: "{lat: 40.706543, lon: -73.749177}",
									Start: ast.Position{
										Column: 51,
										Line:   177,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 66,
											Line:   177,
										},
										File:   "st_contains_linestring_test.flux",
										Source: "lat: 40.706543",
										Start: ast.Position{
											Column: 52,
											Line:   177,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 55,
												Line:   177,
											},
											File:   "st_contains_linestring_test.flux",
											Source: "lat",
											Start: ast.Position{
												Column: 52,
												Line:   177,
											},
										},
									},
									Name: "lat",
								},
								Value: &ast.FloatLiteral{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 66,
												Line:   177,
											},
											File:   "st_contains_linestring_test.flux",
											Source: "40.706543",
											Start: ast.Position{
												Column: 57,
												Line:   177,
											},
										},
									},
									Value: 40.706543,
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 83,
											Line:   177,
										},
										File:   "st_contains_linestring_test.flux",
										Source: "lon: -73.749177",
										Start: ast.Position{
											Column: 68,
											Line:   177,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 71,
												Line:   177,
											},
											File:   "st_contains_linestring_test.flux",
											Source: "lon",
											Start: ast.Position{
												Column: 68,
												Line:   177,
											},
										},
									},
									Name: "lon",
								},
								Value: &ast.UnaryExpression{
									Argument: &ast.FloatLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 83,
													Line:   177,
												},
												File:   "st_contains_linestring_test.flux",
												Source: "73.749177",
												Start: ast.Position{
													Column: 74,
													Line:   177,
												},
											},
										},
										Value: 73.749177,
									},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 83,
												Line:   177,
											},
											File:   "st_contains_linestring_test.flux",
											Source: "-73.749177",
											Start: ast.Position{
												Column: 73,
												Line:   177,
											},
										},
									},
									Operator: 6,
								},
							}},
							With: nil,
						}, &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 118,
										Line:   177,
									},
									File:   "st_contains_linestring_test.flux",
									Source: "{lat: 40.791333, lon: -73.880327}",
									Start: ast.Position{
										Column: 85,
										Line:   177,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 100,
											Line:   177,
										},
										File:   "st_contains_linestring_test.flux",
										Source: "lat: 40.791333",
										Start: ast.Position{
											Column: 86,
											Line:   177,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 89,
												Line:   177,
											},
											File:   "st_contains_linestring_test.flux",
											Source: "lat",
											Start: ast.Position{
												Column: 86,
												Line:   177,
											},
										},
									},
									Name: "lat",
								},
								Value: &ast.FloatLiteral{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 100,
												Line:   177,
											},
											File:   "st_contains_linestring_test.flux",
											Source: "40.791333",
											Start: ast.Position{
												Column: 91,
												Line:   177,
											},
										},
									},
									Value: 40.791333,
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 117,
											Line:   177,
										},
										File:   "st_contains_linestring_test.flux",
										Source: "lon: -73.880327",
										Start: ast.Position{
											Column: 102,
											Line:   177,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 105,
												Line:   177,
											},
											File:   "st_contains_linestring_test.flux",
											Source: "lon",
											Start: ast.Position{
												Column: 102,
												Line:   177,
											},
										},
									},
									Name: "lon",
								},
								Value: &ast.UnaryExpression{
									Argument: &ast.FloatLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 117,
													Line:   177,
												},
												File:   "st_contains_linestring_test.flux",
												Source: "73.880327",
												Start: ast.Position{
													Column: 108,
													Line:   177,
												},
											},
										},
										Value: 73.880327,
									},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 117,
												Line:   177,
											},
											File:   "st_contains_linestring_test.flux",
											Source: "-73.880327",
											Start: ast.Position{
												Column: 107,
												Line:   177,
											},
										},
									},
									Operator: 6,
								},
							}},
							With: nil,
						}},
					},
				}},
				With: nil,
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   188,
					},
					File:   "st_contains_linestring_test.flux",
					Source: "t_stContainsLinestring = (table=<-) =>\n  table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to show the train crossing defined region\n    |> geo.ST_LineString()\n    |> map(fn: (r) => ({\n        r with _st_contains: geo.ST_Contains(region: bt, geometry: {linestring: r.st_linestring})\n    }))\n    |> drop(columns: [\"_start\", \"_stop\"])",
					Start: ast.Position{
						Column: 1,
						Line:   179,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 23,
							Line:   179,
						},
						File:   "st_contains_linestring_test.flux",
						Source: "t_stContainsLinestring",
						Start: ast.Position{
							Column: 1,
							Line:   179,
						},
					},
				},
				Name: "t_stContainsLinestring",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   188,
						},
						File:   "st_contains_linestring_test.flux",
						Source: "(table=<-) =>\n  table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to show the train crossing defined region\n    |> geo.ST_LineString()\n    |> map(fn: (r) => ({\n        r with _st_contains: geo.ST_Contains(region: bt, geometry: {linestring: r.st_linestring})\n    }))\n    |> drop(columns: [\"_start\", \"_stop\"])",
						Start: ast.Position{
							Column: 26,
							Line:   179,
						},
					},
				},
				Body: &ast.PipeExpression{
					Argument: &ast.PipeExpression{
						Argument: &ast.PipeExpression{
							Argument: &ast.PipeExpression{
								Argument: &ast.PipeExpression{
									Argument: &ast.PipeExpression{
										Argument: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 8,
														Line:   180,
													},
													File:   "st_contains_linestring_test.flux",
													Source: "table",
													Start: ast.Position{
														Column: 3,
														Line:   180,
													},
												},
											},
											Name: "table",
										},
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   181,
												},
												File:   "st_contains_linestring_test.flux",
												Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)",
												Start: ast.Position{
													Column: 3,
													Line:   180,
												},
											},
										},
										Call: &ast.CallExpression{
											Arguments: []ast.Expression{&ast.ObjectExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 41,
															Line:   181,
														},
														File:   "st_contains_linestring_test.flux",
														Source: "start: 2020-04-01T00:00:00Z",
														Start: ast.Position{
															Column: 14,
															Line:   181,
														},
													},
												},
												Properties: []*ast.Property{&ast.Property{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 41,
																Line:   181,
															},
															File:   "st_contains_linestring_test.flux",
															Source: "start: 2020-04-01T00:00:00Z",
															Start: ast.Position{
																Column: 14,
																Line:   181,
															},
														},
													},
													Key: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 19,
																	Line:   181,
																},
																File:   "st_contains_linestring_test.flux",
																Source: "start",
																Start: ast.Position{
																	Column: 14,
																	Line:   181,
																},
															},
														},
														Name: "start",
													},
													Value: &ast.DateTimeLiteral{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 41,
																	Line:   181,
																},
																File:   "st_contains_linestring_test.flux",
																Source: "2020-04-01T00:00:00Z",
																Start: ast.Position{
																	Column: 21,
																	Line:   181,
																},
															},
														},
														Value: parser.MustParseTime("2020-04-01T00:00:00Z"),
													},
												}},
												With: nil,
											}},
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 42,
														Line:   181,
													},
													File:   "st_contains_linestring_test.flux",
													Source: "range(start: 2020-04-01T00:00:00Z)",
													Start: ast.Position{
														Column: 8,
														Line:   181,
													},
												},
											},
											Callee: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 13,
															Line:   181,
														},
														File:   "st_contains_linestring_test.flux",
														Source: "range",
														Start: ast.Position{
															Column: 8,
															Line:   181,
														},
													},
												},
												Name: "range",
											},
										},
									},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 25,
												Line:   182,
											},
											File:   "st_contains_linestring_test.flux",
											Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()",
											Start: ast.Position{
												Column: 3,
												Line:   180,
											},
										},
									},
									Call: &ast.CallExpression{
										Arguments: nil,
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 25,
													Line:   182,
												},
												File:   "st_contains_linestring_test.flux",
												Source: "v1.fieldsAsCols()",
												Start: ast.Position{
													Column: 8,
													Line:   182,
												},
											},
										},
										Callee: &ast.MemberExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 23,
														Line:   182,
													},
													File:   "st_contains_linestring_test.flux",
													Source: "v1.fieldsAsCols",
													Start: ast.Position{
														Column: 8,
														Line:   182,
													},
												},
											},
											Object: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 10,
															Line:   182,
														},
														File:   "st_contains_linestring_test.flux",
														Source: "v1",
														Start: ast.Position{
															Column: 8,
															Line:   182,
														},
													},
												},
												Name: "v1",
											},
											Property: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 23,
															Line:   182,
														},
														File:   "st_contains_linestring_test.flux",
														Source: "fieldsAsCols",
														Start: ast.Position{
															Column: 11,
															Line:   182,
														},
													},
												},
												Name: "fieldsAsCols",
											},
										},
									},
								},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 47,
											Line:   183,
										},
										File:   "st_contains_linestring_test.flux",
										Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"])",
										Start: ast.Position{
											Column: 3,
											Line:   180,
										},
									},
								},
								Call: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 46,
													Line:   183,
												},
												File:   "st_contains_linestring_test.flux",
												Source: "groupBy: [\"id\",\"trip_id\"]",
												Start: ast.Position{
													Column: 21,
													Line:   183,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 46,
														Line:   183,
													},
													File:   "st_contains_linestring_test.flux",
													Source: "groupBy: [\"id\",\"trip_id\"]",
													Start: ast.Position{
														Column: 21,
														Line:   183,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 28,
															Line:   183,
														},
														File:   "st_contains_linestring_test.flux",
														Source: "groupBy",
														Start: ast.Position{
															Column: 21,
															Line:   183,
														},
													},
												},
												Name: "groupBy",
											},
											Value: &ast.ArrayExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 46,
															Line:   183,
														},
														File:   "st_contains_linestring_test.flux",
														Source: "[\"id\",\"trip_id\"]",
														Start: ast.Position{
															Column: 30,
															Line:   183,
														},
													},
												},
												Elements: []ast.Expression{&ast.StringLiteral{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 35,
																Line:   183,
															},
															File:   "st_contains_linestring_test.flux",
															Source: "\"id\"",
															Start: ast.Position{
																Column: 31,
																Line:   183,
															},
														},
													},
													Value: "id",
												}, &ast.StringLiteral{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 45,
																Line:   183,
															},
															File:   "st_contains_linestring_test.flux",
															Source: "\"trip_id\"",
															Start: ast.Position{
																Column: 36,
																Line:   183,
															},
														},
													},
													Value: "trip_id",
												}},
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 47,
												Line:   183,
											},
											File:   "st_contains_linestring_test.flux",
											Source: "geo.asTracks(groupBy: [\"id\",\"trip_id\"])",
											Start: ast.Position{
												Column: 8,
												Line:   183,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 20,
													Line:   183,
												},
												File:   "st_contains_linestring_test.flux",
												Source: "geo.asTracks",
												Start: ast.Position{
													Column: 8,
													Line:   183,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 11,
														Line:   183,
													},
													File:   "st_contains_linestring_test.flux",
													Source: "geo",
													Start: ast.Position{
														Column: 8,
														Line:   183,
													},
												},
											},
											Name: "geo",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 20,
														Line:   183,
													},
													File:   "st_contains_linestring_test.flux",
													Source: "asTracks",
													Start: ast.Position{
														Column: 12,
														Line:   183,
													},
												},
											},
											Name: "asTracks",
										},
									},
								},
							},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 27,
										Line:   184,
									},
									File:   "st_contains_linestring_test.flux",
									Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to show the train crossing defined region\n    |> geo.ST_LineString()",
									Start: ast.Position{
										Column: 3,
										Line:   180,
									},
								},
							},
							Call: &ast.CallExpression{
								Arguments: nil,
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 27,
											Line:   184,
										},
										File:   "st_contains_linestring_test.flux",
										Source: "geo.ST_LineString()",
										Start: ast.Position{
											Column: 8,
											Line:   184,
										},
									},
								},
								Callee: &ast.MemberExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 25,
												Line:   184,
											},
											File:   "st_contains_linestring_test.flux",
											Source: "geo.ST_LineString",
											Start: ast.Position{
												Column: 8,
												Line:   184,
											},
										},
									},
									Object: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 11,
													Line:   184,
												},
												File:   "st_contains_linestring_test.flux",
												Source: "geo",
												Start: ast.Position{
													Column: 8,
													Line:   184,
												},
											},
										},
										Name: "geo",
									},
									Property: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 25,
													Line:   184,
												},
												File:   "st_contains_linestring_test.flux",
												Source: "ST_LineString",
												Start: ast.Position{
													Column: 12,
													Line:   184,
												},
											},
										},
										Name: "ST_LineString",
									},
								},
							},
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 8,
									Line:   187,
								},
								File:   "st_contains_linestring_test.flux",
								Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to show the train crossing defined region\n    |> geo.ST_LineString()\n    |> map(fn: (r) => ({\n        r with _st_contains: geo.ST_Contains(region: bt, geometry: {linestring: r.st_linestring})\n    }))",
								Start: ast.Position{
									Column: 3,
									Line:   180,
								},
							},
						},
						Call: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 7,
											Line:   187,
										},
										File:   "st_contains_linestring_test.flux",
										Source: "fn: (r) => ({\n        r with _st_contains: geo.ST_Contains(region: bt, geometry: {linestring: r.st_linestring})\n    })",
										Start: ast.Position{
											Column: 12,
											Line:   185,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 7,
												Line:   187,
											},
											File:   "st_contains_linestring_test.flux",
											Source: "fn: (r) => ({\n        r with _st_contains: geo.ST_Contains(region: bt, geometry: {linestring: r.st_linestring})\n    })",
											Start: ast.Position{
												Column: 12,
												Line:   185,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 14,
													Line:   185,
												},
												File:   "st_contains_linestring_test.flux",
												Source: "fn",
												Start: ast.Position{
													Column: 12,
													Line:   185,
												},
											},
										},
										Name: "fn",
									},
									Value: &ast.FunctionExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 7,
													Line:   187,
												},
												File:   "st_contains_linestring_test.flux",
												Source: "(r) => ({\n        r with _st_contains: geo.ST_Contains(region: bt, geometry: {linestring: r.st_linestring})\n    })",
												Start: ast.Position{
													Column: 16,
													Line:   185,
												},
											},
										},
										Body: &ast.ParenExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 7,
														Line:   187,
													},
													File:   "st_contains_linestring_test.flux",
													Source: "({\n        r with _st_contains: geo.ST_Contains(region: bt, geometry: {linestring: r.st_linestring})\n    })",
													Start: ast.Position{
														Column: 23,
														Line:   185,
													},
												},
											},
											Expression: &ast.ObjectExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 6,
															Line:   187,
														},
														File:   "st_contains_linestring_test.flux",
														Source: "{\n        r with _st_contains: geo.ST_Contains(region: bt, geometry: {linestring: r.st_linestring})\n    }",
														Start: ast.Position{
															Column: 24,
															Line:   185,
														},
													},
												},
												Properties: []*ast.Property{&ast.Property{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 98,
																Line:   186,
															},
															File:   "st_contains_linestring_test.flux",
															Source: "_st_contains: geo.ST_Contains(region: bt, geometry: {linestring: r.st_linestring})",
															Start: ast.Position{
																Column: 16,
																Line:   186,
															},
														},
													},
													Key: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 28,
																	Line:   186,
																},
																File:   "st_contains_linestring_test.flux",
																Source: "_st_contains",
																Start: ast.Position{
																	Column: 16,
																	Line:   186,
																},
															},
														},
														Name: "_st_contains",
													},
													Value: &ast.CallExpression{
														Arguments: []ast.Expression{&ast.ObjectExpression{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 97,
																		Line:   186,
																	},
																	File:   "st_contains_linestring_test.flux",
																	Source: "region: bt, geometry: {linestring: r.st_linestring}",
																	Start: ast.Position{
																		Column: 46,
																		Line:   186,
																	},
																},
															},
															Properties: []*ast.Property{&ast.Property{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 56,
																			Line:   186,
																		},
																		File:   "st_contains_linestring_test.flux",
																		Source: "region: bt",
																		Start: ast.Position{
																			Column: 46,
																			Line:   186,
																		},
																	},
																},
																Key: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 52,
																				Line:   186,
																			},
																			File:   "st_contains_linestring_test.flux",
																			Source: "region",
																			Start: ast.Position{
																				Column: 46,
																				Line:   186,
																			},
																		},
																	},
																	Name: "region",
																},
																Value: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 56,
																				Line:   186,
																			},
																			File:   "st_contains_linestring_test.flux",
																			Source: "bt",
																			Start: ast.Position{
																				Column: 54,
																				Line:   186,
																			},
																		},
																	},
																	Name: "bt",
																},
															}, &ast.Property{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 97,
																			Line:   186,
																		},
																		File:   "st_contains_linestring_test.flux",
																		Source: "geometry: {linestring: r.st_linestring}",
																		Start: ast.Position{
																			Column: 58,
																			Line:   186,
																		},
																	},
																},
																Key: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 66,
																				Line:   186,
																			},
																			File:   "st_contains_linestring_test.flux",
																			Source: "geometry",
																			Start: ast.Position{
																				Column: 58,
																				Line:   186,
																			},
																		},
																	},
																	Name: "geometry",
																},
																Value: &ast.ObjectExpression{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 97,
																				Line:   186,
																			},
																			File:   "st_contains_linestring_test.flux",
																			Source: "{linestring: r.st_linestring}",
																			Start: ast.Position{
																				Column: 68,
																				Line:   186,
																			},
																		},
																	},
																	Properties: []*ast.Property{&ast.Property{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 96,
																					Line:   186,
																				},
																				File:   "st_contains_linestring_test.flux",
																				Source: "linestring: r.st_linestring",
																				Start: ast.Position{
																					Column: 69,
																					Line:   186,
																				},
																			},
																		},
																		Key: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 79,
																						Line:   186,
																					},
																					File:   "st_contains_linestring_test.flux",
																					Source: "linestring",
																					Start: ast.Position{
																						Column: 69,
																						Line:   186,
																					},
																				},
																			},
																			Name: "linestring",
																		},
																		Value: &ast.MemberExpression{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 96,
																						Line:   186,
																					},
																					File:   "st_contains_linestring_test.flux",
																					Source: "r.st_linestring",
																					Start: ast.Position{
																						Column: 81,
																						Line:   186,
																					},
																				},
																			},
																			Object: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 82,
																							Line:   186,
																						},
																						File:   "st_contains_linestring_test.flux",
																						Source: "r",
																						Start: ast.Position{
																							Column: 81,
																							Line:   186,
																						},
																					},
																				},
																				Name: "r",
																			},
																			Property: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 96,
																							Line:   186,
																						},
																						File:   "st_contains_linestring_test.flux",
																						Source: "st_linestring",
																						Start: ast.Position{
																							Column: 83,
																							Line:   186,
																						},
																					},
																				},
																				Name: "st_linestring",
																			},
																		},
																	}},
																	With: nil,
																},
															}},
															With: nil,
														}},
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 98,
																	Line:   186,
																},
																File:   "st_contains_linestring_test.flux",
																Source: "geo.ST_Contains(region: bt, geometry: {linestring: r.st_linestring})",
																Start: ast.Position{
																	Column: 30,
																	Line:   186,
																},
															},
														},
														Callee: &ast.MemberExpression{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 45,
																		Line:   186,
																	},
																	File:   "st_contains_linestring_test.flux",
																	Source: "geo.ST_Contains",
																	Start: ast.Position{
																		Column: 30,
																		Line:   186,
																	},
																},
															},
															Object: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 33,
																			Line:   186,
																		},
																		File:   "st_contains_linestring_test.flux",
																		Source: "geo",
																		Start: ast.Position{
																			Column: 30,
																			Line:   186,
																		},
																	},
																},
																Name: "geo",
															},
															Property: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 45,
																			Line:   186,
																		},
																		File:   "st_contains_linestring_test.flux",
																		Source: "ST_Contains",
																		Start: ast.Position{
																			Column: 34,
																			Line:   186,
																		},
																	},
																},
																Name: "ST_Contains",
															},
														},
													},
												}},
												With: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 10,
																Line:   186,
															},
															File:   "st_contains_linestring_test.flux",
															Source: "r",
															Start: ast.Position{
																Column: 9,
																Line:   186,
															},
														},
													},
													Name: "r",
												},
											},
										},
										Params: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   185,
													},
													File:   "st_contains_linestring_test.flux",
													Source: "r",
													Start: ast.Position{
														Column: 17,
														Line:   185,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 18,
															Line:   185,
														},
														File:   "st_contains_linestring_test.flux",
														Source: "r",
														Start: ast.Position{
															Column: 17,
															Line:   185,
														},
													},
												},
												Name: "r",
											},
											Value: nil,
										}},
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 8,
										Line:   187,
									},
									File:   "st_contains_linestring_test.flux",
									Source: "map(fn: (r) => ({\n        r with _st_contains: geo.ST_Contains(region: bt, geometry: {linestring: r.st_linestring})\n    }))",
									Start: ast.Position{
										Column: 8,
										Line:   185,
									},
								},
							},
							Callee: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 11,
											Line:   185,
										},
										File:   "st_contains_linestring_test.flux",
										Source: "map",
										Start: ast.Position{
											Column: 8,
											Line:   185,
										},
									},
								},
								Name: "map",
							},
						},
					},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   188,
							},
							File:   "st_contains_linestring_test.flux",
							Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to show the train crossing defined region\n    |> geo.ST_LineString()\n    |> map(fn: (r) => ({\n        r with _st_contains: geo.ST_Contains(region: bt, geometry: {linestring: r.st_linestring})\n    }))\n    |> drop(columns: [\"_start\", \"_stop\"])",
							Start: ast.Position{
								Column: 3,
								Line:   180,
							},
						},
					},
					Call: &ast.CallExpression{
						Arguments: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   188,
									},
									File:   "st_contains_linestring_test.flux",
									Source: "columns: [\"_start\", \"_stop\"]",
									Start: ast.Position{
										Column: 13,
										Line:   188,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 41,
											Line:   188,
										},
										File:   "st_contains_linestring_test.flux",
										Source: "columns: [\"_start\", \"_stop\"]",
										Start: ast.Position{
											Column: 13,
											Line:   188,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 20,
												Line:   188,
											},
											File:   "st_contains_linestring_test.flux",
											Source: "columns",
											Start: ast.Position{
												Column: 13,
												Line:   188,
											},
										},
									},
									Name: "columns",
								},
								Value: &ast.ArrayExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 41,
												Line:   188,
											},
											File:   "st_contains_linestring_test.flux",
											Source: "[\"_start\", \"_stop\"]",
											Start: ast.Position{
												Column: 22,
												Line:   188,
											},
										},
									},
									Elements: []ast.Expression{&ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 31,
													Line:   188,
												},
												File:   "st_contains_linestring_test.flux",
												Source: "\"_start\"",
												Start: ast.Position{
													Column: 23,
													Line:   188,
												},
											},
										},
										Value: "_start",
									}, &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 40,
													Line:   188,
												},
												File:   "st_contains_linestring_test.flux",
												Source: "\"_stop\"",
												Start: ast.Position{
													Column: 33,
													Line:   188,
												},
											},
										},
										Value: "_stop",
									}},
								},
							}},
							With: nil,
						}},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   188,
								},
								File:   "st_contains_linestring_test.flux",
								Source: "drop(columns: [\"_start\", \"_stop\"])",
								Start: ast.Position{
									Column: 8,
									Line:   188,
								},
							},
						},
						Callee: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 12,
										Line:   188,
									},
									File:   "st_contains_linestring_test.flux",
									Source: "drop",
									Start: ast.Position{
										Column: 8,
										Line:   188,
									},
								},
							},
							Name: "drop",
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 35,
								Line:   179,
							},
							File:   "st_contains_linestring_test.flux",
							Source: "table=<-",
							Start: ast.Position{
								Column: 27,
								Line:   179,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 32,
									Line:   179,
								},
								File:   "st_contains_linestring_test.flux",
								Source: "table",
								Start: ast.Position{
									Column: 27,
									Line:   179,
								},
							},
						},
						Name: "table",
					},
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 35,
								Line:   179,
							},
							File:   "st_contains_linestring_test.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 33,
								Line:   179,
							},
						},
					}},
				}},
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 110,
							Line:   190,
						},
						File:   "st_contains_linestring_test.flux",
						Source: "_stContainsLinestring = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stContainsLinestring})",
						Start: ast.Position{
							Column: 6,
							Line:   189,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 27,
								Line:   189,
							},
							File:   "st_contains_linestring_test.flux",
							Source: "_stContainsLinestring",
							Start: ast.Position{
								Column: 6,
								Line:   189,
							},
						},
					},
					Name: "_stContainsLinestring",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 110,
								Line:   190,
							},
							File:   "st_contains_linestring_test.flux",
							Source: "() =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stContainsLinestring})",
							Start: ast.Position{
								Column: 30,
								Line:   189,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 110,
									Line:   190,
								},
								File:   "st_contains_linestring_test.flux",
								Source: "({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stContainsLinestring})",
								Start: ast.Position{
									Column: 2,
									Line:   190,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 109,
										Line:   190,
									},
									File:   "st_contains_linestring_test.flux",
									Source: "{input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stContainsLinestring}",
									Start: ast.Position{
										Column: 3,
										Line:   190,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 43,
											Line:   190,
										},
										File:   "st_contains_linestring_test.flux",
										Source: "input: testing.loadStorage(csv: inData)",
										Start: ast.Position{
											Column: 4,
											Line:   190,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 9,
												Line:   190,
											},
											File:   "st_contains_linestring_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 4,
												Line:   190,
											},
										},
									},
									Name: "input",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   190,
												},
												File:   "st_contains_linestring_test.flux",
												Source: "csv: inData",
												Start: ast.Position{
													Column: 31,
													Line:   190,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 42,
														Line:   190,
													},
													File:   "st_contains_linestring_test.flux",
													Source: "csv: inData",
													Start: ast.Position{
														Column: 31,
														Line:   190,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 34,
															Line:   190,
														},
														File:   "st_contains_linestring_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 31,
															Line:   190,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 42,
															Line:   190,
														},
														File:   "st_contains_linestring_test.flux",
														Source: "inData",
														Start: ast.Position{
															Column: 36,
															Line:   190,
														},
													},
												},
												Name: "inData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 43,
												Line:   190,
											},
											File:   "st_contains_linestring_test.flux",
											Source: "testing.loadStorage(csv: inData)",
											Start: ast.Position{
												Column: 11,
												Line:   190,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   190,
												},
												File:   "st_contains_linestring_test.flux",
												Source: "testing.loadStorage",
												Start: ast.Position{
													Column: 11,
													Line:   190,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   190,
													},
													File:   "st_contains_linestring_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 11,
														Line:   190,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 30,
														Line:   190,
													},
													File:   "st_contains_linestring_test.flux",
													Source: "loadStorage",
													Start: ast.Position{
														Column: 19,
														Line:   190,
													},
												},
											},
											Name: "loadStorage",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 80,
											Line:   190,
										},
										File:   "st_contains_linestring_test.flux",
										Source: "want: testing.loadMem(csv: outData)",
										Start: ast.Position{
											Column: 45,
											Line:   190,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 49,
												Line:   190,
											},
											File:   "st_contains_linestring_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 45,
												Line:   190,
											},
										},
									},
									Name: "want",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 79,
													Line:   190,
												},
												File:   "st_contains_linestring_test.flux",
												Source: "csv: outData",
												Start: ast.Position{
													Column: 67,
													Line:   190,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 79,
														Line:   190,
													},
													File:   "st_contains_linestring_test.flux",
													Source: "csv: outData",
													Start: ast.Position{
														Column: 67,
														Line:   190,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 70,
															Line:   190,
														},
														File:   "st_contains_linestring_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 67,
															Line:   190,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 79,
															Line:   190,
														},
														File:   "st_contains_linestring_test.flux",
														Source: "outData",
														Start: ast.Position{
															Column: 72,
															Line:   190,
														},
													},
												},
												Name: "outData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 80,
												Line:   190,
											},
											File:   "st_contains_linestring_test.flux",
											Source: "testing.loadMem(csv: outData)",
											Start: ast.Position{
												Column: 51,
												Line:   190,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   190,
												},
												File:   "st_contains_linestring_test.flux",
												Source: "testing.loadMem",
												Start: ast.Position{
													Column: 51,
													Line:   190,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 58,
														Line:   190,
													},
													File:   "st_contains_linestring_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 51,
														Line:   190,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 66,
														Line:   190,
													},
													File:   "st_contains_linestring_test.flux",
													Source: "loadMem",
													Start: ast.Position{
														Column: 59,
														Line:   190,
													},
												},
											},
											Name: "loadMem",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 108,
											Line:   190,
										},
										File:   "st_contains_linestring_test.flux",
										Source: "fn: t_stContainsLinestring",
										Start: ast.Position{
											Column: 82,
											Line:   190,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 84,
												Line:   190,
											},
											File:   "st_contains_linestring_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 82,
												Line:   190,
											},
										},
									},
									Name: "fn",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 108,
												Line:   190,
											},
											File:   "st_contains_linestring_test.flux",
											Source: "t_stContainsLinestring",
											Start: ast.Position{
												Column: 86,
												Line:   190,
											},
										},
									},
									Name: "t_stContainsLinestring",
								},
							}},
							With: nil,
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 110,
						Line:   190,
					},
					File:   "st_contains_linestring_test.flux",
					Source: "test _stContainsLinestring = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stContainsLinestring})",
					Start: ast.Position{
						Column: 1,
						Line:   189,
					},
				},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 26,
						Line:   3,
					},
					File:   "st_contains_linestring_test.flux",
					Source: "import \"experimental/geo\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 26,
							Line:   3,
						},
						File:   "st_contains_linestring_test.flux",
						Source: "\"experimental/geo\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "experimental/geo",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 32,
						Line:   4,
					},
					File:   "st_contains_linestring_test.flux",
					Source: "import \"influxdata/influxdb/v1\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 32,
							Line:   4,
						},
						File:   "st_contains_linestring_test.flux",
						Source: "\"influxdata/influxdb/v1\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "influxdata/influxdb/v1",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   5,
					},
					File:   "st_contains_linestring_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   5,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   5,
						},
						File:   "st_contains_linestring_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   5,
						},
					},
				},
				Value: "testing",
			},
		}},
		Metadata: "parser-type=rust",
		Name:     "st_contains_linestring_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   1,
					},
					File:   "st_contains_linestring_test.flux",
					Source: "package geo_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   1,
						},
						File:   "st_contains_linestring_test.flux",
						Source: "geo_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "geo_test",
			},
		},
	}, &ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 100,
					Line:   237,
				},
				File:   "st_contains_test.flux",
				Source: "package geo_test\n\nimport \"experimental/geo\"\nimport \"influxdata/influxdb/v1\"\nimport \"testing\"\n\noption now = () => (2030-01-01T00:00:00Z)\n\ninData = \"\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,0,2020-04-08T15:44:58Z,40.820317,lat,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,1,2020-04-08T16:19:27Z,40.745249,lat,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,2,2020-04-08T16:16:50Z,40.751085,lat,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,3,2020-04-08T16:15:59Z,40.748141,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,4,2020-04-08T16:16:16Z,40.748909,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,5,2020-04-08T16:14:32Z,40.743989,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,6,2020-04-08T16:14:49Z,40.745851,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,7,2020-04-08T16:18:18Z,40.748495,lat,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,8,2020-04-08T16:11:03Z,40.749543,lat,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,9,2020-04-08T16:10:46Z,40.750688,lat,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,10,2020-04-08T16:09:36Z,40.757106,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,11,2020-04-08T16:09:53Z,40.7565,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,12,2020-04-08T16:09:01Z,40.757895,lat,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,13,2020-04-08T16:08:19Z,40.759873,lat,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,14,2020-04-08T16:08:38Z,40.759128,lat,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,15,2020-04-08T16:07:43Z,40.762143,lat,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,16,2020-04-08T16:06:49Z,40.762709,lat,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,17,2020-04-08T16:06:31Z,40.762441,lat,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,18,2020-04-08T16:06:11Z,40.762373,lat,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,19,2020-04-08T16:03:54Z,40.76117,lat,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,20,2020-04-08T16:04:28Z,40.761653,lat,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,21,2020-04-08T16:05:46Z,40.761908,lat,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,22,2020-04-08T16:10:29Z,40.753279,lat,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,23,2020-04-08T16:03:36Z,40.761241,lat,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,24,2020-04-08T16:02:33Z,40.761443,lat,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,25,2020-04-08T16:01:55Z,40.761878,lat,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,26,2020-04-08T15:59:24Z,40.763356,lat,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,27,2020-04-08T15:45:33Z,40.815413,lat,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,28,2020-04-08T15:45:51Z,40.814096,lat,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,29,2020-04-08T15:46:12Z,40.810699,lat,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,30,2020-04-08T15:47:45Z,40.808517,lat,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,31,2020-04-08T15:48:04Z,40.806882,lat,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,32,2020-04-08T15:49:01Z,40.800397,lat,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,33,2020-04-08T15:49:22Z,40.796724,lat,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,34,2020-04-08T15:50:44Z,40.794998,lat,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,35,2020-04-08T15:53:56Z,40.786038,lat,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,36,2020-04-08T15:52:38Z,40.787216,lat,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,37,2020-04-08T15:52:16Z,40.788413,lat,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,38,2020-04-08T15:51:55Z,40.789185,lat,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,39,2020-04-08T15:51:20Z,40.791541,lat,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,40,2020-04-08T15:51:37Z,40.791009,lat,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,41,2020-04-08T15:51:03Z,40.793905,lat,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,42,2020-04-08T15:54:57Z,40.775044,lat,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,43,2020-04-08T15:55:54Z,40.773334,lat,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,44,2020-04-08T15:56:13Z,40.772144,lat,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,45,2020-04-08T15:56:33Z,40.770953,lat,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,46,2020-04-08T15:58:10Z,40.76594,lat,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,47,2020-04-08T15:56:53Z,40.768069,lat,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,48,2020-04-08T15:57:52Z,40.76661,lat,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n,,49,2020-04-08T15:44:58Z,-73.68691,lon,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,50,2020-04-08T16:19:27Z,-73.940563,lon,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,51,2020-04-08T16:16:50Z,-73.912119,lon,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,52,2020-04-08T16:15:59Z,-73.905367,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,53,2020-04-08T16:16:16Z,-73.906398,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,54,2020-04-08T16:14:32Z,-73.900815,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,55,2020-04-08T16:14:49Z,-73.902975,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,56,2020-04-08T16:18:18Z,-73.927597,lon,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,57,2020-04-08T16:11:03Z,-73.852242,lon,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,58,2020-04-08T16:10:46Z,-73.848962,lon,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,59,2020-04-08T16:09:36Z,-73.833095,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,60,2020-04-08T16:09:53Z,-73.834298,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,61,2020-04-08T16:09:01Z,-73.831347,lon,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,62,2020-04-08T16:08:19Z,-73.826087,lon,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,63,2020-04-08T16:08:38Z,-73.828799,lon,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,64,2020-04-08T16:07:43Z,-73.817956,lon,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,65,2020-04-08T16:06:49Z,-73.814539,lon,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,66,2020-04-08T16:06:31Z,-73.810154,lon,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,67,2020-04-08T16:06:11Z,-73.809437,lon,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,68,2020-04-08T16:03:54Z,-73.795812,lon,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,69,2020-04-08T16:04:28Z,-73.801766,lon,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,70,2020-04-08T16:05:46Z,-73.804421,lon,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,71,2020-04-08T16:10:29Z,-73.841791,lon,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,72,2020-04-08T16:03:36Z,-73.792932,lon,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,73,2020-04-08T16:02:33Z,-73.789959,lon,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,74,2020-04-08T16:01:55Z,-73.785035,lon,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,75,2020-04-08T15:59:24Z,-73.769272,lon,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,76,2020-04-08T15:45:33Z,-73.690054,lon,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,77,2020-04-08T15:45:51Z,-73.693214,lon,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,78,2020-04-08T15:46:12Z,-73.695214,lon,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,79,2020-04-08T15:47:45Z,-73.695594,lon,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,80,2020-04-08T15:48:04Z,-73.695858,lon,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,81,2020-04-08T15:49:01Z,-73.695023,lon,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,82,2020-04-08T15:49:22Z,-73.699899,lon,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,83,2020-04-08T15:50:44Z,-73.702982,lon,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,84,2020-04-08T15:53:56Z,-73.72924,lon,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,85,2020-04-08T15:52:38Z,-73.7261,lon,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,86,2020-04-08T15:52:16Z,-73.721973,lon,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,87,2020-04-08T15:51:55Z,-73.720059,lon,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,88,2020-04-08T15:51:20Z,-73.713571,lon,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,89,2020-04-08T15:51:37Z,-73.715622,lon,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,90,2020-04-08T15:51:03Z,-73.705485,lon,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,91,2020-04-08T15:54:57Z,-73.740647,lon,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,92,2020-04-08T15:55:54Z,-73.742812,lon,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,93,2020-04-08T15:56:13Z,-73.74431,lon,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,94,2020-04-08T15:56:33Z,-73.745805,lon,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,95,2020-04-08T15:58:10Z,-73.752465,lon,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,96,2020-04-08T15:56:53Z,-73.749413,lon,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,97,2020-04-08T15:57:52Z,-73.751322,lon,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,98,2020-04-08T15:44:58Z,1586304000,tid,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,99,2020-04-08T16:19:27Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,100,2020-04-08T16:16:50Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,101,2020-04-08T16:15:59Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,102,2020-04-08T16:16:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,103,2020-04-08T16:14:32Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,104,2020-04-08T16:14:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,105,2020-04-08T16:18:18Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,106,2020-04-08T16:11:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,107,2020-04-08T16:10:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,108,2020-04-08T16:09:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,109,2020-04-08T16:09:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,110,2020-04-08T16:09:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,111,2020-04-08T16:08:19Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,112,2020-04-08T16:08:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,113,2020-04-08T16:07:43Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,114,2020-04-08T16:06:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,115,2020-04-08T16:06:31Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,116,2020-04-08T16:06:11Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,117,2020-04-08T16:03:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,118,2020-04-08T16:04:28Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,119,2020-04-08T16:05:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,120,2020-04-08T16:10:29Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,121,2020-04-08T16:03:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,122,2020-04-08T16:02:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,123,2020-04-08T16:01:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,124,2020-04-08T15:59:24Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,125,2020-04-08T15:45:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,126,2020-04-08T15:45:51Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,127,2020-04-08T15:46:12Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,128,2020-04-08T15:47:45Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,129,2020-04-08T15:48:04Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,130,2020-04-08T15:49:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,131,2020-04-08T15:49:22Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,132,2020-04-08T15:50:44Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,133,2020-04-08T15:53:56Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,134,2020-04-08T15:52:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,135,2020-04-08T15:52:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,136,2020-04-08T15:51:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,137,2020-04-08T15:51:20Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,138,2020-04-08T15:51:37Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,139,2020-04-08T15:51:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,140,2020-04-08T15:54:57Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,141,2020-04-08T15:55:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,142,2020-04-08T15:56:13Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,143,2020-04-08T15:56:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,144,2020-04-08T15:58:10Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,145,2020-04-08T15:56:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,146,2020-04-08T15:57:52Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\"\n\noutData = \"\n#group,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true\n#datatype,string,long,string,string,boolean,dateTime:RFC3339,string,string,double,double,string,string,string,string,long,string\n#default,_result,,,,,,,,,,,,,,,\n,result,table,_measurement,_pt,_st_contains,_time,area,id,lat,lon,s2_cell_id,seq_idx,status,stop_id,tid,trip_id\n,,0,mta,start,false,2020-04-08T15:44:58Z,LLIR,GO506_20_6431,40.820317,-73.68691,89c288c54,1,STOPPED_AT,171,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:45:33Z,LLIR,GO506_20_6431,40.815413,-73.690054,89c288dcc,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:45:51Z,LLIR,GO506_20_6431,40.814096,-73.693214,89c288ddc,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:46:12Z,LLIR,GO506_20_6431,40.810699,-73.695214,89c288e0c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:47:45Z,LLIR,GO506_20_6431,40.808517,-73.695594,89c288e14,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:48:04Z,LLIR,GO506_20_6431,40.806882,-73.695858,89c288e3c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:49:01Z,LLIR,GO506_20_6431,40.800397,-73.695023,89c288fcc,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:49:22Z,LLIR,GO506_20_6431,40.796724,-73.699899,89c288fe4,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:50:44Z,LLIR,GO506_20_6431,40.794998,-73.702982,89c289004,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:51:03Z,LLIR,GO506_20_6431,40.793905,-73.705485,89c289aa4,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:51:20Z,LLIR,GO506_20_6431,40.791541,-73.713571,89c289a64,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:51:37Z,LLIR,GO506_20_6431,40.791009,-73.715622,89c289a6c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:51:55Z,LLIR,GO506_20_6431,40.789185,-73.720059,89c289a3c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:52:16Z,LLIR,GO506_20_6431,40.788413,-73.721973,89c289a2c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:52:38Z,LLIR,GO506_20_6431,40.787216,-73.7261,89c28997c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:53:56Z,LLIR,GO506_20_6431,40.786038,-73.72924,89c289974,5,IN_TRANSIT_TO,120,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:54:57Z,LLIR,GO506_20_6431,40.775044,-73.740647,89c289f3c,5,STOPPED_AT,120,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:55:54Z,LLIR,GO506_20_6431,40.773334,-73.742812,89c289f6c,5,STOPPED_AT,120,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:56:13Z,LLIR,GO506_20_6431,40.772144,-73.74431,89c289f74,6,IN_TRANSIT_TO,42,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:56:33Z,LLIR,GO506_20_6431,40.770953,-73.745805,89c289f7c,6,IN_TRANSIT_TO,42,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:56:53Z,LLIR,GO506_20_6431,40.768069,-73.749413,89c28a024,6,STOPPED_AT,42,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:57:52Z,LLIR,GO506_20_6431,40.76661,-73.751322,89c28a03c,6,STOPPED_AT,42,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:58:10Z,LLIR,GO506_20_6431,40.76594,-73.752465,89c28a014,7,IN_TRANSIT_TO,25,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:59:24Z,LLIR,GO506_20_6431,40.763356,-73.769272,89c261e04,7,STOPPED_AT,25,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:01:55Z,LLIR,GO506_20_6431,40.761878,-73.785035,89c261d74,8,IN_TRANSIT_TO,2,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:02:33Z,LLIR,GO506_20_6431,40.761443,-73.789959,89c261d3c,8,STOPPED_AT,2,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:03:36Z,LLIR,GO506_20_6431,40.761241,-73.792932,89c261d34,8,STOPPED_AT,2,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:03:54Z,LLIR,GO506_20_6431,40.76117,-73.795812,89c2602cc,9,IN_TRANSIT_TO,11,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:04:28Z,LLIR,GO506_20_6431,40.761653,-73.801766,89c2602ec,9,STOPPED_AT,11,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:05:46Z,LLIR,GO506_20_6431,40.761908,-73.804421,89c2602f4,9,STOPPED_AT,11,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:06:11Z,LLIR,GO506_20_6431,40.762373,-73.809437,89c260254,10,IN_TRANSIT_TO,130,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:06:31Z,LLIR,GO506_20_6431,40.762441,-73.810154,89c26024c,10,IN_TRANSIT_TO,130,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:06:49Z,LLIR,GO506_20_6431,40.762709,-73.814539,89c260234,10,STOPPED_AT,130,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:07:43Z,LLIR,GO506_20_6431,40.762143,-73.817956,89c26022c,11,IN_TRANSIT_TO,56,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:08:19Z,LLIR,GO506_20_6431,40.759873,-73.826087,89c26010c,11,IN_TRANSIT_TO,56,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:08:38Z,LLIR,GO506_20_6431,40.759128,-73.828799,89c26011c,11,STOPPED_AT,56,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:09:01Z,LLIR,GO506_20_6431,40.757895,-73.831347,89c2600dc,11,STOPPED_AT,56,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:09:36Z,LLIR,GO506_20_6431,40.757106,-73.833095,89c2600c4,11,STOPPED_AT,56,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:09:53Z,LLIR,GO506_20_6431,40.7565,-73.834298,89c2600c4,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:10:29Z,LLIR,GO506_20_6431,40.753279,-73.841791,89c260754,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:10:46Z,LLIR,GO506_20_6431,40.750688,-73.848962,89c25fdbc,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:11:03Z,LLIR,GO506_20_6431,40.749543,-73.852242,89c25fdb4,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:14:32Z,LLIR,GO506_20_6431,40.743989,-73.900815,89c25f1d4,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:14:49Z,LLIR,GO506_20_6431,40.745851,-73.902975,89c25f1d4,12,STOPPED_AT,214,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:15:59Z,LLIR,GO506_20_6431,40.748141,-73.905367,89c25f1c4,12,STOPPED_AT,214,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:16:16Z,LLIR,GO506_20_6431,40.748909,-73.906398,89c25f1c4,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:16:50Z,LLIR,GO506_20_6431,40.751085,-73.912119,89c25f18c,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:18:18Z,LLIR,GO506_20_6431,40.748495,-73.927597,89c25f29c,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:19:27Z,LLIR,GO506_20_6431,40.745249,-73.940563,89c2592bc,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n\"\n\n// polygon in Brooklyn\nbt = {points: [{lat: 40.671659, lon: -73.936631}, {lat: 40.706543, lon: -73.749177},{lat: 40.791333, lon: -73.880327}]}\n\nt_stContains = (table=<-) =>\n  table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to see the train crossing defined region\n    |> map(fn: (r) => ({\n        r with _st_contains: geo.ST_Contains(region: bt, geometry: {lat: r.lat, lon: r.lon})\n    }))\n    |> drop(columns: [\"_start\", \"_stop\"])\ntest _stContains = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stContains})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   7,
						},
						File:   "st_contains_test.flux",
						Source: "now = () => (2030-01-01T00:00:00Z)",
						Start: ast.Position{
							Column: 8,
							Line:   7,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   7,
							},
							File:   "st_contains_test.flux",
							Source: "now",
							Start: ast.Position{
								Column: 8,
								Line:   7,
							},
						},
					},
					Name: "now",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   7,
							},
							File:   "st_contains_test.flux",
							Source: "() => (2030-01-01T00:00:00Z)",
							Start: ast.Position{
								Column: 14,
								Line:   7,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   7,
								},
								File:   "st_contains_test.flux",
								Source: "(2030-01-01T00:00:00Z)",
								Start: ast.Position{
									Column: 20,
									Line:   7,
								},
							},
						},
						Expression: &ast.DateTimeLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   7,
									},
									File:   "st_contains_test.flux",
									Source: "2030-01-01T00:00:00Z",
									Start: ast.Position{
										Column: 21,
										Line:   7,
									},
								},
							},
							Value: parser.MustParseTime("2030-01-01T00:00:00Z"),
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   7,
					},
					File:   "st_contains_test.flux",
					Source: "option now = () => (2030-01-01T00:00:00Z)",
					Start: ast.Position{
						Column: 1,
						Line:   7,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   166,
					},
					File:   "st_contains_test.flux",
					Source: "inData = \"\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,0,2020-04-08T15:44:58Z,40.820317,lat,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,1,2020-04-08T16:19:27Z,40.745249,lat,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,2,2020-04-08T16:16:50Z,40.751085,lat,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,3,2020-04-08T16:15:59Z,40.748141,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,4,2020-04-08T16:16:16Z,40.748909,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,5,2020-04-08T16:14:32Z,40.743989,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,6,2020-04-08T16:14:49Z,40.745851,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,7,2020-04-08T16:18:18Z,40.748495,lat,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,8,2020-04-08T16:11:03Z,40.749543,lat,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,9,2020-04-08T16:10:46Z,40.750688,lat,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,10,2020-04-08T16:09:36Z,40.757106,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,11,2020-04-08T16:09:53Z,40.7565,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,12,2020-04-08T16:09:01Z,40.757895,lat,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,13,2020-04-08T16:08:19Z,40.759873,lat,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,14,2020-04-08T16:08:38Z,40.759128,lat,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,15,2020-04-08T16:07:43Z,40.762143,lat,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,16,2020-04-08T16:06:49Z,40.762709,lat,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,17,2020-04-08T16:06:31Z,40.762441,lat,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,18,2020-04-08T16:06:11Z,40.762373,lat,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,19,2020-04-08T16:03:54Z,40.76117,lat,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,20,2020-04-08T16:04:28Z,40.761653,lat,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,21,2020-04-08T16:05:46Z,40.761908,lat,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,22,2020-04-08T16:10:29Z,40.753279,lat,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,23,2020-04-08T16:03:36Z,40.761241,lat,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,24,2020-04-08T16:02:33Z,40.761443,lat,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,25,2020-04-08T16:01:55Z,40.761878,lat,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,26,2020-04-08T15:59:24Z,40.763356,lat,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,27,2020-04-08T15:45:33Z,40.815413,lat,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,28,2020-04-08T15:45:51Z,40.814096,lat,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,29,2020-04-08T15:46:12Z,40.810699,lat,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,30,2020-04-08T15:47:45Z,40.808517,lat,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,31,2020-04-08T15:48:04Z,40.806882,lat,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,32,2020-04-08T15:49:01Z,40.800397,lat,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,33,2020-04-08T15:49:22Z,40.796724,lat,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,34,2020-04-08T15:50:44Z,40.794998,lat,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,35,2020-04-08T15:53:56Z,40.786038,lat,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,36,2020-04-08T15:52:38Z,40.787216,lat,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,37,2020-04-08T15:52:16Z,40.788413,lat,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,38,2020-04-08T15:51:55Z,40.789185,lat,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,39,2020-04-08T15:51:20Z,40.791541,lat,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,40,2020-04-08T15:51:37Z,40.791009,lat,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,41,2020-04-08T15:51:03Z,40.793905,lat,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,42,2020-04-08T15:54:57Z,40.775044,lat,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,43,2020-04-08T15:55:54Z,40.773334,lat,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,44,2020-04-08T15:56:13Z,40.772144,lat,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,45,2020-04-08T15:56:33Z,40.770953,lat,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,46,2020-04-08T15:58:10Z,40.76594,lat,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,47,2020-04-08T15:56:53Z,40.768069,lat,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,48,2020-04-08T15:57:52Z,40.76661,lat,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n,,49,2020-04-08T15:44:58Z,-73.68691,lon,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,50,2020-04-08T16:19:27Z,-73.940563,lon,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,51,2020-04-08T16:16:50Z,-73.912119,lon,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,52,2020-04-08T16:15:59Z,-73.905367,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,53,2020-04-08T16:16:16Z,-73.906398,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,54,2020-04-08T16:14:32Z,-73.900815,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,55,2020-04-08T16:14:49Z,-73.902975,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,56,2020-04-08T16:18:18Z,-73.927597,lon,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,57,2020-04-08T16:11:03Z,-73.852242,lon,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,58,2020-04-08T16:10:46Z,-73.848962,lon,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,59,2020-04-08T16:09:36Z,-73.833095,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,60,2020-04-08T16:09:53Z,-73.834298,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,61,2020-04-08T16:09:01Z,-73.831347,lon,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,62,2020-04-08T16:08:19Z,-73.826087,lon,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,63,2020-04-08T16:08:38Z,-73.828799,lon,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,64,2020-04-08T16:07:43Z,-73.817956,lon,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,65,2020-04-08T16:06:49Z,-73.814539,lon,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,66,2020-04-08T16:06:31Z,-73.810154,lon,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,67,2020-04-08T16:06:11Z,-73.809437,lon,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,68,2020-04-08T16:03:54Z,-73.795812,lon,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,69,2020-04-08T16:04:28Z,-73.801766,lon,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,70,2020-04-08T16:05:46Z,-73.804421,lon,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,71,2020-04-08T16:10:29Z,-73.841791,lon,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,72,2020-04-08T16:03:36Z,-73.792932,lon,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,73,2020-04-08T16:02:33Z,-73.789959,lon,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,74,2020-04-08T16:01:55Z,-73.785035,lon,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,75,2020-04-08T15:59:24Z,-73.769272,lon,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,76,2020-04-08T15:45:33Z,-73.690054,lon,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,77,2020-04-08T15:45:51Z,-73.693214,lon,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,78,2020-04-08T15:46:12Z,-73.695214,lon,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,79,2020-04-08T15:47:45Z,-73.695594,lon,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,80,2020-04-08T15:48:04Z,-73.695858,lon,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,81,2020-04-08T15:49:01Z,-73.695023,lon,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,82,2020-04-08T15:49:22Z,-73.699899,lon,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,83,2020-04-08T15:50:44Z,-73.702982,lon,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,84,2020-04-08T15:53:56Z,-73.72924,lon,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,85,2020-04-08T15:52:38Z,-73.7261,lon,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,86,2020-04-08T15:52:16Z,-73.721973,lon,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,87,2020-04-08T15:51:55Z,-73.720059,lon,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,88,2020-04-08T15:51:20Z,-73.713571,lon,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,89,2020-04-08T15:51:37Z,-73.715622,lon,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,90,2020-04-08T15:51:03Z,-73.705485,lon,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,91,2020-04-08T15:54:57Z,-73.740647,lon,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,92,2020-04-08T15:55:54Z,-73.742812,lon,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,93,2020-04-08T15:56:13Z,-73.74431,lon,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,94,2020-04-08T15:56:33Z,-73.745805,lon,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,95,2020-04-08T15:58:10Z,-73.752465,lon,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,96,2020-04-08T15:56:53Z,-73.749413,lon,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,97,2020-04-08T15:57:52Z,-73.751322,lon,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,98,2020-04-08T15:44:58Z,1586304000,tid,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,99,2020-04-08T16:19:27Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,100,2020-04-08T16:16:50Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,101,2020-04-08T16:15:59Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,102,2020-04-08T16:16:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,103,2020-04-08T16:14:32Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,104,2020-04-08T16:14:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,105,2020-04-08T16:18:18Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,106,2020-04-08T16:11:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,107,2020-04-08T16:10:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,108,2020-04-08T16:09:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,109,2020-04-08T16:09:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,110,2020-04-08T16:09:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,111,2020-04-08T16:08:19Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,112,2020-04-08T16:08:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,113,2020-04-08T16:07:43Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,114,2020-04-08T16:06:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,115,2020-04-08T16:06:31Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,116,2020-04-08T16:06:11Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,117,2020-04-08T16:03:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,118,2020-04-08T16:04:28Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,119,2020-04-08T16:05:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,120,2020-04-08T16:10:29Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,121,2020-04-08T16:03:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,122,2020-04-08T16:02:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,123,2020-04-08T16:01:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,124,2020-04-08T15:59:24Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,125,2020-04-08T15:45:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,126,2020-04-08T15:45:51Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,127,2020-04-08T15:46:12Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,128,2020-04-08T15:47:45Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,129,2020-04-08T15:48:04Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,130,2020-04-08T15:49:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,131,2020-04-08T15:49:22Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,132,2020-04-08T15:50:44Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,133,2020-04-08T15:53:56Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,134,2020-04-08T15:52:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,135,2020-04-08T15:52:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,136,2020-04-08T15:51:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,137,2020-04-08T15:51:20Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,138,2020-04-08T15:51:37Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,139,2020-04-08T15:51:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,140,2020-04-08T15:54:57Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,141,2020-04-08T15:55:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,142,2020-04-08T15:56:13Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,143,2020-04-08T15:56:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,144,2020-04-08T15:58:10Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,145,2020-04-08T15:56:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,146,2020-04-08T15:57:52Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   9,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 7,
							Line:   9,
						},
						File:   "st_contains_test.flux",
						Source: "inData",
						Start: ast.Position{
							Column: 1,
							Line:   9,
						},
					},
				},
				Name: "inData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   166,
						},
						File:   "st_contains_test.flux",
						Source: "\"\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,0,2020-04-08T15:44:58Z,40.820317,lat,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,1,2020-04-08T16:19:27Z,40.745249,lat,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,2,2020-04-08T16:16:50Z,40.751085,lat,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,3,2020-04-08T16:15:59Z,40.748141,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,4,2020-04-08T16:16:16Z,40.748909,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,5,2020-04-08T16:14:32Z,40.743989,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,6,2020-04-08T16:14:49Z,40.745851,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,7,2020-04-08T16:18:18Z,40.748495,lat,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,8,2020-04-08T16:11:03Z,40.749543,lat,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,9,2020-04-08T16:10:46Z,40.750688,lat,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,10,2020-04-08T16:09:36Z,40.757106,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,11,2020-04-08T16:09:53Z,40.7565,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,12,2020-04-08T16:09:01Z,40.757895,lat,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,13,2020-04-08T16:08:19Z,40.759873,lat,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,14,2020-04-08T16:08:38Z,40.759128,lat,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,15,2020-04-08T16:07:43Z,40.762143,lat,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,16,2020-04-08T16:06:49Z,40.762709,lat,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,17,2020-04-08T16:06:31Z,40.762441,lat,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,18,2020-04-08T16:06:11Z,40.762373,lat,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,19,2020-04-08T16:03:54Z,40.76117,lat,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,20,2020-04-08T16:04:28Z,40.761653,lat,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,21,2020-04-08T16:05:46Z,40.761908,lat,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,22,2020-04-08T16:10:29Z,40.753279,lat,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,23,2020-04-08T16:03:36Z,40.761241,lat,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,24,2020-04-08T16:02:33Z,40.761443,lat,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,25,2020-04-08T16:01:55Z,40.761878,lat,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,26,2020-04-08T15:59:24Z,40.763356,lat,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,27,2020-04-08T15:45:33Z,40.815413,lat,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,28,2020-04-08T15:45:51Z,40.814096,lat,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,29,2020-04-08T15:46:12Z,40.810699,lat,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,30,2020-04-08T15:47:45Z,40.808517,lat,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,31,2020-04-08T15:48:04Z,40.806882,lat,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,32,2020-04-08T15:49:01Z,40.800397,lat,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,33,2020-04-08T15:49:22Z,40.796724,lat,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,34,2020-04-08T15:50:44Z,40.794998,lat,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,35,2020-04-08T15:53:56Z,40.786038,lat,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,36,2020-04-08T15:52:38Z,40.787216,lat,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,37,2020-04-08T15:52:16Z,40.788413,lat,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,38,2020-04-08T15:51:55Z,40.789185,lat,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,39,2020-04-08T15:51:20Z,40.791541,lat,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,40,2020-04-08T15:51:37Z,40.791009,lat,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,41,2020-04-08T15:51:03Z,40.793905,lat,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,42,2020-04-08T15:54:57Z,40.775044,lat,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,43,2020-04-08T15:55:54Z,40.773334,lat,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,44,2020-04-08T15:56:13Z,40.772144,lat,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,45,2020-04-08T15:56:33Z,40.770953,lat,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,46,2020-04-08T15:58:10Z,40.76594,lat,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,47,2020-04-08T15:56:53Z,40.768069,lat,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,48,2020-04-08T15:57:52Z,40.76661,lat,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n,,49,2020-04-08T15:44:58Z,-73.68691,lon,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,50,2020-04-08T16:19:27Z,-73.940563,lon,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,51,2020-04-08T16:16:50Z,-73.912119,lon,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,52,2020-04-08T16:15:59Z,-73.905367,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,53,2020-04-08T16:16:16Z,-73.906398,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,54,2020-04-08T16:14:32Z,-73.900815,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,55,2020-04-08T16:14:49Z,-73.902975,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,56,2020-04-08T16:18:18Z,-73.927597,lon,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,57,2020-04-08T16:11:03Z,-73.852242,lon,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,58,2020-04-08T16:10:46Z,-73.848962,lon,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,59,2020-04-08T16:09:36Z,-73.833095,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,60,2020-04-08T16:09:53Z,-73.834298,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,61,2020-04-08T16:09:01Z,-73.831347,lon,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,62,2020-04-08T16:08:19Z,-73.826087,lon,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,63,2020-04-08T16:08:38Z,-73.828799,lon,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,64,2020-04-08T16:07:43Z,-73.817956,lon,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,65,2020-04-08T16:06:49Z,-73.814539,lon,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,66,2020-04-08T16:06:31Z,-73.810154,lon,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,67,2020-04-08T16:06:11Z,-73.809437,lon,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,68,2020-04-08T16:03:54Z,-73.795812,lon,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,69,2020-04-08T16:04:28Z,-73.801766,lon,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,70,2020-04-08T16:05:46Z,-73.804421,lon,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,71,2020-04-08T16:10:29Z,-73.841791,lon,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,72,2020-04-08T16:03:36Z,-73.792932,lon,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,73,2020-04-08T16:02:33Z,-73.789959,lon,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,74,2020-04-08T16:01:55Z,-73.785035,lon,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,75,2020-04-08T15:59:24Z,-73.769272,lon,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,76,2020-04-08T15:45:33Z,-73.690054,lon,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,77,2020-04-08T15:45:51Z,-73.693214,lon,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,78,2020-04-08T15:46:12Z,-73.695214,lon,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,79,2020-04-08T15:47:45Z,-73.695594,lon,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,80,2020-04-08T15:48:04Z,-73.695858,lon,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,81,2020-04-08T15:49:01Z,-73.695023,lon,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,82,2020-04-08T15:49:22Z,-73.699899,lon,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,83,2020-04-08T15:50:44Z,-73.702982,lon,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,84,2020-04-08T15:53:56Z,-73.72924,lon,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,85,2020-04-08T15:52:38Z,-73.7261,lon,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,86,2020-04-08T15:52:16Z,-73.721973,lon,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,87,2020-04-08T15:51:55Z,-73.720059,lon,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,88,2020-04-08T15:51:20Z,-73.713571,lon,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,89,2020-04-08T15:51:37Z,-73.715622,lon,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,90,2020-04-08T15:51:03Z,-73.705485,lon,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,91,2020-04-08T15:54:57Z,-73.740647,lon,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,92,2020-04-08T15:55:54Z,-73.742812,lon,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,93,2020-04-08T15:56:13Z,-73.74431,lon,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,94,2020-04-08T15:56:33Z,-73.745805,lon,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,95,2020-04-08T15:58:10Z,-73.752465,lon,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,96,2020-04-08T15:56:53Z,-73.749413,lon,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,97,2020-04-08T15:57:52Z,-73.751322,lon,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,98,2020-04-08T15:44:58Z,1586304000,tid,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,99,2020-04-08T16:19:27Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,100,2020-04-08T16:16:50Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,101,2020-04-08T16:15:59Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,102,2020-04-08T16:16:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,103,2020-04-08T16:14:32Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,104,2020-04-08T16:14:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,105,2020-04-08T16:18:18Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,106,2020-04-08T16:11:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,107,2020-04-08T16:10:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,108,2020-04-08T16:09:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,109,2020-04-08T16:09:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,110,2020-04-08T16:09:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,111,2020-04-08T16:08:19Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,112,2020-04-08T16:08:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,113,2020-04-08T16:07:43Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,114,2020-04-08T16:06:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,115,2020-04-08T16:06:31Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,116,2020-04-08T16:06:11Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,117,2020-04-08T16:03:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,118,2020-04-08T16:04:28Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,119,2020-04-08T16:05:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,120,2020-04-08T16:10:29Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,121,2020-04-08T16:03:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,122,2020-04-08T16:02:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,123,2020-04-08T16:01:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,124,2020-04-08T15:59:24Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,125,2020-04-08T15:45:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,126,2020-04-08T15:45:51Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,127,2020-04-08T15:46:12Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,128,2020-04-08T15:47:45Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,129,2020-04-08T15:48:04Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,130,2020-04-08T15:49:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,131,2020-04-08T15:49:22Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,132,2020-04-08T15:50:44Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,133,2020-04-08T15:53:56Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,134,2020-04-08T15:52:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,135,2020-04-08T15:52:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,136,2020-04-08T15:51:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,137,2020-04-08T15:51:20Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,138,2020-04-08T15:51:37Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,139,2020-04-08T15:51:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,140,2020-04-08T15:54:57Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,141,2020-04-08T15:55:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,142,2020-04-08T15:56:13Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,143,2020-04-08T15:56:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,144,2020-04-08T15:58:10Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,145,2020-04-08T15:56:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,146,2020-04-08T15:57:52Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\"",
						Start: ast.Position{
							Column: 10,
							Line:   9,
						},
					},
				},
				Value: "\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,0,2020-04-08T15:44:58Z,40.820317,lat,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,1,2020-04-08T16:19:27Z,40.745249,lat,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,2,2020-04-08T16:16:50Z,40.751085,lat,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,3,2020-04-08T16:15:59Z,40.748141,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,4,2020-04-08T16:16:16Z,40.748909,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,5,2020-04-08T16:14:32Z,40.743989,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,6,2020-04-08T16:14:49Z,40.745851,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,7,2020-04-08T16:18:18Z,40.748495,lat,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,8,2020-04-08T16:11:03Z,40.749543,lat,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,9,2020-04-08T16:10:46Z,40.750688,lat,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,10,2020-04-08T16:09:36Z,40.757106,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,11,2020-04-08T16:09:53Z,40.7565,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,12,2020-04-08T16:09:01Z,40.757895,lat,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,13,2020-04-08T16:08:19Z,40.759873,lat,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,14,2020-04-08T16:08:38Z,40.759128,lat,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,15,2020-04-08T16:07:43Z,40.762143,lat,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,16,2020-04-08T16:06:49Z,40.762709,lat,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,17,2020-04-08T16:06:31Z,40.762441,lat,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,18,2020-04-08T16:06:11Z,40.762373,lat,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,19,2020-04-08T16:03:54Z,40.76117,lat,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,20,2020-04-08T16:04:28Z,40.761653,lat,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,21,2020-04-08T16:05:46Z,40.761908,lat,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,22,2020-04-08T16:10:29Z,40.753279,lat,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,23,2020-04-08T16:03:36Z,40.761241,lat,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,24,2020-04-08T16:02:33Z,40.761443,lat,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,25,2020-04-08T16:01:55Z,40.761878,lat,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,26,2020-04-08T15:59:24Z,40.763356,lat,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,27,2020-04-08T15:45:33Z,40.815413,lat,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,28,2020-04-08T15:45:51Z,40.814096,lat,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,29,2020-04-08T15:46:12Z,40.810699,lat,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,30,2020-04-08T15:47:45Z,40.808517,lat,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,31,2020-04-08T15:48:04Z,40.806882,lat,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,32,2020-04-08T15:49:01Z,40.800397,lat,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,33,2020-04-08T15:49:22Z,40.796724,lat,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,34,2020-04-08T15:50:44Z,40.794998,lat,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,35,2020-04-08T15:53:56Z,40.786038,lat,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,36,2020-04-08T15:52:38Z,40.787216,lat,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,37,2020-04-08T15:52:16Z,40.788413,lat,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,38,2020-04-08T15:51:55Z,40.789185,lat,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,39,2020-04-08T15:51:20Z,40.791541,lat,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,40,2020-04-08T15:51:37Z,40.791009,lat,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,41,2020-04-08T15:51:03Z,40.793905,lat,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,42,2020-04-08T15:54:57Z,40.775044,lat,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,43,2020-04-08T15:55:54Z,40.773334,lat,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,44,2020-04-08T15:56:13Z,40.772144,lat,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,45,2020-04-08T15:56:33Z,40.770953,lat,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,46,2020-04-08T15:58:10Z,40.76594,lat,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,47,2020-04-08T15:56:53Z,40.768069,lat,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,48,2020-04-08T15:57:52Z,40.76661,lat,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n,,49,2020-04-08T15:44:58Z,-73.68691,lon,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,50,2020-04-08T16:19:27Z,-73.940563,lon,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,51,2020-04-08T16:16:50Z,-73.912119,lon,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,52,2020-04-08T16:15:59Z,-73.905367,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,53,2020-04-08T16:16:16Z,-73.906398,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,54,2020-04-08T16:14:32Z,-73.900815,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,55,2020-04-08T16:14:49Z,-73.902975,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,56,2020-04-08T16:18:18Z,-73.927597,lon,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,57,2020-04-08T16:11:03Z,-73.852242,lon,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,58,2020-04-08T16:10:46Z,-73.848962,lon,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,59,2020-04-08T16:09:36Z,-73.833095,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,60,2020-04-08T16:09:53Z,-73.834298,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,61,2020-04-08T16:09:01Z,-73.831347,lon,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,62,2020-04-08T16:08:19Z,-73.826087,lon,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,63,2020-04-08T16:08:38Z,-73.828799,lon,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,64,2020-04-08T16:07:43Z,-73.817956,lon,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,65,2020-04-08T16:06:49Z,-73.814539,lon,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,66,2020-04-08T16:06:31Z,-73.810154,lon,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,67,2020-04-08T16:06:11Z,-73.809437,lon,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,68,2020-04-08T16:03:54Z,-73.795812,lon,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,69,2020-04-08T16:04:28Z,-73.801766,lon,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,70,2020-04-08T16:05:46Z,-73.804421,lon,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,71,2020-04-08T16:10:29Z,-73.841791,lon,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,72,2020-04-08T16:03:36Z,-73.792932,lon,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,73,2020-04-08T16:02:33Z,-73.789959,lon,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,74,2020-04-08T16:01:55Z,-73.785035,lon,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,75,2020-04-08T15:59:24Z,-73.769272,lon,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,76,2020-04-08T15:45:33Z,-73.690054,lon,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,77,2020-04-08T15:45:51Z,-73.693214,lon,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,78,2020-04-08T15:46:12Z,-73.695214,lon,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,79,2020-04-08T15:47:45Z,-73.695594,lon,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,80,2020-04-08T15:48:04Z,-73.695858,lon,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,81,2020-04-08T15:49:01Z,-73.695023,lon,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,82,2020-04-08T15:49:22Z,-73.699899,lon,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,83,2020-04-08T15:50:44Z,-73.702982,lon,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,84,2020-04-08T15:53:56Z,-73.72924,lon,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,85,2020-04-08T15:52:38Z,-73.7261,lon,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,86,2020-04-08T15:52:16Z,-73.721973,lon,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,87,2020-04-08T15:51:55Z,-73.720059,lon,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,88,2020-04-08T15:51:20Z,-73.713571,lon,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,89,2020-04-08T15:51:37Z,-73.715622,lon,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,90,2020-04-08T15:51:03Z,-73.705485,lon,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,91,2020-04-08T15:54:57Z,-73.740647,lon,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,92,2020-04-08T15:55:54Z,-73.742812,lon,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,93,2020-04-08T15:56:13Z,-73.74431,lon,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,94,2020-04-08T15:56:33Z,-73.745805,lon,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,95,2020-04-08T15:58:10Z,-73.752465,lon,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,96,2020-04-08T15:56:53Z,-73.749413,lon,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,97,2020-04-08T15:57:52Z,-73.751322,lon,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,98,2020-04-08T15:44:58Z,1586304000,tid,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,99,2020-04-08T16:19:27Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,100,2020-04-08T16:16:50Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,101,2020-04-08T16:15:59Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,102,2020-04-08T16:16:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,103,2020-04-08T16:14:32Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,104,2020-04-08T16:14:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,105,2020-04-08T16:18:18Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,106,2020-04-08T16:11:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,107,2020-04-08T16:10:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,108,2020-04-08T16:09:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,109,2020-04-08T16:09:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,110,2020-04-08T16:09:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,111,2020-04-08T16:08:19Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,112,2020-04-08T16:08:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,113,2020-04-08T16:07:43Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,114,2020-04-08T16:06:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,115,2020-04-08T16:06:31Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,116,2020-04-08T16:06:11Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,117,2020-04-08T16:03:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,118,2020-04-08T16:04:28Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,119,2020-04-08T16:05:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,120,2020-04-08T16:10:29Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,121,2020-04-08T16:03:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,122,2020-04-08T16:02:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,123,2020-04-08T16:01:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,124,2020-04-08T15:59:24Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,125,2020-04-08T15:45:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,126,2020-04-08T15:45:51Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,127,2020-04-08T15:46:12Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,128,2020-04-08T15:47:45Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,129,2020-04-08T15:48:04Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,130,2020-04-08T15:49:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,131,2020-04-08T15:49:22Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,132,2020-04-08T15:50:44Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,133,2020-04-08T15:53:56Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,134,2020-04-08T15:52:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,135,2020-04-08T15:52:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,136,2020-04-08T15:51:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,137,2020-04-08T15:51:20Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,138,2020-04-08T15:51:37Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,139,2020-04-08T15:51:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,140,2020-04-08T15:54:57Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,141,2020-04-08T15:55:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,142,2020-04-08T15:56:13Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,143,2020-04-08T15:56:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,144,2020-04-08T15:58:10Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,145,2020-04-08T15:56:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,146,2020-04-08T15:57:52Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   222,
					},
					File:   "st_contains_test.flux",
					Source: "outData = \"\n#group,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true\n#datatype,string,long,string,string,boolean,dateTime:RFC3339,string,string,double,double,string,string,string,string,long,string\n#default,_result,,,,,,,,,,,,,,,\n,result,table,_measurement,_pt,_st_contains,_time,area,id,lat,lon,s2_cell_id,seq_idx,status,stop_id,tid,trip_id\n,,0,mta,start,false,2020-04-08T15:44:58Z,LLIR,GO506_20_6431,40.820317,-73.68691,89c288c54,1,STOPPED_AT,171,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:45:33Z,LLIR,GO506_20_6431,40.815413,-73.690054,89c288dcc,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:45:51Z,LLIR,GO506_20_6431,40.814096,-73.693214,89c288ddc,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:46:12Z,LLIR,GO506_20_6431,40.810699,-73.695214,89c288e0c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:47:45Z,LLIR,GO506_20_6431,40.808517,-73.695594,89c288e14,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:48:04Z,LLIR,GO506_20_6431,40.806882,-73.695858,89c288e3c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:49:01Z,LLIR,GO506_20_6431,40.800397,-73.695023,89c288fcc,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:49:22Z,LLIR,GO506_20_6431,40.796724,-73.699899,89c288fe4,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:50:44Z,LLIR,GO506_20_6431,40.794998,-73.702982,89c289004,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:51:03Z,LLIR,GO506_20_6431,40.793905,-73.705485,89c289aa4,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:51:20Z,LLIR,GO506_20_6431,40.791541,-73.713571,89c289a64,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:51:37Z,LLIR,GO506_20_6431,40.791009,-73.715622,89c289a6c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:51:55Z,LLIR,GO506_20_6431,40.789185,-73.720059,89c289a3c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:52:16Z,LLIR,GO506_20_6431,40.788413,-73.721973,89c289a2c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:52:38Z,LLIR,GO506_20_6431,40.787216,-73.7261,89c28997c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:53:56Z,LLIR,GO506_20_6431,40.786038,-73.72924,89c289974,5,IN_TRANSIT_TO,120,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:54:57Z,LLIR,GO506_20_6431,40.775044,-73.740647,89c289f3c,5,STOPPED_AT,120,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:55:54Z,LLIR,GO506_20_6431,40.773334,-73.742812,89c289f6c,5,STOPPED_AT,120,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:56:13Z,LLIR,GO506_20_6431,40.772144,-73.74431,89c289f74,6,IN_TRANSIT_TO,42,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:56:33Z,LLIR,GO506_20_6431,40.770953,-73.745805,89c289f7c,6,IN_TRANSIT_TO,42,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:56:53Z,LLIR,GO506_20_6431,40.768069,-73.749413,89c28a024,6,STOPPED_AT,42,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:57:52Z,LLIR,GO506_20_6431,40.76661,-73.751322,89c28a03c,6,STOPPED_AT,42,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:58:10Z,LLIR,GO506_20_6431,40.76594,-73.752465,89c28a014,7,IN_TRANSIT_TO,25,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:59:24Z,LLIR,GO506_20_6431,40.763356,-73.769272,89c261e04,7,STOPPED_AT,25,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:01:55Z,LLIR,GO506_20_6431,40.761878,-73.785035,89c261d74,8,IN_TRANSIT_TO,2,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:02:33Z,LLIR,GO506_20_6431,40.761443,-73.789959,89c261d3c,8,STOPPED_AT,2,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:03:36Z,LLIR,GO506_20_6431,40.761241,-73.792932,89c261d34,8,STOPPED_AT,2,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:03:54Z,LLIR,GO506_20_6431,40.76117,-73.795812,89c2602cc,9,IN_TRANSIT_TO,11,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:04:28Z,LLIR,GO506_20_6431,40.761653,-73.801766,89c2602ec,9,STOPPED_AT,11,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:05:46Z,LLIR,GO506_20_6431,40.761908,-73.804421,89c2602f4,9,STOPPED_AT,11,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:06:11Z,LLIR,GO506_20_6431,40.762373,-73.809437,89c260254,10,IN_TRANSIT_TO,130,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:06:31Z,LLIR,GO506_20_6431,40.762441,-73.810154,89c26024c,10,IN_TRANSIT_TO,130,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:06:49Z,LLIR,GO506_20_6431,40.762709,-73.814539,89c260234,10,STOPPED_AT,130,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:07:43Z,LLIR,GO506_20_6431,40.762143,-73.817956,89c26022c,11,IN_TRANSIT_TO,56,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:08:19Z,LLIR,GO506_20_6431,40.759873,-73.826087,89c26010c,11,IN_TRANSIT_TO,56,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:08:38Z,LLIR,GO506_20_6431,40.759128,-73.828799,89c26011c,11,STOPPED_AT,56,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:09:01Z,LLIR,GO506_20_6431,40.757895,-73.831347,89c2600dc,11,STOPPED_AT,56,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:09:36Z,LLIR,GO506_20_6431,40.757106,-73.833095,89c2600c4,11,STOPPED_AT,56,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:09:53Z,LLIR,GO506_20_6431,40.7565,-73.834298,89c2600c4,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:10:29Z,LLIR,GO506_20_6431,40.753279,-73.841791,89c260754,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:10:46Z,LLIR,GO506_20_6431,40.750688,-73.848962,89c25fdbc,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:11:03Z,LLIR,GO506_20_6431,40.749543,-73.852242,89c25fdb4,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:14:32Z,LLIR,GO506_20_6431,40.743989,-73.900815,89c25f1d4,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:14:49Z,LLIR,GO506_20_6431,40.745851,-73.902975,89c25f1d4,12,STOPPED_AT,214,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:15:59Z,LLIR,GO506_20_6431,40.748141,-73.905367,89c25f1c4,12,STOPPED_AT,214,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:16:16Z,LLIR,GO506_20_6431,40.748909,-73.906398,89c25f1c4,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:16:50Z,LLIR,GO506_20_6431,40.751085,-73.912119,89c25f18c,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:18:18Z,LLIR,GO506_20_6431,40.748495,-73.927597,89c25f29c,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:19:27Z,LLIR,GO506_20_6431,40.745249,-73.940563,89c2592bc,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   168,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 8,
							Line:   168,
						},
						File:   "st_contains_test.flux",
						Source: "outData",
						Start: ast.Position{
							Column: 1,
							Line:   168,
						},
					},
				},
				Name: "outData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   222,
						},
						File:   "st_contains_test.flux",
						Source: "\"\n#group,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true\n#datatype,string,long,string,string,boolean,dateTime:RFC3339,string,string,double,double,string,string,string,string,long,string\n#default,_result,,,,,,,,,,,,,,,\n,result,table,_measurement,_pt,_st_contains,_time,area,id,lat,lon,s2_cell_id,seq_idx,status,stop_id,tid,trip_id\n,,0,mta,start,false,2020-04-08T15:44:58Z,LLIR,GO506_20_6431,40.820317,-73.68691,89c288c54,1,STOPPED_AT,171,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:45:33Z,LLIR,GO506_20_6431,40.815413,-73.690054,89c288dcc,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:45:51Z,LLIR,GO506_20_6431,40.814096,-73.693214,89c288ddc,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:46:12Z,LLIR,GO506_20_6431,40.810699,-73.695214,89c288e0c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:47:45Z,LLIR,GO506_20_6431,40.808517,-73.695594,89c288e14,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:48:04Z,LLIR,GO506_20_6431,40.806882,-73.695858,89c288e3c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:49:01Z,LLIR,GO506_20_6431,40.800397,-73.695023,89c288fcc,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:49:22Z,LLIR,GO506_20_6431,40.796724,-73.699899,89c288fe4,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:50:44Z,LLIR,GO506_20_6431,40.794998,-73.702982,89c289004,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:51:03Z,LLIR,GO506_20_6431,40.793905,-73.705485,89c289aa4,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:51:20Z,LLIR,GO506_20_6431,40.791541,-73.713571,89c289a64,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:51:37Z,LLIR,GO506_20_6431,40.791009,-73.715622,89c289a6c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:51:55Z,LLIR,GO506_20_6431,40.789185,-73.720059,89c289a3c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:52:16Z,LLIR,GO506_20_6431,40.788413,-73.721973,89c289a2c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:52:38Z,LLIR,GO506_20_6431,40.787216,-73.7261,89c28997c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:53:56Z,LLIR,GO506_20_6431,40.786038,-73.72924,89c289974,5,IN_TRANSIT_TO,120,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:54:57Z,LLIR,GO506_20_6431,40.775044,-73.740647,89c289f3c,5,STOPPED_AT,120,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:55:54Z,LLIR,GO506_20_6431,40.773334,-73.742812,89c289f6c,5,STOPPED_AT,120,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:56:13Z,LLIR,GO506_20_6431,40.772144,-73.74431,89c289f74,6,IN_TRANSIT_TO,42,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:56:33Z,LLIR,GO506_20_6431,40.770953,-73.745805,89c289f7c,6,IN_TRANSIT_TO,42,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:56:53Z,LLIR,GO506_20_6431,40.768069,-73.749413,89c28a024,6,STOPPED_AT,42,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:57:52Z,LLIR,GO506_20_6431,40.76661,-73.751322,89c28a03c,6,STOPPED_AT,42,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:58:10Z,LLIR,GO506_20_6431,40.76594,-73.752465,89c28a014,7,IN_TRANSIT_TO,25,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:59:24Z,LLIR,GO506_20_6431,40.763356,-73.769272,89c261e04,7,STOPPED_AT,25,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:01:55Z,LLIR,GO506_20_6431,40.761878,-73.785035,89c261d74,8,IN_TRANSIT_TO,2,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:02:33Z,LLIR,GO506_20_6431,40.761443,-73.789959,89c261d3c,8,STOPPED_AT,2,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:03:36Z,LLIR,GO506_20_6431,40.761241,-73.792932,89c261d34,8,STOPPED_AT,2,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:03:54Z,LLIR,GO506_20_6431,40.76117,-73.795812,89c2602cc,9,IN_TRANSIT_TO,11,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:04:28Z,LLIR,GO506_20_6431,40.761653,-73.801766,89c2602ec,9,STOPPED_AT,11,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:05:46Z,LLIR,GO506_20_6431,40.761908,-73.804421,89c2602f4,9,STOPPED_AT,11,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:06:11Z,LLIR,GO506_20_6431,40.762373,-73.809437,89c260254,10,IN_TRANSIT_TO,130,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:06:31Z,LLIR,GO506_20_6431,40.762441,-73.810154,89c26024c,10,IN_TRANSIT_TO,130,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:06:49Z,LLIR,GO506_20_6431,40.762709,-73.814539,89c260234,10,STOPPED_AT,130,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:07:43Z,LLIR,GO506_20_6431,40.762143,-73.817956,89c26022c,11,IN_TRANSIT_TO,56,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:08:19Z,LLIR,GO506_20_6431,40.759873,-73.826087,89c26010c,11,IN_TRANSIT_TO,56,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:08:38Z,LLIR,GO506_20_6431,40.759128,-73.828799,89c26011c,11,STOPPED_AT,56,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:09:01Z,LLIR,GO506_20_6431,40.757895,-73.831347,89c2600dc,11,STOPPED_AT,56,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:09:36Z,LLIR,GO506_20_6431,40.757106,-73.833095,89c2600c4,11,STOPPED_AT,56,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:09:53Z,LLIR,GO506_20_6431,40.7565,-73.834298,89c2600c4,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:10:29Z,LLIR,GO506_20_6431,40.753279,-73.841791,89c260754,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:10:46Z,LLIR,GO506_20_6431,40.750688,-73.848962,89c25fdbc,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:11:03Z,LLIR,GO506_20_6431,40.749543,-73.852242,89c25fdb4,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:14:32Z,LLIR,GO506_20_6431,40.743989,-73.900815,89c25f1d4,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:14:49Z,LLIR,GO506_20_6431,40.745851,-73.902975,89c25f1d4,12,STOPPED_AT,214,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:15:59Z,LLIR,GO506_20_6431,40.748141,-73.905367,89c25f1c4,12,STOPPED_AT,214,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:16:16Z,LLIR,GO506_20_6431,40.748909,-73.906398,89c25f1c4,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:16:50Z,LLIR,GO506_20_6431,40.751085,-73.912119,89c25f18c,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:18:18Z,LLIR,GO506_20_6431,40.748495,-73.927597,89c25f29c,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:19:27Z,LLIR,GO506_20_6431,40.745249,-73.940563,89c2592bc,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n\"",
						Start: ast.Position{
							Column: 11,
							Line:   168,
						},
					},
				},
				Value: "\n#group,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true\n#datatype,string,long,string,string,boolean,dateTime:RFC3339,string,string,double,double,string,string,string,string,long,string\n#default,_result,,,,,,,,,,,,,,,\n,result,table,_measurement,_pt,_st_contains,_time,area,id,lat,lon,s2_cell_id,seq_idx,status,stop_id,tid,trip_id\n,,0,mta,start,false,2020-04-08T15:44:58Z,LLIR,GO506_20_6431,40.820317,-73.68691,89c288c54,1,STOPPED_AT,171,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:45:33Z,LLIR,GO506_20_6431,40.815413,-73.690054,89c288dcc,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:45:51Z,LLIR,GO506_20_6431,40.814096,-73.693214,89c288ddc,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:46:12Z,LLIR,GO506_20_6431,40.810699,-73.695214,89c288e0c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:47:45Z,LLIR,GO506_20_6431,40.808517,-73.695594,89c288e14,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:48:04Z,LLIR,GO506_20_6431,40.806882,-73.695858,89c288e3c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:49:01Z,LLIR,GO506_20_6431,40.800397,-73.695023,89c288fcc,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:49:22Z,LLIR,GO506_20_6431,40.796724,-73.699899,89c288fe4,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:50:44Z,LLIR,GO506_20_6431,40.794998,-73.702982,89c289004,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:51:03Z,LLIR,GO506_20_6431,40.793905,-73.705485,89c289aa4,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:51:20Z,LLIR,GO506_20_6431,40.791541,-73.713571,89c289a64,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:51:37Z,LLIR,GO506_20_6431,40.791009,-73.715622,89c289a6c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:51:55Z,LLIR,GO506_20_6431,40.789185,-73.720059,89c289a3c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:52:16Z,LLIR,GO506_20_6431,40.788413,-73.721973,89c289a2c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:52:38Z,LLIR,GO506_20_6431,40.787216,-73.7261,89c28997c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:53:56Z,LLIR,GO506_20_6431,40.786038,-73.72924,89c289974,5,IN_TRANSIT_TO,120,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:54:57Z,LLIR,GO506_20_6431,40.775044,-73.740647,89c289f3c,5,STOPPED_AT,120,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:55:54Z,LLIR,GO506_20_6431,40.773334,-73.742812,89c289f6c,5,STOPPED_AT,120,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:56:13Z,LLIR,GO506_20_6431,40.772144,-73.74431,89c289f74,6,IN_TRANSIT_TO,42,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:56:33Z,LLIR,GO506_20_6431,40.770953,-73.745805,89c289f7c,6,IN_TRANSIT_TO,42,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:56:53Z,LLIR,GO506_20_6431,40.768069,-73.749413,89c28a024,6,STOPPED_AT,42,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:57:52Z,LLIR,GO506_20_6431,40.76661,-73.751322,89c28a03c,6,STOPPED_AT,42,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:58:10Z,LLIR,GO506_20_6431,40.76594,-73.752465,89c28a014,7,IN_TRANSIT_TO,25,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:59:24Z,LLIR,GO506_20_6431,40.763356,-73.769272,89c261e04,7,STOPPED_AT,25,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:01:55Z,LLIR,GO506_20_6431,40.761878,-73.785035,89c261d74,8,IN_TRANSIT_TO,2,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:02:33Z,LLIR,GO506_20_6431,40.761443,-73.789959,89c261d3c,8,STOPPED_AT,2,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:03:36Z,LLIR,GO506_20_6431,40.761241,-73.792932,89c261d34,8,STOPPED_AT,2,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:03:54Z,LLIR,GO506_20_6431,40.76117,-73.795812,89c2602cc,9,IN_TRANSIT_TO,11,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:04:28Z,LLIR,GO506_20_6431,40.761653,-73.801766,89c2602ec,9,STOPPED_AT,11,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:05:46Z,LLIR,GO506_20_6431,40.761908,-73.804421,89c2602f4,9,STOPPED_AT,11,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:06:11Z,LLIR,GO506_20_6431,40.762373,-73.809437,89c260254,10,IN_TRANSIT_TO,130,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:06:31Z,LLIR,GO506_20_6431,40.762441,-73.810154,89c26024c,10,IN_TRANSIT_TO,130,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:06:49Z,LLIR,GO506_20_6431,40.762709,-73.814539,89c260234,10,STOPPED_AT,130,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:07:43Z,LLIR,GO506_20_6431,40.762143,-73.817956,89c26022c,11,IN_TRANSIT_TO,56,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:08:19Z,LLIR,GO506_20_6431,40.759873,-73.826087,89c26010c,11,IN_TRANSIT_TO,56,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:08:38Z,LLIR,GO506_20_6431,40.759128,-73.828799,89c26011c,11,STOPPED_AT,56,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:09:01Z,LLIR,GO506_20_6431,40.757895,-73.831347,89c2600dc,11,STOPPED_AT,56,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:09:36Z,LLIR,GO506_20_6431,40.757106,-73.833095,89c2600c4,11,STOPPED_AT,56,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:09:53Z,LLIR,GO506_20_6431,40.7565,-73.834298,89c2600c4,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:10:29Z,LLIR,GO506_20_6431,40.753279,-73.841791,89c260754,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:10:46Z,LLIR,GO506_20_6431,40.750688,-73.848962,89c25fdbc,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:11:03Z,LLIR,GO506_20_6431,40.749543,-73.852242,89c25fdb4,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:14:32Z,LLIR,GO506_20_6431,40.743989,-73.900815,89c25f1d4,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:14:49Z,LLIR,GO506_20_6431,40.745851,-73.902975,89c25f1d4,12,STOPPED_AT,214,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:15:59Z,LLIR,GO506_20_6431,40.748141,-73.905367,89c25f1c4,12,STOPPED_AT,214,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:16:16Z,LLIR,GO506_20_6431,40.748909,-73.906398,89c25f1c4,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:16:50Z,LLIR,GO506_20_6431,40.751085,-73.912119,89c25f18c,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:18:18Z,LLIR,GO506_20_6431,40.748495,-73.927597,89c25f29c,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:19:27Z,LLIR,GO506_20_6431,40.745249,-73.940563,89c2592bc,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 120,
						Line:   225,
					},
					File:   "st_contains_test.flux",
					Source: "bt = {points: [{lat: 40.671659, lon: -73.936631}, {lat: 40.706543, lon: -73.749177},{lat: 40.791333, lon: -73.880327}]}",
					Start: ast.Position{
						Column: 1,
						Line:   225,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 3,
							Line:   225,
						},
						File:   "st_contains_test.flux",
						Source: "bt",
						Start: ast.Position{
							Column: 1,
							Line:   225,
						},
					},
				},
				Name: "bt",
			},
			Init: &ast.ObjectExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 120,
							Line:   225,
						},
						File:   "st_contains_test.flux",
						Source: "{points: [{lat: 40.671659, lon: -73.936631}, {lat: 40.706543, lon: -73.749177},{lat: 40.791333, lon: -73.880327}]}",
						Start: ast.Position{
							Column: 6,
							Line:   225,
						},
					},
				},
				Properties: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 119,
								Line:   225,
							},
							File:   "st_contains_test.flux",
							Source: "points: [{lat: 40.671659, lon: -73.936631}, {lat: 40.706543, lon: -73.749177},{lat: 40.791333, lon: -73.880327}]",
							Start: ast.Position{
								Column: 7,
								Line:   225,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 13,
									Line:   225,
								},
								File:   "st_contains_test.flux",
								Source: "points",
								Start: ast.Position{
									Column: 7,
									Line:   225,
								},
							},
						},
						Name: "points",
					},
					Value: &ast.ArrayExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 119,
									Line:   225,
								},
								File:   "st_contains_test.flux",
								Source: "[{lat: 40.671659, lon: -73.936631}, {lat: 40.706543, lon: -73.749177},{lat: 40.791333, lon: -73.880327}]",
								Start: ast.Position{
									Column: 15,
									Line:   225,
								},
							},
						},
						Elements: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 49,
										Line:   225,
									},
									File:   "st_contains_test.flux",
									Source: "{lat: 40.671659, lon: -73.936631}",
									Start: ast.Position{
										Column: 16,
										Line:   225,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 31,
											Line:   225,
										},
										File:   "st_contains_test.flux",
										Source: "lat: 40.671659",
										Start: ast.Position{
											Column: 17,
											Line:   225,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 20,
												Line:   225,
											},
											File:   "st_contains_test.flux",
											Source: "lat",
											Start: ast.Position{
												Column: 17,
												Line:   225,
											},
										},
									},
									Name: "lat",
								},
								Value: &ast.FloatLiteral{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 31,
												Line:   225,
											},
											File:   "st_contains_test.flux",
											Source: "40.671659",
											Start: ast.Position{
												Column: 22,
												Line:   225,
											},
										},
									},
									Value: 40.671659,
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 48,
											Line:   225,
										},
										File:   "st_contains_test.flux",
										Source: "lon: -73.936631",
										Start: ast.Position{
											Column: 33,
											Line:   225,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 36,
												Line:   225,
											},
											File:   "st_contains_test.flux",
											Source: "lon",
											Start: ast.Position{
												Column: 33,
												Line:   225,
											},
										},
									},
									Name: "lon",
								},
								Value: &ast.UnaryExpression{
									Argument: &ast.FloatLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 48,
													Line:   225,
												},
												File:   "st_contains_test.flux",
												Source: "73.936631",
												Start: ast.Position{
													Column: 39,
													Line:   225,
												},
											},
										},
										Value: 73.936631,
									},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 48,
												Line:   225,
											},
											File:   "st_contains_test.flux",
											Source: "-73.936631",
											Start: ast.Position{
												Column: 38,
												Line:   225,
											},
										},
									},
									Operator: 6,
								},
							}},
							With: nil,
						}, &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 84,
										Line:   225,
									},
									File:   "st_contains_test.flux",
									Source: "{lat: 40.706543, lon: -73.749177}",
									Start: ast.Position{
										Column: 51,
										Line:   225,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 66,
											Line:   225,
										},
										File:   "st_contains_test.flux",
										Source: "lat: 40.706543",
										Start: ast.Position{
											Column: 52,
											Line:   225,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 55,
												Line:   225,
											},
											File:   "st_contains_test.flux",
											Source: "lat",
											Start: ast.Position{
												Column: 52,
												Line:   225,
											},
										},
									},
									Name: "lat",
								},
								Value: &ast.FloatLiteral{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 66,
												Line:   225,
											},
											File:   "st_contains_test.flux",
											Source: "40.706543",
											Start: ast.Position{
												Column: 57,
												Line:   225,
											},
										},
									},
									Value: 40.706543,
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 83,
											Line:   225,
										},
										File:   "st_contains_test.flux",
										Source: "lon: -73.749177",
										Start: ast.Position{
											Column: 68,
											Line:   225,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 71,
												Line:   225,
											},
											File:   "st_contains_test.flux",
											Source: "lon",
											Start: ast.Position{
												Column: 68,
												Line:   225,
											},
										},
									},
									Name: "lon",
								},
								Value: &ast.UnaryExpression{
									Argument: &ast.FloatLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 83,
													Line:   225,
												},
												File:   "st_contains_test.flux",
												Source: "73.749177",
												Start: ast.Position{
													Column: 74,
													Line:   225,
												},
											},
										},
										Value: 73.749177,
									},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 83,
												Line:   225,
											},
											File:   "st_contains_test.flux",
											Source: "-73.749177",
											Start: ast.Position{
												Column: 73,
												Line:   225,
											},
										},
									},
									Operator: 6,
								},
							}},
							With: nil,
						}, &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 118,
										Line:   225,
									},
									File:   "st_contains_test.flux",
									Source: "{lat: 40.791333, lon: -73.880327}",
									Start: ast.Position{
										Column: 85,
										Line:   225,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 100,
											Line:   225,
										},
										File:   "st_contains_test.flux",
										Source: "lat: 40.791333",
										Start: ast.Position{
											Column: 86,
											Line:   225,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 89,
												Line:   225,
											},
											File:   "st_contains_test.flux",
											Source: "lat",
											Start: ast.Position{
												Column: 86,
												Line:   225,
											},
										},
									},
									Name: "lat",
								},
								Value: &ast.FloatLiteral{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 100,
												Line:   225,
											},
											File:   "st_contains_test.flux",
											Source: "40.791333",
											Start: ast.Position{
												Column: 91,
												Line:   225,
											},
										},
									},
									Value: 40.791333,
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 117,
											Line:   225,
										},
										File:   "st_contains_test.flux",
										Source: "lon: -73.880327",
										Start: ast.Position{
											Column: 102,
											Line:   225,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 105,
												Line:   225,
											},
											File:   "st_contains_test.flux",
											Source: "lon",
											Start: ast.Position{
												Column: 102,
												Line:   225,
											},
										},
									},
									Name: "lon",
								},
								Value: &ast.UnaryExpression{
									Argument: &ast.FloatLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 117,
													Line:   225,
												},
												File:   "st_contains_test.flux",
												Source: "73.880327",
												Start: ast.Position{
													Column: 108,
													Line:   225,
												},
											},
										},
										Value: 73.880327,
									},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 117,
												Line:   225,
											},
											File:   "st_contains_test.flux",
											Source: "-73.880327",
											Start: ast.Position{
												Column: 107,
												Line:   225,
											},
										},
									},
									Operator: 6,
								},
							}},
							With: nil,
						}},
					},
				}},
				With: nil,
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   235,
					},
					File:   "st_contains_test.flux",
					Source: "t_stContains = (table=<-) =>\n  table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to see the train crossing defined region\n    |> map(fn: (r) => ({\n        r with _st_contains: geo.ST_Contains(region: bt, geometry: {lat: r.lat, lon: r.lon})\n    }))\n    |> drop(columns: [\"_start\", \"_stop\"])",
					Start: ast.Position{
						Column: 1,
						Line:   227,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 13,
							Line:   227,
						},
						File:   "st_contains_test.flux",
						Source: "t_stContains",
						Start: ast.Position{
							Column: 1,
							Line:   227,
						},
					},
				},
				Name: "t_stContains",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   235,
						},
						File:   "st_contains_test.flux",
						Source: "(table=<-) =>\n  table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to see the train crossing defined region\n    |> map(fn: (r) => ({\n        r with _st_contains: geo.ST_Contains(region: bt, geometry: {lat: r.lat, lon: r.lon})\n    }))\n    |> drop(columns: [\"_start\", \"_stop\"])",
						Start: ast.Position{
							Column: 16,
							Line:   227,
						},
					},
				},
				Body: &ast.PipeExpression{
					Argument: &ast.PipeExpression{
						Argument: &ast.PipeExpression{
							Argument: &ast.PipeExpression{
								Argument: &ast.PipeExpression{
									Argument: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 8,
													Line:   228,
												},
												File:   "st_contains_test.flux",
												Source: "table",
												Start: ast.Position{
													Column: 3,
													Line:   228,
												},
											},
										},
										Name: "table",
									},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 42,
												Line:   229,
											},
											File:   "st_contains_test.flux",
											Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)",
											Start: ast.Position{
												Column: 3,
												Line:   228,
											},
										},
									},
									Call: &ast.CallExpression{
										Arguments: []ast.Expression{&ast.ObjectExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 41,
														Line:   229,
													},
													File:   "st_contains_test.flux",
													Source: "start: 2020-04-01T00:00:00Z",
													Start: ast.Position{
														Column: 14,
														Line:   229,
													},
												},
											},
											Properties: []*ast.Property{&ast.Property{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 41,
															Line:   229,
														},
														File:   "st_contains_test.flux",
														Source: "start: 2020-04-01T00:00:00Z",
														Start: ast.Position{
															Column: 14,
															Line:   229,
														},
													},
												},
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 19,
																Line:   229,
															},
															File:   "st_contains_test.flux",
															Source: "start",
															Start: ast.Position{
																Column: 14,
																Line:   229,
															},
														},
													},
													Name: "start",
												},
												Value: &ast.DateTimeLiteral{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 41,
																Line:   229,
															},
															File:   "st_contains_test.flux",
															Source: "2020-04-01T00:00:00Z",
															Start: ast.Position{
																Column: 21,
																Line:   229,
															},
														},
													},
													Value: parser.MustParseTime("2020-04-01T00:00:00Z"),
												},
											}},
											With: nil,
										}},
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   229,
												},
												File:   "st_contains_test.flux",
												Source: "range(start: 2020-04-01T00:00:00Z)",
												Start: ast.Position{
													Column: 8,
													Line:   229,
												},
											},
										},
										Callee: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 13,
														Line:   229,
													},
													File:   "st_contains_test.flux",
													Source: "range",
													Start: ast.Position{
														Column: 8,
														Line:   229,
													},
												},
											},
											Name: "range",
										},
									},
								},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 25,
											Line:   230,
										},
										File:   "st_contains_test.flux",
										Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()",
										Start: ast.Position{
											Column: 3,
											Line:   228,
										},
									},
								},
								Call: &ast.CallExpression{
									Arguments: nil,
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 25,
												Line:   230,
											},
											File:   "st_contains_test.flux",
											Source: "v1.fieldsAsCols()",
											Start: ast.Position{
												Column: 8,
												Line:   230,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 23,
													Line:   230,
												},
												File:   "st_contains_test.flux",
												Source: "v1.fieldsAsCols",
												Start: ast.Position{
													Column: 8,
													Line:   230,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 10,
														Line:   230,
													},
													File:   "st_contains_test.flux",
													Source: "v1",
													Start: ast.Position{
														Column: 8,
														Line:   230,
													},
												},
											},
											Name: "v1",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 23,
														Line:   230,
													},
													File:   "st_contains_test.flux",
													Source: "fieldsAsCols",
													Start: ast.Position{
														Column: 11,
														Line:   230,
													},
												},
											},
											Name: "fieldsAsCols",
										},
									},
								},
							},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 47,
										Line:   231,
									},
									File:   "st_contains_test.flux",
									Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"])",
									Start: ast.Position{
										Column: 3,
										Line:   228,
									},
								},
							},
							Call: &ast.CallExpression{
								Arguments: []ast.Expression{&ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 46,
												Line:   231,
											},
											File:   "st_contains_test.flux",
											Source: "groupBy: [\"id\",\"trip_id\"]",
											Start: ast.Position{
												Column: 21,
												Line:   231,
											},
										},
									},
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 46,
													Line:   231,
												},
												File:   "st_contains_test.flux",
												Source: "groupBy: [\"id\",\"trip_id\"]",
												Start: ast.Position{
													Column: 21,
													Line:   231,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 28,
														Line:   231,
													},
													File:   "st_contains_test.flux",
													Source: "groupBy",
													Start: ast.Position{
														Column: 21,
														Line:   231,
													},
												},
											},
											Name: "groupBy",
										},
										Value: &ast.ArrayExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 46,
														Line:   231,
													},
													File:   "st_contains_test.flux",
													Source: "[\"id\",\"trip_id\"]",
													Start: ast.Position{
														Column: 30,
														Line:   231,
													},
												},
											},
											Elements: []ast.Expression{&ast.StringLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 35,
															Line:   231,
														},
														File:   "st_contains_test.flux",
														Source: "\"id\"",
														Start: ast.Position{
															Column: 31,
															Line:   231,
														},
													},
												},
												Value: "id",
											}, &ast.StringLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 45,
															Line:   231,
														},
														File:   "st_contains_test.flux",
														Source: "\"trip_id\"",
														Start: ast.Position{
															Column: 36,
															Line:   231,
														},
													},
												},
												Value: "trip_id",
											}},
										},
									}},
									With: nil,
								}},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 47,
											Line:   231,
										},
										File:   "st_contains_test.flux",
										Source: "geo.asTracks(groupBy: [\"id\",\"trip_id\"])",
										Start: ast.Position{
											Column: 8,
											Line:   231,
										},
									},
								},
								Callee: &ast.MemberExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 20,
												Line:   231,
											},
											File:   "st_contains_test.flux",
											Source: "geo.asTracks",
											Start: ast.Position{
												Column: 8,
												Line:   231,
											},
										},
									},
									Object: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 11,
													Line:   231,
												},
												File:   "st_contains_test.flux",
												Source: "geo",
												Start: ast.Position{
													Column: 8,
													Line:   231,
												},
											},
										},
										Name: "geo",
									},
									Property: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 20,
													Line:   231,
												},
												File:   "st_contains_test.flux",
												Source: "asTracks",
												Start: ast.Position{
													Column: 12,
													Line:   231,
												},
											},
										},
										Name: "asTracks",
									},
								},
							},
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 8,
									Line:   234,
								},
								File:   "st_contains_test.flux",
								Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to see the train crossing defined region\n    |> map(fn: (r) => ({\n        r with _st_contains: geo.ST_Contains(region: bt, geometry: {lat: r.lat, lon: r.lon})\n    }))",
								Start: ast.Position{
									Column: 3,
									Line:   228,
								},
							},
						},
						Call: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 7,
											Line:   234,
										},
										File:   "st_contains_test.flux",
										Source: "fn: (r) => ({\n        r with _st_contains: geo.ST_Contains(region: bt, geometry: {lat: r.lat, lon: r.lon})\n    })",
										Start: ast.Position{
											Column: 12,
											Line:   232,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 7,
												Line:   234,
											},
											File:   "st_contains_test.flux",
											Source: "fn: (r) => ({\n        r with _st_contains: geo.ST_Contains(region: bt, geometry: {lat: r.lat, lon: r.lon})\n    })",
											Start: ast.Position{
												Column: 12,
												Line:   232,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 14,
													Line:   232,
												},
												File:   "st_contains_test.flux",
												Source: "fn",
												Start: ast.Position{
													Column: 12,
													Line:   232,
												},
											},
										},
										Name: "fn",
									},
									Value: &ast.FunctionExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 7,
													Line:   234,
												},
												File:   "st_contains_test.flux",
												Source: "(r) => ({\n        r with _st_contains: geo.ST_Contains(region: bt, geometry: {lat: r.lat, lon: r.lon})\n    })",
												Start: ast.Position{
													Column: 16,
													Line:   232,
												},
											},
										},
										Body: &ast.ParenExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 7,
														Line:   234,
													},
													File:   "st_contains_test.flux",
													Source: "({\n        r with _st_contains: geo.ST_Contains(region: bt, geometry: {lat: r.lat, lon: r.lon})\n    })",
													Start: ast.Position{
														Column: 23,
														Line:   232,
													},
												},
											},
											Expression: &ast.ObjectExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 6,
															Line:   234,
														},
														File:   "st_contains_test.flux",
														Source: "{\n        r with _st_contains: geo.ST_Contains(region: bt, geometry: {lat: r.lat, lon: r.lon})\n    }",
														Start: ast.Position{
															Column: 24,
															Line:   232,
														},
													},
												},
												Properties: []*ast.Property{&ast.Property{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 93,
																Line:   233,
															},
															File:   "st_contains_test.flux",
															Source: "_st_contains: geo.ST_Contains(region: bt, geometry: {lat: r.lat, lon: r.lon})",
															Start: ast.Position{
																Column: 16,
																Line:   233,
															},
														},
													},
													Key: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 28,
																	Line:   233,
																},
																File:   "st_contains_test.flux",
																Source: "_st_contains",
																Start: ast.Position{
																	Column: 16,
																	Line:   233,
																},
															},
														},
														Name: "_st_contains",
													},
													Value: &ast.CallExpression{
														Arguments: []ast.Expression{&ast.ObjectExpression{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 92,
																		Line:   233,
																	},
																	File:   "st_contains_test.flux",
																	Source: "region: bt, geometry: {lat: r.lat, lon: r.lon}",
																	Start: ast.Position{
																		Column: 46,
																		Line:   233,
																	},
																},
															},
															Properties: []*ast.Property{&ast.Property{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 56,
																			Line:   233,
																		},
																		File:   "st_contains_test.flux",
																		Source: "region: bt",
																		Start: ast.Position{
																			Column: 46,
																			Line:   233,
																		},
																	},
																},
																Key: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 52,
																				Line:   233,
																			},
																			File:   "st_contains_test.flux",
																			Source: "region",
																			Start: ast.Position{
																				Column: 46,
																				Line:   233,
																			},
																		},
																	},
																	Name: "region",
																},
																Value: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 56,
																				Line:   233,
																			},
																			File:   "st_contains_test.flux",
																			Source: "bt",
																			Start: ast.Position{
																				Column: 54,
																				Line:   233,
																			},
																		},
																	},
																	Name: "bt",
																},
															}, &ast.Property{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 92,
																			Line:   233,
																		},
																		File:   "st_contains_test.flux",
																		Source: "geometry: {lat: r.lat, lon: r.lon}",
																		Start: ast.Position{
																			Column: 58,
																			Line:   233,
																		},
																	},
																},
																Key: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 66,
																				Line:   233,
																			},
																			File:   "st_contains_test.flux",
																			Source: "geometry",
																			Start: ast.Position{
																				Column: 58,
																				Line:   233,
																			},
																		},
																	},
																	Name: "geometry",
																},
																Value: &ast.ObjectExpression{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 92,
																				Line:   233,
																			},
																			File:   "st_contains_test.flux",
																			Source: "{lat: r.lat, lon: r.lon}",
																			Start: ast.Position{
																				Column: 68,
																				Line:   233,
																			},
																		},
																	},
																	Properties: []*ast.Property{&ast.Property{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 79,
																					Line:   233,
																				},
																				File:   "st_contains_test.flux",
																				Source: "lat: r.lat",
																				Start: ast.Position{
																					Column: 69,
																					Line:   233,
																				},
																			},
																		},
																		Key: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 72,
																						Line:   233,
																					},
																					File:   "st_contains_test.flux",
																					Source: "lat",
																					Start: ast.Position{
																						Column: 69,
																						Line:   233,
																					},
																				},
																			},
																			Name: "lat",
																		},
																		Value: &ast.MemberExpression{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 79,
																						Line:   233,
																					},
																					File:   "st_contains_test.flux",
																					Source: "r.lat",
																					Start: ast.Position{
																						Column: 74,
																						Line:   233,
																					},
																				},
																			},
																			Object: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 75,
																							Line:   233,
																						},
																						File:   "st_contains_test.flux",
																						Source: "r",
																						Start: ast.Position{
																							Column: 74,
																							Line:   233,
																						},
																					},
																				},
																				Name: "r",
																			},
																			Property: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 79,
																							Line:   233,
																						},
																						File:   "st_contains_test.flux",
																						Source: "lat",
																						Start: ast.Position{
																							Column: 76,
																							Line:   233,
																						},
																					},
																				},
																				Name: "lat",
																			},
																		},
																	}, &ast.Property{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 91,
																					Line:   233,
																				},
																				File:   "st_contains_test.flux",
																				Source: "lon: r.lon",
																				Start: ast.Position{
																					Column: 81,
																					Line:   233,
																				},
																			},
																		},
																		Key: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 84,
																						Line:   233,
																					},
																					File:   "st_contains_test.flux",
																					Source: "lon",
																					Start: ast.Position{
																						Column: 81,
																						Line:   233,
																					},
																				},
																			},
																			Name: "lon",
																		},
																		Value: &ast.MemberExpression{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 91,
																						Line:   233,
																					},
																					File:   "st_contains_test.flux",
																					Source: "r.lon",
																					Start: ast.Position{
																						Column: 86,
																						Line:   233,
																					},
																				},
																			},
																			Object: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 87,
																							Line:   233,
																						},
																						File:   "st_contains_test.flux",
																						Source: "r",
																						Start: ast.Position{
																							Column: 86,
																							Line:   233,
																						},
																					},
																				},
																				Name: "r",
																			},
																			Property: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 91,
																							Line:   233,
																						},
																						File:   "st_contains_test.flux",
																						Source: "lon",
																						Start: ast.Position{
																							Column: 88,
																							Line:   233,
																						},
																					},
																				},
																				Name: "lon",
																			},
																		},
																	}},
																	With: nil,
																},
															}},
															With: nil,
														}},
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 93,
																	Line:   233,
																},
																File:   "st_contains_test.flux",
																Source: "geo.ST_Contains(region: bt, geometry: {lat: r.lat, lon: r.lon})",
																Start: ast.Position{
																	Column: 30,
																	Line:   233,
																},
															},
														},
														Callee: &ast.MemberExpression{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 45,
																		Line:   233,
																	},
																	File:   "st_contains_test.flux",
																	Source: "geo.ST_Contains",
																	Start: ast.Position{
																		Column: 30,
																		Line:   233,
																	},
																},
															},
															Object: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 33,
																			Line:   233,
																		},
																		File:   "st_contains_test.flux",
																		Source: "geo",
																		Start: ast.Position{
																			Column: 30,
																			Line:   233,
																		},
																	},
																},
																Name: "geo",
															},
															Property: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 45,
																			Line:   233,
																		},
																		File:   "st_contains_test.flux",
																		Source: "ST_Contains",
																		Start: ast.Position{
																			Column: 34,
																			Line:   233,
																		},
																	},
																},
																Name: "ST_Contains",
															},
														},
													},
												}},
												With: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 10,
																Line:   233,
															},
															File:   "st_contains_test.flux",
															Source: "r",
															Start: ast.Position{
																Column: 9,
																Line:   233,
															},
														},
													},
													Name: "r",
												},
											},
										},
										Params: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   232,
													},
													File:   "st_contains_test.flux",
													Source: "r",
													Start: ast.Position{
														Column: 17,
														Line:   232,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 18,
															Line:   232,
														},
														File:   "st_contains_test.flux",
														Source: "r",
														Start: ast.Position{
															Column: 17,
															Line:   232,
														},
													},
												},
												Name: "r",
											},
											Value: nil,
										}},
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 8,
										Line:   234,
									},
									File:   "st_contains_test.flux",
									Source: "map(fn: (r) => ({\n        r with _st_contains: geo.ST_Contains(region: bt, geometry: {lat: r.lat, lon: r.lon})\n    }))",
									Start: ast.Position{
										Column: 8,
										Line:   232,
									},
								},
							},
							Callee: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 11,
											Line:   232,
										},
										File:   "st_contains_test.flux",
										Source: "map",
										Start: ast.Position{
											Column: 8,
											Line:   232,
										},
									},
								},
								Name: "map",
							},
						},
					},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   235,
							},
							File:   "st_contains_test.flux",
							Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to see the train crossing defined region\n    |> map(fn: (r) => ({\n        r with _st_contains: geo.ST_Contains(region: bt, geometry: {lat: r.lat, lon: r.lon})\n    }))\n    |> drop(columns: [\"_start\", \"_stop\"])",
							Start: ast.Position{
								Column: 3,
								Line:   228,
							},
						},
					},
					Call: &ast.CallExpression{
						Arguments: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   235,
									},
									File:   "st_contains_test.flux",
									Source: "columns: [\"_start\", \"_stop\"]",
									Start: ast.Position{
										Column: 13,
										Line:   235,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 41,
											Line:   235,
										},
										File:   "st_contains_test.flux",
										Source: "columns: [\"_start\", \"_stop\"]",
										Start: ast.Position{
											Column: 13,
											Line:   235,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 20,
												Line:   235,
											},
											File:   "st_contains_test.flux",
											Source: "columns",
											Start: ast.Position{
												Column: 13,
												Line:   235,
											},
										},
									},
									Name: "columns",
								},
								Value: &ast.ArrayExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 41,
												Line:   235,
											},
											File:   "st_contains_test.flux",
											Source: "[\"_start\", \"_stop\"]",
											Start: ast.Position{
												Column: 22,
												Line:   235,
											},
										},
									},
									Elements: []ast.Expression{&ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 31,
													Line:   235,
												},
												File:   "st_contains_test.flux",
												Source: "\"_start\"",
												Start: ast.Position{
													Column: 23,
													Line:   235,
												},
											},
										},
										Value: "_start",
									}, &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 40,
													Line:   235,
												},
												File:   "st_contains_test.flux",
												Source: "\"_stop\"",
												Start: ast.Position{
													Column: 33,
													Line:   235,
												},
											},
										},
										Value: "_stop",
									}},
								},
							}},
							With: nil,
						}},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   235,
								},
								File:   "st_contains_test.flux",
								Source: "drop(columns: [\"_start\", \"_stop\"])",
								Start: ast.Position{
									Column: 8,
									Line:   235,
								},
							},
						},
						Callee: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 12,
										Line:   235,
									},
									File:   "st_contains_test.flux",
									Source: "drop",
									Start: ast.Position{
										Column: 8,
										Line:   235,
									},
								},
							},
							Name: "drop",
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 25,
								Line:   227,
							},
							File:   "st_contains_test.flux",
							Source: "table=<-",
							Start: ast.Position{
								Column: 17,
								Line:   227,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 22,
									Line:   227,
								},
								File:   "st_contains_test.flux",
								Source: "table",
								Start: ast.Position{
									Column: 17,
									Line:   227,
								},
							},
						},
						Name: "table",
					},
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 25,
								Line:   227,
							},
							File:   "st_contains_test.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 23,
								Line:   227,
							},
						},
					}},
				}},
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 100,
							Line:   237,
						},
						File:   "st_contains_test.flux",
						Source: "_stContains = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stContains})",
						Start: ast.Position{
							Column: 6,
							Line:   236,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 17,
								Line:   236,
							},
							File:   "st_contains_test.flux",
							Source: "_stContains",
							Start: ast.Position{
								Column: 6,
								Line:   236,
							},
						},
					},
					Name: "_stContains",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 100,
								Line:   237,
							},
							File:   "st_contains_test.flux",
							Source: "() =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stContains})",
							Start: ast.Position{
								Column: 20,
								Line:   236,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 100,
									Line:   237,
								},
								File:   "st_contains_test.flux",
								Source: "({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stContains})",
								Start: ast.Position{
									Column: 2,
									Line:   237,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 99,
										Line:   237,
									},
									File:   "st_contains_test.flux",
									Source: "{input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stContains}",
									Start: ast.Position{
										Column: 3,
										Line:   237,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 43,
											Line:   237,
										},
										File:   "st_contains_test.flux",
										Source: "input: testing.loadStorage(csv: inData)",
										Start: ast.Position{
											Column: 4,
											Line:   237,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 9,
												Line:   237,
											},
											File:   "st_contains_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 4,
												Line:   237,
											},
										},
									},
									Name: "input",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   237,
												},
												File:   "st_contains_test.flux",
												Source: "csv: inData",
												Start: ast.Position{
													Column: 31,
													Line:   237,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 42,
														Line:   237,
													},
													File:   "st_contains_test.flux",
													Source: "csv: inData",
													Start: ast.Position{
														Column: 31,
														Line:   237,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 34,
															Line:   237,
														},
														File:   "st_contains_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 31,
															Line:   237,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 42,
															Line:   237,
														},
														File:   "st_contains_test.flux",
														Source: "inData",
														Start: ast.Position{
															Column: 36,
															Line:   237,
														},
													},
												},
												Name: "inData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 43,
												Line:   237,
											},
											File:   "st_contains_test.flux",
											Source: "testing.loadStorage(csv: inData)",
											Start: ast.Position{
												Column: 11,
												Line:   237,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   237,
												},
												File:   "st_contains_test.flux",
												Source: "testing.loadStorage",
												Start: ast.Position{
													Column: 11,
													Line:   237,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   237,
													},
													File:   "st_contains_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 11,
														Line:   237,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 30,
														Line:   237,
													},
													File:   "st_contains_test.flux",
													Source: "loadStorage",
													Start: ast.Position{
														Column: 19,
														Line:   237,
													},
												},
											},
											Name: "loadStorage",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 80,
											Line:   237,
										},
										File:   "st_contains_test.flux",
										Source: "want: testing.loadMem(csv: outData)",
										Start: ast.Position{
											Column: 45,
											Line:   237,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 49,
												Line:   237,
											},
											File:   "st_contains_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 45,
												Line:   237,
											},
										},
									},
									Name: "want",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 79,
													Line:   237,
												},
												File:   "st_contains_test.flux",
												Source: "csv: outData",
												Start: ast.Position{
													Column: 67,
													Line:   237,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 79,
														Line:   237,
													},
													File:   "st_contains_test.flux",
													Source: "csv: outData",
													Start: ast.Position{
														Column: 67,
														Line:   237,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 70,
															Line:   237,
														},
														File:   "st_contains_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 67,
															Line:   237,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 79,
															Line:   237,
														},
														File:   "st_contains_test.flux",
														Source: "outData",
														Start: ast.Position{
															Column: 72,
															Line:   237,
														},
													},
												},
												Name: "outData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 80,
												Line:   237,
											},
											File:   "st_contains_test.flux",
											Source: "testing.loadMem(csv: outData)",
											Start: ast.Position{
												Column: 51,
												Line:   237,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   237,
												},
												File:   "st_contains_test.flux",
												Source: "testing.loadMem",
												Start: ast.Position{
													Column: 51,
													Line:   237,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 58,
														Line:   237,
													},
													File:   "st_contains_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 51,
														Line:   237,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 66,
														Line:   237,
													},
													File:   "st_contains_test.flux",
													Source: "loadMem",
													Start: ast.Position{
														Column: 59,
														Line:   237,
													},
												},
											},
											Name: "loadMem",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 98,
											Line:   237,
										},
										File:   "st_contains_test.flux",
										Source: "fn: t_stContains",
										Start: ast.Position{
											Column: 82,
											Line:   237,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 84,
												Line:   237,
											},
											File:   "st_contains_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 82,
												Line:   237,
											},
										},
									},
									Name: "fn",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 98,
												Line:   237,
											},
											File:   "st_contains_test.flux",
											Source: "t_stContains",
											Start: ast.Position{
												Column: 86,
												Line:   237,
											},
										},
									},
									Name: "t_stContains",
								},
							}},
							With: nil,
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 100,
						Line:   237,
					},
					File:   "st_contains_test.flux",
					Source: "test _stContains = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stContains})",
					Start: ast.Position{
						Column: 1,
						Line:   236,
					},
				},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 26,
						Line:   3,
					},
					File:   "st_contains_test.flux",
					Source: "import \"experimental/geo\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 26,
							Line:   3,
						},
						File:   "st_contains_test.flux",
						Source: "\"experimental/geo\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "experimental/geo",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 32,
						Line:   4,
					},
					File:   "st_contains_test.flux",
					Source: "import \"influxdata/influxdb/v1\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 32,
							Line:   4,
						},
						File:   "st_contains_test.flux",
						Source: "\"influxdata/influxdb/v1\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "influxdata/influxdb/v1",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   5,
					},
					File:   "st_contains_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   5,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   5,
						},
						File:   "st_contains_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   5,
						},
					},
				},
				Value: "testing",
			},
		}},
		Metadata: "parser-type=rust",
		Name:     "st_contains_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   1,
					},
					File:   "st_contains_test.flux",
					Source: "package geo_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   1,
						},
						File:   "st_contains_test.flux",
						Source: "geo_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "geo_test",
			},
		},
	}, &ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 110,
					Line:   195,
				},
				File:   "st_distance_linestring_test.flux",
				Source: "package geo_test\n\nimport \"experimental/geo\"\nimport \"influxdata/influxdb/v1\"\nimport \"testing\"\n\noption now = () => (2030-01-01T00:00:00Z)\n\n// train closing to Manhattan\ninData = \"\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,0,2020-04-08T15:44:58Z,40.820317,lat,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,1,2020-04-08T16:19:27Z,40.745249,lat,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,2,2020-04-08T16:16:50Z,40.751085,lat,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,3,2020-04-08T16:15:59Z,40.748141,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,4,2020-04-08T16:16:16Z,40.748909,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,5,2020-04-08T16:14:32Z,40.743989,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,6,2020-04-08T16:14:49Z,40.745851,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,7,2020-04-08T16:18:18Z,40.748495,lat,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,8,2020-04-08T16:11:03Z,40.749543,lat,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,9,2020-04-08T16:10:46Z,40.750688,lat,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,10,2020-04-08T16:09:36Z,40.757106,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,11,2020-04-08T16:09:53Z,40.7565,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,12,2020-04-08T16:09:01Z,40.757895,lat,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,13,2020-04-08T16:08:19Z,40.759873,lat,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,14,2020-04-08T16:08:38Z,40.759128,lat,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,15,2020-04-08T16:07:43Z,40.762143,lat,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,16,2020-04-08T16:06:49Z,40.762709,lat,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,17,2020-04-08T16:06:31Z,40.762441,lat,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,18,2020-04-08T16:06:11Z,40.762373,lat,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,19,2020-04-08T16:03:54Z,40.76117,lat,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,20,2020-04-08T16:04:28Z,40.761653,lat,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,21,2020-04-08T16:05:46Z,40.761908,lat,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,22,2020-04-08T16:10:29Z,40.753279,lat,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,23,2020-04-08T16:03:36Z,40.761241,lat,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,24,2020-04-08T16:02:33Z,40.761443,lat,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,25,2020-04-08T16:01:55Z,40.761878,lat,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,26,2020-04-08T15:59:24Z,40.763356,lat,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,27,2020-04-08T15:45:33Z,40.815413,lat,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,28,2020-04-08T15:45:51Z,40.814096,lat,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,29,2020-04-08T15:46:12Z,40.810699,lat,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,30,2020-04-08T15:47:45Z,40.808517,lat,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,31,2020-04-08T15:48:04Z,40.806882,lat,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,32,2020-04-08T15:49:01Z,40.800397,lat,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,33,2020-04-08T15:49:22Z,40.796724,lat,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,34,2020-04-08T15:50:44Z,40.794998,lat,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,35,2020-04-08T15:53:56Z,40.786038,lat,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,36,2020-04-08T15:52:38Z,40.787216,lat,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,37,2020-04-08T15:52:16Z,40.788413,lat,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,38,2020-04-08T15:51:55Z,40.789185,lat,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,39,2020-04-08T15:51:20Z,40.791541,lat,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,40,2020-04-08T15:51:37Z,40.791009,lat,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,41,2020-04-08T15:51:03Z,40.793905,lat,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,42,2020-04-08T15:54:57Z,40.775044,lat,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,43,2020-04-08T15:55:54Z,40.773334,lat,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,44,2020-04-08T15:56:13Z,40.772144,lat,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,45,2020-04-08T15:56:33Z,40.770953,lat,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,46,2020-04-08T15:58:10Z,40.76594,lat,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,47,2020-04-08T15:56:53Z,40.768069,lat,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,48,2020-04-08T15:57:52Z,40.76661,lat,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n,,49,2020-04-08T15:44:58Z,-73.68691,lon,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,50,2020-04-08T16:19:27Z,-73.940563,lon,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,51,2020-04-08T16:16:50Z,-73.912119,lon,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,52,2020-04-08T16:15:59Z,-73.905367,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,53,2020-04-08T16:16:16Z,-73.906398,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,54,2020-04-08T16:14:32Z,-73.900815,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,55,2020-04-08T16:14:49Z,-73.902975,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,56,2020-04-08T16:18:18Z,-73.927597,lon,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,57,2020-04-08T16:11:03Z,-73.852242,lon,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,58,2020-04-08T16:10:46Z,-73.848962,lon,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,59,2020-04-08T16:09:36Z,-73.833095,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,60,2020-04-08T16:09:53Z,-73.834298,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,61,2020-04-08T16:09:01Z,-73.831347,lon,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,62,2020-04-08T16:08:19Z,-73.826087,lon,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,63,2020-04-08T16:08:38Z,-73.828799,lon,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,64,2020-04-08T16:07:43Z,-73.817956,lon,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,65,2020-04-08T16:06:49Z,-73.814539,lon,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,66,2020-04-08T16:06:31Z,-73.810154,lon,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,67,2020-04-08T16:06:11Z,-73.809437,lon,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,68,2020-04-08T16:03:54Z,-73.795812,lon,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,69,2020-04-08T16:04:28Z,-73.801766,lon,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,70,2020-04-08T16:05:46Z,-73.804421,lon,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,71,2020-04-08T16:10:29Z,-73.841791,lon,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,72,2020-04-08T16:03:36Z,-73.792932,lon,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,73,2020-04-08T16:02:33Z,-73.789959,lon,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,74,2020-04-08T16:01:55Z,-73.785035,lon,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,75,2020-04-08T15:59:24Z,-73.769272,lon,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,76,2020-04-08T15:45:33Z,-73.690054,lon,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,77,2020-04-08T15:45:51Z,-73.693214,lon,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,78,2020-04-08T15:46:12Z,-73.695214,lon,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,79,2020-04-08T15:47:45Z,-73.695594,lon,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,80,2020-04-08T15:48:04Z,-73.695858,lon,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,81,2020-04-08T15:49:01Z,-73.695023,lon,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,82,2020-04-08T15:49:22Z,-73.699899,lon,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,83,2020-04-08T15:50:44Z,-73.702982,lon,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,84,2020-04-08T15:53:56Z,-73.72924,lon,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,85,2020-04-08T15:52:38Z,-73.7261,lon,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,86,2020-04-08T15:52:16Z,-73.721973,lon,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,87,2020-04-08T15:51:55Z,-73.720059,lon,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,88,2020-04-08T15:51:20Z,-73.713571,lon,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,89,2020-04-08T15:51:37Z,-73.715622,lon,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,90,2020-04-08T15:51:03Z,-73.705485,lon,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,91,2020-04-08T15:54:57Z,-73.740647,lon,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,92,2020-04-08T15:55:54Z,-73.742812,lon,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,93,2020-04-08T15:56:13Z,-73.74431,lon,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,94,2020-04-08T15:56:33Z,-73.745805,lon,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,95,2020-04-08T15:58:10Z,-73.752465,lon,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,96,2020-04-08T15:56:53Z,-73.749413,lon,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,97,2020-04-08T15:57:52Z,-73.751322,lon,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,98,2020-04-08T15:44:58Z,1586304000,tid,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,99,2020-04-08T16:19:27Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,100,2020-04-08T16:16:50Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,101,2020-04-08T16:15:59Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,102,2020-04-08T16:16:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,103,2020-04-08T16:14:32Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,104,2020-04-08T16:14:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,105,2020-04-08T16:18:18Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,106,2020-04-08T16:11:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,107,2020-04-08T16:10:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,108,2020-04-08T16:09:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,109,2020-04-08T16:09:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,110,2020-04-08T16:09:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,111,2020-04-08T16:08:19Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,112,2020-04-08T16:08:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,113,2020-04-08T16:07:43Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,114,2020-04-08T16:06:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,115,2020-04-08T16:06:31Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,116,2020-04-08T16:06:11Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,117,2020-04-08T16:03:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,118,2020-04-08T16:04:28Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,119,2020-04-08T16:05:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,120,2020-04-08T16:10:29Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,121,2020-04-08T16:03:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,122,2020-04-08T16:02:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,123,2020-04-08T16:01:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,124,2020-04-08T15:59:24Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,125,2020-04-08T15:45:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,126,2020-04-08T15:45:51Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,127,2020-04-08T15:46:12Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,128,2020-04-08T15:47:45Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,129,2020-04-08T15:48:04Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,130,2020-04-08T15:49:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,131,2020-04-08T15:49:22Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,132,2020-04-08T15:50:44Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,133,2020-04-08T15:53:56Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,134,2020-04-08T15:52:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,135,2020-04-08T15:52:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,136,2020-04-08T15:51:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,137,2020-04-08T15:51:20Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,138,2020-04-08T15:51:37Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,139,2020-04-08T15:51:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,140,2020-04-08T15:54:57Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,141,2020-04-08T15:55:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,142,2020-04-08T15:56:13Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,143,2020-04-08T15:56:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,144,2020-04-08T15:58:10Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,145,2020-04-08T15:56:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,146,2020-04-08T15:57:52Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\"\n\noutData = \"\n#group,false,false,false,true,false,true\n#datatype,string,long,double,string,string,string\n#default,_result,,,,,\n,result,table,_st_distance,id,st_linestring,trip_id\n,,0,10.75,GO506_20_6431,\\\"-73.68691 40.820317, -73.690054 40.815413, -73.693214 40.814096, -73.695214 40.810699, -73.695594 40.808517, -73.695858 40.806882, -73.695023 40.800397, -73.699899 40.796724, -73.702982 40.794998, -73.705485 40.793905, -73.713571 40.791541, -73.715622 40.791009, -73.720059 40.789185, -73.721973 40.788413, -73.7261 40.787216, -73.72924 40.786038, -73.740647 40.775044, -73.742812 40.773334, -73.74431 40.772144, -73.745805 40.770953, -73.749413 40.768069, -73.751322 40.76661, -73.752465 40.76594, -73.769272 40.763356, -73.785035 40.761878, -73.789959 40.761443, -73.792932 40.761241, -73.795812 40.76117, -73.801766 40.761653, -73.804421 40.761908, -73.809437 40.762373, -73.810154 40.762441, -73.814539 40.762709, -73.817956 40.762143, -73.826087 40.759873, -73.828799 40.759128, -73.831347 40.757895, -73.833095 40.757106, -73.834298 40.7565, -73.841791 40.753279, -73.848962 40.750688, -73.852242 40.749543, -73.900815 40.743989, -73.902975 40.745851, -73.905367 40.748141, -73.906398 40.748909, -73.912119 40.751085, -73.927597 40.748495, -73.940563 40.745249\\\",GO506_20_6431\n\"\n\n// reference point (Statue of Liberty)\nrefPoint = {lat: 40.6892, lon: -74.0445}\n\n// limit float to 3 decimal places\nlimitFloat = (value) =>\n  (float(v: int(v: value * 1000.0)) / 1000.0)\n\nt_stDistanceLinestring = (table=<-) =>\n  table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to see the train closing in\n    |> geo.ST_LineString()\n    |> map(fn: (r) => ({\n        r with _st_distance: limitFloat(value: geo.ST_Distance(region: refPoint, geometry: {linestring: r.st_linestring}))\n    }))\n    |> drop(columns: [\"_start\", \"_stop\"])\ntest _stDistanceLinestring = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stDistanceLinestring})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   7,
						},
						File:   "st_distance_linestring_test.flux",
						Source: "now = () => (2030-01-01T00:00:00Z)",
						Start: ast.Position{
							Column: 8,
							Line:   7,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   7,
							},
							File:   "st_distance_linestring_test.flux",
							Source: "now",
							Start: ast.Position{
								Column: 8,
								Line:   7,
							},
						},
					},
					Name: "now",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   7,
							},
							File:   "st_distance_linestring_test.flux",
							Source: "() => (2030-01-01T00:00:00Z)",
							Start: ast.Position{
								Column: 14,
								Line:   7,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   7,
								},
								File:   "st_distance_linestring_test.flux",
								Source: "(2030-01-01T00:00:00Z)",
								Start: ast.Position{
									Column: 20,
									Line:   7,
								},
							},
						},
						Expression: &ast.DateTimeLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   7,
									},
									File:   "st_distance_linestring_test.flux",
									Source: "2030-01-01T00:00:00Z",
									Start: ast.Position{
										Column: 21,
										Line:   7,
									},
								},
							},
							Value: parser.MustParseTime("2030-01-01T00:00:00Z"),
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   7,
					},
					File:   "st_distance_linestring_test.flux",
					Source: "option now = () => (2030-01-01T00:00:00Z)",
					Start: ast.Position{
						Column: 1,
						Line:   7,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   167,
					},
					File:   "st_distance_linestring_test.flux",
					Source: "inData = \"\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,0,2020-04-08T15:44:58Z,40.820317,lat,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,1,2020-04-08T16:19:27Z,40.745249,lat,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,2,2020-04-08T16:16:50Z,40.751085,lat,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,3,2020-04-08T16:15:59Z,40.748141,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,4,2020-04-08T16:16:16Z,40.748909,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,5,2020-04-08T16:14:32Z,40.743989,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,6,2020-04-08T16:14:49Z,40.745851,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,7,2020-04-08T16:18:18Z,40.748495,lat,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,8,2020-04-08T16:11:03Z,40.749543,lat,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,9,2020-04-08T16:10:46Z,40.750688,lat,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,10,2020-04-08T16:09:36Z,40.757106,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,11,2020-04-08T16:09:53Z,40.7565,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,12,2020-04-08T16:09:01Z,40.757895,lat,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,13,2020-04-08T16:08:19Z,40.759873,lat,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,14,2020-04-08T16:08:38Z,40.759128,lat,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,15,2020-04-08T16:07:43Z,40.762143,lat,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,16,2020-04-08T16:06:49Z,40.762709,lat,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,17,2020-04-08T16:06:31Z,40.762441,lat,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,18,2020-04-08T16:06:11Z,40.762373,lat,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,19,2020-04-08T16:03:54Z,40.76117,lat,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,20,2020-04-08T16:04:28Z,40.761653,lat,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,21,2020-04-08T16:05:46Z,40.761908,lat,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,22,2020-04-08T16:10:29Z,40.753279,lat,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,23,2020-04-08T16:03:36Z,40.761241,lat,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,24,2020-04-08T16:02:33Z,40.761443,lat,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,25,2020-04-08T16:01:55Z,40.761878,lat,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,26,2020-04-08T15:59:24Z,40.763356,lat,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,27,2020-04-08T15:45:33Z,40.815413,lat,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,28,2020-04-08T15:45:51Z,40.814096,lat,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,29,2020-04-08T15:46:12Z,40.810699,lat,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,30,2020-04-08T15:47:45Z,40.808517,lat,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,31,2020-04-08T15:48:04Z,40.806882,lat,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,32,2020-04-08T15:49:01Z,40.800397,lat,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,33,2020-04-08T15:49:22Z,40.796724,lat,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,34,2020-04-08T15:50:44Z,40.794998,lat,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,35,2020-04-08T15:53:56Z,40.786038,lat,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,36,2020-04-08T15:52:38Z,40.787216,lat,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,37,2020-04-08T15:52:16Z,40.788413,lat,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,38,2020-04-08T15:51:55Z,40.789185,lat,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,39,2020-04-08T15:51:20Z,40.791541,lat,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,40,2020-04-08T15:51:37Z,40.791009,lat,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,41,2020-04-08T15:51:03Z,40.793905,lat,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,42,2020-04-08T15:54:57Z,40.775044,lat,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,43,2020-04-08T15:55:54Z,40.773334,lat,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,44,2020-04-08T15:56:13Z,40.772144,lat,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,45,2020-04-08T15:56:33Z,40.770953,lat,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,46,2020-04-08T15:58:10Z,40.76594,lat,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,47,2020-04-08T15:56:53Z,40.768069,lat,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,48,2020-04-08T15:57:52Z,40.76661,lat,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n,,49,2020-04-08T15:44:58Z,-73.68691,lon,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,50,2020-04-08T16:19:27Z,-73.940563,lon,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,51,2020-04-08T16:16:50Z,-73.912119,lon,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,52,2020-04-08T16:15:59Z,-73.905367,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,53,2020-04-08T16:16:16Z,-73.906398,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,54,2020-04-08T16:14:32Z,-73.900815,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,55,2020-04-08T16:14:49Z,-73.902975,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,56,2020-04-08T16:18:18Z,-73.927597,lon,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,57,2020-04-08T16:11:03Z,-73.852242,lon,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,58,2020-04-08T16:10:46Z,-73.848962,lon,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,59,2020-04-08T16:09:36Z,-73.833095,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,60,2020-04-08T16:09:53Z,-73.834298,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,61,2020-04-08T16:09:01Z,-73.831347,lon,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,62,2020-04-08T16:08:19Z,-73.826087,lon,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,63,2020-04-08T16:08:38Z,-73.828799,lon,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,64,2020-04-08T16:07:43Z,-73.817956,lon,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,65,2020-04-08T16:06:49Z,-73.814539,lon,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,66,2020-04-08T16:06:31Z,-73.810154,lon,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,67,2020-04-08T16:06:11Z,-73.809437,lon,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,68,2020-04-08T16:03:54Z,-73.795812,lon,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,69,2020-04-08T16:04:28Z,-73.801766,lon,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,70,2020-04-08T16:05:46Z,-73.804421,lon,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,71,2020-04-08T16:10:29Z,-73.841791,lon,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,72,2020-04-08T16:03:36Z,-73.792932,lon,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,73,2020-04-08T16:02:33Z,-73.789959,lon,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,74,2020-04-08T16:01:55Z,-73.785035,lon,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,75,2020-04-08T15:59:24Z,-73.769272,lon,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,76,2020-04-08T15:45:33Z,-73.690054,lon,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,77,2020-04-08T15:45:51Z,-73.693214,lon,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,78,2020-04-08T15:46:12Z,-73.695214,lon,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,79,2020-04-08T15:47:45Z,-73.695594,lon,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,80,2020-04-08T15:48:04Z,-73.695858,lon,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,81,2020-04-08T15:49:01Z,-73.695023,lon,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,82,2020-04-08T15:49:22Z,-73.699899,lon,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,83,2020-04-08T15:50:44Z,-73.702982,lon,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,84,2020-04-08T15:53:56Z,-73.72924,lon,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,85,2020-04-08T15:52:38Z,-73.7261,lon,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,86,2020-04-08T15:52:16Z,-73.721973,lon,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,87,2020-04-08T15:51:55Z,-73.720059,lon,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,88,2020-04-08T15:51:20Z,-73.713571,lon,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,89,2020-04-08T15:51:37Z,-73.715622,lon,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,90,2020-04-08T15:51:03Z,-73.705485,lon,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,91,2020-04-08T15:54:57Z,-73.740647,lon,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,92,2020-04-08T15:55:54Z,-73.742812,lon,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,93,2020-04-08T15:56:13Z,-73.74431,lon,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,94,2020-04-08T15:56:33Z,-73.745805,lon,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,95,2020-04-08T15:58:10Z,-73.752465,lon,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,96,2020-04-08T15:56:53Z,-73.749413,lon,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,97,2020-04-08T15:57:52Z,-73.751322,lon,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,98,2020-04-08T15:44:58Z,1586304000,tid,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,99,2020-04-08T16:19:27Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,100,2020-04-08T16:16:50Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,101,2020-04-08T16:15:59Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,102,2020-04-08T16:16:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,103,2020-04-08T16:14:32Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,104,2020-04-08T16:14:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,105,2020-04-08T16:18:18Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,106,2020-04-08T16:11:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,107,2020-04-08T16:10:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,108,2020-04-08T16:09:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,109,2020-04-08T16:09:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,110,2020-04-08T16:09:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,111,2020-04-08T16:08:19Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,112,2020-04-08T16:08:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,113,2020-04-08T16:07:43Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,114,2020-04-08T16:06:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,115,2020-04-08T16:06:31Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,116,2020-04-08T16:06:11Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,117,2020-04-08T16:03:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,118,2020-04-08T16:04:28Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,119,2020-04-08T16:05:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,120,2020-04-08T16:10:29Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,121,2020-04-08T16:03:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,122,2020-04-08T16:02:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,123,2020-04-08T16:01:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,124,2020-04-08T15:59:24Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,125,2020-04-08T15:45:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,126,2020-04-08T15:45:51Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,127,2020-04-08T15:46:12Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,128,2020-04-08T15:47:45Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,129,2020-04-08T15:48:04Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,130,2020-04-08T15:49:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,131,2020-04-08T15:49:22Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,132,2020-04-08T15:50:44Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,133,2020-04-08T15:53:56Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,134,2020-04-08T15:52:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,135,2020-04-08T15:52:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,136,2020-04-08T15:51:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,137,2020-04-08T15:51:20Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,138,2020-04-08T15:51:37Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,139,2020-04-08T15:51:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,140,2020-04-08T15:54:57Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,141,2020-04-08T15:55:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,142,2020-04-08T15:56:13Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,143,2020-04-08T15:56:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,144,2020-04-08T15:58:10Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,145,2020-04-08T15:56:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,146,2020-04-08T15:57:52Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   10,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 7,
							Line:   10,
						},
						File:   "st_distance_linestring_test.flux",
						Source: "inData",
						Start: ast.Position{
							Column: 1,
							Line:   10,
						},
					},
				},
				Name: "inData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   167,
						},
						File:   "st_distance_linestring_test.flux",
						Source: "\"\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,0,2020-04-08T15:44:58Z,40.820317,lat,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,1,2020-04-08T16:19:27Z,40.745249,lat,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,2,2020-04-08T16:16:50Z,40.751085,lat,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,3,2020-04-08T16:15:59Z,40.748141,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,4,2020-04-08T16:16:16Z,40.748909,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,5,2020-04-08T16:14:32Z,40.743989,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,6,2020-04-08T16:14:49Z,40.745851,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,7,2020-04-08T16:18:18Z,40.748495,lat,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,8,2020-04-08T16:11:03Z,40.749543,lat,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,9,2020-04-08T16:10:46Z,40.750688,lat,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,10,2020-04-08T16:09:36Z,40.757106,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,11,2020-04-08T16:09:53Z,40.7565,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,12,2020-04-08T16:09:01Z,40.757895,lat,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,13,2020-04-08T16:08:19Z,40.759873,lat,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,14,2020-04-08T16:08:38Z,40.759128,lat,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,15,2020-04-08T16:07:43Z,40.762143,lat,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,16,2020-04-08T16:06:49Z,40.762709,lat,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,17,2020-04-08T16:06:31Z,40.762441,lat,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,18,2020-04-08T16:06:11Z,40.762373,lat,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,19,2020-04-08T16:03:54Z,40.76117,lat,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,20,2020-04-08T16:04:28Z,40.761653,lat,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,21,2020-04-08T16:05:46Z,40.761908,lat,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,22,2020-04-08T16:10:29Z,40.753279,lat,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,23,2020-04-08T16:03:36Z,40.761241,lat,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,24,2020-04-08T16:02:33Z,40.761443,lat,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,25,2020-04-08T16:01:55Z,40.761878,lat,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,26,2020-04-08T15:59:24Z,40.763356,lat,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,27,2020-04-08T15:45:33Z,40.815413,lat,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,28,2020-04-08T15:45:51Z,40.814096,lat,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,29,2020-04-08T15:46:12Z,40.810699,lat,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,30,2020-04-08T15:47:45Z,40.808517,lat,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,31,2020-04-08T15:48:04Z,40.806882,lat,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,32,2020-04-08T15:49:01Z,40.800397,lat,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,33,2020-04-08T15:49:22Z,40.796724,lat,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,34,2020-04-08T15:50:44Z,40.794998,lat,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,35,2020-04-08T15:53:56Z,40.786038,lat,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,36,2020-04-08T15:52:38Z,40.787216,lat,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,37,2020-04-08T15:52:16Z,40.788413,lat,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,38,2020-04-08T15:51:55Z,40.789185,lat,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,39,2020-04-08T15:51:20Z,40.791541,lat,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,40,2020-04-08T15:51:37Z,40.791009,lat,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,41,2020-04-08T15:51:03Z,40.793905,lat,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,42,2020-04-08T15:54:57Z,40.775044,lat,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,43,2020-04-08T15:55:54Z,40.773334,lat,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,44,2020-04-08T15:56:13Z,40.772144,lat,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,45,2020-04-08T15:56:33Z,40.770953,lat,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,46,2020-04-08T15:58:10Z,40.76594,lat,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,47,2020-04-08T15:56:53Z,40.768069,lat,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,48,2020-04-08T15:57:52Z,40.76661,lat,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n,,49,2020-04-08T15:44:58Z,-73.68691,lon,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,50,2020-04-08T16:19:27Z,-73.940563,lon,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,51,2020-04-08T16:16:50Z,-73.912119,lon,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,52,2020-04-08T16:15:59Z,-73.905367,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,53,2020-04-08T16:16:16Z,-73.906398,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,54,2020-04-08T16:14:32Z,-73.900815,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,55,2020-04-08T16:14:49Z,-73.902975,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,56,2020-04-08T16:18:18Z,-73.927597,lon,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,57,2020-04-08T16:11:03Z,-73.852242,lon,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,58,2020-04-08T16:10:46Z,-73.848962,lon,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,59,2020-04-08T16:09:36Z,-73.833095,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,60,2020-04-08T16:09:53Z,-73.834298,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,61,2020-04-08T16:09:01Z,-73.831347,lon,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,62,2020-04-08T16:08:19Z,-73.826087,lon,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,63,2020-04-08T16:08:38Z,-73.828799,lon,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,64,2020-04-08T16:07:43Z,-73.817956,lon,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,65,2020-04-08T16:06:49Z,-73.814539,lon,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,66,2020-04-08T16:06:31Z,-73.810154,lon,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,67,2020-04-08T16:06:11Z,-73.809437,lon,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,68,2020-04-08T16:03:54Z,-73.795812,lon,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,69,2020-04-08T16:04:28Z,-73.801766,lon,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,70,2020-04-08T16:05:46Z,-73.804421,lon,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,71,2020-04-08T16:10:29Z,-73.841791,lon,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,72,2020-04-08T16:03:36Z,-73.792932,lon,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,73,2020-04-08T16:02:33Z,-73.789959,lon,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,74,2020-04-08T16:01:55Z,-73.785035,lon,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,75,2020-04-08T15:59:24Z,-73.769272,lon,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,76,2020-04-08T15:45:33Z,-73.690054,lon,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,77,2020-04-08T15:45:51Z,-73.693214,lon,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,78,2020-04-08T15:46:12Z,-73.695214,lon,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,79,2020-04-08T15:47:45Z,-73.695594,lon,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,80,2020-04-08T15:48:04Z,-73.695858,lon,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,81,2020-04-08T15:49:01Z,-73.695023,lon,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,82,2020-04-08T15:49:22Z,-73.699899,lon,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,83,2020-04-08T15:50:44Z,-73.702982,lon,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,84,2020-04-08T15:53:56Z,-73.72924,lon,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,85,2020-04-08T15:52:38Z,-73.7261,lon,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,86,2020-04-08T15:52:16Z,-73.721973,lon,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,87,2020-04-08T15:51:55Z,-73.720059,lon,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,88,2020-04-08T15:51:20Z,-73.713571,lon,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,89,2020-04-08T15:51:37Z,-73.715622,lon,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,90,2020-04-08T15:51:03Z,-73.705485,lon,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,91,2020-04-08T15:54:57Z,-73.740647,lon,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,92,2020-04-08T15:55:54Z,-73.742812,lon,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,93,2020-04-08T15:56:13Z,-73.74431,lon,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,94,2020-04-08T15:56:33Z,-73.745805,lon,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,95,2020-04-08T15:58:10Z,-73.752465,lon,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,96,2020-04-08T15:56:53Z,-73.749413,lon,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,97,2020-04-08T15:57:52Z,-73.751322,lon,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,98,2020-04-08T15:44:58Z,1586304000,tid,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,99,2020-04-08T16:19:27Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,100,2020-04-08T16:16:50Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,101,2020-04-08T16:15:59Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,102,2020-04-08T16:16:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,103,2020-04-08T16:14:32Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,104,2020-04-08T16:14:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,105,2020-04-08T16:18:18Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,106,2020-04-08T16:11:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,107,2020-04-08T16:10:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,108,2020-04-08T16:09:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,109,2020-04-08T16:09:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,110,2020-04-08T16:09:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,111,2020-04-08T16:08:19Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,112,2020-04-08T16:08:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,113,2020-04-08T16:07:43Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,114,2020-04-08T16:06:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,115,2020-04-08T16:06:31Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,116,2020-04-08T16:06:11Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,117,2020-04-08T16:03:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,118,2020-04-08T16:04:28Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,119,2020-04-08T16:05:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,120,2020-04-08T16:10:29Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,121,2020-04-08T16:03:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,122,2020-04-08T16:02:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,123,2020-04-08T16:01:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,124,2020-04-08T15:59:24Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,125,2020-04-08T15:45:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,126,2020-04-08T15:45:51Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,127,2020-04-08T15:46:12Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,128,2020-04-08T15:47:45Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,129,2020-04-08T15:48:04Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,130,2020-04-08T15:49:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,131,2020-04-08T15:49:22Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,132,2020-04-08T15:50:44Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,133,2020-04-08T15:53:56Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,134,2020-04-08T15:52:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,135,2020-04-08T15:52:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,136,2020-04-08T15:51:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,137,2020-04-08T15:51:20Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,138,2020-04-08T15:51:37Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,139,2020-04-08T15:51:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,140,2020-04-08T15:54:57Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,141,2020-04-08T15:55:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,142,2020-04-08T15:56:13Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,143,2020-04-08T15:56:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,144,2020-04-08T15:58:10Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,145,2020-04-08T15:56:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,146,2020-04-08T15:57:52Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\"",
						Start: ast.Position{
							Column: 10,
							Line:   10,
						},
					},
				},
				Value: "\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,0,2020-04-08T15:44:58Z,40.820317,lat,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,1,2020-04-08T16:19:27Z,40.745249,lat,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,2,2020-04-08T16:16:50Z,40.751085,lat,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,3,2020-04-08T16:15:59Z,40.748141,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,4,2020-04-08T16:16:16Z,40.748909,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,5,2020-04-08T16:14:32Z,40.743989,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,6,2020-04-08T16:14:49Z,40.745851,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,7,2020-04-08T16:18:18Z,40.748495,lat,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,8,2020-04-08T16:11:03Z,40.749543,lat,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,9,2020-04-08T16:10:46Z,40.750688,lat,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,10,2020-04-08T16:09:36Z,40.757106,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,11,2020-04-08T16:09:53Z,40.7565,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,12,2020-04-08T16:09:01Z,40.757895,lat,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,13,2020-04-08T16:08:19Z,40.759873,lat,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,14,2020-04-08T16:08:38Z,40.759128,lat,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,15,2020-04-08T16:07:43Z,40.762143,lat,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,16,2020-04-08T16:06:49Z,40.762709,lat,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,17,2020-04-08T16:06:31Z,40.762441,lat,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,18,2020-04-08T16:06:11Z,40.762373,lat,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,19,2020-04-08T16:03:54Z,40.76117,lat,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,20,2020-04-08T16:04:28Z,40.761653,lat,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,21,2020-04-08T16:05:46Z,40.761908,lat,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,22,2020-04-08T16:10:29Z,40.753279,lat,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,23,2020-04-08T16:03:36Z,40.761241,lat,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,24,2020-04-08T16:02:33Z,40.761443,lat,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,25,2020-04-08T16:01:55Z,40.761878,lat,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,26,2020-04-08T15:59:24Z,40.763356,lat,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,27,2020-04-08T15:45:33Z,40.815413,lat,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,28,2020-04-08T15:45:51Z,40.814096,lat,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,29,2020-04-08T15:46:12Z,40.810699,lat,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,30,2020-04-08T15:47:45Z,40.808517,lat,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,31,2020-04-08T15:48:04Z,40.806882,lat,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,32,2020-04-08T15:49:01Z,40.800397,lat,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,33,2020-04-08T15:49:22Z,40.796724,lat,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,34,2020-04-08T15:50:44Z,40.794998,lat,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,35,2020-04-08T15:53:56Z,40.786038,lat,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,36,2020-04-08T15:52:38Z,40.787216,lat,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,37,2020-04-08T15:52:16Z,40.788413,lat,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,38,2020-04-08T15:51:55Z,40.789185,lat,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,39,2020-04-08T15:51:20Z,40.791541,lat,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,40,2020-04-08T15:51:37Z,40.791009,lat,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,41,2020-04-08T15:51:03Z,40.793905,lat,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,42,2020-04-08T15:54:57Z,40.775044,lat,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,43,2020-04-08T15:55:54Z,40.773334,lat,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,44,2020-04-08T15:56:13Z,40.772144,lat,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,45,2020-04-08T15:56:33Z,40.770953,lat,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,46,2020-04-08T15:58:10Z,40.76594,lat,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,47,2020-04-08T15:56:53Z,40.768069,lat,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,48,2020-04-08T15:57:52Z,40.76661,lat,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n,,49,2020-04-08T15:44:58Z,-73.68691,lon,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,50,2020-04-08T16:19:27Z,-73.940563,lon,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,51,2020-04-08T16:16:50Z,-73.912119,lon,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,52,2020-04-08T16:15:59Z,-73.905367,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,53,2020-04-08T16:16:16Z,-73.906398,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,54,2020-04-08T16:14:32Z,-73.900815,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,55,2020-04-08T16:14:49Z,-73.902975,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,56,2020-04-08T16:18:18Z,-73.927597,lon,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,57,2020-04-08T16:11:03Z,-73.852242,lon,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,58,2020-04-08T16:10:46Z,-73.848962,lon,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,59,2020-04-08T16:09:36Z,-73.833095,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,60,2020-04-08T16:09:53Z,-73.834298,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,61,2020-04-08T16:09:01Z,-73.831347,lon,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,62,2020-04-08T16:08:19Z,-73.826087,lon,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,63,2020-04-08T16:08:38Z,-73.828799,lon,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,64,2020-04-08T16:07:43Z,-73.817956,lon,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,65,2020-04-08T16:06:49Z,-73.814539,lon,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,66,2020-04-08T16:06:31Z,-73.810154,lon,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,67,2020-04-08T16:06:11Z,-73.809437,lon,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,68,2020-04-08T16:03:54Z,-73.795812,lon,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,69,2020-04-08T16:04:28Z,-73.801766,lon,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,70,2020-04-08T16:05:46Z,-73.804421,lon,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,71,2020-04-08T16:10:29Z,-73.841791,lon,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,72,2020-04-08T16:03:36Z,-73.792932,lon,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,73,2020-04-08T16:02:33Z,-73.789959,lon,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,74,2020-04-08T16:01:55Z,-73.785035,lon,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,75,2020-04-08T15:59:24Z,-73.769272,lon,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,76,2020-04-08T15:45:33Z,-73.690054,lon,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,77,2020-04-08T15:45:51Z,-73.693214,lon,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,78,2020-04-08T15:46:12Z,-73.695214,lon,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,79,2020-04-08T15:47:45Z,-73.695594,lon,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,80,2020-04-08T15:48:04Z,-73.695858,lon,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,81,2020-04-08T15:49:01Z,-73.695023,lon,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,82,2020-04-08T15:49:22Z,-73.699899,lon,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,83,2020-04-08T15:50:44Z,-73.702982,lon,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,84,2020-04-08T15:53:56Z,-73.72924,lon,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,85,2020-04-08T15:52:38Z,-73.7261,lon,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,86,2020-04-08T15:52:16Z,-73.721973,lon,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,87,2020-04-08T15:51:55Z,-73.720059,lon,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,88,2020-04-08T15:51:20Z,-73.713571,lon,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,89,2020-04-08T15:51:37Z,-73.715622,lon,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,90,2020-04-08T15:51:03Z,-73.705485,lon,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,91,2020-04-08T15:54:57Z,-73.740647,lon,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,92,2020-04-08T15:55:54Z,-73.742812,lon,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,93,2020-04-08T15:56:13Z,-73.74431,lon,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,94,2020-04-08T15:56:33Z,-73.745805,lon,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,95,2020-04-08T15:58:10Z,-73.752465,lon,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,96,2020-04-08T15:56:53Z,-73.749413,lon,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,97,2020-04-08T15:57:52Z,-73.751322,lon,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,98,2020-04-08T15:44:58Z,1586304000,tid,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,99,2020-04-08T16:19:27Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,100,2020-04-08T16:16:50Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,101,2020-04-08T16:15:59Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,102,2020-04-08T16:16:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,103,2020-04-08T16:14:32Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,104,2020-04-08T16:14:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,105,2020-04-08T16:18:18Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,106,2020-04-08T16:11:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,107,2020-04-08T16:10:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,108,2020-04-08T16:09:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,109,2020-04-08T16:09:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,110,2020-04-08T16:09:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,111,2020-04-08T16:08:19Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,112,2020-04-08T16:08:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,113,2020-04-08T16:07:43Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,114,2020-04-08T16:06:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,115,2020-04-08T16:06:31Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,116,2020-04-08T16:06:11Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,117,2020-04-08T16:03:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,118,2020-04-08T16:04:28Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,119,2020-04-08T16:05:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,120,2020-04-08T16:10:29Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,121,2020-04-08T16:03:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,122,2020-04-08T16:02:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,123,2020-04-08T16:01:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,124,2020-04-08T15:59:24Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,125,2020-04-08T15:45:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,126,2020-04-08T15:45:51Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,127,2020-04-08T15:46:12Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,128,2020-04-08T15:47:45Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,129,2020-04-08T15:48:04Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,130,2020-04-08T15:49:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,131,2020-04-08T15:49:22Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,132,2020-04-08T15:50:44Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,133,2020-04-08T15:53:56Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,134,2020-04-08T15:52:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,135,2020-04-08T15:52:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,136,2020-04-08T15:51:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,137,2020-04-08T15:51:20Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,138,2020-04-08T15:51:37Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,139,2020-04-08T15:51:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,140,2020-04-08T15:54:57Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,141,2020-04-08T15:55:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,142,2020-04-08T15:56:13Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,143,2020-04-08T15:56:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,144,2020-04-08T15:58:10Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,145,2020-04-08T15:56:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,146,2020-04-08T15:57:52Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   175,
					},
					File:   "st_distance_linestring_test.flux",
					Source: "outData = \"\n#group,false,false,false,true,false,true\n#datatype,string,long,double,string,string,string\n#default,_result,,,,,\n,result,table,_st_distance,id,st_linestring,trip_id\n,,0,10.75,GO506_20_6431,\\\"-73.68691 40.820317, -73.690054 40.815413, -73.693214 40.814096, -73.695214 40.810699, -73.695594 40.808517, -73.695858 40.806882, -73.695023 40.800397, -73.699899 40.796724, -73.702982 40.794998, -73.705485 40.793905, -73.713571 40.791541, -73.715622 40.791009, -73.720059 40.789185, -73.721973 40.788413, -73.7261 40.787216, -73.72924 40.786038, -73.740647 40.775044, -73.742812 40.773334, -73.74431 40.772144, -73.745805 40.770953, -73.749413 40.768069, -73.751322 40.76661, -73.752465 40.76594, -73.769272 40.763356, -73.785035 40.761878, -73.789959 40.761443, -73.792932 40.761241, -73.795812 40.76117, -73.801766 40.761653, -73.804421 40.761908, -73.809437 40.762373, -73.810154 40.762441, -73.814539 40.762709, -73.817956 40.762143, -73.826087 40.759873, -73.828799 40.759128, -73.831347 40.757895, -73.833095 40.757106, -73.834298 40.7565, -73.841791 40.753279, -73.848962 40.750688, -73.852242 40.749543, -73.900815 40.743989, -73.902975 40.745851, -73.905367 40.748141, -73.906398 40.748909, -73.912119 40.751085, -73.927597 40.748495, -73.940563 40.745249\\\",GO506_20_6431\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   169,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 8,
							Line:   169,
						},
						File:   "st_distance_linestring_test.flux",
						Source: "outData",
						Start: ast.Position{
							Column: 1,
							Line:   169,
						},
					},
				},
				Name: "outData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   175,
						},
						File:   "st_distance_linestring_test.flux",
						Source: "\"\n#group,false,false,false,true,false,true\n#datatype,string,long,double,string,string,string\n#default,_result,,,,,\n,result,table,_st_distance,id,st_linestring,trip_id\n,,0,10.75,GO506_20_6431,\\\"-73.68691 40.820317, -73.690054 40.815413, -73.693214 40.814096, -73.695214 40.810699, -73.695594 40.808517, -73.695858 40.806882, -73.695023 40.800397, -73.699899 40.796724, -73.702982 40.794998, -73.705485 40.793905, -73.713571 40.791541, -73.715622 40.791009, -73.720059 40.789185, -73.721973 40.788413, -73.7261 40.787216, -73.72924 40.786038, -73.740647 40.775044, -73.742812 40.773334, -73.74431 40.772144, -73.745805 40.770953, -73.749413 40.768069, -73.751322 40.76661, -73.752465 40.76594, -73.769272 40.763356, -73.785035 40.761878, -73.789959 40.761443, -73.792932 40.761241, -73.795812 40.76117, -73.801766 40.761653, -73.804421 40.761908, -73.809437 40.762373, -73.810154 40.762441, -73.814539 40.762709, -73.817956 40.762143, -73.826087 40.759873, -73.828799 40.759128, -73.831347 40.757895, -73.833095 40.757106, -73.834298 40.7565, -73.841791 40.753279, -73.848962 40.750688, -73.852242 40.749543, -73.900815 40.743989, -73.902975 40.745851, -73.905367 40.748141, -73.906398 40.748909, -73.912119 40.751085, -73.927597 40.748495, -73.940563 40.745249\\\",GO506_20_6431\n\"",
						Start: ast.Position{
							Column: 11,
							Line:   169,
						},
					},
				},
				Value: "\n#group,false,false,false,true,false,true\n#datatype,string,long,double,string,string,string\n#default,_result,,,,,\n,result,table,_st_distance,id,st_linestring,trip_id\n,,0,10.75,GO506_20_6431,\"-73.68691 40.820317, -73.690054 40.815413, -73.693214 40.814096, -73.695214 40.810699, -73.695594 40.808517, -73.695858 40.806882, -73.695023 40.800397, -73.699899 40.796724, -73.702982 40.794998, -73.705485 40.793905, -73.713571 40.791541, -73.715622 40.791009, -73.720059 40.789185, -73.721973 40.788413, -73.7261 40.787216, -73.72924 40.786038, -73.740647 40.775044, -73.742812 40.773334, -73.74431 40.772144, -73.745805 40.770953, -73.749413 40.768069, -73.751322 40.76661, -73.752465 40.76594, -73.769272 40.763356, -73.785035 40.761878, -73.789959 40.761443, -73.792932 40.761241, -73.795812 40.76117, -73.801766 40.761653, -73.804421 40.761908, -73.809437 40.762373, -73.810154 40.762441, -73.814539 40.762709, -73.817956 40.762143, -73.826087 40.759873, -73.828799 40.759128, -73.831347 40.757895, -73.833095 40.757106, -73.834298 40.7565, -73.841791 40.753279, -73.848962 40.750688, -73.852242 40.749543, -73.900815 40.743989, -73.902975 40.745851, -73.905367 40.748141, -73.906398 40.748909, -73.912119 40.751085, -73.927597 40.748495, -73.940563 40.745249\",GO506_20_6431\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 41,
						Line:   178,
					},
					File:   "st_distance_linestring_test.flux",
					Source: "refPoint = {lat: 40.6892, lon: -74.0445}",
					Start: ast.Position{
						Column: 1,
						Line:   178,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 9,
							Line:   178,
						},
						File:   "st_distance_linestring_test.flux",
						Source: "refPoint",
						Start: ast.Position{
							Column: 1,
							Line:   178,
						},
					},
				},
				Name: "refPoint",
			},
			Init: &ast.ObjectExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 41,
							Line:   178,
						},
						File:   "st_distance_linestring_test.flux",
						Source: "{lat: 40.6892, lon: -74.0445}",
						Start: ast.Position{
							Column: 12,
							Line:   178,
						},
					},
				},
				Properties: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 25,
								Line:   178,
							},
							File:   "st_distance_linestring_test.flux",
							Source: "lat: 40.6892",
							Start: ast.Position{
								Column: 13,
								Line:   178,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 16,
									Line:   178,
								},
								File:   "st_distance_linestring_test.flux",
								Source: "lat",
								Start: ast.Position{
									Column: 13,
									Line:   178,
								},
							},
						},
						Name: "lat",
					},
					Value: &ast.FloatLiteral{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 25,
									Line:   178,
								},
								File:   "st_distance_linestring_test.flux",
								Source: "40.6892",
								Start: ast.Position{
									Column: 18,
									Line:   178,
								},
							},
						},
						Value: 40.6892,
					},
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 40,
								Line:   178,
							},
							File:   "st_distance_linestring_test.flux",
							Source: "lon: -74.0445",
							Start: ast.Position{
								Column: 27,
								Line:   178,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 30,
									Line:   178,
								},
								File:   "st_distance_linestring_test.flux",
								Source: "lon",
								Start: ast.Position{
									Column: 27,
									Line:   178,
								},
							},
						},
						Name: "lon",
					},
					Value: &ast.UnaryExpression{
						Argument: &ast.FloatLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 40,
										Line:   178,
									},
									File:   "st_distance_linestring_test.flux",
									Source: "74.0445",
									Start: ast.Position{
										Column: 33,
										Line:   178,
									},
								},
							},
							Value: 74.0445,
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 40,
									Line:   178,
								},
								File:   "st_distance_linestring_test.flux",
								Source: "-74.0445",
								Start: ast.Position{
									Column: 32,
									Line:   178,
								},
							},
						},
						Operator: 6,
					},
				}},
				With: nil,
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 46,
						Line:   182,
					},
					File:   "st_distance_linestring_test.flux",
					Source: "limitFloat = (value) =>\n  (float(v: int(v: value * 1000.0)) / 1000.0)",
					Start: ast.Position{
						Column: 1,
						Line:   181,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 11,
							Line:   181,
						},
						File:   "st_distance_linestring_test.flux",
						Source: "limitFloat",
						Start: ast.Position{
							Column: 1,
							Line:   181,
						},
					},
				},
				Name: "limitFloat",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 46,
							Line:   182,
						},
						File:   "st_distance_linestring_test.flux",
						Source: "(value) =>\n  (float(v: int(v: value * 1000.0)) / 1000.0)",
						Start: ast.Position{
							Column: 14,
							Line:   181,
						},
					},
				},
				Body: &ast.ParenExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 46,
								Line:   182,
							},
							File:   "st_distance_linestring_test.flux",
							Source: "(float(v: int(v: value * 1000.0)) / 1000.0)",
							Start: ast.Position{
								Column: 3,
								Line:   182,
							},
						},
					},
					Expression: &ast.BinaryExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 45,
									Line:   182,
								},
								File:   "st_distance_linestring_test.flux",
								Source: "float(v: int(v: value * 1000.0)) / 1000.0",
								Start: ast.Position{
									Column: 4,
									Line:   182,
								},
							},
						},
						Left: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 35,
											Line:   182,
										},
										File:   "st_distance_linestring_test.flux",
										Source: "v: int(v: value * 1000.0)",
										Start: ast.Position{
											Column: 10,
											Line:   182,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 35,
												Line:   182,
											},
											File:   "st_distance_linestring_test.flux",
											Source: "v: int(v: value * 1000.0)",
											Start: ast.Position{
												Column: 10,
												Line:   182,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 11,
													Line:   182,
												},
												File:   "st_distance_linestring_test.flux",
												Source: "v",
												Start: ast.Position{
													Column: 10,
													Line:   182,
												},
											},
										},
										Name: "v",
									},
									Value: &ast.CallExpression{
										Arguments: []ast.Expression{&ast.ObjectExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 34,
														Line:   182,
													},
													File:   "st_distance_linestring_test.flux",
													Source: "v: value * 1000.0",
													Start: ast.Position{
														Column: 17,
														Line:   182,
													},
												},
											},
											Properties: []*ast.Property{&ast.Property{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 34,
															Line:   182,
														},
														File:   "st_distance_linestring_test.flux",
														Source: "v: value * 1000.0",
														Start: ast.Position{
															Column: 17,
															Line:   182,
														},
													},
												},
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 18,
																Line:   182,
															},
															File:   "st_distance_linestring_test.flux",
															Source: "v",
															Start: ast.Position{
																Column: 17,
																Line:   182,
															},
														},
													},
													Name: "v",
												},
												Value: &ast.BinaryExpression{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 34,
																Line:   182,
															},
															File:   "st_distance_linestring_test.flux",
															Source: "value * 1000.0",
															Start: ast.Position{
																Column: 20,
																Line:   182,
															},
														},
													},
													Left: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 25,
																	Line:   182,
																},
																File:   "st_distance_linestring_test.flux",
																Source: "value",
																Start: ast.Position{
																	Column: 20,
																	Line:   182,
																},
															},
														},
														Name: "value",
													},
													Operator: 1,
													Right: &ast.FloatLiteral{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 34,
																	Line:   182,
																},
																File:   "st_distance_linestring_test.flux",
																Source: "1000.0",
																Start: ast.Position{
																	Column: 28,
																	Line:   182,
																},
															},
														},
														Value: 1000.0,
													},
												},
											}},
											With: nil,
										}},
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 35,
													Line:   182,
												},
												File:   "st_distance_linestring_test.flux",
												Source: "int(v: value * 1000.0)",
												Start: ast.Position{
													Column: 13,
													Line:   182,
												},
											},
										},
										Callee: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 16,
														Line:   182,
													},
													File:   "st_distance_linestring_test.flux",
													Source: "int",
													Start: ast.Position{
														Column: 13,
														Line:   182,
													},
												},
											},
											Name: "int",
										},
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 36,
										Line:   182,
									},
									File:   "st_distance_linestring_test.flux",
									Source: "float(v: int(v: value * 1000.0))",
									Start: ast.Position{
										Column: 4,
										Line:   182,
									},
								},
							},
							Callee: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 9,
											Line:   182,
										},
										File:   "st_distance_linestring_test.flux",
										Source: "float",
										Start: ast.Position{
											Column: 4,
											Line:   182,
										},
									},
								},
								Name: "float",
							},
						},
						Operator: 2,
						Right: &ast.FloatLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 45,
										Line:   182,
									},
									File:   "st_distance_linestring_test.flux",
									Source: "1000.0",
									Start: ast.Position{
										Column: 39,
										Line:   182,
									},
								},
							},
							Value: 1000.0,
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 20,
								Line:   181,
							},
							File:   "st_distance_linestring_test.flux",
							Source: "value",
							Start: ast.Position{
								Column: 15,
								Line:   181,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 20,
									Line:   181,
								},
								File:   "st_distance_linestring_test.flux",
								Source: "value",
								Start: ast.Position{
									Column: 15,
									Line:   181,
								},
							},
						},
						Name: "value",
					},
					Value: nil,
				}},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   193,
					},
					File:   "st_distance_linestring_test.flux",
					Source: "t_stDistanceLinestring = (table=<-) =>\n  table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to see the train closing in\n    |> geo.ST_LineString()\n    |> map(fn: (r) => ({\n        r with _st_distance: limitFloat(value: geo.ST_Distance(region: refPoint, geometry: {linestring: r.st_linestring}))\n    }))\n    |> drop(columns: [\"_start\", \"_stop\"])",
					Start: ast.Position{
						Column: 1,
						Line:   184,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 23,
							Line:   184,
						},
						File:   "st_distance_linestring_test.flux",
						Source: "t_stDistanceLinestring",
						Start: ast.Position{
							Column: 1,
							Line:   184,
						},
					},
				},
				Name: "t_stDistanceLinestring",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   193,
						},
						File:   "st_distance_linestring_test.flux",
						Source: "(table=<-) =>\n  table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to see the train closing in\n    |> geo.ST_LineString()\n    |> map(fn: (r) => ({\n        r with _st_distance: limitFloat(value: geo.ST_Distance(region: refPoint, geometry: {linestring: r.st_linestring}))\n    }))\n    |> drop(columns: [\"_start\", \"_stop\"])",
						Start: ast.Position{
							Column: 26,
							Line:   184,
						},
					},
				},
				Body: &ast.PipeExpression{
					Argument: &ast.PipeExpression{
						Argument: &ast.PipeExpression{
							Argument: &ast.PipeExpression{
								Argument: &ast.PipeExpression{
									Argument: &ast.PipeExpression{
										Argument: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 8,
														Line:   185,
													},
													File:   "st_distance_linestring_test.flux",
													Source: "table",
													Start: ast.Position{
														Column: 3,
														Line:   185,
													},
												},
											},
											Name: "table",
										},
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   186,
												},
												File:   "st_distance_linestring_test.flux",
												Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)",
												Start: ast.Position{
													Column: 3,
													Line:   185,
												},
											},
										},
										Call: &ast.CallExpression{
											Arguments: []ast.Expression{&ast.ObjectExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 41,
															Line:   186,
														},
														File:   "st_distance_linestring_test.flux",
														Source: "start: 2020-04-01T00:00:00Z",
														Start: ast.Position{
															Column: 14,
															Line:   186,
														},
													},
												},
												Properties: []*ast.Property{&ast.Property{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 41,
																Line:   186,
															},
															File:   "st_distance_linestring_test.flux",
															Source: "start: 2020-04-01T00:00:00Z",
															Start: ast.Position{
																Column: 14,
																Line:   186,
															},
														},
													},
													Key: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 19,
																	Line:   186,
																},
																File:   "st_distance_linestring_test.flux",
																Source: "start",
																Start: ast.Position{
																	Column: 14,
																	Line:   186,
																},
															},
														},
														Name: "start",
													},
													Value: &ast.DateTimeLiteral{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 41,
																	Line:   186,
																},
																File:   "st_distance_linestring_test.flux",
																Source: "2020-04-01T00:00:00Z",
																Start: ast.Position{
																	Column: 21,
																	Line:   186,
																},
															},
														},
														Value: parser.MustParseTime("2020-04-01T00:00:00Z"),
													},
												}},
												With: nil,
											}},
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 42,
														Line:   186,
													},
													File:   "st_distance_linestring_test.flux",
													Source: "range(start: 2020-04-01T00:00:00Z)",
													Start: ast.Position{
														Column: 8,
														Line:   186,
													},
												},
											},
											Callee: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 13,
															Line:   186,
														},
														File:   "st_distance_linestring_test.flux",
														Source: "range",
														Start: ast.Position{
															Column: 8,
															Line:   186,
														},
													},
												},
												Name: "range",
											},
										},
									},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 25,
												Line:   187,
											},
											File:   "st_distance_linestring_test.flux",
											Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()",
											Start: ast.Position{
												Column: 3,
												Line:   185,
											},
										},
									},
									Call: &ast.CallExpression{
										Arguments: nil,
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 25,
													Line:   187,
												},
												File:   "st_distance_linestring_test.flux",
												Source: "v1.fieldsAsCols()",
												Start: ast.Position{
													Column: 8,
													Line:   187,
												},
											},
										},
										Callee: &ast.MemberExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 23,
														Line:   187,
													},
													File:   "st_distance_linestring_test.flux",
													Source: "v1.fieldsAsCols",
													Start: ast.Position{
														Column: 8,
														Line:   187,
													},
												},
											},
											Object: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 10,
															Line:   187,
														},
														File:   "st_distance_linestring_test.flux",
														Source: "v1",
														Start: ast.Position{
															Column: 8,
															Line:   187,
														},
													},
												},
												Name: "v1",
											},
											Property: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 23,
															Line:   187,
														},
														File:   "st_distance_linestring_test.flux",
														Source: "fieldsAsCols",
														Start: ast.Position{
															Column: 11,
															Line:   187,
														},
													},
												},
												Name: "fieldsAsCols",
											},
										},
									},
								},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 47,
											Line:   188,
										},
										File:   "st_distance_linestring_test.flux",
										Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"])",
										Start: ast.Position{
											Column: 3,
											Line:   185,
										},
									},
								},
								Call: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 46,
													Line:   188,
												},
												File:   "st_distance_linestring_test.flux",
												Source: "groupBy: [\"id\",\"trip_id\"]",
												Start: ast.Position{
													Column: 21,
													Line:   188,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 46,
														Line:   188,
													},
													File:   "st_distance_linestring_test.flux",
													Source: "groupBy: [\"id\",\"trip_id\"]",
													Start: ast.Position{
														Column: 21,
														Line:   188,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 28,
															Line:   188,
														},
														File:   "st_distance_linestring_test.flux",
														Source: "groupBy",
														Start: ast.Position{
															Column: 21,
															Line:   188,
														},
													},
												},
												Name: "groupBy",
											},
											Value: &ast.ArrayExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 46,
															Line:   188,
														},
														File:   "st_distance_linestring_test.flux",
														Source: "[\"id\",\"trip_id\"]",
														Start: ast.Position{
															Column: 30,
															Line:   188,
														},
													},
												},
												Elements: []ast.Expression{&ast.StringLiteral{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 35,
																Line:   188,
															},
															File:   "st_distance_linestring_test.flux",
															Source: "\"id\"",
															Start: ast.Position{
																Column: 31,
																Line:   188,
															},
														},
													},
													Value: "id",
												}, &ast.StringLiteral{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 45,
																Line:   188,
															},
															File:   "st_distance_linestring_test.flux",
															Source: "\"trip_id\"",
															Start: ast.Position{
																Column: 36,
																Line:   188,
															},
														},
													},
													Value: "trip_id",
												}},
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 47,
												Line:   188,
											},
											File:   "st_distance_linestring_test.flux",
											Source: "geo.asTracks(groupBy: [\"id\",\"trip_id\"])",
											Start: ast.Position{
												Column: 8,
												Line:   188,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 20,
													Line:   188,
												},
												File:   "st_distance_linestring_test.flux",
												Source: "geo.asTracks",
												Start: ast.Position{
													Column: 8,
													Line:   188,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 11,
														Line:   188,
													},
													File:   "st_distance_linestring_test.flux",
													Source: "geo",
													Start: ast.Position{
														Column: 8,
														Line:   188,
													},
												},
											},
											Name: "geo",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 20,
														Line:   188,
													},
													File:   "st_distance_linestring_test.flux",
													Source: "asTracks",
													Start: ast.Position{
														Column: 12,
														Line:   188,
													},
												},
											},
											Name: "asTracks",
										},
									},
								},
							},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 27,
										Line:   189,
									},
									File:   "st_distance_linestring_test.flux",
									Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to see the train closing in\n    |> geo.ST_LineString()",
									Start: ast.Position{
										Column: 3,
										Line:   185,
									},
								},
							},
							Call: &ast.CallExpression{
								Arguments: nil,
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 27,
											Line:   189,
										},
										File:   "st_distance_linestring_test.flux",
										Source: "geo.ST_LineString()",
										Start: ast.Position{
											Column: 8,
											Line:   189,
										},
									},
								},
								Callee: &ast.MemberExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 25,
												Line:   189,
											},
											File:   "st_distance_linestring_test.flux",
											Source: "geo.ST_LineString",
											Start: ast.Position{
												Column: 8,
												Line:   189,
											},
										},
									},
									Object: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 11,
													Line:   189,
												},
												File:   "st_distance_linestring_test.flux",
												Source: "geo",
												Start: ast.Position{
													Column: 8,
													Line:   189,
												},
											},
										},
										Name: "geo",
									},
									Property: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 25,
													Line:   189,
												},
												File:   "st_distance_linestring_test.flux",
												Source: "ST_LineString",
												Start: ast.Position{
													Column: 12,
													Line:   189,
												},
											},
										},
										Name: "ST_LineString",
									},
								},
							},
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 8,
									Line:   192,
								},
								File:   "st_distance_linestring_test.flux",
								Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to see the train closing in\n    |> geo.ST_LineString()\n    |> map(fn: (r) => ({\n        r with _st_distance: limitFloat(value: geo.ST_Distance(region: refPoint, geometry: {linestring: r.st_linestring}))\n    }))",
								Start: ast.Position{
									Column: 3,
									Line:   185,
								},
							},
						},
						Call: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 7,
											Line:   192,
										},
										File:   "st_distance_linestring_test.flux",
										Source: "fn: (r) => ({\n        r with _st_distance: limitFloat(value: geo.ST_Distance(region: refPoint, geometry: {linestring: r.st_linestring}))\n    })",
										Start: ast.Position{
											Column: 12,
											Line:   190,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 7,
												Line:   192,
											},
											File:   "st_distance_linestring_test.flux",
											Source: "fn: (r) => ({\n        r with _st_distance: limitFloat(value: geo.ST_Distance(region: refPoint, geometry: {linestring: r.st_linestring}))\n    })",
											Start: ast.Position{
												Column: 12,
												Line:   190,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 14,
													Line:   190,
												},
												File:   "st_distance_linestring_test.flux",
												Source: "fn",
												Start: ast.Position{
													Column: 12,
													Line:   190,
												},
											},
										},
										Name: "fn",
									},
									Value: &ast.FunctionExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 7,
													Line:   192,
												},
												File:   "st_distance_linestring_test.flux",
												Source: "(r) => ({\n        r with _st_distance: limitFloat(value: geo.ST_Distance(region: refPoint, geometry: {linestring: r.st_linestring}))\n    })",
												Start: ast.Position{
													Column: 16,
													Line:   190,
												},
											},
										},
										Body: &ast.ParenExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 7,
														Line:   192,
													},
													File:   "st_distance_linestring_test.flux",
													Source: "({\n        r with _st_distance: limitFloat(value: geo.ST_Distance(region: refPoint, geometry: {linestring: r.st_linestring}))\n    })",
													Start: ast.Position{
														Column: 23,
														Line:   190,
													},
												},
											},
											Expression: &ast.ObjectExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 6,
															Line:   192,
														},
														File:   "st_distance_linestring_test.flux",
														Source: "{\n        r with _st_distance: limitFloat(value: geo.ST_Distance(region: refPoint, geometry: {linestring: r.st_linestring}))\n    }",
														Start: ast.Position{
															Column: 24,
															Line:   190,
														},
													},
												},
												Properties: []*ast.Property{&ast.Property{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 123,
																Line:   191,
															},
															File:   "st_distance_linestring_test.flux",
															Source: "_st_distance: limitFloat(value: geo.ST_Distance(region: refPoint, geometry: {linestring: r.st_linestring}))",
															Start: ast.Position{
																Column: 16,
																Line:   191,
															},
														},
													},
													Key: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 28,
																	Line:   191,
																},
																File:   "st_distance_linestring_test.flux",
																Source: "_st_distance",
																Start: ast.Position{
																	Column: 16,
																	Line:   191,
																},
															},
														},
														Name: "_st_distance",
													},
													Value: &ast.CallExpression{
														Arguments: []ast.Expression{&ast.ObjectExpression{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 122,
																		Line:   191,
																	},
																	File:   "st_distance_linestring_test.flux",
																	Source: "value: geo.ST_Distance(region: refPoint, geometry: {linestring: r.st_linestring})",
																	Start: ast.Position{
																		Column: 41,
																		Line:   191,
																	},
																},
															},
															Properties: []*ast.Property{&ast.Property{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 122,
																			Line:   191,
																		},
																		File:   "st_distance_linestring_test.flux",
																		Source: "value: geo.ST_Distance(region: refPoint, geometry: {linestring: r.st_linestring})",
																		Start: ast.Position{
																			Column: 41,
																			Line:   191,
																		},
																	},
																},
																Key: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 46,
																				Line:   191,
																			},
																			File:   "st_distance_linestring_test.flux",
																			Source: "value",
																			Start: ast.Position{
																				Column: 41,
																				Line:   191,
																			},
																		},
																	},
																	Name: "value",
																},
																Value: &ast.CallExpression{
																	Arguments: []ast.Expression{&ast.ObjectExpression{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 121,
																					Line:   191,
																				},
																				File:   "st_distance_linestring_test.flux",
																				Source: "region: refPoint, geometry: {linestring: r.st_linestring}",
																				Start: ast.Position{
																					Column: 64,
																					Line:   191,
																				},
																			},
																		},
																		Properties: []*ast.Property{&ast.Property{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 80,
																						Line:   191,
																					},
																					File:   "st_distance_linestring_test.flux",
																					Source: "region: refPoint",
																					Start: ast.Position{
																						Column: 64,
																						Line:   191,
																					},
																				},
																			},
																			Key: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 70,
																							Line:   191,
																						},
																						File:   "st_distance_linestring_test.flux",
																						Source: "region",
																						Start: ast.Position{
																							Column: 64,
																							Line:   191,
																						},
																					},
																				},
																				Name: "region",
																			},
																			Value: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 80,
																							Line:   191,
																						},
																						File:   "st_distance_linestring_test.flux",
																						Source: "refPoint",
																						Start: ast.Position{
																							Column: 72,
																							Line:   191,
																						},
																					},
																				},
																				Name: "refPoint",
																			},
																		}, &ast.Property{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 121,
																						Line:   191,
																					},
																					File:   "st_distance_linestring_test.flux",
																					Source: "geometry: {linestring: r.st_linestring}",
																					Start: ast.Position{
																						Column: 82,
																						Line:   191,
																					},
																				},
																			},
																			Key: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 90,
																							Line:   191,
																						},
																						File:   "st_distance_linestring_test.flux",
																						Source: "geometry",
																						Start: ast.Position{
																							Column: 82,
																							Line:   191,
																						},
																					},
																				},
																				Name: "geometry",
																			},
																			Value: &ast.ObjectExpression{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 121,
																							Line:   191,
																						},
																						File:   "st_distance_linestring_test.flux",
																						Source: "{linestring: r.st_linestring}",
																						Start: ast.Position{
																							Column: 92,
																							Line:   191,
																						},
																					},
																				},
																				Properties: []*ast.Property{&ast.Property{
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 120,
																								Line:   191,
																							},
																							File:   "st_distance_linestring_test.flux",
																							Source: "linestring: r.st_linestring",
																							Start: ast.Position{
																								Column: 93,
																								Line:   191,
																							},
																						},
																					},
																					Key: &ast.Identifier{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 103,
																									Line:   191,
																								},
																								File:   "st_distance_linestring_test.flux",
																								Source: "linestring",
																								Start: ast.Position{
																									Column: 93,
																									Line:   191,
																								},
																							},
																						},
																						Name: "linestring",
																					},
																					Value: &ast.MemberExpression{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 120,
																									Line:   191,
																								},
																								File:   "st_distance_linestring_test.flux",
																								Source: "r.st_linestring",
																								Start: ast.Position{
																									Column: 105,
																									Line:   191,
																								},
																							},
																						},
																						Object: &ast.Identifier{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 106,
																										Line:   191,
																									},
																									File:   "st_distance_linestring_test.flux",
																									Source: "r",
																									Start: ast.Position{
																										Column: 105,
																										Line:   191,
																									},
																								},
																							},
																							Name: "r",
																						},
																						Property: &ast.Identifier{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 120,
																										Line:   191,
																									},
																									File:   "st_distance_linestring_test.flux",
																									Source: "st_linestring",
																									Start: ast.Position{
																										Column: 107,
																										Line:   191,
																									},
																								},
																							},
																							Name: "st_linestring",
																						},
																					},
																				}},
																				With: nil,
																			},
																		}},
																		With: nil,
																	}},
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 122,
																				Line:   191,
																			},
																			File:   "st_distance_linestring_test.flux",
																			Source: "geo.ST_Distance(region: refPoint, geometry: {linestring: r.st_linestring})",
																			Start: ast.Position{
																				Column: 48,
																				Line:   191,
																			},
																		},
																	},
																	Callee: &ast.MemberExpression{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 63,
																					Line:   191,
																				},
																				File:   "st_distance_linestring_test.flux",
																				Source: "geo.ST_Distance",
																				Start: ast.Position{
																					Column: 48,
																					Line:   191,
																				},
																			},
																		},
																		Object: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 51,
																						Line:   191,
																					},
																					File:   "st_distance_linestring_test.flux",
																					Source: "geo",
																					Start: ast.Position{
																						Column: 48,
																						Line:   191,
																					},
																				},
																			},
																			Name: "geo",
																		},
																		Property: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 63,
																						Line:   191,
																					},
																					File:   "st_distance_linestring_test.flux",
																					Source: "ST_Distance",
																					Start: ast.Position{
																						Column: 52,
																						Line:   191,
																					},
																				},
																			},
																			Name: "ST_Distance",
																		},
																	},
																},
															}},
															With: nil,
														}},
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 123,
																	Line:   191,
																},
																File:   "st_distance_linestring_test.flux",
																Source: "limitFloat(value: geo.ST_Distance(region: refPoint, geometry: {linestring: r.st_linestring}))",
																Start: ast.Position{
																	Column: 30,
																	Line:   191,
																},
															},
														},
														Callee: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 40,
																		Line:   191,
																	},
																	File:   "st_distance_linestring_test.flux",
																	Source: "limitFloat",
																	Start: ast.Position{
																		Column: 30,
																		Line:   191,
																	},
																},
															},
															Name: "limitFloat",
														},
													},
												}},
												With: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 10,
																Line:   191,
															},
															File:   "st_distance_linestring_test.flux",
															Source: "r",
															Start: ast.Position{
																Column: 9,
																Line:   191,
															},
														},
													},
													Name: "r",
												},
											},
										},
										Params: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   190,
													},
													File:   "st_distance_linestring_test.flux",
													Source: "r",
													Start: ast.Position{
														Column: 17,
														Line:   190,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 18,
															Line:   190,
														},
														File:   "st_distance_linestring_test.flux",
														Source: "r",
														Start: ast.Position{
															Column: 17,
															Line:   190,
														},
													},
												},
												Name: "r",
											},
											Value: nil,
										}},
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 8,
										Line:   192,
									},
									File:   "st_distance_linestring_test.flux",
									Source: "map(fn: (r) => ({\n        r with _st_distance: limitFloat(value: geo.ST_Distance(region: refPoint, geometry: {linestring: r.st_linestring}))\n    }))",
									Start: ast.Position{
										Column: 8,
										Line:   190,
									},
								},
							},
							Callee: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 11,
											Line:   190,
										},
										File:   "st_distance_linestring_test.flux",
										Source: "map",
										Start: ast.Position{
											Column: 8,
											Line:   190,
										},
									},
								},
								Name: "map",
							},
						},
					},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   193,
							},
							File:   "st_distance_linestring_test.flux",
							Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to see the train closing in\n    |> geo.ST_LineString()\n    |> map(fn: (r) => ({\n        r with _st_distance: limitFloat(value: geo.ST_Distance(region: refPoint, geometry: {linestring: r.st_linestring}))\n    }))\n    |> drop(columns: [\"_start\", \"_stop\"])",
							Start: ast.Position{
								Column: 3,
								Line:   185,
							},
						},
					},
					Call: &ast.CallExpression{
						Arguments: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   193,
									},
									File:   "st_distance_linestring_test.flux",
									Source: "columns: [\"_start\", \"_stop\"]",
									Start: ast.Position{
										Column: 13,
										Line:   193,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 41,
											Line:   193,
										},
										File:   "st_distance_linestring_test.flux",
										Source: "columns: [\"_start\", \"_stop\"]",
										Start: ast.Position{
											Column: 13,
											Line:   193,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 20,
												Line:   193,
											},
											File:   "st_distance_linestring_test.flux",
											Source: "columns",
											Start: ast.Position{
												Column: 13,
												Line:   193,
											},
										},
									},
									Name: "columns",
								},
								Value: &ast.ArrayExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 41,
												Line:   193,
											},
											File:   "st_distance_linestring_test.flux",
											Source: "[\"_start\", \"_stop\"]",
											Start: ast.Position{
												Column: 22,
												Line:   193,
											},
										},
									},
									Elements: []ast.Expression{&ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 31,
													Line:   193,
												},
												File:   "st_distance_linestring_test.flux",
												Source: "\"_start\"",
												Start: ast.Position{
													Column: 23,
													Line:   193,
												},
											},
										},
										Value: "_start",
									}, &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 40,
													Line:   193,
												},
												File:   "st_distance_linestring_test.flux",
												Source: "\"_stop\"",
												Start: ast.Position{
													Column: 33,
													Line:   193,
												},
											},
										},
										Value: "_stop",
									}},
								},
							}},
							With: nil,
						}},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   193,
								},
								File:   "st_distance_linestring_test.flux",
								Source: "drop(columns: [\"_start\", \"_stop\"])",
								Start: ast.Position{
									Column: 8,
									Line:   193,
								},
							},
						},
						Callee: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 12,
										Line:   193,
									},
									File:   "st_distance_linestring_test.flux",
									Source: "drop",
									Start: ast.Position{
										Column: 8,
										Line:   193,
									},
								},
							},
							Name: "drop",
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 35,
								Line:   184,
							},
							File:   "st_distance_linestring_test.flux",
							Source: "table=<-",
							Start: ast.Position{
								Column: 27,
								Line:   184,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 32,
									Line:   184,
								},
								File:   "st_distance_linestring_test.flux",
								Source: "table",
								Start: ast.Position{
									Column: 27,
									Line:   184,
								},
							},
						},
						Name: "table",
					},
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 35,
								Line:   184,
							},
							File:   "st_distance_linestring_test.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 33,
								Line:   184,
							},
						},
					}},
				}},
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 110,
							Line:   195,
						},
						File:   "st_distance_linestring_test.flux",
						Source: "_stDistanceLinestring = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stDistanceLinestring})",
						Start: ast.Position{
							Column: 6,
							Line:   194,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 27,
								Line:   194,
							},
							File:   "st_distance_linestring_test.flux",
							Source: "_stDistanceLinestring",
							Start: ast.Position{
								Column: 6,
								Line:   194,
							},
						},
					},
					Name: "_stDistanceLinestring",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 110,
								Line:   195,
							},
							File:   "st_distance_linestring_test.flux",
							Source: "() =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stDistanceLinestring})",
							Start: ast.Position{
								Column: 30,
								Line:   194,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 110,
									Line:   195,
								},
								File:   "st_distance_linestring_test.flux",
								Source: "({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stDistanceLinestring})",
								Start: ast.Position{
									Column: 2,
									Line:   195,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 109,
										Line:   195,
									},
									File:   "st_distance_linestring_test.flux",
									Source: "{input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stDistanceLinestring}",
									Start: ast.Position{
										Column: 3,
										Line:   195,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 43,
											Line:   195,
										},
										File:   "st_distance_linestring_test.flux",
										Source: "input: testing.loadStorage(csv: inData)",
										Start: ast.Position{
											Column: 4,
											Line:   195,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 9,
												Line:   195,
											},
											File:   "st_distance_linestring_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 4,
												Line:   195,
											},
										},
									},
									Name: "input",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   195,
												},
												File:   "st_distance_linestring_test.flux",
												Source: "csv: inData",
												Start: ast.Position{
													Column: 31,
													Line:   195,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 42,
														Line:   195,
													},
													File:   "st_distance_linestring_test.flux",
													Source: "csv: inData",
													Start: ast.Position{
														Column: 31,
														Line:   195,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 34,
															Line:   195,
														},
														File:   "st_distance_linestring_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 31,
															Line:   195,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 42,
															Line:   195,
														},
														File:   "st_distance_linestring_test.flux",
														Source: "inData",
														Start: ast.Position{
															Column: 36,
															Line:   195,
														},
													},
												},
												Name: "inData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 43,
												Line:   195,
											},
											File:   "st_distance_linestring_test.flux",
											Source: "testing.loadStorage(csv: inData)",
											Start: ast.Position{
												Column: 11,
												Line:   195,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   195,
												},
												File:   "st_distance_linestring_test.flux",
												Source: "testing.loadStorage",
												Start: ast.Position{
													Column: 11,
													Line:   195,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   195,
													},
													File:   "st_distance_linestring_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 11,
														Line:   195,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 30,
														Line:   195,
													},
													File:   "st_distance_linestring_test.flux",
													Source: "loadStorage",
													Start: ast.Position{
														Column: 19,
														Line:   195,
													},
												},
											},
											Name: "loadStorage",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 80,
											Line:   195,
										},
										File:   "st_distance_linestring_test.flux",
										Source: "want: testing.loadMem(csv: outData)",
										Start: ast.Position{
											Column: 45,
											Line:   195,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 49,
												Line:   195,
											},
											File:   "st_distance_linestring_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 45,
												Line:   195,
											},
										},
									},
									Name: "want",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 79,
													Line:   195,
												},
												File:   "st_distance_linestring_test.flux",
												Source: "csv: outData",
												Start: ast.Position{
													Column: 67,
													Line:   195,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 79,
														Line:   195,
													},
													File:   "st_distance_linestring_test.flux",
													Source: "csv: outData",
													Start: ast.Position{
														Column: 67,
														Line:   195,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 70,
															Line:   195,
														},
														File:   "st_distance_linestring_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 67,
															Line:   195,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 79,
															Line:   195,
														},
														File:   "st_distance_linestring_test.flux",
														Source: "outData",
														Start: ast.Position{
															Column: 72,
															Line:   195,
														},
													},
												},
												Name: "outData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 80,
												Line:   195,
											},
											File:   "st_distance_linestring_test.flux",
											Source: "testing.loadMem(csv: outData)",
											Start: ast.Position{
												Column: 51,
												Line:   195,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   195,
												},
												File:   "st_distance_linestring_test.flux",
												Source: "testing.loadMem",
												Start: ast.Position{
													Column: 51,
													Line:   195,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 58,
														Line:   195,
													},
													File:   "st_distance_linestring_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 51,
														Line:   195,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 66,
														Line:   195,
													},
													File:   "st_distance_linestring_test.flux",
													Source: "loadMem",
													Start: ast.Position{
														Column: 59,
														Line:   195,
													},
												},
											},
											Name: "loadMem",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 108,
											Line:   195,
										},
										File:   "st_distance_linestring_test.flux",
										Source: "fn: t_stDistanceLinestring",
										Start: ast.Position{
											Column: 82,
											Line:   195,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 84,
												Line:   195,
											},
											File:   "st_distance_linestring_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 82,
												Line:   195,
											},
										},
									},
									Name: "fn",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 108,
												Line:   195,
											},
											File:   "st_distance_linestring_test.flux",
											Source: "t_stDistanceLinestring",
											Start: ast.Position{
												Column: 86,
												Line:   195,
											},
										},
									},
									Name: "t_stDistanceLinestring",
								},
							}},
							With: nil,
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 110,
						Line:   195,
					},
					File:   "st_distance_linestring_test.flux",
					Source: "test _stDistanceLinestring = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stDistanceLinestring})",
					Start: ast.Position{
						Column: 1,
						Line:   194,
					},
				},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 26,
						Line:   3,
					},
					File:   "st_distance_linestring_test.flux",
					Source: "import \"experimental/geo\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 26,
							Line:   3,
						},
						File:   "st_distance_linestring_test.flux",
						Source: "\"experimental/geo\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "experimental/geo",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 32,
						Line:   4,
					},
					File:   "st_distance_linestring_test.flux",
					Source: "import \"influxdata/influxdb/v1\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 32,
							Line:   4,
						},
						File:   "st_distance_linestring_test.flux",
						Source: "\"influxdata/influxdb/v1\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "influxdata/influxdb/v1",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   5,
					},
					File:   "st_distance_linestring_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   5,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   5,
						},
						File:   "st_distance_linestring_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   5,
						},
					},
				},
				Value: "testing",
			},
		}},
		Metadata: "parser-type=rust",
		Name:     "st_distance_linestring_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   1,
					},
					File:   "st_distance_linestring_test.flux",
					Source: "package geo_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   1,
						},
						File:   "st_distance_linestring_test.flux",
						Source: "geo_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "geo_test",
			},
		},
	}, &ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 100,
					Line:   242,
				},
				File:   "st_distance_test.flux",
				Source: "package geo_test\n\nimport \"experimental/geo\"\nimport \"influxdata/influxdb/v1\"\nimport \"testing\"\n\noption now = () => (2030-01-01T00:00:00Z)\n\n// train closing to Manhattan\ninData = \"\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,0,2020-04-08T15:44:58Z,40.820317,lat,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,1,2020-04-08T16:19:27Z,40.745249,lat,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,2,2020-04-08T16:16:50Z,40.751085,lat,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,3,2020-04-08T16:15:59Z,40.748141,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,4,2020-04-08T16:16:16Z,40.748909,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,5,2020-04-08T16:14:32Z,40.743989,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,6,2020-04-08T16:14:49Z,40.745851,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,7,2020-04-08T16:18:18Z,40.748495,lat,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,8,2020-04-08T16:11:03Z,40.749543,lat,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,9,2020-04-08T16:10:46Z,40.750688,lat,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,10,2020-04-08T16:09:36Z,40.757106,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,11,2020-04-08T16:09:53Z,40.7565,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,12,2020-04-08T16:09:01Z,40.757895,lat,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,13,2020-04-08T16:08:19Z,40.759873,lat,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,14,2020-04-08T16:08:38Z,40.759128,lat,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,15,2020-04-08T16:07:43Z,40.762143,lat,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,16,2020-04-08T16:06:49Z,40.762709,lat,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,17,2020-04-08T16:06:31Z,40.762441,lat,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,18,2020-04-08T16:06:11Z,40.762373,lat,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,19,2020-04-08T16:03:54Z,40.76117,lat,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,20,2020-04-08T16:04:28Z,40.761653,lat,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,21,2020-04-08T16:05:46Z,40.761908,lat,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,22,2020-04-08T16:10:29Z,40.753279,lat,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,23,2020-04-08T16:03:36Z,40.761241,lat,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,24,2020-04-08T16:02:33Z,40.761443,lat,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,25,2020-04-08T16:01:55Z,40.761878,lat,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,26,2020-04-08T15:59:24Z,40.763356,lat,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,27,2020-04-08T15:45:33Z,40.815413,lat,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,28,2020-04-08T15:45:51Z,40.814096,lat,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,29,2020-04-08T15:46:12Z,40.810699,lat,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,30,2020-04-08T15:47:45Z,40.808517,lat,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,31,2020-04-08T15:48:04Z,40.806882,lat,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,32,2020-04-08T15:49:01Z,40.800397,lat,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,33,2020-04-08T15:49:22Z,40.796724,lat,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,34,2020-04-08T15:50:44Z,40.794998,lat,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,35,2020-04-08T15:53:56Z,40.786038,lat,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,36,2020-04-08T15:52:38Z,40.787216,lat,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,37,2020-04-08T15:52:16Z,40.788413,lat,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,38,2020-04-08T15:51:55Z,40.789185,lat,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,39,2020-04-08T15:51:20Z,40.791541,lat,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,40,2020-04-08T15:51:37Z,40.791009,lat,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,41,2020-04-08T15:51:03Z,40.793905,lat,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,42,2020-04-08T15:54:57Z,40.775044,lat,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,43,2020-04-08T15:55:54Z,40.773334,lat,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,44,2020-04-08T15:56:13Z,40.772144,lat,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,45,2020-04-08T15:56:33Z,40.770953,lat,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,46,2020-04-08T15:58:10Z,40.76594,lat,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,47,2020-04-08T15:56:53Z,40.768069,lat,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,48,2020-04-08T15:57:52Z,40.76661,lat,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n,,49,2020-04-08T15:44:58Z,-73.68691,lon,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,50,2020-04-08T16:19:27Z,-73.940563,lon,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,51,2020-04-08T16:16:50Z,-73.912119,lon,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,52,2020-04-08T16:15:59Z,-73.905367,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,53,2020-04-08T16:16:16Z,-73.906398,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,54,2020-04-08T16:14:32Z,-73.900815,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,55,2020-04-08T16:14:49Z,-73.902975,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,56,2020-04-08T16:18:18Z,-73.927597,lon,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,57,2020-04-08T16:11:03Z,-73.852242,lon,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,58,2020-04-08T16:10:46Z,-73.848962,lon,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,59,2020-04-08T16:09:36Z,-73.833095,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,60,2020-04-08T16:09:53Z,-73.834298,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,61,2020-04-08T16:09:01Z,-73.831347,lon,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,62,2020-04-08T16:08:19Z,-73.826087,lon,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,63,2020-04-08T16:08:38Z,-73.828799,lon,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,64,2020-04-08T16:07:43Z,-73.817956,lon,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,65,2020-04-08T16:06:49Z,-73.814539,lon,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,66,2020-04-08T16:06:31Z,-73.810154,lon,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,67,2020-04-08T16:06:11Z,-73.809437,lon,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,68,2020-04-08T16:03:54Z,-73.795812,lon,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,69,2020-04-08T16:04:28Z,-73.801766,lon,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,70,2020-04-08T16:05:46Z,-73.804421,lon,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,71,2020-04-08T16:10:29Z,-73.841791,lon,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,72,2020-04-08T16:03:36Z,-73.792932,lon,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,73,2020-04-08T16:02:33Z,-73.789959,lon,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,74,2020-04-08T16:01:55Z,-73.785035,lon,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,75,2020-04-08T15:59:24Z,-73.769272,lon,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,76,2020-04-08T15:45:33Z,-73.690054,lon,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,77,2020-04-08T15:45:51Z,-73.693214,lon,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,78,2020-04-08T15:46:12Z,-73.695214,lon,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,79,2020-04-08T15:47:45Z,-73.695594,lon,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,80,2020-04-08T15:48:04Z,-73.695858,lon,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,81,2020-04-08T15:49:01Z,-73.695023,lon,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,82,2020-04-08T15:49:22Z,-73.699899,lon,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,83,2020-04-08T15:50:44Z,-73.702982,lon,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,84,2020-04-08T15:53:56Z,-73.72924,lon,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,85,2020-04-08T15:52:38Z,-73.7261,lon,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,86,2020-04-08T15:52:16Z,-73.721973,lon,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,87,2020-04-08T15:51:55Z,-73.720059,lon,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,88,2020-04-08T15:51:20Z,-73.713571,lon,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,89,2020-04-08T15:51:37Z,-73.715622,lon,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,90,2020-04-08T15:51:03Z,-73.705485,lon,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,91,2020-04-08T15:54:57Z,-73.740647,lon,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,92,2020-04-08T15:55:54Z,-73.742812,lon,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,93,2020-04-08T15:56:13Z,-73.74431,lon,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,94,2020-04-08T15:56:33Z,-73.745805,lon,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,95,2020-04-08T15:58:10Z,-73.752465,lon,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,96,2020-04-08T15:56:53Z,-73.749413,lon,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,97,2020-04-08T15:57:52Z,-73.751322,lon,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,98,2020-04-08T15:44:58Z,1586304000,tid,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,99,2020-04-08T16:19:27Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,100,2020-04-08T16:16:50Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,101,2020-04-08T16:15:59Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,102,2020-04-08T16:16:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,103,2020-04-08T16:14:32Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,104,2020-04-08T16:14:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,105,2020-04-08T16:18:18Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,106,2020-04-08T16:11:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,107,2020-04-08T16:10:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,108,2020-04-08T16:09:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,109,2020-04-08T16:09:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,110,2020-04-08T16:09:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,111,2020-04-08T16:08:19Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,112,2020-04-08T16:08:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,113,2020-04-08T16:07:43Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,114,2020-04-08T16:06:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,115,2020-04-08T16:06:31Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,116,2020-04-08T16:06:11Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,117,2020-04-08T16:03:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,118,2020-04-08T16:04:28Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,119,2020-04-08T16:05:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,120,2020-04-08T16:10:29Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,121,2020-04-08T16:03:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,122,2020-04-08T16:02:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,123,2020-04-08T16:01:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,124,2020-04-08T15:59:24Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,125,2020-04-08T15:45:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,126,2020-04-08T15:45:51Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,127,2020-04-08T15:46:12Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,128,2020-04-08T15:47:45Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,129,2020-04-08T15:48:04Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,130,2020-04-08T15:49:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,131,2020-04-08T15:49:22Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,132,2020-04-08T15:50:44Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,133,2020-04-08T15:53:56Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,134,2020-04-08T15:52:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,135,2020-04-08T15:52:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,136,2020-04-08T15:51:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,137,2020-04-08T15:51:20Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,138,2020-04-08T15:51:37Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,139,2020-04-08T15:51:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,140,2020-04-08T15:54:57Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,141,2020-04-08T15:55:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,142,2020-04-08T15:56:13Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,143,2020-04-08T15:56:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,144,2020-04-08T15:58:10Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,145,2020-04-08T15:56:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,146,2020-04-08T15:57:52Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\"\n\noutData = \"\n#group,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true\n#datatype,string,long,string,string,double,dateTime:RFC3339,string,string,double,double,string,string,string,string,long,string\n#default,_result,,,,,,,,,,,,,,,\n,result,table,_measurement,_pt,_st_distance,_time,area,id,lat,lon,s2_cell_id,seq_idx,status,stop_id,tid,trip_id\n,,0,mta,start,33.463,2020-04-08T15:44:58Z,LLIR,GO506_20_6431,40.820317,-73.68691,89c288c54,1,STOPPED_AT,171,1586304000,GO506_20_6431\n,,0,mta,via,32.99,2020-04-08T15:45:33Z,LLIR,GO506_20_6431,40.815413,-73.690054,89c288dcc,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,32.687,2020-04-08T15:45:51Z,LLIR,GO506_20_6431,40.814096,-73.693214,89c288ddc,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,32.376,2020-04-08T15:46:12Z,LLIR,GO506_20_6431,40.810699,-73.695214,89c288e0c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,32.247,2020-04-08T15:47:45Z,LLIR,GO506_20_6431,40.808517,-73.695594,89c288e14,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,32.152,2020-04-08T15:48:04Z,LLIR,GO506_20_6431,40.806882,-73.695858,89c288e3c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,31.932,2020-04-08T15:49:01Z,LLIR,GO506_20_6431,40.800397,-73.695023,89c288fcc,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,31.396,2020-04-08T15:49:22Z,LLIR,GO506_20_6431,40.796724,-73.699899,89c288fe4,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,31.084,2020-04-08T15:50:44Z,LLIR,GO506_20_6431,40.794998,-73.702982,89c289004,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,30.843,2020-04-08T15:51:03Z,LLIR,GO506_20_6431,40.793905,-73.705485,89c289aa4,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,30.113,2020-04-08T15:51:20Z,LLIR,GO506_20_6431,40.791541,-73.713571,89c289a64,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,29.931,2020-04-08T15:51:37Z,LLIR,GO506_20_6431,40.791009,-73.715622,89c289a6c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,29.509,2020-04-08T15:51:55Z,LLIR,GO506_20_6431,40.789185,-73.720059,89c289a3c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,29.327,2020-04-08T15:52:16Z,LLIR,GO506_20_6431,40.788413,-73.721973,89c289a2c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,28.955,2020-04-08T15:52:38Z,LLIR,GO506_20_6431,40.787216,-73.7261,89c28997c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,28.661,2020-04-08T15:53:56Z,LLIR,GO506_20_6431,40.786038,-73.72924,89c289974,5,IN_TRANSIT_TO,120,1586304000,GO506_20_6431\n,,0,mta,via,27.324,2020-04-08T15:54:57Z,LLIR,GO506_20_6431,40.775044,-73.740647,89c289f3c,5,STOPPED_AT,120,1586304000,GO506_20_6431\n,,0,mta,via,27.087,2020-04-08T15:55:54Z,LLIR,GO506_20_6431,40.773334,-73.742812,89c289f6c,5,STOPPED_AT,120,1586304000,GO506_20_6431\n,,0,mta,via,26.923,2020-04-08T15:56:13Z,LLIR,GO506_20_6431,40.772144,-73.74431,89c289f74,6,IN_TRANSIT_TO,42,1586304000,GO506_20_6431\n,,0,mta,via,26.76,2020-04-08T15:56:33Z,LLIR,GO506_20_6431,40.770953,-73.745805,89c289f7c,6,IN_TRANSIT_TO,42,1586304000,GO506_20_6431\n,,0,mta,via,26.366,2020-04-08T15:56:53Z,LLIR,GO506_20_6431,40.768069,-73.749413,89c28a024,6,STOPPED_AT,42,1586304000,GO506_20_6431\n,,0,mta,via,26.161,2020-04-08T15:57:52Z,LLIR,GO506_20_6431,40.76661,-73.751322,89c28a03c,6,STOPPED_AT,42,1586304000,GO506_20_6431\n,,0,mta,via,26.046,2020-04-08T15:58:10Z,LLIR,GO506_20_6431,40.76594,-73.752465,89c28a014,7,IN_TRANSIT_TO,25,1586304000,GO506_20_6431\n,,0,mta,via,24.614,2020-04-08T15:59:24Z,LLIR,GO506_20_6431,40.763356,-73.769272,89c261e04,7,STOPPED_AT,25,1586304000,GO506_20_6431\n,,0,mta,via,23.31,2020-04-08T16:01:55Z,LLIR,GO506_20_6431,40.761878,-73.785035,89c261d74,8,IN_TRANSIT_TO,2,1586304000,GO506_20_6431\n,,0,mta,via,22.904,2020-04-08T16:02:33Z,LLIR,GO506_20_6431,40.761443,-73.789959,89c261d3c,8,STOPPED_AT,2,1586304000,GO506_20_6431\n,,0,mta,via,22.662,2020-04-08T16:03:36Z,LLIR,GO506_20_6431,40.761241,-73.792932,89c261d34,8,STOPPED_AT,2,1586304000,GO506_20_6431\n,,0,mta,via,22.432,2020-04-08T16:03:54Z,LLIR,GO506_20_6431,40.76117,-73.795812,89c2602cc,9,IN_TRANSIT_TO,11,1586304000,GO506_20_6431\n,,0,mta,via,21.984,2020-04-08T16:04:28Z,LLIR,GO506_20_6431,40.761653,-73.801766,89c2602ec,9,STOPPED_AT,11,1586304000,GO506_20_6431\n,,0,mta,via,21.786,2020-04-08T16:05:46Z,LLIR,GO506_20_6431,40.761908,-73.804421,89c2602f4,9,STOPPED_AT,11,1586304000,GO506_20_6431\n,,0,mta,via,21.414,2020-04-08T16:06:11Z,LLIR,GO506_20_6431,40.762373,-73.809437,89c260254,10,IN_TRANSIT_TO,130,1586304000,GO506_20_6431\n,,0,mta,via,21.361,2020-04-08T16:06:31Z,LLIR,GO506_20_6431,40.762441,-73.810154,89c26024c,10,IN_TRANSIT_TO,130,1586304000,GO506_20_6431\n,,0,mta,via,21.031,2020-04-08T16:06:49Z,LLIR,GO506_20_6431,40.762709,-73.814539,89c260234,10,STOPPED_AT,130,1586304000,GO506_20_6431\n,,0,mta,via,20.742,2020-04-08T16:07:43Z,LLIR,GO506_20_6431,40.762143,-73.817956,89c26022c,11,IN_TRANSIT_TO,56,1586304000,GO506_20_6431\n,,0,mta,via,20.013,2020-04-08T16:08:19Z,LLIR,GO506_20_6431,40.759873,-73.826087,89c26010c,11,IN_TRANSIT_TO,56,1586304000,GO506_20_6431\n,,0,mta,via,19.77,2020-04-08T16:08:38Z,LLIR,GO506_20_6431,40.759128,-73.828799,89c26011c,11,STOPPED_AT,56,1586304000,GO506_20_6431\n,,0,mta,via,19.519,2020-04-08T16:09:01Z,LLIR,GO506_20_6431,40.757895,-73.831347,89c2600dc,11,STOPPED_AT,56,1586304000,GO506_20_6431\n,,0,mta,via,19.349,2020-04-08T16:09:36Z,LLIR,GO506_20_6431,40.757106,-73.833095,89c2600c4,11,STOPPED_AT,56,1586304000,GO506_20_6431\n,,0,mta,via,19.229,2020-04-08T16:09:53Z,LLIR,GO506_20_6431,40.7565,-73.834298,89c2600c4,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,18.509,2020-04-08T16:10:29Z,LLIR,GO506_20_6431,40.753279,-73.841791,89c260754,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,17.841,2020-04-08T16:10:46Z,LLIR,GO506_20_6431,40.750688,-73.848962,89c25fdbc,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,17.537,2020-04-08T16:11:03Z,LLIR,GO506_20_6431,40.749543,-73.852242,89c25fdb4,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,13.555,2020-04-08T16:14:32Z,LLIR,GO506_20_6431,40.743989,-73.900815,89c25f1d4,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,13.488,2020-04-08T16:14:49Z,LLIR,GO506_20_6431,40.745851,-73.902975,89c25f1d4,12,STOPPED_AT,214,1586304000,GO506_20_6431\n,,0,mta,via,13.433,2020-04-08T16:15:59Z,LLIR,GO506_20_6431,40.748141,-73.905367,89c25f1c4,12,STOPPED_AT,214,1586304000,GO506_20_6431\n,,0,mta,via,13.399,2020-04-08T16:16:16Z,LLIR,GO506_20_6431,40.748909,-73.906398,89c25f1c4,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n,,0,mta,via,13.107,2020-04-08T16:16:50Z,LLIR,GO506_20_6431,40.751085,-73.912119,89c25f18c,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n,,0,mta,via,11.854,2020-04-08T16:18:18Z,LLIR,GO506_20_6431,40.748495,-73.927597,89c25f29c,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n,,0,mta,via,10.75,2020-04-08T16:19:27Z,LLIR,GO506_20_6431,40.745249,-73.940563,89c2592bc,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n\"\n\n// reference point (Statue of Liberty)\nrefPoint = {lat: 40.6892, lon: -74.0445}\n\n// limit float to 3 decimal places\nlimitFloat = (value) =>\n  (float(v: int(v: value * 1000.0)) / 1000.0)\n\nt_stDistance = (table=<-) =>\n  table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to see the train closing in\n    |> map(fn: (r) => ({\n        r with _st_distance: limitFloat(value: geo.ST_Distance(region: refPoint, geometry: {lat: r.lat, lon: r.lon}))\n    }))\n    |> drop(columns: [\"_start\", \"_stop\"])\ntest _stDistance = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stDistance})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   7,
						},
						File:   "st_distance_test.flux",
						Source: "now = () => (2030-01-01T00:00:00Z)",
						Start: ast.Position{
							Column: 8,
							Line:   7,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   7,
							},
							File:   "st_distance_test.flux",
							Source: "now",
							Start: ast.Position{
								Column: 8,
								Line:   7,
							},
						},
					},
					Name: "now",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   7,
							},
							File:   "st_distance_test.flux",
							Source: "() => (2030-01-01T00:00:00Z)",
							Start: ast.Position{
								Column: 14,
								Line:   7,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   7,
								},
								File:   "st_distance_test.flux",
								Source: "(2030-01-01T00:00:00Z)",
								Start: ast.Position{
									Column: 20,
									Line:   7,
								},
							},
						},
						Expression: &ast.DateTimeLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   7,
									},
									File:   "st_distance_test.flux",
									Source: "2030-01-01T00:00:00Z",
									Start: ast.Position{
										Column: 21,
										Line:   7,
									},
								},
							},
							Value: parser.MustParseTime("2030-01-01T00:00:00Z"),
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   7,
					},
					File:   "st_distance_test.flux",
					Source: "option now = () => (2030-01-01T00:00:00Z)",
					Start: ast.Position{
						Column: 1,
						Line:   7,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   167,
					},
					File:   "st_distance_test.flux",
					Source: "inData = \"\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,0,2020-04-08T15:44:58Z,40.820317,lat,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,1,2020-04-08T16:19:27Z,40.745249,lat,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,2,2020-04-08T16:16:50Z,40.751085,lat,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,3,2020-04-08T16:15:59Z,40.748141,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,4,2020-04-08T16:16:16Z,40.748909,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,5,2020-04-08T16:14:32Z,40.743989,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,6,2020-04-08T16:14:49Z,40.745851,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,7,2020-04-08T16:18:18Z,40.748495,lat,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,8,2020-04-08T16:11:03Z,40.749543,lat,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,9,2020-04-08T16:10:46Z,40.750688,lat,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,10,2020-04-08T16:09:36Z,40.757106,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,11,2020-04-08T16:09:53Z,40.7565,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,12,2020-04-08T16:09:01Z,40.757895,lat,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,13,2020-04-08T16:08:19Z,40.759873,lat,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,14,2020-04-08T16:08:38Z,40.759128,lat,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,15,2020-04-08T16:07:43Z,40.762143,lat,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,16,2020-04-08T16:06:49Z,40.762709,lat,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,17,2020-04-08T16:06:31Z,40.762441,lat,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,18,2020-04-08T16:06:11Z,40.762373,lat,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,19,2020-04-08T16:03:54Z,40.76117,lat,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,20,2020-04-08T16:04:28Z,40.761653,lat,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,21,2020-04-08T16:05:46Z,40.761908,lat,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,22,2020-04-08T16:10:29Z,40.753279,lat,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,23,2020-04-08T16:03:36Z,40.761241,lat,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,24,2020-04-08T16:02:33Z,40.761443,lat,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,25,2020-04-08T16:01:55Z,40.761878,lat,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,26,2020-04-08T15:59:24Z,40.763356,lat,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,27,2020-04-08T15:45:33Z,40.815413,lat,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,28,2020-04-08T15:45:51Z,40.814096,lat,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,29,2020-04-08T15:46:12Z,40.810699,lat,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,30,2020-04-08T15:47:45Z,40.808517,lat,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,31,2020-04-08T15:48:04Z,40.806882,lat,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,32,2020-04-08T15:49:01Z,40.800397,lat,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,33,2020-04-08T15:49:22Z,40.796724,lat,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,34,2020-04-08T15:50:44Z,40.794998,lat,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,35,2020-04-08T15:53:56Z,40.786038,lat,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,36,2020-04-08T15:52:38Z,40.787216,lat,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,37,2020-04-08T15:52:16Z,40.788413,lat,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,38,2020-04-08T15:51:55Z,40.789185,lat,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,39,2020-04-08T15:51:20Z,40.791541,lat,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,40,2020-04-08T15:51:37Z,40.791009,lat,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,41,2020-04-08T15:51:03Z,40.793905,lat,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,42,2020-04-08T15:54:57Z,40.775044,lat,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,43,2020-04-08T15:55:54Z,40.773334,lat,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,44,2020-04-08T15:56:13Z,40.772144,lat,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,45,2020-04-08T15:56:33Z,40.770953,lat,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,46,2020-04-08T15:58:10Z,40.76594,lat,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,47,2020-04-08T15:56:53Z,40.768069,lat,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,48,2020-04-08T15:57:52Z,40.76661,lat,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n,,49,2020-04-08T15:44:58Z,-73.68691,lon,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,50,2020-04-08T16:19:27Z,-73.940563,lon,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,51,2020-04-08T16:16:50Z,-73.912119,lon,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,52,2020-04-08T16:15:59Z,-73.905367,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,53,2020-04-08T16:16:16Z,-73.906398,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,54,2020-04-08T16:14:32Z,-73.900815,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,55,2020-04-08T16:14:49Z,-73.902975,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,56,2020-04-08T16:18:18Z,-73.927597,lon,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,57,2020-04-08T16:11:03Z,-73.852242,lon,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,58,2020-04-08T16:10:46Z,-73.848962,lon,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,59,2020-04-08T16:09:36Z,-73.833095,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,60,2020-04-08T16:09:53Z,-73.834298,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,61,2020-04-08T16:09:01Z,-73.831347,lon,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,62,2020-04-08T16:08:19Z,-73.826087,lon,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,63,2020-04-08T16:08:38Z,-73.828799,lon,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,64,2020-04-08T16:07:43Z,-73.817956,lon,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,65,2020-04-08T16:06:49Z,-73.814539,lon,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,66,2020-04-08T16:06:31Z,-73.810154,lon,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,67,2020-04-08T16:06:11Z,-73.809437,lon,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,68,2020-04-08T16:03:54Z,-73.795812,lon,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,69,2020-04-08T16:04:28Z,-73.801766,lon,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,70,2020-04-08T16:05:46Z,-73.804421,lon,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,71,2020-04-08T16:10:29Z,-73.841791,lon,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,72,2020-04-08T16:03:36Z,-73.792932,lon,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,73,2020-04-08T16:02:33Z,-73.789959,lon,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,74,2020-04-08T16:01:55Z,-73.785035,lon,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,75,2020-04-08T15:59:24Z,-73.769272,lon,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,76,2020-04-08T15:45:33Z,-73.690054,lon,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,77,2020-04-08T15:45:51Z,-73.693214,lon,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,78,2020-04-08T15:46:12Z,-73.695214,lon,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,79,2020-04-08T15:47:45Z,-73.695594,lon,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,80,2020-04-08T15:48:04Z,-73.695858,lon,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,81,2020-04-08T15:49:01Z,-73.695023,lon,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,82,2020-04-08T15:49:22Z,-73.699899,lon,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,83,2020-04-08T15:50:44Z,-73.702982,lon,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,84,2020-04-08T15:53:56Z,-73.72924,lon,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,85,2020-04-08T15:52:38Z,-73.7261,lon,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,86,2020-04-08T15:52:16Z,-73.721973,lon,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,87,2020-04-08T15:51:55Z,-73.720059,lon,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,88,2020-04-08T15:51:20Z,-73.713571,lon,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,89,2020-04-08T15:51:37Z,-73.715622,lon,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,90,2020-04-08T15:51:03Z,-73.705485,lon,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,91,2020-04-08T15:54:57Z,-73.740647,lon,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,92,2020-04-08T15:55:54Z,-73.742812,lon,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,93,2020-04-08T15:56:13Z,-73.74431,lon,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,94,2020-04-08T15:56:33Z,-73.745805,lon,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,95,2020-04-08T15:58:10Z,-73.752465,lon,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,96,2020-04-08T15:56:53Z,-73.749413,lon,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,97,2020-04-08T15:57:52Z,-73.751322,lon,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,98,2020-04-08T15:44:58Z,1586304000,tid,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,99,2020-04-08T16:19:27Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,100,2020-04-08T16:16:50Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,101,2020-04-08T16:15:59Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,102,2020-04-08T16:16:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,103,2020-04-08T16:14:32Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,104,2020-04-08T16:14:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,105,2020-04-08T16:18:18Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,106,2020-04-08T16:11:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,107,2020-04-08T16:10:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,108,2020-04-08T16:09:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,109,2020-04-08T16:09:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,110,2020-04-08T16:09:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,111,2020-04-08T16:08:19Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,112,2020-04-08T16:08:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,113,2020-04-08T16:07:43Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,114,2020-04-08T16:06:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,115,2020-04-08T16:06:31Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,116,2020-04-08T16:06:11Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,117,2020-04-08T16:03:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,118,2020-04-08T16:04:28Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,119,2020-04-08T16:05:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,120,2020-04-08T16:10:29Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,121,2020-04-08T16:03:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,122,2020-04-08T16:02:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,123,2020-04-08T16:01:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,124,2020-04-08T15:59:24Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,125,2020-04-08T15:45:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,126,2020-04-08T15:45:51Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,127,2020-04-08T15:46:12Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,128,2020-04-08T15:47:45Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,129,2020-04-08T15:48:04Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,130,2020-04-08T15:49:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,131,2020-04-08T15:49:22Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,132,2020-04-08T15:50:44Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,133,2020-04-08T15:53:56Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,134,2020-04-08T15:52:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,135,2020-04-08T15:52:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,136,2020-04-08T15:51:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,137,2020-04-08T15:51:20Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,138,2020-04-08T15:51:37Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,139,2020-04-08T15:51:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,140,2020-04-08T15:54:57Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,141,2020-04-08T15:55:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,142,2020-04-08T15:56:13Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,143,2020-04-08T15:56:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,144,2020-04-08T15:58:10Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,145,2020-04-08T15:56:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,146,2020-04-08T15:57:52Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   10,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 7,
							Line:   10,
						},
						File:   "st_distance_test.flux",
						Source: "inData",
						Start: ast.Position{
							Column: 1,
							Line:   10,
						},
					},
				},
				Name: "inData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   167,
						},
						File:   "st_distance_test.flux",
						Source: "\"\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,0,2020-04-08T15:44:58Z,40.820317,lat,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,1,2020-04-08T16:19:27Z,40.745249,lat,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,2,2020-04-08T16:16:50Z,40.751085,lat,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,3,2020-04-08T16:15:59Z,40.748141,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,4,2020-04-08T16:16:16Z,40.748909,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,5,2020-04-08T16:14:32Z,40.743989,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,6,2020-04-08T16:14:49Z,40.745851,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,7,2020-04-08T16:18:18Z,40.748495,lat,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,8,2020-04-08T16:11:03Z,40.749543,lat,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,9,2020-04-08T16:10:46Z,40.750688,lat,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,10,2020-04-08T16:09:36Z,40.757106,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,11,2020-04-08T16:09:53Z,40.7565,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,12,2020-04-08T16:09:01Z,40.757895,lat,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,13,2020-04-08T16:08:19Z,40.759873,lat,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,14,2020-04-08T16:08:38Z,40.759128,lat,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,15,2020-04-08T16:07:43Z,40.762143,lat,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,16,2020-04-08T16:06:49Z,40.762709,lat,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,17,2020-04-08T16:06:31Z,40.762441,lat,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,18,2020-04-08T16:06:11Z,40.762373,lat,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,19,2020-04-08T16:03:54Z,40.76117,lat,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,20,2020-04-08T16:04:28Z,40.761653,lat,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,21,2020-04-08T16:05:46Z,40.761908,lat,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,22,2020-04-08T16:10:29Z,40.753279,lat,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,23,2020-04-08T16:03:36Z,40.761241,lat,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,24,2020-04-08T16:02:33Z,40.761443,lat,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,25,2020-04-08T16:01:55Z,40.761878,lat,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,26,2020-04-08T15:59:24Z,40.763356,lat,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,27,2020-04-08T15:45:33Z,40.815413,lat,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,28,2020-04-08T15:45:51Z,40.814096,lat,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,29,2020-04-08T15:46:12Z,40.810699,lat,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,30,2020-04-08T15:47:45Z,40.808517,lat,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,31,2020-04-08T15:48:04Z,40.806882,lat,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,32,2020-04-08T15:49:01Z,40.800397,lat,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,33,2020-04-08T15:49:22Z,40.796724,lat,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,34,2020-04-08T15:50:44Z,40.794998,lat,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,35,2020-04-08T15:53:56Z,40.786038,lat,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,36,2020-04-08T15:52:38Z,40.787216,lat,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,37,2020-04-08T15:52:16Z,40.788413,lat,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,38,2020-04-08T15:51:55Z,40.789185,lat,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,39,2020-04-08T15:51:20Z,40.791541,lat,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,40,2020-04-08T15:51:37Z,40.791009,lat,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,41,2020-04-08T15:51:03Z,40.793905,lat,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,42,2020-04-08T15:54:57Z,40.775044,lat,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,43,2020-04-08T15:55:54Z,40.773334,lat,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,44,2020-04-08T15:56:13Z,40.772144,lat,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,45,2020-04-08T15:56:33Z,40.770953,lat,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,46,2020-04-08T15:58:10Z,40.76594,lat,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,47,2020-04-08T15:56:53Z,40.768069,lat,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,48,2020-04-08T15:57:52Z,40.76661,lat,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n,,49,2020-04-08T15:44:58Z,-73.68691,lon,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,50,2020-04-08T16:19:27Z,-73.940563,lon,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,51,2020-04-08T16:16:50Z,-73.912119,lon,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,52,2020-04-08T16:15:59Z,-73.905367,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,53,2020-04-08T16:16:16Z,-73.906398,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,54,2020-04-08T16:14:32Z,-73.900815,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,55,2020-04-08T16:14:49Z,-73.902975,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,56,2020-04-08T16:18:18Z,-73.927597,lon,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,57,2020-04-08T16:11:03Z,-73.852242,lon,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,58,2020-04-08T16:10:46Z,-73.848962,lon,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,59,2020-04-08T16:09:36Z,-73.833095,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,60,2020-04-08T16:09:53Z,-73.834298,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,61,2020-04-08T16:09:01Z,-73.831347,lon,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,62,2020-04-08T16:08:19Z,-73.826087,lon,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,63,2020-04-08T16:08:38Z,-73.828799,lon,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,64,2020-04-08T16:07:43Z,-73.817956,lon,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,65,2020-04-08T16:06:49Z,-73.814539,lon,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,66,2020-04-08T16:06:31Z,-73.810154,lon,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,67,2020-04-08T16:06:11Z,-73.809437,lon,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,68,2020-04-08T16:03:54Z,-73.795812,lon,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,69,2020-04-08T16:04:28Z,-73.801766,lon,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,70,2020-04-08T16:05:46Z,-73.804421,lon,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,71,2020-04-08T16:10:29Z,-73.841791,lon,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,72,2020-04-08T16:03:36Z,-73.792932,lon,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,73,2020-04-08T16:02:33Z,-73.789959,lon,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,74,2020-04-08T16:01:55Z,-73.785035,lon,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,75,2020-04-08T15:59:24Z,-73.769272,lon,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,76,2020-04-08T15:45:33Z,-73.690054,lon,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,77,2020-04-08T15:45:51Z,-73.693214,lon,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,78,2020-04-08T15:46:12Z,-73.695214,lon,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,79,2020-04-08T15:47:45Z,-73.695594,lon,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,80,2020-04-08T15:48:04Z,-73.695858,lon,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,81,2020-04-08T15:49:01Z,-73.695023,lon,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,82,2020-04-08T15:49:22Z,-73.699899,lon,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,83,2020-04-08T15:50:44Z,-73.702982,lon,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,84,2020-04-08T15:53:56Z,-73.72924,lon,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,85,2020-04-08T15:52:38Z,-73.7261,lon,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,86,2020-04-08T15:52:16Z,-73.721973,lon,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,87,2020-04-08T15:51:55Z,-73.720059,lon,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,88,2020-04-08T15:51:20Z,-73.713571,lon,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,89,2020-04-08T15:51:37Z,-73.715622,lon,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,90,2020-04-08T15:51:03Z,-73.705485,lon,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,91,2020-04-08T15:54:57Z,-73.740647,lon,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,92,2020-04-08T15:55:54Z,-73.742812,lon,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,93,2020-04-08T15:56:13Z,-73.74431,lon,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,94,2020-04-08T15:56:33Z,-73.745805,lon,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,95,2020-04-08T15:58:10Z,-73.752465,lon,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,96,2020-04-08T15:56:53Z,-73.749413,lon,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,97,2020-04-08T15:57:52Z,-73.751322,lon,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,98,2020-04-08T15:44:58Z,1586304000,tid,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,99,2020-04-08T16:19:27Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,100,2020-04-08T16:16:50Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,101,2020-04-08T16:15:59Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,102,2020-04-08T16:16:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,103,2020-04-08T16:14:32Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,104,2020-04-08T16:14:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,105,2020-04-08T16:18:18Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,106,2020-04-08T16:11:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,107,2020-04-08T16:10:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,108,2020-04-08T16:09:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,109,2020-04-08T16:09:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,110,2020-04-08T16:09:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,111,2020-04-08T16:08:19Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,112,2020-04-08T16:08:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,113,2020-04-08T16:07:43Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,114,2020-04-08T16:06:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,115,2020-04-08T16:06:31Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,116,2020-04-08T16:06:11Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,117,2020-04-08T16:03:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,118,2020-04-08T16:04:28Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,119,2020-04-08T16:05:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,120,2020-04-08T16:10:29Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,121,2020-04-08T16:03:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,122,2020-04-08T16:02:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,123,2020-04-08T16:01:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,124,2020-04-08T15:59:24Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,125,2020-04-08T15:45:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,126,2020-04-08T15:45:51Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,127,2020-04-08T15:46:12Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,128,2020-04-08T15:47:45Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,129,2020-04-08T15:48:04Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,130,2020-04-08T15:49:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,131,2020-04-08T15:49:22Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,132,2020-04-08T15:50:44Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,133,2020-04-08T15:53:56Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,134,2020-04-08T15:52:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,135,2020-04-08T15:52:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,136,2020-04-08T15:51:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,137,2020-04-08T15:51:20Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,138,2020-04-08T15:51:37Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,139,2020-04-08T15:51:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,140,2020-04-08T15:54:57Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,141,2020-04-08T15:55:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,142,2020-04-08T15:56:13Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,143,2020-04-08T15:56:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,144,2020-04-08T15:58:10Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,145,2020-04-08T15:56:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,146,2020-04-08T15:57:52Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\"",
						Start: ast.Position{
							Column: 10,
							Line:   10,
						},
					},
				},
				Value: "\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,0,2020-04-08T15:44:58Z,40.820317,lat,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,1,2020-04-08T16:19:27Z,40.745249,lat,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,2,2020-04-08T16:16:50Z,40.751085,lat,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,3,2020-04-08T16:15:59Z,40.748141,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,4,2020-04-08T16:16:16Z,40.748909,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,5,2020-04-08T16:14:32Z,40.743989,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,6,2020-04-08T16:14:49Z,40.745851,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,7,2020-04-08T16:18:18Z,40.748495,lat,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,8,2020-04-08T16:11:03Z,40.749543,lat,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,9,2020-04-08T16:10:46Z,40.750688,lat,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,10,2020-04-08T16:09:36Z,40.757106,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,11,2020-04-08T16:09:53Z,40.7565,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,12,2020-04-08T16:09:01Z,40.757895,lat,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,13,2020-04-08T16:08:19Z,40.759873,lat,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,14,2020-04-08T16:08:38Z,40.759128,lat,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,15,2020-04-08T16:07:43Z,40.762143,lat,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,16,2020-04-08T16:06:49Z,40.762709,lat,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,17,2020-04-08T16:06:31Z,40.762441,lat,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,18,2020-04-08T16:06:11Z,40.762373,lat,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,19,2020-04-08T16:03:54Z,40.76117,lat,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,20,2020-04-08T16:04:28Z,40.761653,lat,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,21,2020-04-08T16:05:46Z,40.761908,lat,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,22,2020-04-08T16:10:29Z,40.753279,lat,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,23,2020-04-08T16:03:36Z,40.761241,lat,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,24,2020-04-08T16:02:33Z,40.761443,lat,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,25,2020-04-08T16:01:55Z,40.761878,lat,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,26,2020-04-08T15:59:24Z,40.763356,lat,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,27,2020-04-08T15:45:33Z,40.815413,lat,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,28,2020-04-08T15:45:51Z,40.814096,lat,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,29,2020-04-08T15:46:12Z,40.810699,lat,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,30,2020-04-08T15:47:45Z,40.808517,lat,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,31,2020-04-08T15:48:04Z,40.806882,lat,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,32,2020-04-08T15:49:01Z,40.800397,lat,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,33,2020-04-08T15:49:22Z,40.796724,lat,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,34,2020-04-08T15:50:44Z,40.794998,lat,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,35,2020-04-08T15:53:56Z,40.786038,lat,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,36,2020-04-08T15:52:38Z,40.787216,lat,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,37,2020-04-08T15:52:16Z,40.788413,lat,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,38,2020-04-08T15:51:55Z,40.789185,lat,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,39,2020-04-08T15:51:20Z,40.791541,lat,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,40,2020-04-08T15:51:37Z,40.791009,lat,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,41,2020-04-08T15:51:03Z,40.793905,lat,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,42,2020-04-08T15:54:57Z,40.775044,lat,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,43,2020-04-08T15:55:54Z,40.773334,lat,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,44,2020-04-08T15:56:13Z,40.772144,lat,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,45,2020-04-08T15:56:33Z,40.770953,lat,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,46,2020-04-08T15:58:10Z,40.76594,lat,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,47,2020-04-08T15:56:53Z,40.768069,lat,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,48,2020-04-08T15:57:52Z,40.76661,lat,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n,,49,2020-04-08T15:44:58Z,-73.68691,lon,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,50,2020-04-08T16:19:27Z,-73.940563,lon,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,51,2020-04-08T16:16:50Z,-73.912119,lon,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,52,2020-04-08T16:15:59Z,-73.905367,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,53,2020-04-08T16:16:16Z,-73.906398,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,54,2020-04-08T16:14:32Z,-73.900815,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,55,2020-04-08T16:14:49Z,-73.902975,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,56,2020-04-08T16:18:18Z,-73.927597,lon,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,57,2020-04-08T16:11:03Z,-73.852242,lon,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,58,2020-04-08T16:10:46Z,-73.848962,lon,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,59,2020-04-08T16:09:36Z,-73.833095,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,60,2020-04-08T16:09:53Z,-73.834298,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,61,2020-04-08T16:09:01Z,-73.831347,lon,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,62,2020-04-08T16:08:19Z,-73.826087,lon,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,63,2020-04-08T16:08:38Z,-73.828799,lon,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,64,2020-04-08T16:07:43Z,-73.817956,lon,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,65,2020-04-08T16:06:49Z,-73.814539,lon,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,66,2020-04-08T16:06:31Z,-73.810154,lon,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,67,2020-04-08T16:06:11Z,-73.809437,lon,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,68,2020-04-08T16:03:54Z,-73.795812,lon,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,69,2020-04-08T16:04:28Z,-73.801766,lon,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,70,2020-04-08T16:05:46Z,-73.804421,lon,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,71,2020-04-08T16:10:29Z,-73.841791,lon,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,72,2020-04-08T16:03:36Z,-73.792932,lon,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,73,2020-04-08T16:02:33Z,-73.789959,lon,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,74,2020-04-08T16:01:55Z,-73.785035,lon,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,75,2020-04-08T15:59:24Z,-73.769272,lon,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,76,2020-04-08T15:45:33Z,-73.690054,lon,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,77,2020-04-08T15:45:51Z,-73.693214,lon,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,78,2020-04-08T15:46:12Z,-73.695214,lon,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,79,2020-04-08T15:47:45Z,-73.695594,lon,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,80,2020-04-08T15:48:04Z,-73.695858,lon,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,81,2020-04-08T15:49:01Z,-73.695023,lon,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,82,2020-04-08T15:49:22Z,-73.699899,lon,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,83,2020-04-08T15:50:44Z,-73.702982,lon,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,84,2020-04-08T15:53:56Z,-73.72924,lon,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,85,2020-04-08T15:52:38Z,-73.7261,lon,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,86,2020-04-08T15:52:16Z,-73.721973,lon,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,87,2020-04-08T15:51:55Z,-73.720059,lon,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,88,2020-04-08T15:51:20Z,-73.713571,lon,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,89,2020-04-08T15:51:37Z,-73.715622,lon,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,90,2020-04-08T15:51:03Z,-73.705485,lon,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,91,2020-04-08T15:54:57Z,-73.740647,lon,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,92,2020-04-08T15:55:54Z,-73.742812,lon,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,93,2020-04-08T15:56:13Z,-73.74431,lon,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,94,2020-04-08T15:56:33Z,-73.745805,lon,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,95,2020-04-08T15:58:10Z,-73.752465,lon,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,96,2020-04-08T15:56:53Z,-73.749413,lon,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,97,2020-04-08T15:57:52Z,-73.751322,lon,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,98,2020-04-08T15:44:58Z,1586304000,tid,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,99,2020-04-08T16:19:27Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,100,2020-04-08T16:16:50Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,101,2020-04-08T16:15:59Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,102,2020-04-08T16:16:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,103,2020-04-08T16:14:32Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,104,2020-04-08T16:14:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,105,2020-04-08T16:18:18Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,106,2020-04-08T16:11:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,107,2020-04-08T16:10:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,108,2020-04-08T16:09:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,109,2020-04-08T16:09:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,110,2020-04-08T16:09:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,111,2020-04-08T16:08:19Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,112,2020-04-08T16:08:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,113,2020-04-08T16:07:43Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,114,2020-04-08T16:06:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,115,2020-04-08T16:06:31Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,116,2020-04-08T16:06:11Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,117,2020-04-08T16:03:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,118,2020-04-08T16:04:28Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,119,2020-04-08T16:05:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,120,2020-04-08T16:10:29Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,121,2020-04-08T16:03:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,122,2020-04-08T16:02:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,123,2020-04-08T16:01:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,124,2020-04-08T15:59:24Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,125,2020-04-08T15:45:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,126,2020-04-08T15:45:51Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,127,2020-04-08T15:46:12Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,128,2020-04-08T15:47:45Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,129,2020-04-08T15:48:04Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,130,2020-04-08T15:49:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,131,2020-04-08T15:49:22Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,132,2020-04-08T15:50:44Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,133,2020-04-08T15:53:56Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,134,2020-04-08T15:52:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,135,2020-04-08T15:52:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,136,2020-04-08T15:51:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,137,2020-04-08T15:51:20Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,138,2020-04-08T15:51:37Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,139,2020-04-08T15:51:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,140,2020-04-08T15:54:57Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,141,2020-04-08T15:55:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,142,2020-04-08T15:56:13Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,143,2020-04-08T15:56:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,144,2020-04-08T15:58:10Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,145,2020-04-08T15:56:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,146,2020-04-08T15:57:52Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   223,
					},
					File:   "st_distance_test.flux",
					Source: "outData = \"\n#group,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true\n#datatype,string,long,string,string,double,dateTime:RFC3339,string,string,double,double,string,string,string,string,long,string\n#default,_result,,,,,,,,,,,,,,,\n,result,table,_measurement,_pt,_st_distance,_time,area,id,lat,lon,s2_cell_id,seq_idx,status,stop_id,tid,trip_id\n,,0,mta,start,33.463,2020-04-08T15:44:58Z,LLIR,GO506_20_6431,40.820317,-73.68691,89c288c54,1,STOPPED_AT,171,1586304000,GO506_20_6431\n,,0,mta,via,32.99,2020-04-08T15:45:33Z,LLIR,GO506_20_6431,40.815413,-73.690054,89c288dcc,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,32.687,2020-04-08T15:45:51Z,LLIR,GO506_20_6431,40.814096,-73.693214,89c288ddc,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,32.376,2020-04-08T15:46:12Z,LLIR,GO506_20_6431,40.810699,-73.695214,89c288e0c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,32.247,2020-04-08T15:47:45Z,LLIR,GO506_20_6431,40.808517,-73.695594,89c288e14,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,32.152,2020-04-08T15:48:04Z,LLIR,GO506_20_6431,40.806882,-73.695858,89c288e3c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,31.932,2020-04-08T15:49:01Z,LLIR,GO506_20_6431,40.800397,-73.695023,89c288fcc,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,31.396,2020-04-08T15:49:22Z,LLIR,GO506_20_6431,40.796724,-73.699899,89c288fe4,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,31.084,2020-04-08T15:50:44Z,LLIR,GO506_20_6431,40.794998,-73.702982,89c289004,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,30.843,2020-04-08T15:51:03Z,LLIR,GO506_20_6431,40.793905,-73.705485,89c289aa4,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,30.113,2020-04-08T15:51:20Z,LLIR,GO506_20_6431,40.791541,-73.713571,89c289a64,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,29.931,2020-04-08T15:51:37Z,LLIR,GO506_20_6431,40.791009,-73.715622,89c289a6c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,29.509,2020-04-08T15:51:55Z,LLIR,GO506_20_6431,40.789185,-73.720059,89c289a3c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,29.327,2020-04-08T15:52:16Z,LLIR,GO506_20_6431,40.788413,-73.721973,89c289a2c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,28.955,2020-04-08T15:52:38Z,LLIR,GO506_20_6431,40.787216,-73.7261,89c28997c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,28.661,2020-04-08T15:53:56Z,LLIR,GO506_20_6431,40.786038,-73.72924,89c289974,5,IN_TRANSIT_TO,120,1586304000,GO506_20_6431\n,,0,mta,via,27.324,2020-04-08T15:54:57Z,LLIR,GO506_20_6431,40.775044,-73.740647,89c289f3c,5,STOPPED_AT,120,1586304000,GO506_20_6431\n,,0,mta,via,27.087,2020-04-08T15:55:54Z,LLIR,GO506_20_6431,40.773334,-73.742812,89c289f6c,5,STOPPED_AT,120,1586304000,GO506_20_6431\n,,0,mta,via,26.923,2020-04-08T15:56:13Z,LLIR,GO506_20_6431,40.772144,-73.74431,89c289f74,6,IN_TRANSIT_TO,42,1586304000,GO506_20_6431\n,,0,mta,via,26.76,2020-04-08T15:56:33Z,LLIR,GO506_20_6431,40.770953,-73.745805,89c289f7c,6,IN_TRANSIT_TO,42,1586304000,GO506_20_6431\n,,0,mta,via,26.366,2020-04-08T15:56:53Z,LLIR,GO506_20_6431,40.768069,-73.749413,89c28a024,6,STOPPED_AT,42,1586304000,GO506_20_6431\n,,0,mta,via,26.161,2020-04-08T15:57:52Z,LLIR,GO506_20_6431,40.76661,-73.751322,89c28a03c,6,STOPPED_AT,42,1586304000,GO506_20_6431\n,,0,mta,via,26.046,2020-04-08T15:58:10Z,LLIR,GO506_20_6431,40.76594,-73.752465,89c28a014,7,IN_TRANSIT_TO,25,1586304000,GO506_20_6431\n,,0,mta,via,24.614,2020-04-08T15:59:24Z,LLIR,GO506_20_6431,40.763356,-73.769272,89c261e04,7,STOPPED_AT,25,1586304000,GO506_20_6431\n,,0,mta,via,23.31,2020-04-08T16:01:55Z,LLIR,GO506_20_6431,40.761878,-73.785035,89c261d74,8,IN_TRANSIT_TO,2,1586304000,GO506_20_6431\n,,0,mta,via,22.904,2020-04-08T16:02:33Z,LLIR,GO506_20_6431,40.761443,-73.789959,89c261d3c,8,STOPPED_AT,2,1586304000,GO506_20_6431\n,,0,mta,via,22.662,2020-04-08T16:03:36Z,LLIR,GO506_20_6431,40.761241,-73.792932,89c261d34,8,STOPPED_AT,2,1586304000,GO506_20_6431\n,,0,mta,via,22.432,2020-04-08T16:03:54Z,LLIR,GO506_20_6431,40.76117,-73.795812,89c2602cc,9,IN_TRANSIT_TO,11,1586304000,GO506_20_6431\n,,0,mta,via,21.984,2020-04-08T16:04:28Z,LLIR,GO506_20_6431,40.761653,-73.801766,89c2602ec,9,STOPPED_AT,11,1586304000,GO506_20_6431\n,,0,mta,via,21.786,2020-04-08T16:05:46Z,LLIR,GO506_20_6431,40.761908,-73.804421,89c2602f4,9,STOPPED_AT,11,1586304000,GO506_20_6431\n,,0,mta,via,21.414,2020-04-08T16:06:11Z,LLIR,GO506_20_6431,40.762373,-73.809437,89c260254,10,IN_TRANSIT_TO,130,1586304000,GO506_20_6431\n,,0,mta,via,21.361,2020-04-08T16:06:31Z,LLIR,GO506_20_6431,40.762441,-73.810154,89c26024c,10,IN_TRANSIT_TO,130,1586304000,GO506_20_6431\n,,0,mta,via,21.031,2020-04-08T16:06:49Z,LLIR,GO506_20_6431,40.762709,-73.814539,89c260234,10,STOPPED_AT,130,1586304000,GO506_20_6431\n,,0,mta,via,20.742,2020-04-08T16:07:43Z,LLIR,GO506_20_6431,40.762143,-73.817956,89c26022c,11,IN_TRANSIT_TO,56,1586304000,GO506_20_6431\n,,0,mta,via,20.013,2020-04-08T16:08:19Z,LLIR,GO506_20_6431,40.759873,-73.826087,89c26010c,11,IN_TRANSIT_TO,56,1586304000,GO506_20_6431\n,,0,mta,via,19.77,2020-04-08T16:08:38Z,LLIR,GO506_20_6431,40.759128,-73.828799,89c26011c,11,STOPPED_AT,56,1586304000,GO506_20_6431\n,,0,mta,via,19.519,2020-04-08T16:09:01Z,LLIR,GO506_20_6431,40.757895,-73.831347,89c2600dc,11,STOPPED_AT,56,1586304000,GO506_20_6431\n,,0,mta,via,19.349,2020-04-08T16:09:36Z,LLIR,GO506_20_6431,40.757106,-73.833095,89c2600c4,11,STOPPED_AT,56,1586304000,GO506_20_6431\n,,0,mta,via,19.229,2020-04-08T16:09:53Z,LLIR,GO506_20_6431,40.7565,-73.834298,89c2600c4,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,18.509,2020-04-08T16:10:29Z,LLIR,GO506_20_6431,40.753279,-73.841791,89c260754,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,17.841,2020-04-08T16:10:46Z,LLIR,GO506_20_6431,40.750688,-73.848962,89c25fdbc,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,17.537,2020-04-08T16:11:03Z,LLIR,GO506_20_6431,40.749543,-73.852242,89c25fdb4,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,13.555,2020-04-08T16:14:32Z,LLIR,GO506_20_6431,40.743989,-73.900815,89c25f1d4,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,13.488,2020-04-08T16:14:49Z,LLIR,GO506_20_6431,40.745851,-73.902975,89c25f1d4,12,STOPPED_AT,214,1586304000,GO506_20_6431\n,,0,mta,via,13.433,2020-04-08T16:15:59Z,LLIR,GO506_20_6431,40.748141,-73.905367,89c25f1c4,12,STOPPED_AT,214,1586304000,GO506_20_6431\n,,0,mta,via,13.399,2020-04-08T16:16:16Z,LLIR,GO506_20_6431,40.748909,-73.906398,89c25f1c4,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n,,0,mta,via,13.107,2020-04-08T16:16:50Z,LLIR,GO506_20_6431,40.751085,-73.912119,89c25f18c,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n,,0,mta,via,11.854,2020-04-08T16:18:18Z,LLIR,GO506_20_6431,40.748495,-73.927597,89c25f29c,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n,,0,mta,via,10.75,2020-04-08T16:19:27Z,LLIR,GO506_20_6431,40.745249,-73.940563,89c2592bc,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   169,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 8,
							Line:   169,
						},
						File:   "st_distance_test.flux",
						Source: "outData",
						Start: ast.Position{
							Column: 1,
							Line:   169,
						},
					},
				},
				Name: "outData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   223,
						},
						File:   "st_distance_test.flux",
						Source: "\"\n#group,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true\n#datatype,string,long,string,string,double,dateTime:RFC3339,string,string,double,double,string,string,string,string,long,string\n#default,_result,,,,,,,,,,,,,,,\n,result,table,_measurement,_pt,_st_distance,_time,area,id,lat,lon,s2_cell_id,seq_idx,status,stop_id,tid,trip_id\n,,0,mta,start,33.463,2020-04-08T15:44:58Z,LLIR,GO506_20_6431,40.820317,-73.68691,89c288c54,1,STOPPED_AT,171,1586304000,GO506_20_6431\n,,0,mta,via,32.99,2020-04-08T15:45:33Z,LLIR,GO506_20_6431,40.815413,-73.690054,89c288dcc,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,32.687,2020-04-08T15:45:51Z,LLIR,GO506_20_6431,40.814096,-73.693214,89c288ddc,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,32.376,2020-04-08T15:46:12Z,LLIR,GO506_20_6431,40.810699,-73.695214,89c288e0c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,32.247,2020-04-08T15:47:45Z,LLIR,GO506_20_6431,40.808517,-73.695594,89c288e14,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,32.152,2020-04-08T15:48:04Z,LLIR,GO506_20_6431,40.806882,-73.695858,89c288e3c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,31.932,2020-04-08T15:49:01Z,LLIR,GO506_20_6431,40.800397,-73.695023,89c288fcc,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,31.396,2020-04-08T15:49:22Z,LLIR,GO506_20_6431,40.796724,-73.699899,89c288fe4,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,31.084,2020-04-08T15:50:44Z,LLIR,GO506_20_6431,40.794998,-73.702982,89c289004,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,30.843,2020-04-08T15:51:03Z,LLIR,GO506_20_6431,40.793905,-73.705485,89c289aa4,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,30.113,2020-04-08T15:51:20Z,LLIR,GO506_20_6431,40.791541,-73.713571,89c289a64,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,29.931,2020-04-08T15:51:37Z,LLIR,GO506_20_6431,40.791009,-73.715622,89c289a6c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,29.509,2020-04-08T15:51:55Z,LLIR,GO506_20_6431,40.789185,-73.720059,89c289a3c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,29.327,2020-04-08T15:52:16Z,LLIR,GO506_20_6431,40.788413,-73.721973,89c289a2c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,28.955,2020-04-08T15:52:38Z,LLIR,GO506_20_6431,40.787216,-73.7261,89c28997c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,28.661,2020-04-08T15:53:56Z,LLIR,GO506_20_6431,40.786038,-73.72924,89c289974,5,IN_TRANSIT_TO,120,1586304000,GO506_20_6431\n,,0,mta,via,27.324,2020-04-08T15:54:57Z,LLIR,GO506_20_6431,40.775044,-73.740647,89c289f3c,5,STOPPED_AT,120,1586304000,GO506_20_6431\n,,0,mta,via,27.087,2020-04-08T15:55:54Z,LLIR,GO506_20_6431,40.773334,-73.742812,89c289f6c,5,STOPPED_AT,120,1586304000,GO506_20_6431\n,,0,mta,via,26.923,2020-04-08T15:56:13Z,LLIR,GO506_20_6431,40.772144,-73.74431,89c289f74,6,IN_TRANSIT_TO,42,1586304000,GO506_20_6431\n,,0,mta,via,26.76,2020-04-08T15:56:33Z,LLIR,GO506_20_6431,40.770953,-73.745805,89c289f7c,6,IN_TRANSIT_TO,42,1586304000,GO506_20_6431\n,,0,mta,via,26.366,2020-04-08T15:56:53Z,LLIR,GO506_20_6431,40.768069,-73.749413,89c28a024,6,STOPPED_AT,42,1586304000,GO506_20_6431\n,,0,mta,via,26.161,2020-04-08T15:57:52Z,LLIR,GO506_20_6431,40.76661,-73.751322,89c28a03c,6,STOPPED_AT,42,1586304000,GO506_20_6431\n,,0,mta,via,26.046,2020-04-08T15:58:10Z,LLIR,GO506_20_6431,40.76594,-73.752465,89c28a014,7,IN_TRANSIT_TO,25,1586304000,GO506_20_6431\n,,0,mta,via,24.614,2020-04-08T15:59:24Z,LLIR,GO506_20_6431,40.763356,-73.769272,89c261e04,7,STOPPED_AT,25,1586304000,GO506_20_6431\n,,0,mta,via,23.31,2020-04-08T16:01:55Z,LLIR,GO506_20_6431,40.761878,-73.785035,89c261d74,8,IN_TRANSIT_TO,2,1586304000,GO506_20_6431\n,,0,mta,via,22.904,2020-04-08T16:02:33Z,LLIR,GO506_20_6431,40.761443,-73.789959,89c261d3c,8,STOPPED_AT,2,1586304000,GO506_20_6431\n,,0,mta,via,22.662,2020-04-08T16:03:36Z,LLIR,GO506_20_6431,40.761241,-73.792932,89c261d34,8,STOPPED_AT,2,1586304000,GO506_20_6431\n,,0,mta,via,22.432,2020-04-08T16:03:54Z,LLIR,GO506_20_6431,40.76117,-73.795812,89c2602cc,9,IN_TRANSIT_TO,11,1586304000,GO506_20_6431\n,,0,mta,via,21.984,2020-04-08T16:04:28Z,LLIR,GO506_20_6431,40.761653,-73.801766,89c2602ec,9,STOPPED_AT,11,1586304000,GO506_20_6431\n,,0,mta,via,21.786,2020-04-08T16:05:46Z,LLIR,GO506_20_6431,40.761908,-73.804421,89c2602f4,9,STOPPED_AT,11,1586304000,GO506_20_6431\n,,0,mta,via,21.414,2020-04-08T16:06:11Z,LLIR,GO506_20_6431,40.762373,-73.809437,89c260254,10,IN_TRANSIT_TO,130,1586304000,GO506_20_6431\n,,0,mta,via,21.361,2020-04-08T16:06:31Z,LLIR,GO506_20_6431,40.762441,-73.810154,89c26024c,10,IN_TRANSIT_TO,130,1586304000,GO506_20_6431\n,,0,mta,via,21.031,2020-04-08T16:06:49Z,LLIR,GO506_20_6431,40.762709,-73.814539,89c260234,10,STOPPED_AT,130,1586304000,GO506_20_6431\n,,0,mta,via,20.742,2020-04-08T16:07:43Z,LLIR,GO506_20_6431,40.762143,-73.817956,89c26022c,11,IN_TRANSIT_TO,56,1586304000,GO506_20_6431\n,,0,mta,via,20.013,2020-04-08T16:08:19Z,LLIR,GO506_20_6431,40.759873,-73.826087,89c26010c,11,IN_TRANSIT_TO,56,1586304000,GO506_20_6431\n,,0,mta,via,19.77,2020-04-08T16:08:38Z,LLIR,GO506_20_6431,40.759128,-73.828799,89c26011c,11,STOPPED_AT,56,1586304000,GO506_20_6431\n,,0,mta,via,19.519,2020-04-08T16:09:01Z,LLIR,GO506_20_6431,40.757895,-73.831347,89c2600dc,11,STOPPED_AT,56,1586304000,GO506_20_6431\n,,0,mta,via,19.349,2020-04-08T16:09:36Z,LLIR,GO506_20_6431,40.757106,-73.833095,89c2600c4,11,STOPPED_AT,56,1586304000,GO506_20_6431\n,,0,mta,via,19.229,2020-04-08T16:09:53Z,LLIR,GO506_20_6431,40.7565,-73.834298,89c2600c4,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,18.509,2020-04-08T16:10:29Z,LLIR,GO506_20_6431,40.753279,-73.841791,89c260754,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,17.841,2020-04-08T16:10:46Z,LLIR,GO506_20_6431,40.750688,-73.848962,89c25fdbc,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,17.537,2020-04-08T16:11:03Z,LLIR,GO506_20_6431,40.749543,-73.852242,89c25fdb4,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,13.555,2020-04-08T16:14:32Z,LLIR,GO506_20_6431,40.743989,-73.900815,89c25f1d4,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,13.488,2020-04-08T16:14:49Z,LLIR,GO506_20_6431,40.745851,-73.902975,89c25f1d4,12,STOPPED_AT,214,1586304000,GO506_20_6431\n,,0,mta,via,13.433,2020-04-08T16:15:59Z,LLIR,GO506_20_6431,40.748141,-73.905367,89c25f1c4,12,STOPPED_AT,214,1586304000,GO506_20_6431\n,,0,mta,via,13.399,2020-04-08T16:16:16Z,LLIR,GO506_20_6431,40.748909,-73.906398,89c25f1c4,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n,,0,mta,via,13.107,2020-04-08T16:16:50Z,LLIR,GO506_20_6431,40.751085,-73.912119,89c25f18c,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n,,0,mta,via,11.854,2020-04-08T16:18:18Z,LLIR,GO506_20_6431,40.748495,-73.927597,89c25f29c,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n,,0,mta,via,10.75,2020-04-08T16:19:27Z,LLIR,GO506_20_6431,40.745249,-73.940563,89c2592bc,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n\"",
						Start: ast.Position{
							Column: 11,
							Line:   169,
						},
					},
				},
				Value: "\n#group,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true\n#datatype,string,long,string,string,double,dateTime:RFC3339,string,string,double,double,string,string,string,string,long,string\n#default,_result,,,,,,,,,,,,,,,\n,result,table,_measurement,_pt,_st_distance,_time,area,id,lat,lon,s2_cell_id,seq_idx,status,stop_id,tid,trip_id\n,,0,mta,start,33.463,2020-04-08T15:44:58Z,LLIR,GO506_20_6431,40.820317,-73.68691,89c288c54,1,STOPPED_AT,171,1586304000,GO506_20_6431\n,,0,mta,via,32.99,2020-04-08T15:45:33Z,LLIR,GO506_20_6431,40.815413,-73.690054,89c288dcc,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,32.687,2020-04-08T15:45:51Z,LLIR,GO506_20_6431,40.814096,-73.693214,89c288ddc,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,32.376,2020-04-08T15:46:12Z,LLIR,GO506_20_6431,40.810699,-73.695214,89c288e0c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,32.247,2020-04-08T15:47:45Z,LLIR,GO506_20_6431,40.808517,-73.695594,89c288e14,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,32.152,2020-04-08T15:48:04Z,LLIR,GO506_20_6431,40.806882,-73.695858,89c288e3c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,31.932,2020-04-08T15:49:01Z,LLIR,GO506_20_6431,40.800397,-73.695023,89c288fcc,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,31.396,2020-04-08T15:49:22Z,LLIR,GO506_20_6431,40.796724,-73.699899,89c288fe4,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,31.084,2020-04-08T15:50:44Z,LLIR,GO506_20_6431,40.794998,-73.702982,89c289004,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,30.843,2020-04-08T15:51:03Z,LLIR,GO506_20_6431,40.793905,-73.705485,89c289aa4,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,30.113,2020-04-08T15:51:20Z,LLIR,GO506_20_6431,40.791541,-73.713571,89c289a64,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,29.931,2020-04-08T15:51:37Z,LLIR,GO506_20_6431,40.791009,-73.715622,89c289a6c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,29.509,2020-04-08T15:51:55Z,LLIR,GO506_20_6431,40.789185,-73.720059,89c289a3c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,29.327,2020-04-08T15:52:16Z,LLIR,GO506_20_6431,40.788413,-73.721973,89c289a2c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,28.955,2020-04-08T15:52:38Z,LLIR,GO506_20_6431,40.787216,-73.7261,89c28997c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,28.661,2020-04-08T15:53:56Z,LLIR,GO506_20_6431,40.786038,-73.72924,89c289974,5,IN_TRANSIT_TO,120,1586304000,GO506_20_6431\n,,0,mta,via,27.324,2020-04-08T15:54:57Z,LLIR,GO506_20_6431,40.775044,-73.740647,89c289f3c,5,STOPPED_AT,120,1586304000,GO506_20_6431\n,,0,mta,via,27.087,2020-04-08T15:55:54Z,LLIR,GO506_20_6431,40.773334,-73.742812,89c289f6c,5,STOPPED_AT,120,1586304000,GO506_20_6431\n,,0,mta,via,26.923,2020-04-08T15:56:13Z,LLIR,GO506_20_6431,40.772144,-73.74431,89c289f74,6,IN_TRANSIT_TO,42,1586304000,GO506_20_6431\n,,0,mta,via,26.76,2020-04-08T15:56:33Z,LLIR,GO506_20_6431,40.770953,-73.745805,89c289f7c,6,IN_TRANSIT_TO,42,1586304000,GO506_20_6431\n,,0,mta,via,26.366,2020-04-08T15:56:53Z,LLIR,GO506_20_6431,40.768069,-73.749413,89c28a024,6,STOPPED_AT,42,1586304000,GO506_20_6431\n,,0,mta,via,26.161,2020-04-08T15:57:52Z,LLIR,GO506_20_6431,40.76661,-73.751322,89c28a03c,6,STOPPED_AT,42,1586304000,GO506_20_6431\n,,0,mta,via,26.046,2020-04-08T15:58:10Z,LLIR,GO506_20_6431,40.76594,-73.752465,89c28a014,7,IN_TRANSIT_TO,25,1586304000,GO506_20_6431\n,,0,mta,via,24.614,2020-04-08T15:59:24Z,LLIR,GO506_20_6431,40.763356,-73.769272,89c261e04,7,STOPPED_AT,25,1586304000,GO506_20_6431\n,,0,mta,via,23.31,2020-04-08T16:01:55Z,LLIR,GO506_20_6431,40.761878,-73.785035,89c261d74,8,IN_TRANSIT_TO,2,1586304000,GO506_20_6431\n,,0,mta,via,22.904,2020-04-08T16:02:33Z,LLIR,GO506_20_6431,40.761443,-73.789959,89c261d3c,8,STOPPED_AT,2,1586304000,GO506_20_6431\n,,0,mta,via,22.662,2020-04-08T16:03:36Z,LLIR,GO506_20_6431,40.761241,-73.792932,89c261d34,8,STOPPED_AT,2,1586304000,GO506_20_6431\n,,0,mta,via,22.432,2020-04-08T16:03:54Z,LLIR,GO506_20_6431,40.76117,-73.795812,89c2602cc,9,IN_TRANSIT_TO,11,1586304000,GO506_20_6431\n,,0,mta,via,21.984,2020-04-08T16:04:28Z,LLIR,GO506_20_6431,40.761653,-73.801766,89c2602ec,9,STOPPED_AT,11,1586304000,GO506_20_6431\n,,0,mta,via,21.786,2020-04-08T16:05:46Z,LLIR,GO506_20_6431,40.761908,-73.804421,89c2602f4,9,STOPPED_AT,11,1586304000,GO506_20_6431\n,,0,mta,via,21.414,2020-04-08T16:06:11Z,LLIR,GO506_20_6431,40.762373,-73.809437,89c260254,10,IN_TRANSIT_TO,130,1586304000,GO506_20_6431\n,,0,mta,via,21.361,2020-04-08T16:06:31Z,LLIR,GO506_20_6431,40.762441,-73.810154,89c26024c,10,IN_TRANSIT_TO,130,1586304000,GO506_20_6431\n,,0,mta,via,21.031,2020-04-08T16:06:49Z,LLIR,GO506_20_6431,40.762709,-73.814539,89c260234,10,STOPPED_AT,130,1586304000,GO506_20_6431\n,,0,mta,via,20.742,2020-04-08T16:07:43Z,LLIR,GO506_20_6431,40.762143,-73.817956,89c26022c,11,IN_TRANSIT_TO,56,1586304000,GO506_20_6431\n,,0,mta,via,20.013,2020-04-08T16:08:19Z,LLIR,GO506_20_6431,40.759873,-73.826087,89c26010c,11,IN_TRANSIT_TO,56,1586304000,GO506_20_6431\n,,0,mta,via,19.77,2020-04-08T16:08:38Z,LLIR,GO506_20_6431,40.759128,-73.828799,89c26011c,11,STOPPED_AT,56,1586304000,GO506_20_6431\n,,0,mta,via,19.519,2020-04-08T16:09:01Z,LLIR,GO506_20_6431,40.757895,-73.831347,89c2600dc,11,STOPPED_AT,56,1586304000,GO506_20_6431\n,,0,mta,via,19.349,2020-04-08T16:09:36Z,LLIR,GO506_20_6431,40.757106,-73.833095,89c2600c4,11,STOPPED_AT,56,1586304000,GO506_20_6431\n,,0,mta,via,19.229,2020-04-08T16:09:53Z,LLIR,GO506_20_6431,40.7565,-73.834298,89c2600c4,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,18.509,2020-04-08T16:10:29Z,LLIR,GO506_20_6431,40.753279,-73.841791,89c260754,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,17.841,2020-04-08T16:10:46Z,LLIR,GO506_20_6431,40.750688,-73.848962,89c25fdbc,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,17.537,2020-04-08T16:11:03Z,LLIR,GO506_20_6431,40.749543,-73.852242,89c25fdb4,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,13.555,2020-04-08T16:14:32Z,LLIR,GO506_20_6431,40.743989,-73.900815,89c25f1d4,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,13.488,2020-04-08T16:14:49Z,LLIR,GO506_20_6431,40.745851,-73.902975,89c25f1d4,12,STOPPED_AT,214,1586304000,GO506_20_6431\n,,0,mta,via,13.433,2020-04-08T16:15:59Z,LLIR,GO506_20_6431,40.748141,-73.905367,89c25f1c4,12,STOPPED_AT,214,1586304000,GO506_20_6431\n,,0,mta,via,13.399,2020-04-08T16:16:16Z,LLIR,GO506_20_6431,40.748909,-73.906398,89c25f1c4,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n,,0,mta,via,13.107,2020-04-08T16:16:50Z,LLIR,GO506_20_6431,40.751085,-73.912119,89c25f18c,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n,,0,mta,via,11.854,2020-04-08T16:18:18Z,LLIR,GO506_20_6431,40.748495,-73.927597,89c25f29c,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n,,0,mta,via,10.75,2020-04-08T16:19:27Z,LLIR,GO506_20_6431,40.745249,-73.940563,89c2592bc,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 41,
						Line:   226,
					},
					File:   "st_distance_test.flux",
					Source: "refPoint = {lat: 40.6892, lon: -74.0445}",
					Start: ast.Position{
						Column: 1,
						Line:   226,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 9,
							Line:   226,
						},
						File:   "st_distance_test.flux",
						Source: "refPoint",
						Start: ast.Position{
							Column: 1,
							Line:   226,
						},
					},
				},
				Name: "refPoint",
			},
			Init: &ast.ObjectExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 41,
							Line:   226,
						},
						File:   "st_distance_test.flux",
						Source: "{lat: 40.6892, lon: -74.0445}",
						Start: ast.Position{
							Column: 12,
							Line:   226,
						},
					},
				},
				Properties: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 25,
								Line:   226,
							},
							File:   "st_distance_test.flux",
							Source: "lat: 40.6892",
							Start: ast.Position{
								Column: 13,
								Line:   226,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 16,
									Line:   226,
								},
								File:   "st_distance_test.flux",
								Source: "lat",
								Start: ast.Position{
									Column: 13,
									Line:   226,
								},
							},
						},
						Name: "lat",
					},
					Value: &ast.FloatLiteral{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 25,
									Line:   226,
								},
								File:   "st_distance_test.flux",
								Source: "40.6892",
								Start: ast.Position{
									Column: 18,
									Line:   226,
								},
							},
						},
						Value: 40.6892,
					},
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 40,
								Line:   226,
							},
							File:   "st_distance_test.flux",
							Source: "lon: -74.0445",
							Start: ast.Position{
								Column: 27,
								Line:   226,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 30,
									Line:   226,
								},
								File:   "st_distance_test.flux",
								Source: "lon",
								Start: ast.Position{
									Column: 27,
									Line:   226,
								},
							},
						},
						Name: "lon",
					},
					Value: &ast.UnaryExpression{
						Argument: &ast.FloatLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 40,
										Line:   226,
									},
									File:   "st_distance_test.flux",
									Source: "74.0445",
									Start: ast.Position{
										Column: 33,
										Line:   226,
									},
								},
							},
							Value: 74.0445,
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 40,
									Line:   226,
								},
								File:   "st_distance_test.flux",
								Source: "-74.0445",
								Start: ast.Position{
									Column: 32,
									Line:   226,
								},
							},
						},
						Operator: 6,
					},
				}},
				With: nil,
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 46,
						Line:   230,
					},
					File:   "st_distance_test.flux",
					Source: "limitFloat = (value) =>\n  (float(v: int(v: value * 1000.0)) / 1000.0)",
					Start: ast.Position{
						Column: 1,
						Line:   229,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 11,
							Line:   229,
						},
						File:   "st_distance_test.flux",
						Source: "limitFloat",
						Start: ast.Position{
							Column: 1,
							Line:   229,
						},
					},
				},
				Name: "limitFloat",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 46,
							Line:   230,
						},
						File:   "st_distance_test.flux",
						Source: "(value) =>\n  (float(v: int(v: value * 1000.0)) / 1000.0)",
						Start: ast.Position{
							Column: 14,
							Line:   229,
						},
					},
				},
				Body: &ast.ParenExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 46,
								Line:   230,
							},
							File:   "st_distance_test.flux",
							Source: "(float(v: int(v: value * 1000.0)) / 1000.0)",
							Start: ast.Position{
								Column: 3,
								Line:   230,
							},
						},
					},
					Expression: &ast.BinaryExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 45,
									Line:   230,
								},
								File:   "st_distance_test.flux",
								Source: "float(v: int(v: value * 1000.0)) / 1000.0",
								Start: ast.Position{
									Column: 4,
									Line:   230,
								},
							},
						},
						Left: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 35,
											Line:   230,
										},
										File:   "st_distance_test.flux",
										Source: "v: int(v: value * 1000.0)",
										Start: ast.Position{
											Column: 10,
											Line:   230,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 35,
												Line:   230,
											},
											File:   "st_distance_test.flux",
											Source: "v: int(v: value * 1000.0)",
											Start: ast.Position{
												Column: 10,
												Line:   230,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 11,
													Line:   230,
												},
												File:   "st_distance_test.flux",
												Source: "v",
												Start: ast.Position{
													Column: 10,
													Line:   230,
												},
											},
										},
										Name: "v",
									},
									Value: &ast.CallExpression{
										Arguments: []ast.Expression{&ast.ObjectExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 34,
														Line:   230,
													},
													File:   "st_distance_test.flux",
													Source: "v: value * 1000.0",
													Start: ast.Position{
														Column: 17,
														Line:   230,
													},
												},
											},
											Properties: []*ast.Property{&ast.Property{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 34,
															Line:   230,
														},
														File:   "st_distance_test.flux",
														Source: "v: value * 1000.0",
														Start: ast.Position{
															Column: 17,
															Line:   230,
														},
													},
												},
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 18,
																Line:   230,
															},
															File:   "st_distance_test.flux",
															Source: "v",
															Start: ast.Position{
																Column: 17,
																Line:   230,
															},
														},
													},
													Name: "v",
												},
												Value: &ast.BinaryExpression{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 34,
																Line:   230,
															},
															File:   "st_distance_test.flux",
															Source: "value * 1000.0",
															Start: ast.Position{
																Column: 20,
																Line:   230,
															},
														},
													},
													Left: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 25,
																	Line:   230,
																},
																File:   "st_distance_test.flux",
																Source: "value",
																Start: ast.Position{
																	Column: 20,
																	Line:   230,
																},
															},
														},
														Name: "value",
													},
													Operator: 1,
													Right: &ast.FloatLiteral{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 34,
																	Line:   230,
																},
																File:   "st_distance_test.flux",
																Source: "1000.0",
																Start: ast.Position{
																	Column: 28,
																	Line:   230,
																},
															},
														},
														Value: 1000.0,
													},
												},
											}},
											With: nil,
										}},
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 35,
													Line:   230,
												},
												File:   "st_distance_test.flux",
												Source: "int(v: value * 1000.0)",
												Start: ast.Position{
													Column: 13,
													Line:   230,
												},
											},
										},
										Callee: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 16,
														Line:   230,
													},
													File:   "st_distance_test.flux",
													Source: "int",
													Start: ast.Position{
														Column: 13,
														Line:   230,
													},
												},
											},
											Name: "int",
										},
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 36,
										Line:   230,
									},
									File:   "st_distance_test.flux",
									Source: "float(v: int(v: value * 1000.0))",
									Start: ast.Position{
										Column: 4,
										Line:   230,
									},
								},
							},
							Callee: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 9,
											Line:   230,
										},
										File:   "st_distance_test.flux",
										Source: "float",
										Start: ast.Position{
											Column: 4,
											Line:   230,
										},
									},
								},
								Name: "float",
							},
						},
						Operator: 2,
						Right: &ast.FloatLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 45,
										Line:   230,
									},
									File:   "st_distance_test.flux",
									Source: "1000.0",
									Start: ast.Position{
										Column: 39,
										Line:   230,
									},
								},
							},
							Value: 1000.0,
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 20,
								Line:   229,
							},
							File:   "st_distance_test.flux",
							Source: "value",
							Start: ast.Position{
								Column: 15,
								Line:   229,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 20,
									Line:   229,
								},
								File:   "st_distance_test.flux",
								Source: "value",
								Start: ast.Position{
									Column: 15,
									Line:   229,
								},
							},
						},
						Name: "value",
					},
					Value: nil,
				}},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   240,
					},
					File:   "st_distance_test.flux",
					Source: "t_stDistance = (table=<-) =>\n  table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to see the train closing in\n    |> map(fn: (r) => ({\n        r with _st_distance: limitFloat(value: geo.ST_Distance(region: refPoint, geometry: {lat: r.lat, lon: r.lon}))\n    }))\n    |> drop(columns: [\"_start\", \"_stop\"])",
					Start: ast.Position{
						Column: 1,
						Line:   232,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 13,
							Line:   232,
						},
						File:   "st_distance_test.flux",
						Source: "t_stDistance",
						Start: ast.Position{
							Column: 1,
							Line:   232,
						},
					},
				},
				Name: "t_stDistance",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   240,
						},
						File:   "st_distance_test.flux",
						Source: "(table=<-) =>\n  table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to see the train closing in\n    |> map(fn: (r) => ({\n        r with _st_distance: limitFloat(value: geo.ST_Distance(region: refPoint, geometry: {lat: r.lat, lon: r.lon}))\n    }))\n    |> drop(columns: [\"_start\", \"_stop\"])",
						Start: ast.Position{
							Column: 16,
							Line:   232,
						},
					},
				},
				Body: &ast.PipeExpression{
					Argument: &ast.PipeExpression{
						Argument: &ast.PipeExpression{
							Argument: &ast.PipeExpression{
								Argument: &ast.PipeExpression{
									Argument: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 8,
													Line:   233,
												},
												File:   "st_distance_test.flux",
												Source: "table",
												Start: ast.Position{
													Column: 3,
													Line:   233,
												},
											},
										},
										Name: "table",
									},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 42,
												Line:   234,
											},
											File:   "st_distance_test.flux",
											Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)",
											Start: ast.Position{
												Column: 3,
												Line:   233,
											},
										},
									},
									Call: &ast.CallExpression{
										Arguments: []ast.Expression{&ast.ObjectExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 41,
														Line:   234,
													},
													File:   "st_distance_test.flux",
													Source: "start: 2020-04-01T00:00:00Z",
													Start: ast.Position{
														Column: 14,
														Line:   234,
													},
												},
											},
											Properties: []*ast.Property{&ast.Property{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 41,
															Line:   234,
														},
														File:   "st_distance_test.flux",
														Source: "start: 2020-04-01T00:00:00Z",
														Start: ast.Position{
															Column: 14,
															Line:   234,
														},
													},
												},
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 19,
																Line:   234,
															},
															File:   "st_distance_test.flux",
															Source: "start",
															Start: ast.Position{
																Column: 14,
																Line:   234,
															},
														},
													},
													Name: "start",
												},
												Value: &ast.DateTimeLiteral{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 41,
																Line:   234,
															},
															File:   "st_distance_test.flux",
															Source: "2020-04-01T00:00:00Z",
															Start: ast.Position{
																Column: 21,
																Line:   234,
															},
														},
													},
													Value: parser.MustParseTime("2020-04-01T00:00:00Z"),
												},
											}},
											With: nil,
										}},
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   234,
												},
												File:   "st_distance_test.flux",
												Source: "range(start: 2020-04-01T00:00:00Z)",
												Start: ast.Position{
													Column: 8,
													Line:   234,
												},
											},
										},
										Callee: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 13,
														Line:   234,
													},
													File:   "st_distance_test.flux",
													Source: "range",
													Start: ast.Position{
														Column: 8,
														Line:   234,
													},
												},
											},
											Name: "range",
										},
									},
								},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 25,
											Line:   235,
										},
										File:   "st_distance_test.flux",
										Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()",
										Start: ast.Position{
											Column: 3,
											Line:   233,
										},
									},
								},
								Call: &ast.CallExpression{
									Arguments: nil,
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 25,
												Line:   235,
											},
											File:   "st_distance_test.flux",
											Source: "v1.fieldsAsCols()",
											Start: ast.Position{
												Column: 8,
												Line:   235,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 23,
													Line:   235,
												},
												File:   "st_distance_test.flux",
												Source: "v1.fieldsAsCols",
												Start: ast.Position{
													Column: 8,
													Line:   235,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 10,
														Line:   235,
													},
													File:   "st_distance_test.flux",
													Source: "v1",
													Start: ast.Position{
														Column: 8,
														Line:   235,
													},
												},
											},
											Name: "v1",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 23,
														Line:   235,
													},
													File:   "st_distance_test.flux",
													Source: "fieldsAsCols",
													Start: ast.Position{
														Column: 11,
														Line:   235,
													},
												},
											},
											Name: "fieldsAsCols",
										},
									},
								},
							},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 47,
										Line:   236,
									},
									File:   "st_distance_test.flux",
									Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"])",
									Start: ast.Position{
										Column: 3,
										Line:   233,
									},
								},
							},
							Call: &ast.CallExpression{
								Arguments: []ast.Expression{&ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 46,
												Line:   236,
											},
											File:   "st_distance_test.flux",
											Source: "groupBy: [\"id\",\"trip_id\"]",
											Start: ast.Position{
												Column: 21,
												Line:   236,
											},
										},
									},
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 46,
													Line:   236,
												},
												File:   "st_distance_test.flux",
												Source: "groupBy: [\"id\",\"trip_id\"]",
												Start: ast.Position{
													Column: 21,
													Line:   236,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 28,
														Line:   236,
													},
													File:   "st_distance_test.flux",
													Source: "groupBy",
													Start: ast.Position{
														Column: 21,
														Line:   236,
													},
												},
											},
											Name: "groupBy",
										},
										Value: &ast.ArrayExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 46,
														Line:   236,
													},
													File:   "st_distance_test.flux",
													Source: "[\"id\",\"trip_id\"]",
													Start: ast.Position{
														Column: 30,
														Line:   236,
													},
												},
											},
											Elements: []ast.Expression{&ast.StringLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 35,
															Line:   236,
														},
														File:   "st_distance_test.flux",
														Source: "\"id\"",
														Start: ast.Position{
															Column: 31,
															Line:   236,
														},
													},
												},
												Value: "id",
											}, &ast.StringLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 45,
															Line:   236,
														},
														File:   "st_distance_test.flux",
														Source: "\"trip_id\"",
														Start: ast.Position{
															Column: 36,
															Line:   236,
														},
													},
												},
												Value: "trip_id",
											}},
										},
									}},
									With: nil,
								}},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 47,
											Line:   236,
										},
										File:   "st_distance_test.flux",
										Source: "geo.asTracks(groupBy: [\"id\",\"trip_id\"])",
										Start: ast.Position{
											Column: 8,
											Line:   236,
										},
									},
								},
								Callee: &ast.MemberExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 20,
												Line:   236,
											},
											File:   "st_distance_test.flux",
											Source: "geo.asTracks",
											Start: ast.Position{
												Column: 8,
												Line:   236,
											},
										},
									},
									Object: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 11,
													Line:   236,
												},
												File:   "st_distance_test.flux",
												Source: "geo",
												Start: ast.Position{
													Column: 8,
													Line:   236,
												},
											},
										},
										Name: "geo",
									},
									Property: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 20,
													Line:   236,
												},
												File:   "st_distance_test.flux",
												Source: "asTracks",
												Start: ast.Position{
													Column: 12,
													Line:   236,
												},
											},
										},
										Name: "asTracks",
									},
								},
							},
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 8,
									Line:   239,
								},
								File:   "st_distance_test.flux",
								Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to see the train closing in\n    |> map(fn: (r) => ({\n        r with _st_distance: limitFloat(value: geo.ST_Distance(region: refPoint, geometry: {lat: r.lat, lon: r.lon}))\n    }))",
								Start: ast.Position{
									Column: 3,
									Line:   233,
								},
							},
						},
						Call: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 7,
											Line:   239,
										},
										File:   "st_distance_test.flux",
										Source: "fn: (r) => ({\n        r with _st_distance: limitFloat(value: geo.ST_Distance(region: refPoint, geometry: {lat: r.lat, lon: r.lon}))\n    })",
										Start: ast.Position{
											Column: 12,
											Line:   237,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 7,
												Line:   239,
											},
											File:   "st_distance_test.flux",
											Source: "fn: (r) => ({\n        r with _st_distance: limitFloat(value: geo.ST_Distance(region: refPoint, geometry: {lat: r.lat, lon: r.lon}))\n    })",
											Start: ast.Position{
												Column: 12,
												Line:   237,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 14,
													Line:   237,
												},
												File:   "st_distance_test.flux",
												Source: "fn",
												Start: ast.Position{
													Column: 12,
													Line:   237,
												},
											},
										},
										Name: "fn",
									},
									Value: &ast.FunctionExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 7,
													Line:   239,
												},
												File:   "st_distance_test.flux",
												Source: "(r) => ({\n        r with _st_distance: limitFloat(value: geo.ST_Distance(region: refPoint, geometry: {lat: r.lat, lon: r.lon}))\n    })",
												Start: ast.Position{
													Column: 16,
													Line:   237,
												},
											},
										},
										Body: &ast.ParenExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 7,
														Line:   239,
													},
													File:   "st_distance_test.flux",
													Source: "({\n        r with _st_distance: limitFloat(value: geo.ST_Distance(region: refPoint, geometry: {lat: r.lat, lon: r.lon}))\n    })",
													Start: ast.Position{
														Column: 23,
														Line:   237,
													},
												},
											},
											Expression: &ast.ObjectExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 6,
															Line:   239,
														},
														File:   "st_distance_test.flux",
														Source: "{\n        r with _st_distance: limitFloat(value: geo.ST_Distance(region: refPoint, geometry: {lat: r.lat, lon: r.lon}))\n    }",
														Start: ast.Position{
															Column: 24,
															Line:   237,
														},
													},
												},
												Properties: []*ast.Property{&ast.Property{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 118,
																Line:   238,
															},
															File:   "st_distance_test.flux",
															Source: "_st_distance: limitFloat(value: geo.ST_Distance(region: refPoint, geometry: {lat: r.lat, lon: r.lon}))",
															Start: ast.Position{
																Column: 16,
																Line:   238,
															},
														},
													},
													Key: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 28,
																	Line:   238,
																},
																File:   "st_distance_test.flux",
																Source: "_st_distance",
																Start: ast.Position{
																	Column: 16,
																	Line:   238,
																},
															},
														},
														Name: "_st_distance",
													},
													Value: &ast.CallExpression{
														Arguments: []ast.Expression{&ast.ObjectExpression{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 117,
																		Line:   238,
																	},
																	File:   "st_distance_test.flux",
																	Source: "value: geo.ST_Distance(region: refPoint, geometry: {lat: r.lat, lon: r.lon})",
																	Start: ast.Position{
																		Column: 41,
																		Line:   238,
																	},
																},
															},
															Properties: []*ast.Property{&ast.Property{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 117,
																			Line:   238,
																		},
																		File:   "st_distance_test.flux",
																		Source: "value: geo.ST_Distance(region: refPoint, geometry: {lat: r.lat, lon: r.lon})",
																		Start: ast.Position{
																			Column: 41,
																			Line:   238,
																		},
																	},
																},
																Key: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 46,
																				Line:   238,
																			},
																			File:   "st_distance_test.flux",
																			Source: "value",
																			Start: ast.Position{
																				Column: 41,
																				Line:   238,
																			},
																		},
																	},
																	Name: "value",
																},
																Value: &ast.CallExpression{
																	Arguments: []ast.Expression{&ast.ObjectExpression{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 116,
																					Line:   238,
																				},
																				File:   "st_distance_test.flux",
																				Source: "region: refPoint, geometry: {lat: r.lat, lon: r.lon}",
																				Start: ast.Position{
																					Column: 64,
																					Line:   238,
																				},
																			},
																		},
																		Properties: []*ast.Property{&ast.Property{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 80,
																						Line:   238,
																					},
																					File:   "st_distance_test.flux",
																					Source: "region: refPoint",
																					Start: ast.Position{
																						Column: 64,
																						Line:   238,
																					},
																				},
																			},
																			Key: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 70,
																							Line:   238,
																						},
																						File:   "st_distance_test.flux",
																						Source: "region",
																						Start: ast.Position{
																							Column: 64,
																							Line:   238,
																						},
																					},
																				},
																				Name: "region",
																			},
																			Value: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 80,
																							Line:   238,
																						},
																						File:   "st_distance_test.flux",
																						Source: "refPoint",
																						Start: ast.Position{
																							Column: 72,
																							Line:   238,
																						},
																					},
																				},
																				Name: "refPoint",
																			},
																		}, &ast.Property{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 116,
																						Line:   238,
																					},
																					File:   "st_distance_test.flux",
																					Source: "geometry: {lat: r.lat, lon: r.lon}",
																					Start: ast.Position{
																						Column: 82,
																						Line:   238,
																					},
																				},
																			},
																			Key: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 90,
																							Line:   238,
																						},
																						File:   "st_distance_test.flux",
																						Source: "geometry",
																						Start: ast.Position{
																							Column: 82,
																							Line:   238,
																						},
																					},
																				},
																				Name: "geometry",
																			},
																			Value: &ast.ObjectExpression{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 116,
																							Line:   238,
																						},
																						File:   "st_distance_test.flux",
																						Source: "{lat: r.lat, lon: r.lon}",
																						Start: ast.Position{
																							Column: 92,
																							Line:   238,
																						},
																					},
																				},
																				Properties: []*ast.Property{&ast.Property{
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 103,
																								Line:   238,
																							},
																							File:   "st_distance_test.flux",
																							Source: "lat: r.lat",
																							Start: ast.Position{
																								Column: 93,
																								Line:   238,
																							},
																						},
																					},
																					Key: &ast.Identifier{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 96,
																									Line:   238,
																								},
																								File:   "st_distance_test.flux",
																								Source: "lat",
																								Start: ast.Position{
																									Column: 93,
																									Line:   238,
																								},
																							},
																						},
																						Name: "lat",
																					},
																					Value: &ast.MemberExpression{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 103,
																									Line:   238,
																								},
																								File:   "st_distance_test.flux",
																								Source: "r.lat",
																								Start: ast.Position{
																									Column: 98,
																									Line:   238,
																								},
																							},
																						},
																						Object: &ast.Identifier{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 99,
																										Line:   238,
																									},
																									File:   "st_distance_test.flux",
																									Source: "r",
																									Start: ast.Position{
																										Column: 98,
																										Line:   238,
																									},
																								},
																							},
																							Name: "r",
																						},
																						Property: &ast.Identifier{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 103,
																										Line:   238,
																									},
																									File:   "st_distance_test.flux",
																									Source: "lat",
																									Start: ast.Position{
																										Column: 100,
																										Line:   238,
																									},
																								},
																							},
																							Name: "lat",
																						},
																					},
																				}, &ast.Property{
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 115,
																								Line:   238,
																							},
																							File:   "st_distance_test.flux",
																							Source: "lon: r.lon",
																							Start: ast.Position{
																								Column: 105,
																								Line:   238,
																							},
																						},
																					},
																					Key: &ast.Identifier{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 108,
																									Line:   238,
																								},
																								File:   "st_distance_test.flux",
																								Source: "lon",
																								Start: ast.Position{
																									Column: 105,
																									Line:   238,
																								},
																							},
																						},
																						Name: "lon",
																					},
																					Value: &ast.MemberExpression{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 115,
																									Line:   238,
																								},
																								File:   "st_distance_test.flux",
																								Source: "r.lon",
																								Start: ast.Position{
																									Column: 110,
																									Line:   238,
																								},
																							},
																						},
																						Object: &ast.Identifier{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 111,
																										Line:   238,
																									},
																									File:   "st_distance_test.flux",
																									Source: "r",
																									Start: ast.Position{
																										Column: 110,
																										Line:   238,
																									},
																								},
																							},
																							Name: "r",
																						},
																						Property: &ast.Identifier{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 115,
																										Line:   238,
																									},
																									File:   "st_distance_test.flux",
																									Source: "lon",
																									Start: ast.Position{
																										Column: 112,
																										Line:   238,
																									},
																								},
																							},
																							Name: "lon",
																						},
																					},
																				}},
																				With: nil,
																			},
																		}},
																		With: nil,
																	}},
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 117,
																				Line:   238,
																			},
																			File:   "st_distance_test.flux",
																			Source: "geo.ST_Distance(region: refPoint, geometry: {lat: r.lat, lon: r.lon})",
																			Start: ast.Position{
																				Column: 48,
																				Line:   238,
																			},
																		},
																	},
																	Callee: &ast.MemberExpression{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 63,
																					Line:   238,
																				},
																				File:   "st_distance_test.flux",
																				Source: "geo.ST_Distance",
																				Start: ast.Position{
																					Column: 48,
																					Line:   238,
																				},
																			},
																		},
																		Object: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 51,
																						Line:   238,
																					},
																					File:   "st_distance_test.flux",
																					Source: "geo",
																					Start: ast.Position{
																						Column: 48,
																						Line:   238,
																					},
																				},
																			},
																			Name: "geo",
																		},
																		Property: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 63,
																						Line:   238,
																					},
																					File:   "st_distance_test.flux",
																					Source: "ST_Distance",
																					Start: ast.Position{
																						Column: 52,
																						Line:   238,
																					},
																				},
																			},
																			Name: "ST_Distance",
																		},
																	},
																},
															}},
															With: nil,
														}},
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 118,
																	Line:   238,
																},
																File:   "st_distance_test.flux",
																Source: "limitFloat(value: geo.ST_Distance(region: refPoint, geometry: {lat: r.lat, lon: r.lon}))",
																Start: ast.Position{
																	Column: 30,
																	Line:   238,
																},
															},
														},
														Callee: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 40,
																		Line:   238,
																	},
																	File:   "st_distance_test.flux",
																	Source: "limitFloat",
																	Start: ast.Position{
																		Column: 30,
																		Line:   238,
																	},
																},
															},
															Name: "limitFloat",
														},
													},
												}},
												With: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 10,
																Line:   238,
															},
															File:   "st_distance_test.flux",
															Source: "r",
															Start: ast.Position{
																Column: 9,
																Line:   238,
															},
														},
													},
													Name: "r",
												},
											},
										},
										Params: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   237,
													},
													File:   "st_distance_test.flux",
													Source: "r",
													Start: ast.Position{
														Column: 17,
														Line:   237,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 18,
															Line:   237,
														},
														File:   "st_distance_test.flux",
														Source: "r",
														Start: ast.Position{
															Column: 17,
															Line:   237,
														},
													},
												},
												Name: "r",
											},
											Value: nil,
										}},
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 8,
										Line:   239,
									},
									File:   "st_distance_test.flux",
									Source: "map(fn: (r) => ({\n        r with _st_distance: limitFloat(value: geo.ST_Distance(region: refPoint, geometry: {lat: r.lat, lon: r.lon}))\n    }))",
									Start: ast.Position{
										Column: 8,
										Line:   237,
									},
								},
							},
							Callee: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 11,
											Line:   237,
										},
										File:   "st_distance_test.flux",
										Source: "map",
										Start: ast.Position{
											Column: 8,
											Line:   237,
										},
									},
								},
								Name: "map",
							},
						},
					},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   240,
							},
							File:   "st_distance_test.flux",
							Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to see the train closing in\n    |> map(fn: (r) => ({\n        r with _st_distance: limitFloat(value: geo.ST_Distance(region: refPoint, geometry: {lat: r.lat, lon: r.lon}))\n    }))\n    |> drop(columns: [\"_start\", \"_stop\"])",
							Start: ast.Position{
								Column: 3,
								Line:   233,
							},
						},
					},
					Call: &ast.CallExpression{
						Arguments: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   240,
									},
									File:   "st_distance_test.flux",
									Source: "columns: [\"_start\", \"_stop\"]",
									Start: ast.Position{
										Column: 13,
										Line:   240,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 41,
											Line:   240,
										},
										File:   "st_distance_test.flux",
										Source: "columns: [\"_start\", \"_stop\"]",
										Start: ast.Position{
											Column: 13,
											Line:   240,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 20,
												Line:   240,
											},
											File:   "st_distance_test.flux",
											Source: "columns",
											Start: ast.Position{
												Column: 13,
												Line:   240,
											},
										},
									},
									Name: "columns",
								},
								Value: &ast.ArrayExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 41,
												Line:   240,
											},
											File:   "st_distance_test.flux",
											Source: "[\"_start\", \"_stop\"]",
											Start: ast.Position{
												Column: 22,
												Line:   240,
											},
										},
									},
									Elements: []ast.Expression{&ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 31,
													Line:   240,
												},
												File:   "st_distance_test.flux",
												Source: "\"_start\"",
												Start: ast.Position{
													Column: 23,
													Line:   240,
												},
											},
										},
										Value: "_start",
									}, &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 40,
													Line:   240,
												},
												File:   "st_distance_test.flux",
												Source: "\"_stop\"",
												Start: ast.Position{
													Column: 33,
													Line:   240,
												},
											},
										},
										Value: "_stop",
									}},
								},
							}},
							With: nil,
						}},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   240,
								},
								File:   "st_distance_test.flux",
								Source: "drop(columns: [\"_start\", \"_stop\"])",
								Start: ast.Position{
									Column: 8,
									Line:   240,
								},
							},
						},
						Callee: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 12,
										Line:   240,
									},
									File:   "st_distance_test.flux",
									Source: "drop",
									Start: ast.Position{
										Column: 8,
										Line:   240,
									},
								},
							},
							Name: "drop",
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 25,
								Line:   232,
							},
							File:   "st_distance_test.flux",
							Source: "table=<-",
							Start: ast.Position{
								Column: 17,
								Line:   232,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 22,
									Line:   232,
								},
								File:   "st_distance_test.flux",
								Source: "table",
								Start: ast.Position{
									Column: 17,
									Line:   232,
								},
							},
						},
						Name: "table",
					},
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 25,
								Line:   232,
							},
							File:   "st_distance_test.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 23,
								Line:   232,
							},
						},
					}},
				}},
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 100,
							Line:   242,
						},
						File:   "st_distance_test.flux",
						Source: "_stDistance = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stDistance})",
						Start: ast.Position{
							Column: 6,
							Line:   241,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 17,
								Line:   241,
							},
							File:   "st_distance_test.flux",
							Source: "_stDistance",
							Start: ast.Position{
								Column: 6,
								Line:   241,
							},
						},
					},
					Name: "_stDistance",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 100,
								Line:   242,
							},
							File:   "st_distance_test.flux",
							Source: "() =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stDistance})",
							Start: ast.Position{
								Column: 20,
								Line:   241,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 100,
									Line:   242,
								},
								File:   "st_distance_test.flux",
								Source: "({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stDistance})",
								Start: ast.Position{
									Column: 2,
									Line:   242,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 99,
										Line:   242,
									},
									File:   "st_distance_test.flux",
									Source: "{input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stDistance}",
									Start: ast.Position{
										Column: 3,
										Line:   242,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 43,
											Line:   242,
										},
										File:   "st_distance_test.flux",
										Source: "input: testing.loadStorage(csv: inData)",
										Start: ast.Position{
											Column: 4,
											Line:   242,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 9,
												Line:   242,
											},
											File:   "st_distance_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 4,
												Line:   242,
											},
										},
									},
									Name: "input",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   242,
												},
												File:   "st_distance_test.flux",
												Source: "csv: inData",
												Start: ast.Position{
													Column: 31,
													Line:   242,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 42,
														Line:   242,
													},
													File:   "st_distance_test.flux",
													Source: "csv: inData",
													Start: ast.Position{
														Column: 31,
														Line:   242,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 34,
															Line:   242,
														},
														File:   "st_distance_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 31,
															Line:   242,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 42,
															Line:   242,
														},
														File:   "st_distance_test.flux",
														Source: "inData",
														Start: ast.Position{
															Column: 36,
															Line:   242,
														},
													},
												},
												Name: "inData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 43,
												Line:   242,
											},
											File:   "st_distance_test.flux",
											Source: "testing.loadStorage(csv: inData)",
											Start: ast.Position{
												Column: 11,
												Line:   242,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   242,
												},
												File:   "st_distance_test.flux",
												Source: "testing.loadStorage",
												Start: ast.Position{
													Column: 11,
													Line:   242,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   242,
													},
													File:   "st_distance_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 11,
														Line:   242,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 30,
														Line:   242,
													},
													File:   "st_distance_test.flux",
													Source: "loadStorage",
													Start: ast.Position{
														Column: 19,
														Line:   242,
													},
												},
											},
											Name: "loadStorage",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 80,
											Line:   242,
										},
										File:   "st_distance_test.flux",
										Source: "want: testing.loadMem(csv: outData)",
										Start: ast.Position{
											Column: 45,
											Line:   242,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 49,
												Line:   242,
											},
											File:   "st_distance_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 45,
												Line:   242,
											},
										},
									},
									Name: "want",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 79,
													Line:   242,
												},
												File:   "st_distance_test.flux",
												Source: "csv: outData",
												Start: ast.Position{
													Column: 67,
													Line:   242,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 79,
														Line:   242,
													},
													File:   "st_distance_test.flux",
													Source: "csv: outData",
													Start: ast.Position{
														Column: 67,
														Line:   242,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 70,
															Line:   242,
														},
														File:   "st_distance_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 67,
															Line:   242,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 79,
															Line:   242,
														},
														File:   "st_distance_test.flux",
														Source: "outData",
														Start: ast.Position{
															Column: 72,
															Line:   242,
														},
													},
												},
												Name: "outData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 80,
												Line:   242,
											},
											File:   "st_distance_test.flux",
											Source: "testing.loadMem(csv: outData)",
											Start: ast.Position{
												Column: 51,
												Line:   242,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   242,
												},
												File:   "st_distance_test.flux",
												Source: "testing.loadMem",
												Start: ast.Position{
													Column: 51,
													Line:   242,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 58,
														Line:   242,
													},
													File:   "st_distance_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 51,
														Line:   242,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 66,
														Line:   242,
													},
													File:   "st_distance_test.flux",
													Source: "loadMem",
													Start: ast.Position{
														Column: 59,
														Line:   242,
													},
												},
											},
											Name: "loadMem",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 98,
											Line:   242,
										},
										File:   "st_distance_test.flux",
										Source: "fn: t_stDistance",
										Start: ast.Position{
											Column: 82,
											Line:   242,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 84,
												Line:   242,
											},
											File:   "st_distance_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 82,
												Line:   242,
											},
										},
									},
									Name: "fn",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 98,
												Line:   242,
											},
											File:   "st_distance_test.flux",
											Source: "t_stDistance",
											Start: ast.Position{
												Column: 86,
												Line:   242,
											},
										},
									},
									Name: "t_stDistance",
								},
							}},
							With: nil,
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 100,
						Line:   242,
					},
					File:   "st_distance_test.flux",
					Source: "test _stDistance = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stDistance})",
					Start: ast.Position{
						Column: 1,
						Line:   241,
					},
				},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 26,
						Line:   3,
					},
					File:   "st_distance_test.flux",
					Source: "import \"experimental/geo\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 26,
							Line:   3,
						},
						File:   "st_distance_test.flux",
						Source: "\"experimental/geo\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "experimental/geo",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 32,
						Line:   4,
					},
					File:   "st_distance_test.flux",
					Source: "import \"influxdata/influxdb/v1\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 32,
							Line:   4,
						},
						File:   "st_distance_test.flux",
						Source: "\"influxdata/influxdb/v1\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "influxdata/influxdb/v1",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   5,
					},
					File:   "st_distance_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   5,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   5,
						},
						File:   "st_distance_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   5,
						},
					},
				},
				Value: "testing",
			},
		}},
		Metadata: "parser-type=rust",
		Name:     "st_distance_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   1,
					},
					File:   "st_distance_test.flux",
					Source: "package geo_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   1,
						},
						File:   "st_distance_test.flux",
						Source: "geo_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "geo_test",
			},
		},
	}, &ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 109,
					Line:   191,
				},
				File:   "st_dwithin_linestring_test.flux",
				Source: "package geo_test\n\nimport \"experimental/geo\"\nimport \"influxdata/influxdb/v1\"\nimport \"testing\"\n\noption now = () => (2030-01-01T00:00:00Z)\n\n// train closing to Manhattan\ninData = \"\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,0,2020-04-08T15:44:58Z,40.820317,lat,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,1,2020-04-08T16:19:27Z,40.745249,lat,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,2,2020-04-08T16:16:50Z,40.751085,lat,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,3,2020-04-08T16:15:59Z,40.748141,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,4,2020-04-08T16:16:16Z,40.748909,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,5,2020-04-08T16:14:32Z,40.743989,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,6,2020-04-08T16:14:49Z,40.745851,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,7,2020-04-08T16:18:18Z,40.748495,lat,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,8,2020-04-08T16:11:03Z,40.749543,lat,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,9,2020-04-08T16:10:46Z,40.750688,lat,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,10,2020-04-08T16:09:36Z,40.757106,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,11,2020-04-08T16:09:53Z,40.7565,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,12,2020-04-08T16:09:01Z,40.757895,lat,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,13,2020-04-08T16:08:19Z,40.759873,lat,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,14,2020-04-08T16:08:38Z,40.759128,lat,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,15,2020-04-08T16:07:43Z,40.762143,lat,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,16,2020-04-08T16:06:49Z,40.762709,lat,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,17,2020-04-08T16:06:31Z,40.762441,lat,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,18,2020-04-08T16:06:11Z,40.762373,lat,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,19,2020-04-08T16:03:54Z,40.76117,lat,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,20,2020-04-08T16:04:28Z,40.761653,lat,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,21,2020-04-08T16:05:46Z,40.761908,lat,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,22,2020-04-08T16:10:29Z,40.753279,lat,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,23,2020-04-08T16:03:36Z,40.761241,lat,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,24,2020-04-08T16:02:33Z,40.761443,lat,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,25,2020-04-08T16:01:55Z,40.761878,lat,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,26,2020-04-08T15:59:24Z,40.763356,lat,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,27,2020-04-08T15:45:33Z,40.815413,lat,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,28,2020-04-08T15:45:51Z,40.814096,lat,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,29,2020-04-08T15:46:12Z,40.810699,lat,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,30,2020-04-08T15:47:45Z,40.808517,lat,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,31,2020-04-08T15:48:04Z,40.806882,lat,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,32,2020-04-08T15:49:01Z,40.800397,lat,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,33,2020-04-08T15:49:22Z,40.796724,lat,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,34,2020-04-08T15:50:44Z,40.794998,lat,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,35,2020-04-08T15:53:56Z,40.786038,lat,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,36,2020-04-08T15:52:38Z,40.787216,lat,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,37,2020-04-08T15:52:16Z,40.788413,lat,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,38,2020-04-08T15:51:55Z,40.789185,lat,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,39,2020-04-08T15:51:20Z,40.791541,lat,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,40,2020-04-08T15:51:37Z,40.791009,lat,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,41,2020-04-08T15:51:03Z,40.793905,lat,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,42,2020-04-08T15:54:57Z,40.775044,lat,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,43,2020-04-08T15:55:54Z,40.773334,lat,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,44,2020-04-08T15:56:13Z,40.772144,lat,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,45,2020-04-08T15:56:33Z,40.770953,lat,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,46,2020-04-08T15:58:10Z,40.76594,lat,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,47,2020-04-08T15:56:53Z,40.768069,lat,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,48,2020-04-08T15:57:52Z,40.76661,lat,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n,,49,2020-04-08T15:44:58Z,-73.68691,lon,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,50,2020-04-08T16:19:27Z,-73.940563,lon,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,51,2020-04-08T16:16:50Z,-73.912119,lon,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,52,2020-04-08T16:15:59Z,-73.905367,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,53,2020-04-08T16:16:16Z,-73.906398,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,54,2020-04-08T16:14:32Z,-73.900815,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,55,2020-04-08T16:14:49Z,-73.902975,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,56,2020-04-08T16:18:18Z,-73.927597,lon,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,57,2020-04-08T16:11:03Z,-73.852242,lon,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,58,2020-04-08T16:10:46Z,-73.848962,lon,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,59,2020-04-08T16:09:36Z,-73.833095,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,60,2020-04-08T16:09:53Z,-73.834298,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,61,2020-04-08T16:09:01Z,-73.831347,lon,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,62,2020-04-08T16:08:19Z,-73.826087,lon,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,63,2020-04-08T16:08:38Z,-73.828799,lon,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,64,2020-04-08T16:07:43Z,-73.817956,lon,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,65,2020-04-08T16:06:49Z,-73.814539,lon,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,66,2020-04-08T16:06:31Z,-73.810154,lon,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,67,2020-04-08T16:06:11Z,-73.809437,lon,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,68,2020-04-08T16:03:54Z,-73.795812,lon,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,69,2020-04-08T16:04:28Z,-73.801766,lon,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,70,2020-04-08T16:05:46Z,-73.804421,lon,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,71,2020-04-08T16:10:29Z,-73.841791,lon,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,72,2020-04-08T16:03:36Z,-73.792932,lon,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,73,2020-04-08T16:02:33Z,-73.789959,lon,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,74,2020-04-08T16:01:55Z,-73.785035,lon,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,75,2020-04-08T15:59:24Z,-73.769272,lon,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,76,2020-04-08T15:45:33Z,-73.690054,lon,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,77,2020-04-08T15:45:51Z,-73.693214,lon,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,78,2020-04-08T15:46:12Z,-73.695214,lon,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,79,2020-04-08T15:47:45Z,-73.695594,lon,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,80,2020-04-08T15:48:04Z,-73.695858,lon,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,81,2020-04-08T15:49:01Z,-73.695023,lon,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,82,2020-04-08T15:49:22Z,-73.699899,lon,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,83,2020-04-08T15:50:44Z,-73.702982,lon,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,84,2020-04-08T15:53:56Z,-73.72924,lon,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,85,2020-04-08T15:52:38Z,-73.7261,lon,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,86,2020-04-08T15:52:16Z,-73.721973,lon,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,87,2020-04-08T15:51:55Z,-73.720059,lon,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,88,2020-04-08T15:51:20Z,-73.713571,lon,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,89,2020-04-08T15:51:37Z,-73.715622,lon,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,90,2020-04-08T15:51:03Z,-73.705485,lon,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,91,2020-04-08T15:54:57Z,-73.740647,lon,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,92,2020-04-08T15:55:54Z,-73.742812,lon,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,93,2020-04-08T15:56:13Z,-73.74431,lon,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,94,2020-04-08T15:56:33Z,-73.745805,lon,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,95,2020-04-08T15:58:10Z,-73.752465,lon,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,96,2020-04-08T15:56:53Z,-73.749413,lon,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,97,2020-04-08T15:57:52Z,-73.751322,lon,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,98,2020-04-08T15:44:58Z,1586304000,tid,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,99,2020-04-08T16:19:27Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,100,2020-04-08T16:16:50Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,101,2020-04-08T16:15:59Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,102,2020-04-08T16:16:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,103,2020-04-08T16:14:32Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,104,2020-04-08T16:14:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,105,2020-04-08T16:18:18Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,106,2020-04-08T16:11:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,107,2020-04-08T16:10:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,108,2020-04-08T16:09:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,109,2020-04-08T16:09:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,110,2020-04-08T16:09:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,111,2020-04-08T16:08:19Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,112,2020-04-08T16:08:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,113,2020-04-08T16:07:43Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,114,2020-04-08T16:06:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,115,2020-04-08T16:06:31Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,116,2020-04-08T16:06:11Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,117,2020-04-08T16:03:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,118,2020-04-08T16:04:28Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,119,2020-04-08T16:05:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,120,2020-04-08T16:10:29Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,121,2020-04-08T16:03:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,122,2020-04-08T16:02:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,123,2020-04-08T16:01:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,124,2020-04-08T15:59:24Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,125,2020-04-08T15:45:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,126,2020-04-08T15:45:51Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,127,2020-04-08T15:46:12Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,128,2020-04-08T15:47:45Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,129,2020-04-08T15:48:04Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,130,2020-04-08T15:49:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,131,2020-04-08T15:49:22Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,132,2020-04-08T15:50:44Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,133,2020-04-08T15:53:56Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,134,2020-04-08T15:52:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,135,2020-04-08T15:52:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,136,2020-04-08T15:51:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,137,2020-04-08T15:51:20Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,138,2020-04-08T15:51:37Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,139,2020-04-08T15:51:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,140,2020-04-08T15:54:57Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,141,2020-04-08T15:55:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,142,2020-04-08T15:56:13Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,143,2020-04-08T15:56:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,144,2020-04-08T15:58:10Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,145,2020-04-08T15:56:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,146,2020-04-08T15:57:52Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\"\n\noutData = \"\n#group,false,false,false,true,false,true\n#datatype,string,long,boolean,string,string,string\n#default,_result,,,,,\n,result,table,_st_dwithin,id,st_linestring,trip_id\n,,0,true,GO506_20_6431,\\\"-73.68691 40.820317, -73.690054 40.815413, -73.693214 40.814096, -73.695214 40.810699, -73.695594 40.808517, -73.695858 40.806882, -73.695023 40.800397, -73.699899 40.796724, -73.702982 40.794998, -73.705485 40.793905, -73.713571 40.791541, -73.715622 40.791009, -73.720059 40.789185, -73.721973 40.788413, -73.7261 40.787216, -73.72924 40.786038, -73.740647 40.775044, -73.742812 40.773334, -73.74431 40.772144, -73.745805 40.770953, -73.749413 40.768069, -73.751322 40.76661, -73.752465 40.76594, -73.769272 40.763356, -73.785035 40.761878, -73.789959 40.761443, -73.792932 40.761241, -73.795812 40.76117, -73.801766 40.761653, -73.804421 40.761908, -73.809437 40.762373, -73.810154 40.762441, -73.814539 40.762709, -73.817956 40.762143, -73.826087 40.759873, -73.828799 40.759128, -73.831347 40.757895, -73.833095 40.757106, -73.834298 40.7565, -73.841791 40.753279, -73.848962 40.750688, -73.852242 40.749543, -73.900815 40.743989, -73.902975 40.745851, -73.905367 40.748141, -73.906398 40.748909, -73.912119 40.751085, -73.927597 40.748495, -73.940563 40.745249\\\",GO506_20_6431\n\"\n\n// reference point (Statue of Liberty)\nrefPoint = {lat: 40.6892, lon: -74.0445}\n\nt_stDWithinLinestring = (table=<-) =>\n  table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to see the train closing in\n    |> geo.ST_LineString()\n    |> map(fn: (r) => ({\n        r with _st_dwithin: geo.ST_DWithin(region: refPoint, geometry: {linestring: r.st_linestring}, distance: 20.0)\n    }))\n    |> drop(columns: [\"_start\", \"_stop\"])\ntest _stDWithinLinestring = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stDWithinLinestring})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   7,
						},
						File:   "st_dwithin_linestring_test.flux",
						Source: "now = () => (2030-01-01T00:00:00Z)",
						Start: ast.Position{
							Column: 8,
							Line:   7,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   7,
							},
							File:   "st_dwithin_linestring_test.flux",
							Source: "now",
							Start: ast.Position{
								Column: 8,
								Line:   7,
							},
						},
					},
					Name: "now",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   7,
							},
							File:   "st_dwithin_linestring_test.flux",
							Source: "() => (2030-01-01T00:00:00Z)",
							Start: ast.Position{
								Column: 14,
								Line:   7,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   7,
								},
								File:   "st_dwithin_linestring_test.flux",
								Source: "(2030-01-01T00:00:00Z)",
								Start: ast.Position{
									Column: 20,
									Line:   7,
								},
							},
						},
						Expression: &ast.DateTimeLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   7,
									},
									File:   "st_dwithin_linestring_test.flux",
									Source: "2030-01-01T00:00:00Z",
									Start: ast.Position{
										Column: 21,
										Line:   7,
									},
								},
							},
							Value: parser.MustParseTime("2030-01-01T00:00:00Z"),
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   7,
					},
					File:   "st_dwithin_linestring_test.flux",
					Source: "option now = () => (2030-01-01T00:00:00Z)",
					Start: ast.Position{
						Column: 1,
						Line:   7,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   167,
					},
					File:   "st_dwithin_linestring_test.flux",
					Source: "inData = \"\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,0,2020-04-08T15:44:58Z,40.820317,lat,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,1,2020-04-08T16:19:27Z,40.745249,lat,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,2,2020-04-08T16:16:50Z,40.751085,lat,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,3,2020-04-08T16:15:59Z,40.748141,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,4,2020-04-08T16:16:16Z,40.748909,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,5,2020-04-08T16:14:32Z,40.743989,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,6,2020-04-08T16:14:49Z,40.745851,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,7,2020-04-08T16:18:18Z,40.748495,lat,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,8,2020-04-08T16:11:03Z,40.749543,lat,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,9,2020-04-08T16:10:46Z,40.750688,lat,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,10,2020-04-08T16:09:36Z,40.757106,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,11,2020-04-08T16:09:53Z,40.7565,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,12,2020-04-08T16:09:01Z,40.757895,lat,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,13,2020-04-08T16:08:19Z,40.759873,lat,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,14,2020-04-08T16:08:38Z,40.759128,lat,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,15,2020-04-08T16:07:43Z,40.762143,lat,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,16,2020-04-08T16:06:49Z,40.762709,lat,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,17,2020-04-08T16:06:31Z,40.762441,lat,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,18,2020-04-08T16:06:11Z,40.762373,lat,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,19,2020-04-08T16:03:54Z,40.76117,lat,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,20,2020-04-08T16:04:28Z,40.761653,lat,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,21,2020-04-08T16:05:46Z,40.761908,lat,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,22,2020-04-08T16:10:29Z,40.753279,lat,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,23,2020-04-08T16:03:36Z,40.761241,lat,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,24,2020-04-08T16:02:33Z,40.761443,lat,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,25,2020-04-08T16:01:55Z,40.761878,lat,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,26,2020-04-08T15:59:24Z,40.763356,lat,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,27,2020-04-08T15:45:33Z,40.815413,lat,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,28,2020-04-08T15:45:51Z,40.814096,lat,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,29,2020-04-08T15:46:12Z,40.810699,lat,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,30,2020-04-08T15:47:45Z,40.808517,lat,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,31,2020-04-08T15:48:04Z,40.806882,lat,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,32,2020-04-08T15:49:01Z,40.800397,lat,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,33,2020-04-08T15:49:22Z,40.796724,lat,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,34,2020-04-08T15:50:44Z,40.794998,lat,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,35,2020-04-08T15:53:56Z,40.786038,lat,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,36,2020-04-08T15:52:38Z,40.787216,lat,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,37,2020-04-08T15:52:16Z,40.788413,lat,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,38,2020-04-08T15:51:55Z,40.789185,lat,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,39,2020-04-08T15:51:20Z,40.791541,lat,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,40,2020-04-08T15:51:37Z,40.791009,lat,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,41,2020-04-08T15:51:03Z,40.793905,lat,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,42,2020-04-08T15:54:57Z,40.775044,lat,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,43,2020-04-08T15:55:54Z,40.773334,lat,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,44,2020-04-08T15:56:13Z,40.772144,lat,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,45,2020-04-08T15:56:33Z,40.770953,lat,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,46,2020-04-08T15:58:10Z,40.76594,lat,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,47,2020-04-08T15:56:53Z,40.768069,lat,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,48,2020-04-08T15:57:52Z,40.76661,lat,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n,,49,2020-04-08T15:44:58Z,-73.68691,lon,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,50,2020-04-08T16:19:27Z,-73.940563,lon,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,51,2020-04-08T16:16:50Z,-73.912119,lon,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,52,2020-04-08T16:15:59Z,-73.905367,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,53,2020-04-08T16:16:16Z,-73.906398,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,54,2020-04-08T16:14:32Z,-73.900815,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,55,2020-04-08T16:14:49Z,-73.902975,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,56,2020-04-08T16:18:18Z,-73.927597,lon,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,57,2020-04-08T16:11:03Z,-73.852242,lon,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,58,2020-04-08T16:10:46Z,-73.848962,lon,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,59,2020-04-08T16:09:36Z,-73.833095,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,60,2020-04-08T16:09:53Z,-73.834298,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,61,2020-04-08T16:09:01Z,-73.831347,lon,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,62,2020-04-08T16:08:19Z,-73.826087,lon,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,63,2020-04-08T16:08:38Z,-73.828799,lon,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,64,2020-04-08T16:07:43Z,-73.817956,lon,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,65,2020-04-08T16:06:49Z,-73.814539,lon,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,66,2020-04-08T16:06:31Z,-73.810154,lon,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,67,2020-04-08T16:06:11Z,-73.809437,lon,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,68,2020-04-08T16:03:54Z,-73.795812,lon,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,69,2020-04-08T16:04:28Z,-73.801766,lon,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,70,2020-04-08T16:05:46Z,-73.804421,lon,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,71,2020-04-08T16:10:29Z,-73.841791,lon,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,72,2020-04-08T16:03:36Z,-73.792932,lon,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,73,2020-04-08T16:02:33Z,-73.789959,lon,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,74,2020-04-08T16:01:55Z,-73.785035,lon,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,75,2020-04-08T15:59:24Z,-73.769272,lon,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,76,2020-04-08T15:45:33Z,-73.690054,lon,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,77,2020-04-08T15:45:51Z,-73.693214,lon,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,78,2020-04-08T15:46:12Z,-73.695214,lon,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,79,2020-04-08T15:47:45Z,-73.695594,lon,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,80,2020-04-08T15:48:04Z,-73.695858,lon,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,81,2020-04-08T15:49:01Z,-73.695023,lon,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,82,2020-04-08T15:49:22Z,-73.699899,lon,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,83,2020-04-08T15:50:44Z,-73.702982,lon,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,84,2020-04-08T15:53:56Z,-73.72924,lon,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,85,2020-04-08T15:52:38Z,-73.7261,lon,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,86,2020-04-08T15:52:16Z,-73.721973,lon,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,87,2020-04-08T15:51:55Z,-73.720059,lon,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,88,2020-04-08T15:51:20Z,-73.713571,lon,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,89,2020-04-08T15:51:37Z,-73.715622,lon,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,90,2020-04-08T15:51:03Z,-73.705485,lon,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,91,2020-04-08T15:54:57Z,-73.740647,lon,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,92,2020-04-08T15:55:54Z,-73.742812,lon,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,93,2020-04-08T15:56:13Z,-73.74431,lon,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,94,2020-04-08T15:56:33Z,-73.745805,lon,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,95,2020-04-08T15:58:10Z,-73.752465,lon,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,96,2020-04-08T15:56:53Z,-73.749413,lon,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,97,2020-04-08T15:57:52Z,-73.751322,lon,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,98,2020-04-08T15:44:58Z,1586304000,tid,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,99,2020-04-08T16:19:27Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,100,2020-04-08T16:16:50Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,101,2020-04-08T16:15:59Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,102,2020-04-08T16:16:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,103,2020-04-08T16:14:32Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,104,2020-04-08T16:14:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,105,2020-04-08T16:18:18Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,106,2020-04-08T16:11:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,107,2020-04-08T16:10:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,108,2020-04-08T16:09:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,109,2020-04-08T16:09:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,110,2020-04-08T16:09:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,111,2020-04-08T16:08:19Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,112,2020-04-08T16:08:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,113,2020-04-08T16:07:43Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,114,2020-04-08T16:06:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,115,2020-04-08T16:06:31Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,116,2020-04-08T16:06:11Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,117,2020-04-08T16:03:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,118,2020-04-08T16:04:28Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,119,2020-04-08T16:05:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,120,2020-04-08T16:10:29Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,121,2020-04-08T16:03:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,122,2020-04-08T16:02:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,123,2020-04-08T16:01:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,124,2020-04-08T15:59:24Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,125,2020-04-08T15:45:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,126,2020-04-08T15:45:51Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,127,2020-04-08T15:46:12Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,128,2020-04-08T15:47:45Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,129,2020-04-08T15:48:04Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,130,2020-04-08T15:49:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,131,2020-04-08T15:49:22Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,132,2020-04-08T15:50:44Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,133,2020-04-08T15:53:56Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,134,2020-04-08T15:52:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,135,2020-04-08T15:52:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,136,2020-04-08T15:51:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,137,2020-04-08T15:51:20Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,138,2020-04-08T15:51:37Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,139,2020-04-08T15:51:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,140,2020-04-08T15:54:57Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,141,2020-04-08T15:55:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,142,2020-04-08T15:56:13Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,143,2020-04-08T15:56:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,144,2020-04-08T15:58:10Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,145,2020-04-08T15:56:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,146,2020-04-08T15:57:52Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   10,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 7,
							Line:   10,
						},
						File:   "st_dwithin_linestring_test.flux",
						Source: "inData",
						Start: ast.Position{
							Column: 1,
							Line:   10,
						},
					},
				},
				Name: "inData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   167,
						},
						File:   "st_dwithin_linestring_test.flux",
						Source: "\"\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,0,2020-04-08T15:44:58Z,40.820317,lat,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,1,2020-04-08T16:19:27Z,40.745249,lat,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,2,2020-04-08T16:16:50Z,40.751085,lat,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,3,2020-04-08T16:15:59Z,40.748141,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,4,2020-04-08T16:16:16Z,40.748909,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,5,2020-04-08T16:14:32Z,40.743989,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,6,2020-04-08T16:14:49Z,40.745851,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,7,2020-04-08T16:18:18Z,40.748495,lat,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,8,2020-04-08T16:11:03Z,40.749543,lat,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,9,2020-04-08T16:10:46Z,40.750688,lat,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,10,2020-04-08T16:09:36Z,40.757106,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,11,2020-04-08T16:09:53Z,40.7565,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,12,2020-04-08T16:09:01Z,40.757895,lat,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,13,2020-04-08T16:08:19Z,40.759873,lat,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,14,2020-04-08T16:08:38Z,40.759128,lat,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,15,2020-04-08T16:07:43Z,40.762143,lat,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,16,2020-04-08T16:06:49Z,40.762709,lat,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,17,2020-04-08T16:06:31Z,40.762441,lat,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,18,2020-04-08T16:06:11Z,40.762373,lat,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,19,2020-04-08T16:03:54Z,40.76117,lat,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,20,2020-04-08T16:04:28Z,40.761653,lat,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,21,2020-04-08T16:05:46Z,40.761908,lat,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,22,2020-04-08T16:10:29Z,40.753279,lat,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,23,2020-04-08T16:03:36Z,40.761241,lat,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,24,2020-04-08T16:02:33Z,40.761443,lat,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,25,2020-04-08T16:01:55Z,40.761878,lat,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,26,2020-04-08T15:59:24Z,40.763356,lat,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,27,2020-04-08T15:45:33Z,40.815413,lat,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,28,2020-04-08T15:45:51Z,40.814096,lat,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,29,2020-04-08T15:46:12Z,40.810699,lat,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,30,2020-04-08T15:47:45Z,40.808517,lat,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,31,2020-04-08T15:48:04Z,40.806882,lat,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,32,2020-04-08T15:49:01Z,40.800397,lat,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,33,2020-04-08T15:49:22Z,40.796724,lat,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,34,2020-04-08T15:50:44Z,40.794998,lat,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,35,2020-04-08T15:53:56Z,40.786038,lat,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,36,2020-04-08T15:52:38Z,40.787216,lat,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,37,2020-04-08T15:52:16Z,40.788413,lat,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,38,2020-04-08T15:51:55Z,40.789185,lat,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,39,2020-04-08T15:51:20Z,40.791541,lat,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,40,2020-04-08T15:51:37Z,40.791009,lat,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,41,2020-04-08T15:51:03Z,40.793905,lat,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,42,2020-04-08T15:54:57Z,40.775044,lat,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,43,2020-04-08T15:55:54Z,40.773334,lat,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,44,2020-04-08T15:56:13Z,40.772144,lat,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,45,2020-04-08T15:56:33Z,40.770953,lat,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,46,2020-04-08T15:58:10Z,40.76594,lat,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,47,2020-04-08T15:56:53Z,40.768069,lat,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,48,2020-04-08T15:57:52Z,40.76661,lat,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n,,49,2020-04-08T15:44:58Z,-73.68691,lon,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,50,2020-04-08T16:19:27Z,-73.940563,lon,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,51,2020-04-08T16:16:50Z,-73.912119,lon,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,52,2020-04-08T16:15:59Z,-73.905367,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,53,2020-04-08T16:16:16Z,-73.906398,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,54,2020-04-08T16:14:32Z,-73.900815,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,55,2020-04-08T16:14:49Z,-73.902975,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,56,2020-04-08T16:18:18Z,-73.927597,lon,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,57,2020-04-08T16:11:03Z,-73.852242,lon,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,58,2020-04-08T16:10:46Z,-73.848962,lon,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,59,2020-04-08T16:09:36Z,-73.833095,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,60,2020-04-08T16:09:53Z,-73.834298,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,61,2020-04-08T16:09:01Z,-73.831347,lon,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,62,2020-04-08T16:08:19Z,-73.826087,lon,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,63,2020-04-08T16:08:38Z,-73.828799,lon,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,64,2020-04-08T16:07:43Z,-73.817956,lon,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,65,2020-04-08T16:06:49Z,-73.814539,lon,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,66,2020-04-08T16:06:31Z,-73.810154,lon,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,67,2020-04-08T16:06:11Z,-73.809437,lon,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,68,2020-04-08T16:03:54Z,-73.795812,lon,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,69,2020-04-08T16:04:28Z,-73.801766,lon,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,70,2020-04-08T16:05:46Z,-73.804421,lon,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,71,2020-04-08T16:10:29Z,-73.841791,lon,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,72,2020-04-08T16:03:36Z,-73.792932,lon,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,73,2020-04-08T16:02:33Z,-73.789959,lon,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,74,2020-04-08T16:01:55Z,-73.785035,lon,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,75,2020-04-08T15:59:24Z,-73.769272,lon,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,76,2020-04-08T15:45:33Z,-73.690054,lon,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,77,2020-04-08T15:45:51Z,-73.693214,lon,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,78,2020-04-08T15:46:12Z,-73.695214,lon,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,79,2020-04-08T15:47:45Z,-73.695594,lon,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,80,2020-04-08T15:48:04Z,-73.695858,lon,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,81,2020-04-08T15:49:01Z,-73.695023,lon,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,82,2020-04-08T15:49:22Z,-73.699899,lon,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,83,2020-04-08T15:50:44Z,-73.702982,lon,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,84,2020-04-08T15:53:56Z,-73.72924,lon,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,85,2020-04-08T15:52:38Z,-73.7261,lon,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,86,2020-04-08T15:52:16Z,-73.721973,lon,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,87,2020-04-08T15:51:55Z,-73.720059,lon,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,88,2020-04-08T15:51:20Z,-73.713571,lon,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,89,2020-04-08T15:51:37Z,-73.715622,lon,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,90,2020-04-08T15:51:03Z,-73.705485,lon,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,91,2020-04-08T15:54:57Z,-73.740647,lon,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,92,2020-04-08T15:55:54Z,-73.742812,lon,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,93,2020-04-08T15:56:13Z,-73.74431,lon,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,94,2020-04-08T15:56:33Z,-73.745805,lon,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,95,2020-04-08T15:58:10Z,-73.752465,lon,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,96,2020-04-08T15:56:53Z,-73.749413,lon,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,97,2020-04-08T15:57:52Z,-73.751322,lon,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,98,2020-04-08T15:44:58Z,1586304000,tid,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,99,2020-04-08T16:19:27Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,100,2020-04-08T16:16:50Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,101,2020-04-08T16:15:59Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,102,2020-04-08T16:16:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,103,2020-04-08T16:14:32Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,104,2020-04-08T16:14:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,105,2020-04-08T16:18:18Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,106,2020-04-08T16:11:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,107,2020-04-08T16:10:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,108,2020-04-08T16:09:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,109,2020-04-08T16:09:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,110,2020-04-08T16:09:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,111,2020-04-08T16:08:19Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,112,2020-04-08T16:08:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,113,2020-04-08T16:07:43Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,114,2020-04-08T16:06:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,115,2020-04-08T16:06:31Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,116,2020-04-08T16:06:11Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,117,2020-04-08T16:03:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,118,2020-04-08T16:04:28Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,119,2020-04-08T16:05:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,120,2020-04-08T16:10:29Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,121,2020-04-08T16:03:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,122,2020-04-08T16:02:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,123,2020-04-08T16:01:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,124,2020-04-08T15:59:24Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,125,2020-04-08T15:45:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,126,2020-04-08T15:45:51Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,127,2020-04-08T15:46:12Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,128,2020-04-08T15:47:45Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,129,2020-04-08T15:48:04Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,130,2020-04-08T15:49:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,131,2020-04-08T15:49:22Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,132,2020-04-08T15:50:44Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,133,2020-04-08T15:53:56Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,134,2020-04-08T15:52:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,135,2020-04-08T15:52:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,136,2020-04-08T15:51:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,137,2020-04-08T15:51:20Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,138,2020-04-08T15:51:37Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,139,2020-04-08T15:51:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,140,2020-04-08T15:54:57Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,141,2020-04-08T15:55:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,142,2020-04-08T15:56:13Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,143,2020-04-08T15:56:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,144,2020-04-08T15:58:10Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,145,2020-04-08T15:56:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,146,2020-04-08T15:57:52Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\"",
						Start: ast.Position{
							Column: 10,
							Line:   10,
						},
					},
				},
				Value: "\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,0,2020-04-08T15:44:58Z,40.820317,lat,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,1,2020-04-08T16:19:27Z,40.745249,lat,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,2,2020-04-08T16:16:50Z,40.751085,lat,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,3,2020-04-08T16:15:59Z,40.748141,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,4,2020-04-08T16:16:16Z,40.748909,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,5,2020-04-08T16:14:32Z,40.743989,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,6,2020-04-08T16:14:49Z,40.745851,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,7,2020-04-08T16:18:18Z,40.748495,lat,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,8,2020-04-08T16:11:03Z,40.749543,lat,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,9,2020-04-08T16:10:46Z,40.750688,lat,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,10,2020-04-08T16:09:36Z,40.757106,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,11,2020-04-08T16:09:53Z,40.7565,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,12,2020-04-08T16:09:01Z,40.757895,lat,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,13,2020-04-08T16:08:19Z,40.759873,lat,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,14,2020-04-08T16:08:38Z,40.759128,lat,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,15,2020-04-08T16:07:43Z,40.762143,lat,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,16,2020-04-08T16:06:49Z,40.762709,lat,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,17,2020-04-08T16:06:31Z,40.762441,lat,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,18,2020-04-08T16:06:11Z,40.762373,lat,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,19,2020-04-08T16:03:54Z,40.76117,lat,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,20,2020-04-08T16:04:28Z,40.761653,lat,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,21,2020-04-08T16:05:46Z,40.761908,lat,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,22,2020-04-08T16:10:29Z,40.753279,lat,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,23,2020-04-08T16:03:36Z,40.761241,lat,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,24,2020-04-08T16:02:33Z,40.761443,lat,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,25,2020-04-08T16:01:55Z,40.761878,lat,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,26,2020-04-08T15:59:24Z,40.763356,lat,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,27,2020-04-08T15:45:33Z,40.815413,lat,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,28,2020-04-08T15:45:51Z,40.814096,lat,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,29,2020-04-08T15:46:12Z,40.810699,lat,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,30,2020-04-08T15:47:45Z,40.808517,lat,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,31,2020-04-08T15:48:04Z,40.806882,lat,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,32,2020-04-08T15:49:01Z,40.800397,lat,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,33,2020-04-08T15:49:22Z,40.796724,lat,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,34,2020-04-08T15:50:44Z,40.794998,lat,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,35,2020-04-08T15:53:56Z,40.786038,lat,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,36,2020-04-08T15:52:38Z,40.787216,lat,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,37,2020-04-08T15:52:16Z,40.788413,lat,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,38,2020-04-08T15:51:55Z,40.789185,lat,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,39,2020-04-08T15:51:20Z,40.791541,lat,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,40,2020-04-08T15:51:37Z,40.791009,lat,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,41,2020-04-08T15:51:03Z,40.793905,lat,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,42,2020-04-08T15:54:57Z,40.775044,lat,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,43,2020-04-08T15:55:54Z,40.773334,lat,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,44,2020-04-08T15:56:13Z,40.772144,lat,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,45,2020-04-08T15:56:33Z,40.770953,lat,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,46,2020-04-08T15:58:10Z,40.76594,lat,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,47,2020-04-08T15:56:53Z,40.768069,lat,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,48,2020-04-08T15:57:52Z,40.76661,lat,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n,,49,2020-04-08T15:44:58Z,-73.68691,lon,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,50,2020-04-08T16:19:27Z,-73.940563,lon,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,51,2020-04-08T16:16:50Z,-73.912119,lon,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,52,2020-04-08T16:15:59Z,-73.905367,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,53,2020-04-08T16:16:16Z,-73.906398,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,54,2020-04-08T16:14:32Z,-73.900815,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,55,2020-04-08T16:14:49Z,-73.902975,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,56,2020-04-08T16:18:18Z,-73.927597,lon,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,57,2020-04-08T16:11:03Z,-73.852242,lon,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,58,2020-04-08T16:10:46Z,-73.848962,lon,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,59,2020-04-08T16:09:36Z,-73.833095,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,60,2020-04-08T16:09:53Z,-73.834298,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,61,2020-04-08T16:09:01Z,-73.831347,lon,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,62,2020-04-08T16:08:19Z,-73.826087,lon,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,63,2020-04-08T16:08:38Z,-73.828799,lon,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,64,2020-04-08T16:07:43Z,-73.817956,lon,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,65,2020-04-08T16:06:49Z,-73.814539,lon,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,66,2020-04-08T16:06:31Z,-73.810154,lon,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,67,2020-04-08T16:06:11Z,-73.809437,lon,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,68,2020-04-08T16:03:54Z,-73.795812,lon,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,69,2020-04-08T16:04:28Z,-73.801766,lon,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,70,2020-04-08T16:05:46Z,-73.804421,lon,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,71,2020-04-08T16:10:29Z,-73.841791,lon,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,72,2020-04-08T16:03:36Z,-73.792932,lon,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,73,2020-04-08T16:02:33Z,-73.789959,lon,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,74,2020-04-08T16:01:55Z,-73.785035,lon,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,75,2020-04-08T15:59:24Z,-73.769272,lon,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,76,2020-04-08T15:45:33Z,-73.690054,lon,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,77,2020-04-08T15:45:51Z,-73.693214,lon,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,78,2020-04-08T15:46:12Z,-73.695214,lon,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,79,2020-04-08T15:47:45Z,-73.695594,lon,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,80,2020-04-08T15:48:04Z,-73.695858,lon,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,81,2020-04-08T15:49:01Z,-73.695023,lon,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,82,2020-04-08T15:49:22Z,-73.699899,lon,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,83,2020-04-08T15:50:44Z,-73.702982,lon,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,84,2020-04-08T15:53:56Z,-73.72924,lon,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,85,2020-04-08T15:52:38Z,-73.7261,lon,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,86,2020-04-08T15:52:16Z,-73.721973,lon,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,87,2020-04-08T15:51:55Z,-73.720059,lon,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,88,2020-04-08T15:51:20Z,-73.713571,lon,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,89,2020-04-08T15:51:37Z,-73.715622,lon,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,90,2020-04-08T15:51:03Z,-73.705485,lon,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,91,2020-04-08T15:54:57Z,-73.740647,lon,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,92,2020-04-08T15:55:54Z,-73.742812,lon,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,93,2020-04-08T15:56:13Z,-73.74431,lon,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,94,2020-04-08T15:56:33Z,-73.745805,lon,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,95,2020-04-08T15:58:10Z,-73.752465,lon,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,96,2020-04-08T15:56:53Z,-73.749413,lon,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,97,2020-04-08T15:57:52Z,-73.751322,lon,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,98,2020-04-08T15:44:58Z,1586304000,tid,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,99,2020-04-08T16:19:27Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,100,2020-04-08T16:16:50Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,101,2020-04-08T16:15:59Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,102,2020-04-08T16:16:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,103,2020-04-08T16:14:32Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,104,2020-04-08T16:14:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,105,2020-04-08T16:18:18Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,106,2020-04-08T16:11:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,107,2020-04-08T16:10:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,108,2020-04-08T16:09:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,109,2020-04-08T16:09:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,110,2020-04-08T16:09:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,111,2020-04-08T16:08:19Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,112,2020-04-08T16:08:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,113,2020-04-08T16:07:43Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,114,2020-04-08T16:06:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,115,2020-04-08T16:06:31Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,116,2020-04-08T16:06:11Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,117,2020-04-08T16:03:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,118,2020-04-08T16:04:28Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,119,2020-04-08T16:05:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,120,2020-04-08T16:10:29Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,121,2020-04-08T16:03:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,122,2020-04-08T16:02:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,123,2020-04-08T16:01:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,124,2020-04-08T15:59:24Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,125,2020-04-08T15:45:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,126,2020-04-08T15:45:51Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,127,2020-04-08T15:46:12Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,128,2020-04-08T15:47:45Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,129,2020-04-08T15:48:04Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,130,2020-04-08T15:49:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,131,2020-04-08T15:49:22Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,132,2020-04-08T15:50:44Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,133,2020-04-08T15:53:56Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,134,2020-04-08T15:52:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,135,2020-04-08T15:52:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,136,2020-04-08T15:51:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,137,2020-04-08T15:51:20Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,138,2020-04-08T15:51:37Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,139,2020-04-08T15:51:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,140,2020-04-08T15:54:57Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,141,2020-04-08T15:55:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,142,2020-04-08T15:56:13Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,143,2020-04-08T15:56:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,144,2020-04-08T15:58:10Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,145,2020-04-08T15:56:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,146,2020-04-08T15:57:52Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   175,
					},
					File:   "st_dwithin_linestring_test.flux",
					Source: "outData = \"\n#group,false,false,false,true,false,true\n#datatype,string,long,boolean,string,string,string\n#default,_result,,,,,\n,result,table,_st_dwithin,id,st_linestring,trip_id\n,,0,true,GO506_20_6431,\\\"-73.68691 40.820317, -73.690054 40.815413, -73.693214 40.814096, -73.695214 40.810699, -73.695594 40.808517, -73.695858 40.806882, -73.695023 40.800397, -73.699899 40.796724, -73.702982 40.794998, -73.705485 40.793905, -73.713571 40.791541, -73.715622 40.791009, -73.720059 40.789185, -73.721973 40.788413, -73.7261 40.787216, -73.72924 40.786038, -73.740647 40.775044, -73.742812 40.773334, -73.74431 40.772144, -73.745805 40.770953, -73.749413 40.768069, -73.751322 40.76661, -73.752465 40.76594, -73.769272 40.763356, -73.785035 40.761878, -73.789959 40.761443, -73.792932 40.761241, -73.795812 40.76117, -73.801766 40.761653, -73.804421 40.761908, -73.809437 40.762373, -73.810154 40.762441, -73.814539 40.762709, -73.817956 40.762143, -73.826087 40.759873, -73.828799 40.759128, -73.831347 40.757895, -73.833095 40.757106, -73.834298 40.7565, -73.841791 40.753279, -73.848962 40.750688, -73.852242 40.749543, -73.900815 40.743989, -73.902975 40.745851, -73.905367 40.748141, -73.906398 40.748909, -73.912119 40.751085, -73.927597 40.748495, -73.940563 40.745249\\\",GO506_20_6431\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   169,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 8,
							Line:   169,
						},
						File:   "st_dwithin_linestring_test.flux",
						Source: "outData",
						Start: ast.Position{
							Column: 1,
							Line:   169,
						},
					},
				},
				Name: "outData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   175,
						},
						File:   "st_dwithin_linestring_test.flux",
						Source: "\"\n#group,false,false,false,true,false,true\n#datatype,string,long,boolean,string,string,string\n#default,_result,,,,,\n,result,table,_st_dwithin,id,st_linestring,trip_id\n,,0,true,GO506_20_6431,\\\"-73.68691 40.820317, -73.690054 40.815413, -73.693214 40.814096, -73.695214 40.810699, -73.695594 40.808517, -73.695858 40.806882, -73.695023 40.800397, -73.699899 40.796724, -73.702982 40.794998, -73.705485 40.793905, -73.713571 40.791541, -73.715622 40.791009, -73.720059 40.789185, -73.721973 40.788413, -73.7261 40.787216, -73.72924 40.786038, -73.740647 40.775044, -73.742812 40.773334, -73.74431 40.772144, -73.745805 40.770953, -73.749413 40.768069, -73.751322 40.76661, -73.752465 40.76594, -73.769272 40.763356, -73.785035 40.761878, -73.789959 40.761443, -73.792932 40.761241, -73.795812 40.76117, -73.801766 40.761653, -73.804421 40.761908, -73.809437 40.762373, -73.810154 40.762441, -73.814539 40.762709, -73.817956 40.762143, -73.826087 40.759873, -73.828799 40.759128, -73.831347 40.757895, -73.833095 40.757106, -73.834298 40.7565, -73.841791 40.753279, -73.848962 40.750688, -73.852242 40.749543, -73.900815 40.743989, -73.902975 40.745851, -73.905367 40.748141, -73.906398 40.748909, -73.912119 40.751085, -73.927597 40.748495, -73.940563 40.745249\\\",GO506_20_6431\n\"",
						Start: ast.Position{
							Column: 11,
							Line:   169,
						},
					},
				},
				Value: "\n#group,false,false,false,true,false,true\n#datatype,string,long,boolean,string,string,string\n#default,_result,,,,,\n,result,table,_st_dwithin,id,st_linestring,trip_id\n,,0,true,GO506_20_6431,\"-73.68691 40.820317, -73.690054 40.815413, -73.693214 40.814096, -73.695214 40.810699, -73.695594 40.808517, -73.695858 40.806882, -73.695023 40.800397, -73.699899 40.796724, -73.702982 40.794998, -73.705485 40.793905, -73.713571 40.791541, -73.715622 40.791009, -73.720059 40.789185, -73.721973 40.788413, -73.7261 40.787216, -73.72924 40.786038, -73.740647 40.775044, -73.742812 40.773334, -73.74431 40.772144, -73.745805 40.770953, -73.749413 40.768069, -73.751322 40.76661, -73.752465 40.76594, -73.769272 40.763356, -73.785035 40.761878, -73.789959 40.761443, -73.792932 40.761241, -73.795812 40.76117, -73.801766 40.761653, -73.804421 40.761908, -73.809437 40.762373, -73.810154 40.762441, -73.814539 40.762709, -73.817956 40.762143, -73.826087 40.759873, -73.828799 40.759128, -73.831347 40.757895, -73.833095 40.757106, -73.834298 40.7565, -73.841791 40.753279, -73.848962 40.750688, -73.852242 40.749543, -73.900815 40.743989, -73.902975 40.745851, -73.905367 40.748141, -73.906398 40.748909, -73.912119 40.751085, -73.927597 40.748495, -73.940563 40.745249\",GO506_20_6431\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 41,
						Line:   178,
					},
					File:   "st_dwithin_linestring_test.flux",
					Source: "refPoint = {lat: 40.6892, lon: -74.0445}",
					Start: ast.Position{
						Column: 1,
						Line:   178,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 9,
							Line:   178,
						},
						File:   "st_dwithin_linestring_test.flux",
						Source: "refPoint",
						Start: ast.Position{
							Column: 1,
							Line:   178,
						},
					},
				},
				Name: "refPoint",
			},
			Init: &ast.ObjectExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 41,
							Line:   178,
						},
						File:   "st_dwithin_linestring_test.flux",
						Source: "{lat: 40.6892, lon: -74.0445}",
						Start: ast.Position{
							Column: 12,
							Line:   178,
						},
					},
				},
				Properties: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 25,
								Line:   178,
							},
							File:   "st_dwithin_linestring_test.flux",
							Source: "lat: 40.6892",
							Start: ast.Position{
								Column: 13,
								Line:   178,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 16,
									Line:   178,
								},
								File:   "st_dwithin_linestring_test.flux",
								Source: "lat",
								Start: ast.Position{
									Column: 13,
									Line:   178,
								},
							},
						},
						Name: "lat",
					},
					Value: &ast.FloatLiteral{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 25,
									Line:   178,
								},
								File:   "st_dwithin_linestring_test.flux",
								Source: "40.6892",
								Start: ast.Position{
									Column: 18,
									Line:   178,
								},
							},
						},
						Value: 40.6892,
					},
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 40,
								Line:   178,
							},
							File:   "st_dwithin_linestring_test.flux",
							Source: "lon: -74.0445",
							Start: ast.Position{
								Column: 27,
								Line:   178,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 30,
									Line:   178,
								},
								File:   "st_dwithin_linestring_test.flux",
								Source: "lon",
								Start: ast.Position{
									Column: 27,
									Line:   178,
								},
							},
						},
						Name: "lon",
					},
					Value: &ast.UnaryExpression{
						Argument: &ast.FloatLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 40,
										Line:   178,
									},
									File:   "st_dwithin_linestring_test.flux",
									Source: "74.0445",
									Start: ast.Position{
										Column: 33,
										Line:   178,
									},
								},
							},
							Value: 74.0445,
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 40,
									Line:   178,
								},
								File:   "st_dwithin_linestring_test.flux",
								Source: "-74.0445",
								Start: ast.Position{
									Column: 32,
									Line:   178,
								},
							},
						},
						Operator: 6,
					},
				}},
				With: nil,
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   189,
					},
					File:   "st_dwithin_linestring_test.flux",
					Source: "t_stDWithinLinestring = (table=<-) =>\n  table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to see the train closing in\n    |> geo.ST_LineString()\n    |> map(fn: (r) => ({\n        r with _st_dwithin: geo.ST_DWithin(region: refPoint, geometry: {linestring: r.st_linestring}, distance: 20.0)\n    }))\n    |> drop(columns: [\"_start\", \"_stop\"])",
					Start: ast.Position{
						Column: 1,
						Line:   180,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 22,
							Line:   180,
						},
						File:   "st_dwithin_linestring_test.flux",
						Source: "t_stDWithinLinestring",
						Start: ast.Position{
							Column: 1,
							Line:   180,
						},
					},
				},
				Name: "t_stDWithinLinestring",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   189,
						},
						File:   "st_dwithin_linestring_test.flux",
						Source: "(table=<-) =>\n  table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to see the train closing in\n    |> geo.ST_LineString()\n    |> map(fn: (r) => ({\n        r with _st_dwithin: geo.ST_DWithin(region: refPoint, geometry: {linestring: r.st_linestring}, distance: 20.0)\n    }))\n    |> drop(columns: [\"_start\", \"_stop\"])",
						Start: ast.Position{
							Column: 25,
							Line:   180,
						},
					},
				},
				Body: &ast.PipeExpression{
					Argument: &ast.PipeExpression{
						Argument: &ast.PipeExpression{
							Argument: &ast.PipeExpression{
								Argument: &ast.PipeExpression{
									Argument: &ast.PipeExpression{
										Argument: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 8,
														Line:   181,
													},
													File:   "st_dwithin_linestring_test.flux",
													Source: "table",
													Start: ast.Position{
														Column: 3,
														Line:   181,
													},
												},
											},
											Name: "table",
										},
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   182,
												},
												File:   "st_dwithin_linestring_test.flux",
												Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)",
												Start: ast.Position{
													Column: 3,
													Line:   181,
												},
											},
										},
										Call: &ast.CallExpression{
											Arguments: []ast.Expression{&ast.ObjectExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 41,
															Line:   182,
														},
														File:   "st_dwithin_linestring_test.flux",
														Source: "start: 2020-04-01T00:00:00Z",
														Start: ast.Position{
															Column: 14,
															Line:   182,
														},
													},
												},
												Properties: []*ast.Property{&ast.Property{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 41,
																Line:   182,
															},
															File:   "st_dwithin_linestring_test.flux",
															Source: "start: 2020-04-01T00:00:00Z",
															Start: ast.Position{
																Column: 14,
																Line:   182,
															},
														},
													},
													Key: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 19,
																	Line:   182,
																},
																File:   "st_dwithin_linestring_test.flux",
																Source: "start",
																Start: ast.Position{
																	Column: 14,
																	Line:   182,
																},
															},
														},
														Name: "start",
													},
													Value: &ast.DateTimeLiteral{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 41,
																	Line:   182,
																},
																File:   "st_dwithin_linestring_test.flux",
																Source: "2020-04-01T00:00:00Z",
																Start: ast.Position{
																	Column: 21,
																	Line:   182,
																},
															},
														},
														Value: parser.MustParseTime("2020-04-01T00:00:00Z"),
													},
												}},
												With: nil,
											}},
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 42,
														Line:   182,
													},
													File:   "st_dwithin_linestring_test.flux",
													Source: "range(start: 2020-04-01T00:00:00Z)",
													Start: ast.Position{
														Column: 8,
														Line:   182,
													},
												},
											},
											Callee: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 13,
															Line:   182,
														},
														File:   "st_dwithin_linestring_test.flux",
														Source: "range",
														Start: ast.Position{
															Column: 8,
															Line:   182,
														},
													},
												},
												Name: "range",
											},
										},
									},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 25,
												Line:   183,
											},
											File:   "st_dwithin_linestring_test.flux",
											Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()",
											Start: ast.Position{
												Column: 3,
												Line:   181,
											},
										},
									},
									Call: &ast.CallExpression{
										Arguments: nil,
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 25,
													Line:   183,
												},
												File:   "st_dwithin_linestring_test.flux",
												Source: "v1.fieldsAsCols()",
												Start: ast.Position{
													Column: 8,
													Line:   183,
												},
											},
										},
										Callee: &ast.MemberExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 23,
														Line:   183,
													},
													File:   "st_dwithin_linestring_test.flux",
													Source: "v1.fieldsAsCols",
													Start: ast.Position{
														Column: 8,
														Line:   183,
													},
												},
											},
											Object: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 10,
															Line:   183,
														},
														File:   "st_dwithin_linestring_test.flux",
														Source: "v1",
														Start: ast.Position{
															Column: 8,
															Line:   183,
														},
													},
												},
												Name: "v1",
											},
											Property: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 23,
															Line:   183,
														},
														File:   "st_dwithin_linestring_test.flux",
														Source: "fieldsAsCols",
														Start: ast.Position{
															Column: 11,
															Line:   183,
														},
													},
												},
												Name: "fieldsAsCols",
											},
										},
									},
								},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 47,
											Line:   184,
										},
										File:   "st_dwithin_linestring_test.flux",
										Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"])",
										Start: ast.Position{
											Column: 3,
											Line:   181,
										},
									},
								},
								Call: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 46,
													Line:   184,
												},
												File:   "st_dwithin_linestring_test.flux",
												Source: "groupBy: [\"id\",\"trip_id\"]",
												Start: ast.Position{
													Column: 21,
													Line:   184,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 46,
														Line:   184,
													},
													File:   "st_dwithin_linestring_test.flux",
													Source: "groupBy: [\"id\",\"trip_id\"]",
													Start: ast.Position{
														Column: 21,
														Line:   184,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 28,
															Line:   184,
														},
														File:   "st_dwithin_linestring_test.flux",
														Source: "groupBy",
														Start: ast.Position{
															Column: 21,
															Line:   184,
														},
													},
												},
												Name: "groupBy",
											},
											Value: &ast.ArrayExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 46,
															Line:   184,
														},
														File:   "st_dwithin_linestring_test.flux",
														Source: "[\"id\",\"trip_id\"]",
														Start: ast.Position{
															Column: 30,
															Line:   184,
														},
													},
												},
												Elements: []ast.Expression{&ast.StringLiteral{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 35,
																Line:   184,
															},
															File:   "st_dwithin_linestring_test.flux",
															Source: "\"id\"",
															Start: ast.Position{
																Column: 31,
																Line:   184,
															},
														},
													},
													Value: "id",
												}, &ast.StringLiteral{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 45,
																Line:   184,
															},
															File:   "st_dwithin_linestring_test.flux",
															Source: "\"trip_id\"",
															Start: ast.Position{
																Column: 36,
																Line:   184,
															},
														},
													},
													Value: "trip_id",
												}},
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 47,
												Line:   184,
											},
											File:   "st_dwithin_linestring_test.flux",
											Source: "geo.asTracks(groupBy: [\"id\",\"trip_id\"])",
											Start: ast.Position{
												Column: 8,
												Line:   184,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 20,
													Line:   184,
												},
												File:   "st_dwithin_linestring_test.flux",
												Source: "geo.asTracks",
												Start: ast.Position{
													Column: 8,
													Line:   184,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 11,
														Line:   184,
													},
													File:   "st_dwithin_linestring_test.flux",
													Source: "geo",
													Start: ast.Position{
														Column: 8,
														Line:   184,
													},
												},
											},
											Name: "geo",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 20,
														Line:   184,
													},
													File:   "st_dwithin_linestring_test.flux",
													Source: "asTracks",
													Start: ast.Position{
														Column: 12,
														Line:   184,
													},
												},
											},
											Name: "asTracks",
										},
									},
								},
							},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 27,
										Line:   185,
									},
									File:   "st_dwithin_linestring_test.flux",
									Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to see the train closing in\n    |> geo.ST_LineString()",
									Start: ast.Position{
										Column: 3,
										Line:   181,
									},
								},
							},
							Call: &ast.CallExpression{
								Arguments: nil,
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 27,
											Line:   185,
										},
										File:   "st_dwithin_linestring_test.flux",
										Source: "geo.ST_LineString()",
										Start: ast.Position{
											Column: 8,
											Line:   185,
										},
									},
								},
								Callee: &ast.MemberExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 25,
												Line:   185,
											},
											File:   "st_dwithin_linestring_test.flux",
											Source: "geo.ST_LineString",
											Start: ast.Position{
												Column: 8,
												Line:   185,
											},
										},
									},
									Object: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 11,
													Line:   185,
												},
												File:   "st_dwithin_linestring_test.flux",
												Source: "geo",
												Start: ast.Position{
													Column: 8,
													Line:   185,
												},
											},
										},
										Name: "geo",
									},
									Property: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 25,
													Line:   185,
												},
												File:   "st_dwithin_linestring_test.flux",
												Source: "ST_LineString",
												Start: ast.Position{
													Column: 12,
													Line:   185,
												},
											},
										},
										Name: "ST_LineString",
									},
								},
							},
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 8,
									Line:   188,
								},
								File:   "st_dwithin_linestring_test.flux",
								Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to see the train closing in\n    |> geo.ST_LineString()\n    |> map(fn: (r) => ({\n        r with _st_dwithin: geo.ST_DWithin(region: refPoint, geometry: {linestring: r.st_linestring}, distance: 20.0)\n    }))",
								Start: ast.Position{
									Column: 3,
									Line:   181,
								},
							},
						},
						Call: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 7,
											Line:   188,
										},
										File:   "st_dwithin_linestring_test.flux",
										Source: "fn: (r) => ({\n        r with _st_dwithin: geo.ST_DWithin(region: refPoint, geometry: {linestring: r.st_linestring}, distance: 20.0)\n    })",
										Start: ast.Position{
											Column: 12,
											Line:   186,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 7,
												Line:   188,
											},
											File:   "st_dwithin_linestring_test.flux",
											Source: "fn: (r) => ({\n        r with _st_dwithin: geo.ST_DWithin(region: refPoint, geometry: {linestring: r.st_linestring}, distance: 20.0)\n    })",
											Start: ast.Position{
												Column: 12,
												Line:   186,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 14,
													Line:   186,
												},
												File:   "st_dwithin_linestring_test.flux",
												Source: "fn",
												Start: ast.Position{
													Column: 12,
													Line:   186,
												},
											},
										},
										Name: "fn",
									},
									Value: &ast.FunctionExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 7,
													Line:   188,
												},
												File:   "st_dwithin_linestring_test.flux",
												Source: "(r) => ({\n        r with _st_dwithin: geo.ST_DWithin(region: refPoint, geometry: {linestring: r.st_linestring}, distance: 20.0)\n    })",
												Start: ast.Position{
													Column: 16,
													Line:   186,
												},
											},
										},
										Body: &ast.ParenExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 7,
														Line:   188,
													},
													File:   "st_dwithin_linestring_test.flux",
													Source: "({\n        r with _st_dwithin: geo.ST_DWithin(region: refPoint, geometry: {linestring: r.st_linestring}, distance: 20.0)\n    })",
													Start: ast.Position{
														Column: 23,
														Line:   186,
													},
												},
											},
											Expression: &ast.ObjectExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 6,
															Line:   188,
														},
														File:   "st_dwithin_linestring_test.flux",
														Source: "{\n        r with _st_dwithin: geo.ST_DWithin(region: refPoint, geometry: {linestring: r.st_linestring}, distance: 20.0)\n    }",
														Start: ast.Position{
															Column: 24,
															Line:   186,
														},
													},
												},
												Properties: []*ast.Property{&ast.Property{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 118,
																Line:   187,
															},
															File:   "st_dwithin_linestring_test.flux",
															Source: "_st_dwithin: geo.ST_DWithin(region: refPoint, geometry: {linestring: r.st_linestring}, distance: 20.0)",
															Start: ast.Position{
																Column: 16,
																Line:   187,
															},
														},
													},
													Key: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 27,
																	Line:   187,
																},
																File:   "st_dwithin_linestring_test.flux",
																Source: "_st_dwithin",
																Start: ast.Position{
																	Column: 16,
																	Line:   187,
																},
															},
														},
														Name: "_st_dwithin",
													},
													Value: &ast.CallExpression{
														Arguments: []ast.Expression{&ast.ObjectExpression{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 117,
																		Line:   187,
																	},
																	File:   "st_dwithin_linestring_test.flux",
																	Source: "region: refPoint, geometry: {linestring: r.st_linestring}, distance: 20.0",
																	Start: ast.Position{
																		Column: 44,
																		Line:   187,
																	},
																},
															},
															Properties: []*ast.Property{&ast.Property{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 60,
																			Line:   187,
																		},
																		File:   "st_dwithin_linestring_test.flux",
																		Source: "region: refPoint",
																		Start: ast.Position{
																			Column: 44,
																			Line:   187,
																		},
																	},
																},
																Key: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 50,
																				Line:   187,
																			},
																			File:   "st_dwithin_linestring_test.flux",
																			Source: "region",
																			Start: ast.Position{
																				Column: 44,
																				Line:   187,
																			},
																		},
																	},
																	Name: "region",
																},
																Value: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 60,
																				Line:   187,
																			},
																			File:   "st_dwithin_linestring_test.flux",
																			Source: "refPoint",
																			Start: ast.Position{
																				Column: 52,
																				Line:   187,
																			},
																		},
																	},
																	Name: "refPoint",
																},
															}, &ast.Property{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 101,
																			Line:   187,
																		},
																		File:   "st_dwithin_linestring_test.flux",
																		Source: "geometry: {linestring: r.st_linestring}",
																		Start: ast.Position{
																			Column: 62,
																			Line:   187,
																		},
																	},
																},
																Key: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 70,
																				Line:   187,
																			},
																			File:   "st_dwithin_linestring_test.flux",
																			Source: "geometry",
																			Start: ast.Position{
																				Column: 62,
																				Line:   187,
																			},
																		},
																	},
																	Name: "geometry",
																},
																Value: &ast.ObjectExpression{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 101,
																				Line:   187,
																			},
																			File:   "st_dwithin_linestring_test.flux",
																			Source: "{linestring: r.st_linestring}",
																			Start: ast.Position{
																				Column: 72,
																				Line:   187,
																			},
																		},
																	},
																	Properties: []*ast.Property{&ast.Property{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 100,
																					Line:   187,
																				},
																				File:   "st_dwithin_linestring_test.flux",
																				Source: "linestring: r.st_linestring",
																				Start: ast.Position{
																					Column: 73,
																					Line:   187,
																				},
																			},
																		},
																		Key: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 83,
																						Line:   187,
																					},
																					File:   "st_dwithin_linestring_test.flux",
																					Source: "linestring",
																					Start: ast.Position{
																						Column: 73,
																						Line:   187,
																					},
																				},
																			},
																			Name: "linestring",
																		},
																		Value: &ast.MemberExpression{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 100,
																						Line:   187,
																					},
																					File:   "st_dwithin_linestring_test.flux",
																					Source: "r.st_linestring",
																					Start: ast.Position{
																						Column: 85,
																						Line:   187,
																					},
																				},
																			},
																			Object: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 86,
																							Line:   187,
																						},
																						File:   "st_dwithin_linestring_test.flux",
																						Source: "r",
																						Start: ast.Position{
																							Column: 85,
																							Line:   187,
																						},
																					},
																				},
																				Name: "r",
																			},
																			Property: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 100,
																							Line:   187,
																						},
																						File:   "st_dwithin_linestring_test.flux",
																						Source: "st_linestring",
																						Start: ast.Position{
																							Column: 87,
																							Line:   187,
																						},
																					},
																				},
																				Name: "st_linestring",
																			},
																		},
																	}},
																	With: nil,
																},
															}, &ast.Property{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 117,
																			Line:   187,
																		},
																		File:   "st_dwithin_linestring_test.flux",
																		Source: "distance: 20.0",
																		Start: ast.Position{
																			Column: 103,
																			Line:   187,
																		},
																	},
																},
																Key: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 111,
																				Line:   187,
																			},
																			File:   "st_dwithin_linestring_test.flux",
																			Source: "distance",
																			Start: ast.Position{
																				Column: 103,
																				Line:   187,
																			},
																		},
																	},
																	Name: "distance",
																},
																Value: &ast.FloatLiteral{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 117,
																				Line:   187,
																			},
																			File:   "st_dwithin_linestring_test.flux",
																			Source: "20.0",
																			Start: ast.Position{
																				Column: 113,
																				Line:   187,
																			},
																		},
																	},
																	Value: 20.0,
																},
															}},
															With: nil,
														}},
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 118,
																	Line:   187,
																},
																File:   "st_dwithin_linestring_test.flux",
																Source: "geo.ST_DWithin(region: refPoint, geometry: {linestring: r.st_linestring}, distance: 20.0)",
																Start: ast.Position{
																	Column: 29,
																	Line:   187,
																},
															},
														},
														Callee: &ast.MemberExpression{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 43,
																		Line:   187,
																	},
																	File:   "st_dwithin_linestring_test.flux",
																	Source: "geo.ST_DWithin",
																	Start: ast.Position{
																		Column: 29,
																		Line:   187,
																	},
																},
															},
															Object: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 32,
																			Line:   187,
																		},
																		File:   "st_dwithin_linestring_test.flux",
																		Source: "geo",
																		Start: ast.Position{
																			Column: 29,
																			Line:   187,
																		},
																	},
																},
																Name: "geo",
															},
															Property: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 43,
																			Line:   187,
																		},
																		File:   "st_dwithin_linestring_test.flux",
																		Source: "ST_DWithin",
																		Start: ast.Position{
																			Column: 33,
																			Line:   187,
																		},
																	},
																},
																Name: "ST_DWithin",
															},
														},
													},
												}},
												With: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 10,
																Line:   187,
															},
															File:   "st_dwithin_linestring_test.flux",
															Source: "r",
															Start: ast.Position{
																Column: 9,
																Line:   187,
															},
														},
													},
													Name: "r",
												},
											},
										},
										Params: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   186,
													},
													File:   "st_dwithin_linestring_test.flux",
													Source: "r",
													Start: ast.Position{
														Column: 17,
														Line:   186,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 18,
															Line:   186,
														},
														File:   "st_dwithin_linestring_test.flux",
														Source: "r",
														Start: ast.Position{
															Column: 17,
															Line:   186,
														},
													},
												},
												Name: "r",
											},
											Value: nil,
										}},
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 8,
										Line:   188,
									},
									File:   "st_dwithin_linestring_test.flux",
									Source: "map(fn: (r) => ({\n        r with _st_dwithin: geo.ST_DWithin(region: refPoint, geometry: {linestring: r.st_linestring}, distance: 20.0)\n    }))",
									Start: ast.Position{
										Column: 8,
										Line:   186,
									},
								},
							},
							Callee: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 11,
											Line:   186,
										},
										File:   "st_dwithin_linestring_test.flux",
										Source: "map",
										Start: ast.Position{
											Column: 8,
											Line:   186,
										},
									},
								},
								Name: "map",
							},
						},
					},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   189,
							},
							File:   "st_dwithin_linestring_test.flux",
							Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to see the train closing in\n    |> geo.ST_LineString()\n    |> map(fn: (r) => ({\n        r with _st_dwithin: geo.ST_DWithin(region: refPoint, geometry: {linestring: r.st_linestring}, distance: 20.0)\n    }))\n    |> drop(columns: [\"_start\", \"_stop\"])",
							Start: ast.Position{
								Column: 3,
								Line:   181,
							},
						},
					},
					Call: &ast.CallExpression{
						Arguments: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   189,
									},
									File:   "st_dwithin_linestring_test.flux",
									Source: "columns: [\"_start\", \"_stop\"]",
									Start: ast.Position{
										Column: 13,
										Line:   189,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 41,
											Line:   189,
										},
										File:   "st_dwithin_linestring_test.flux",
										Source: "columns: [\"_start\", \"_stop\"]",
										Start: ast.Position{
											Column: 13,
											Line:   189,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 20,
												Line:   189,
											},
											File:   "st_dwithin_linestring_test.flux",
											Source: "columns",
											Start: ast.Position{
												Column: 13,
												Line:   189,
											},
										},
									},
									Name: "columns",
								},
								Value: &ast.ArrayExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 41,
												Line:   189,
											},
											File:   "st_dwithin_linestring_test.flux",
											Source: "[\"_start\", \"_stop\"]",
											Start: ast.Position{
												Column: 22,
												Line:   189,
											},
										},
									},
									Elements: []ast.Expression{&ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 31,
													Line:   189,
												},
												File:   "st_dwithin_linestring_test.flux",
												Source: "\"_start\"",
												Start: ast.Position{
													Column: 23,
													Line:   189,
												},
											},
										},
										Value: "_start",
									}, &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 40,
													Line:   189,
												},
												File:   "st_dwithin_linestring_test.flux",
												Source: "\"_stop\"",
												Start: ast.Position{
													Column: 33,
													Line:   189,
												},
											},
										},
										Value: "_stop",
									}},
								},
							}},
							With: nil,
						}},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   189,
								},
								File:   "st_dwithin_linestring_test.flux",
								Source: "drop(columns: [\"_start\", \"_stop\"])",
								Start: ast.Position{
									Column: 8,
									Line:   189,
								},
							},
						},
						Callee: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 12,
										Line:   189,
									},
									File:   "st_dwithin_linestring_test.flux",
									Source: "drop",
									Start: ast.Position{
										Column: 8,
										Line:   189,
									},
								},
							},
							Name: "drop",
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 34,
								Line:   180,
							},
							File:   "st_dwithin_linestring_test.flux",
							Source: "table=<-",
							Start: ast.Position{
								Column: 26,
								Line:   180,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 31,
									Line:   180,
								},
								File:   "st_dwithin_linestring_test.flux",
								Source: "table",
								Start: ast.Position{
									Column: 26,
									Line:   180,
								},
							},
						},
						Name: "table",
					},
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 34,
								Line:   180,
							},
							File:   "st_dwithin_linestring_test.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 32,
								Line:   180,
							},
						},
					}},
				}},
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 109,
							Line:   191,
						},
						File:   "st_dwithin_linestring_test.flux",
						Source: "_stDWithinLinestring = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stDWithinLinestring})",
						Start: ast.Position{
							Column: 6,
							Line:   190,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 26,
								Line:   190,
							},
							File:   "st_dwithin_linestring_test.flux",
							Source: "_stDWithinLinestring",
							Start: ast.Position{
								Column: 6,
								Line:   190,
							},
						},
					},
					Name: "_stDWithinLinestring",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 109,
								Line:   191,
							},
							File:   "st_dwithin_linestring_test.flux",
							Source: "() =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stDWithinLinestring})",
							Start: ast.Position{
								Column: 29,
								Line:   190,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 109,
									Line:   191,
								},
								File:   "st_dwithin_linestring_test.flux",
								Source: "({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stDWithinLinestring})",
								Start: ast.Position{
									Column: 2,
									Line:   191,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 108,
										Line:   191,
									},
									File:   "st_dwithin_linestring_test.flux",
									Source: "{input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stDWithinLinestring}",
									Start: ast.Position{
										Column: 3,
										Line:   191,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 43,
											Line:   191,
										},
										File:   "st_dwithin_linestring_test.flux",
										Source: "input: testing.loadStorage(csv: inData)",
										Start: ast.Position{
											Column: 4,
											Line:   191,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 9,
												Line:   191,
											},
											File:   "st_dwithin_linestring_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 4,
												Line:   191,
											},
										},
									},
									Name: "input",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   191,
												},
												File:   "st_dwithin_linestring_test.flux",
												Source: "csv: inData",
												Start: ast.Position{
													Column: 31,
													Line:   191,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 42,
														Line:   191,
													},
													File:   "st_dwithin_linestring_test.flux",
													Source: "csv: inData",
													Start: ast.Position{
														Column: 31,
														Line:   191,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 34,
															Line:   191,
														},
														File:   "st_dwithin_linestring_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 31,
															Line:   191,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 42,
															Line:   191,
														},
														File:   "st_dwithin_linestring_test.flux",
														Source: "inData",
														Start: ast.Position{
															Column: 36,
															Line:   191,
														},
													},
												},
												Name: "inData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 43,
												Line:   191,
											},
											File:   "st_dwithin_linestring_test.flux",
											Source: "testing.loadStorage(csv: inData)",
											Start: ast.Position{
												Column: 11,
												Line:   191,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   191,
												},
												File:   "st_dwithin_linestring_test.flux",
												Source: "testing.loadStorage",
												Start: ast.Position{
													Column: 11,
													Line:   191,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   191,
													},
													File:   "st_dwithin_linestring_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 11,
														Line:   191,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 30,
														Line:   191,
													},
													File:   "st_dwithin_linestring_test.flux",
													Source: "loadStorage",
													Start: ast.Position{
														Column: 19,
														Line:   191,
													},
												},
											},
											Name: "loadStorage",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 80,
											Line:   191,
										},
										File:   "st_dwithin_linestring_test.flux",
										Source: "want: testing.loadMem(csv: outData)",
										Start: ast.Position{
											Column: 45,
											Line:   191,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 49,
												Line:   191,
											},
											File:   "st_dwithin_linestring_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 45,
												Line:   191,
											},
										},
									},
									Name: "want",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 79,
													Line:   191,
												},
												File:   "st_dwithin_linestring_test.flux",
												Source: "csv: outData",
												Start: ast.Position{
													Column: 67,
													Line:   191,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 79,
														Line:   191,
													},
													File:   "st_dwithin_linestring_test.flux",
													Source: "csv: outData",
													Start: ast.Position{
														Column: 67,
														Line:   191,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 70,
															Line:   191,
														},
														File:   "st_dwithin_linestring_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 67,
															Line:   191,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 79,
															Line:   191,
														},
														File:   "st_dwithin_linestring_test.flux",
														Source: "outData",
														Start: ast.Position{
															Column: 72,
															Line:   191,
														},
													},
												},
												Name: "outData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 80,
												Line:   191,
											},
											File:   "st_dwithin_linestring_test.flux",
											Source: "testing.loadMem(csv: outData)",
											Start: ast.Position{
												Column: 51,
												Line:   191,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   191,
												},
												File:   "st_dwithin_linestring_test.flux",
												Source: "testing.loadMem",
												Start: ast.Position{
													Column: 51,
													Line:   191,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 58,
														Line:   191,
													},
													File:   "st_dwithin_linestring_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 51,
														Line:   191,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 66,
														Line:   191,
													},
													File:   "st_dwithin_linestring_test.flux",
													Source: "loadMem",
													Start: ast.Position{
														Column: 59,
														Line:   191,
													},
												},
											},
											Name: "loadMem",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 107,
											Line:   191,
										},
										File:   "st_dwithin_linestring_test.flux",
										Source: "fn: t_stDWithinLinestring",
										Start: ast.Position{
											Column: 82,
											Line:   191,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 84,
												Line:   191,
											},
											File:   "st_dwithin_linestring_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 82,
												Line:   191,
											},
										},
									},
									Name: "fn",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 107,
												Line:   191,
											},
											File:   "st_dwithin_linestring_test.flux",
											Source: "t_stDWithinLinestring",
											Start: ast.Position{
												Column: 86,
												Line:   191,
											},
										},
									},
									Name: "t_stDWithinLinestring",
								},
							}},
							With: nil,
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 109,
						Line:   191,
					},
					File:   "st_dwithin_linestring_test.flux",
					Source: "test _stDWithinLinestring = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stDWithinLinestring})",
					Start: ast.Position{
						Column: 1,
						Line:   190,
					},
				},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 26,
						Line:   3,
					},
					File:   "st_dwithin_linestring_test.flux",
					Source: "import \"experimental/geo\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 26,
							Line:   3,
						},
						File:   "st_dwithin_linestring_test.flux",
						Source: "\"experimental/geo\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "experimental/geo",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 32,
						Line:   4,
					},
					File:   "st_dwithin_linestring_test.flux",
					Source: "import \"influxdata/influxdb/v1\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 32,
							Line:   4,
						},
						File:   "st_dwithin_linestring_test.flux",
						Source: "\"influxdata/influxdb/v1\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "influxdata/influxdb/v1",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   5,
					},
					File:   "st_dwithin_linestring_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   5,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   5,
						},
						File:   "st_dwithin_linestring_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   5,
						},
					},
				},
				Value: "testing",
			},
		}},
		Metadata: "parser-type=rust",
		Name:     "st_dwithin_linestring_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   1,
					},
					File:   "st_dwithin_linestring_test.flux",
					Source: "package geo_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   1,
						},
						File:   "st_dwithin_linestring_test.flux",
						Source: "geo_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "geo_test",
			},
		},
	}, &ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 99,
					Line:   238,
				},
				File:   "st_dwithin_test.flux",
				Source: "package geo_test\n\nimport \"experimental/geo\"\nimport \"influxdata/influxdb/v1\"\nimport \"testing\"\n\noption now = () => (2030-01-01T00:00:00Z)\n\n// train closing to Manhattan\ninData = \"\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,0,2020-04-08T15:44:58Z,40.820317,lat,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,1,2020-04-08T16:19:27Z,40.745249,lat,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,2,2020-04-08T16:16:50Z,40.751085,lat,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,3,2020-04-08T16:15:59Z,40.748141,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,4,2020-04-08T16:16:16Z,40.748909,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,5,2020-04-08T16:14:32Z,40.743989,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,6,2020-04-08T16:14:49Z,40.745851,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,7,2020-04-08T16:18:18Z,40.748495,lat,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,8,2020-04-08T16:11:03Z,40.749543,lat,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,9,2020-04-08T16:10:46Z,40.750688,lat,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,10,2020-04-08T16:09:36Z,40.757106,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,11,2020-04-08T16:09:53Z,40.7565,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,12,2020-04-08T16:09:01Z,40.757895,lat,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,13,2020-04-08T16:08:19Z,40.759873,lat,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,14,2020-04-08T16:08:38Z,40.759128,lat,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,15,2020-04-08T16:07:43Z,40.762143,lat,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,16,2020-04-08T16:06:49Z,40.762709,lat,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,17,2020-04-08T16:06:31Z,40.762441,lat,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,18,2020-04-08T16:06:11Z,40.762373,lat,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,19,2020-04-08T16:03:54Z,40.76117,lat,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,20,2020-04-08T16:04:28Z,40.761653,lat,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,21,2020-04-08T16:05:46Z,40.761908,lat,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,22,2020-04-08T16:10:29Z,40.753279,lat,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,23,2020-04-08T16:03:36Z,40.761241,lat,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,24,2020-04-08T16:02:33Z,40.761443,lat,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,25,2020-04-08T16:01:55Z,40.761878,lat,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,26,2020-04-08T15:59:24Z,40.763356,lat,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,27,2020-04-08T15:45:33Z,40.815413,lat,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,28,2020-04-08T15:45:51Z,40.814096,lat,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,29,2020-04-08T15:46:12Z,40.810699,lat,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,30,2020-04-08T15:47:45Z,40.808517,lat,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,31,2020-04-08T15:48:04Z,40.806882,lat,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,32,2020-04-08T15:49:01Z,40.800397,lat,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,33,2020-04-08T15:49:22Z,40.796724,lat,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,34,2020-04-08T15:50:44Z,40.794998,lat,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,35,2020-04-08T15:53:56Z,40.786038,lat,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,36,2020-04-08T15:52:38Z,40.787216,lat,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,37,2020-04-08T15:52:16Z,40.788413,lat,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,38,2020-04-08T15:51:55Z,40.789185,lat,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,39,2020-04-08T15:51:20Z,40.791541,lat,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,40,2020-04-08T15:51:37Z,40.791009,lat,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,41,2020-04-08T15:51:03Z,40.793905,lat,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,42,2020-04-08T15:54:57Z,40.775044,lat,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,43,2020-04-08T15:55:54Z,40.773334,lat,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,44,2020-04-08T15:56:13Z,40.772144,lat,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,45,2020-04-08T15:56:33Z,40.770953,lat,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,46,2020-04-08T15:58:10Z,40.76594,lat,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,47,2020-04-08T15:56:53Z,40.768069,lat,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,48,2020-04-08T15:57:52Z,40.76661,lat,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n,,49,2020-04-08T15:44:58Z,-73.68691,lon,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,50,2020-04-08T16:19:27Z,-73.940563,lon,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,51,2020-04-08T16:16:50Z,-73.912119,lon,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,52,2020-04-08T16:15:59Z,-73.905367,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,53,2020-04-08T16:16:16Z,-73.906398,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,54,2020-04-08T16:14:32Z,-73.900815,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,55,2020-04-08T16:14:49Z,-73.902975,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,56,2020-04-08T16:18:18Z,-73.927597,lon,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,57,2020-04-08T16:11:03Z,-73.852242,lon,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,58,2020-04-08T16:10:46Z,-73.848962,lon,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,59,2020-04-08T16:09:36Z,-73.833095,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,60,2020-04-08T16:09:53Z,-73.834298,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,61,2020-04-08T16:09:01Z,-73.831347,lon,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,62,2020-04-08T16:08:19Z,-73.826087,lon,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,63,2020-04-08T16:08:38Z,-73.828799,lon,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,64,2020-04-08T16:07:43Z,-73.817956,lon,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,65,2020-04-08T16:06:49Z,-73.814539,lon,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,66,2020-04-08T16:06:31Z,-73.810154,lon,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,67,2020-04-08T16:06:11Z,-73.809437,lon,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,68,2020-04-08T16:03:54Z,-73.795812,lon,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,69,2020-04-08T16:04:28Z,-73.801766,lon,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,70,2020-04-08T16:05:46Z,-73.804421,lon,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,71,2020-04-08T16:10:29Z,-73.841791,lon,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,72,2020-04-08T16:03:36Z,-73.792932,lon,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,73,2020-04-08T16:02:33Z,-73.789959,lon,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,74,2020-04-08T16:01:55Z,-73.785035,lon,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,75,2020-04-08T15:59:24Z,-73.769272,lon,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,76,2020-04-08T15:45:33Z,-73.690054,lon,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,77,2020-04-08T15:45:51Z,-73.693214,lon,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,78,2020-04-08T15:46:12Z,-73.695214,lon,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,79,2020-04-08T15:47:45Z,-73.695594,lon,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,80,2020-04-08T15:48:04Z,-73.695858,lon,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,81,2020-04-08T15:49:01Z,-73.695023,lon,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,82,2020-04-08T15:49:22Z,-73.699899,lon,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,83,2020-04-08T15:50:44Z,-73.702982,lon,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,84,2020-04-08T15:53:56Z,-73.72924,lon,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,85,2020-04-08T15:52:38Z,-73.7261,lon,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,86,2020-04-08T15:52:16Z,-73.721973,lon,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,87,2020-04-08T15:51:55Z,-73.720059,lon,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,88,2020-04-08T15:51:20Z,-73.713571,lon,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,89,2020-04-08T15:51:37Z,-73.715622,lon,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,90,2020-04-08T15:51:03Z,-73.705485,lon,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,91,2020-04-08T15:54:57Z,-73.740647,lon,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,92,2020-04-08T15:55:54Z,-73.742812,lon,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,93,2020-04-08T15:56:13Z,-73.74431,lon,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,94,2020-04-08T15:56:33Z,-73.745805,lon,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,95,2020-04-08T15:58:10Z,-73.752465,lon,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,96,2020-04-08T15:56:53Z,-73.749413,lon,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,97,2020-04-08T15:57:52Z,-73.751322,lon,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,98,2020-04-08T15:44:58Z,1586304000,tid,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,99,2020-04-08T16:19:27Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,100,2020-04-08T16:16:50Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,101,2020-04-08T16:15:59Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,102,2020-04-08T16:16:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,103,2020-04-08T16:14:32Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,104,2020-04-08T16:14:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,105,2020-04-08T16:18:18Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,106,2020-04-08T16:11:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,107,2020-04-08T16:10:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,108,2020-04-08T16:09:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,109,2020-04-08T16:09:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,110,2020-04-08T16:09:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,111,2020-04-08T16:08:19Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,112,2020-04-08T16:08:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,113,2020-04-08T16:07:43Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,114,2020-04-08T16:06:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,115,2020-04-08T16:06:31Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,116,2020-04-08T16:06:11Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,117,2020-04-08T16:03:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,118,2020-04-08T16:04:28Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,119,2020-04-08T16:05:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,120,2020-04-08T16:10:29Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,121,2020-04-08T16:03:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,122,2020-04-08T16:02:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,123,2020-04-08T16:01:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,124,2020-04-08T15:59:24Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,125,2020-04-08T15:45:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,126,2020-04-08T15:45:51Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,127,2020-04-08T15:46:12Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,128,2020-04-08T15:47:45Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,129,2020-04-08T15:48:04Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,130,2020-04-08T15:49:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,131,2020-04-08T15:49:22Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,132,2020-04-08T15:50:44Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,133,2020-04-08T15:53:56Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,134,2020-04-08T15:52:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,135,2020-04-08T15:52:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,136,2020-04-08T15:51:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,137,2020-04-08T15:51:20Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,138,2020-04-08T15:51:37Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,139,2020-04-08T15:51:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,140,2020-04-08T15:54:57Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,141,2020-04-08T15:55:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,142,2020-04-08T15:56:13Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,143,2020-04-08T15:56:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,144,2020-04-08T15:58:10Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,145,2020-04-08T15:56:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,146,2020-04-08T15:57:52Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\"\n\noutData = \"\n#group,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true\n#datatype,string,long,string,string,boolean,dateTime:RFC3339,string,string,double,double,string,string,string,string,long,string\n#default,_result,,,,,,,,,,,,,,,\n,result,table,_measurement,_pt,_st_dwithin,_time,area,id,lat,lon,s2_cell_id,seq_idx,status,stop_id,tid,trip_id\n,,0,mta,start,false,2020-04-08T15:44:58Z,LLIR,GO506_20_6431,40.820317,-73.68691,89c288c54,1,STOPPED_AT,171,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:45:33Z,LLIR,GO506_20_6431,40.815413,-73.690054,89c288dcc,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:45:51Z,LLIR,GO506_20_6431,40.814096,-73.693214,89c288ddc,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:46:12Z,LLIR,GO506_20_6431,40.810699,-73.695214,89c288e0c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:47:45Z,LLIR,GO506_20_6431,40.808517,-73.695594,89c288e14,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:48:04Z,LLIR,GO506_20_6431,40.806882,-73.695858,89c288e3c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:49:01Z,LLIR,GO506_20_6431,40.800397,-73.695023,89c288fcc,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:49:22Z,LLIR,GO506_20_6431,40.796724,-73.699899,89c288fe4,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:50:44Z,LLIR,GO506_20_6431,40.794998,-73.702982,89c289004,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:51:03Z,LLIR,GO506_20_6431,40.793905,-73.705485,89c289aa4,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:51:20Z,LLIR,GO506_20_6431,40.791541,-73.713571,89c289a64,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:51:37Z,LLIR,GO506_20_6431,40.791009,-73.715622,89c289a6c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:51:55Z,LLIR,GO506_20_6431,40.789185,-73.720059,89c289a3c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:52:16Z,LLIR,GO506_20_6431,40.788413,-73.721973,89c289a2c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:52:38Z,LLIR,GO506_20_6431,40.787216,-73.7261,89c28997c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:53:56Z,LLIR,GO506_20_6431,40.786038,-73.72924,89c289974,5,IN_TRANSIT_TO,120,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:54:57Z,LLIR,GO506_20_6431,40.775044,-73.740647,89c289f3c,5,STOPPED_AT,120,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:55:54Z,LLIR,GO506_20_6431,40.773334,-73.742812,89c289f6c,5,STOPPED_AT,120,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:56:13Z,LLIR,GO506_20_6431,40.772144,-73.74431,89c289f74,6,IN_TRANSIT_TO,42,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:56:33Z,LLIR,GO506_20_6431,40.770953,-73.745805,89c289f7c,6,IN_TRANSIT_TO,42,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:56:53Z,LLIR,GO506_20_6431,40.768069,-73.749413,89c28a024,6,STOPPED_AT,42,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:57:52Z,LLIR,GO506_20_6431,40.76661,-73.751322,89c28a03c,6,STOPPED_AT,42,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:58:10Z,LLIR,GO506_20_6431,40.76594,-73.752465,89c28a014,7,IN_TRANSIT_TO,25,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:59:24Z,LLIR,GO506_20_6431,40.763356,-73.769272,89c261e04,7,STOPPED_AT,25,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:01:55Z,LLIR,GO506_20_6431,40.761878,-73.785035,89c261d74,8,IN_TRANSIT_TO,2,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:02:33Z,LLIR,GO506_20_6431,40.761443,-73.789959,89c261d3c,8,STOPPED_AT,2,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:03:36Z,LLIR,GO506_20_6431,40.761241,-73.792932,89c261d34,8,STOPPED_AT,2,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:03:54Z,LLIR,GO506_20_6431,40.76117,-73.795812,89c2602cc,9,IN_TRANSIT_TO,11,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:04:28Z,LLIR,GO506_20_6431,40.761653,-73.801766,89c2602ec,9,STOPPED_AT,11,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:05:46Z,LLIR,GO506_20_6431,40.761908,-73.804421,89c2602f4,9,STOPPED_AT,11,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:06:11Z,LLIR,GO506_20_6431,40.762373,-73.809437,89c260254,10,IN_TRANSIT_TO,130,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:06:31Z,LLIR,GO506_20_6431,40.762441,-73.810154,89c26024c,10,IN_TRANSIT_TO,130,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:06:49Z,LLIR,GO506_20_6431,40.762709,-73.814539,89c260234,10,STOPPED_AT,130,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:07:43Z,LLIR,GO506_20_6431,40.762143,-73.817956,89c26022c,11,IN_TRANSIT_TO,56,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:08:19Z,LLIR,GO506_20_6431,40.759873,-73.826087,89c26010c,11,IN_TRANSIT_TO,56,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:08:38Z,LLIR,GO506_20_6431,40.759128,-73.828799,89c26011c,11,STOPPED_AT,56,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:09:01Z,LLIR,GO506_20_6431,40.757895,-73.831347,89c2600dc,11,STOPPED_AT,56,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:09:36Z,LLIR,GO506_20_6431,40.757106,-73.833095,89c2600c4,11,STOPPED_AT,56,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:09:53Z,LLIR,GO506_20_6431,40.7565,-73.834298,89c2600c4,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:10:29Z,LLIR,GO506_20_6431,40.753279,-73.841791,89c260754,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:10:46Z,LLIR,GO506_20_6431,40.750688,-73.848962,89c25fdbc,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:11:03Z,LLIR,GO506_20_6431,40.749543,-73.852242,89c25fdb4,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:14:32Z,LLIR,GO506_20_6431,40.743989,-73.900815,89c25f1d4,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:14:49Z,LLIR,GO506_20_6431,40.745851,-73.902975,89c25f1d4,12,STOPPED_AT,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:15:59Z,LLIR,GO506_20_6431,40.748141,-73.905367,89c25f1c4,12,STOPPED_AT,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:16:16Z,LLIR,GO506_20_6431,40.748909,-73.906398,89c25f1c4,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:16:50Z,LLIR,GO506_20_6431,40.751085,-73.912119,89c25f18c,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:18:18Z,LLIR,GO506_20_6431,40.748495,-73.927597,89c25f29c,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:19:27Z,LLIR,GO506_20_6431,40.745249,-73.940563,89c2592bc,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n\"\n\n// reference point (Statue of Liberty)\nrefPoint = {lat: 40.6892, lon: -74.0445}\n\nt_stDWithin = (table=<-) =>\n  table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to see the train closing in\n    |> map(fn: (r) => ({\n        r with _st_dwithin: geo.ST_DWithin(region: refPoint, geometry: {lat: r.lat, lon: r.lon}, distance: 20.0)\n    }))\n    |> drop(columns: [\"_start\", \"_stop\"])\ntest _stDWithin = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stDWithin})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   7,
						},
						File:   "st_dwithin_test.flux",
						Source: "now = () => (2030-01-01T00:00:00Z)",
						Start: ast.Position{
							Column: 8,
							Line:   7,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   7,
							},
							File:   "st_dwithin_test.flux",
							Source: "now",
							Start: ast.Position{
								Column: 8,
								Line:   7,
							},
						},
					},
					Name: "now",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   7,
							},
							File:   "st_dwithin_test.flux",
							Source: "() => (2030-01-01T00:00:00Z)",
							Start: ast.Position{
								Column: 14,
								Line:   7,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   7,
								},
								File:   "st_dwithin_test.flux",
								Source: "(2030-01-01T00:00:00Z)",
								Start: ast.Position{
									Column: 20,
									Line:   7,
								},
							},
						},
						Expression: &ast.DateTimeLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   7,
									},
									File:   "st_dwithin_test.flux",
									Source: "2030-01-01T00:00:00Z",
									Start: ast.Position{
										Column: 21,
										Line:   7,
									},
								},
							},
							Value: parser.MustParseTime("2030-01-01T00:00:00Z"),
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   7,
					},
					File:   "st_dwithin_test.flux",
					Source: "option now = () => (2030-01-01T00:00:00Z)",
					Start: ast.Position{
						Column: 1,
						Line:   7,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   167,
					},
					File:   "st_dwithin_test.flux",
					Source: "inData = \"\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,0,2020-04-08T15:44:58Z,40.820317,lat,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,1,2020-04-08T16:19:27Z,40.745249,lat,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,2,2020-04-08T16:16:50Z,40.751085,lat,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,3,2020-04-08T16:15:59Z,40.748141,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,4,2020-04-08T16:16:16Z,40.748909,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,5,2020-04-08T16:14:32Z,40.743989,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,6,2020-04-08T16:14:49Z,40.745851,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,7,2020-04-08T16:18:18Z,40.748495,lat,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,8,2020-04-08T16:11:03Z,40.749543,lat,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,9,2020-04-08T16:10:46Z,40.750688,lat,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,10,2020-04-08T16:09:36Z,40.757106,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,11,2020-04-08T16:09:53Z,40.7565,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,12,2020-04-08T16:09:01Z,40.757895,lat,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,13,2020-04-08T16:08:19Z,40.759873,lat,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,14,2020-04-08T16:08:38Z,40.759128,lat,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,15,2020-04-08T16:07:43Z,40.762143,lat,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,16,2020-04-08T16:06:49Z,40.762709,lat,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,17,2020-04-08T16:06:31Z,40.762441,lat,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,18,2020-04-08T16:06:11Z,40.762373,lat,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,19,2020-04-08T16:03:54Z,40.76117,lat,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,20,2020-04-08T16:04:28Z,40.761653,lat,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,21,2020-04-08T16:05:46Z,40.761908,lat,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,22,2020-04-08T16:10:29Z,40.753279,lat,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,23,2020-04-08T16:03:36Z,40.761241,lat,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,24,2020-04-08T16:02:33Z,40.761443,lat,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,25,2020-04-08T16:01:55Z,40.761878,lat,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,26,2020-04-08T15:59:24Z,40.763356,lat,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,27,2020-04-08T15:45:33Z,40.815413,lat,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,28,2020-04-08T15:45:51Z,40.814096,lat,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,29,2020-04-08T15:46:12Z,40.810699,lat,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,30,2020-04-08T15:47:45Z,40.808517,lat,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,31,2020-04-08T15:48:04Z,40.806882,lat,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,32,2020-04-08T15:49:01Z,40.800397,lat,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,33,2020-04-08T15:49:22Z,40.796724,lat,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,34,2020-04-08T15:50:44Z,40.794998,lat,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,35,2020-04-08T15:53:56Z,40.786038,lat,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,36,2020-04-08T15:52:38Z,40.787216,lat,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,37,2020-04-08T15:52:16Z,40.788413,lat,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,38,2020-04-08T15:51:55Z,40.789185,lat,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,39,2020-04-08T15:51:20Z,40.791541,lat,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,40,2020-04-08T15:51:37Z,40.791009,lat,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,41,2020-04-08T15:51:03Z,40.793905,lat,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,42,2020-04-08T15:54:57Z,40.775044,lat,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,43,2020-04-08T15:55:54Z,40.773334,lat,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,44,2020-04-08T15:56:13Z,40.772144,lat,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,45,2020-04-08T15:56:33Z,40.770953,lat,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,46,2020-04-08T15:58:10Z,40.76594,lat,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,47,2020-04-08T15:56:53Z,40.768069,lat,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,48,2020-04-08T15:57:52Z,40.76661,lat,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n,,49,2020-04-08T15:44:58Z,-73.68691,lon,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,50,2020-04-08T16:19:27Z,-73.940563,lon,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,51,2020-04-08T16:16:50Z,-73.912119,lon,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,52,2020-04-08T16:15:59Z,-73.905367,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,53,2020-04-08T16:16:16Z,-73.906398,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,54,2020-04-08T16:14:32Z,-73.900815,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,55,2020-04-08T16:14:49Z,-73.902975,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,56,2020-04-08T16:18:18Z,-73.927597,lon,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,57,2020-04-08T16:11:03Z,-73.852242,lon,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,58,2020-04-08T16:10:46Z,-73.848962,lon,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,59,2020-04-08T16:09:36Z,-73.833095,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,60,2020-04-08T16:09:53Z,-73.834298,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,61,2020-04-08T16:09:01Z,-73.831347,lon,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,62,2020-04-08T16:08:19Z,-73.826087,lon,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,63,2020-04-08T16:08:38Z,-73.828799,lon,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,64,2020-04-08T16:07:43Z,-73.817956,lon,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,65,2020-04-08T16:06:49Z,-73.814539,lon,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,66,2020-04-08T16:06:31Z,-73.810154,lon,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,67,2020-04-08T16:06:11Z,-73.809437,lon,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,68,2020-04-08T16:03:54Z,-73.795812,lon,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,69,2020-04-08T16:04:28Z,-73.801766,lon,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,70,2020-04-08T16:05:46Z,-73.804421,lon,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,71,2020-04-08T16:10:29Z,-73.841791,lon,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,72,2020-04-08T16:03:36Z,-73.792932,lon,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,73,2020-04-08T16:02:33Z,-73.789959,lon,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,74,2020-04-08T16:01:55Z,-73.785035,lon,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,75,2020-04-08T15:59:24Z,-73.769272,lon,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,76,2020-04-08T15:45:33Z,-73.690054,lon,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,77,2020-04-08T15:45:51Z,-73.693214,lon,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,78,2020-04-08T15:46:12Z,-73.695214,lon,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,79,2020-04-08T15:47:45Z,-73.695594,lon,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,80,2020-04-08T15:48:04Z,-73.695858,lon,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,81,2020-04-08T15:49:01Z,-73.695023,lon,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,82,2020-04-08T15:49:22Z,-73.699899,lon,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,83,2020-04-08T15:50:44Z,-73.702982,lon,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,84,2020-04-08T15:53:56Z,-73.72924,lon,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,85,2020-04-08T15:52:38Z,-73.7261,lon,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,86,2020-04-08T15:52:16Z,-73.721973,lon,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,87,2020-04-08T15:51:55Z,-73.720059,lon,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,88,2020-04-08T15:51:20Z,-73.713571,lon,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,89,2020-04-08T15:51:37Z,-73.715622,lon,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,90,2020-04-08T15:51:03Z,-73.705485,lon,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,91,2020-04-08T15:54:57Z,-73.740647,lon,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,92,2020-04-08T15:55:54Z,-73.742812,lon,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,93,2020-04-08T15:56:13Z,-73.74431,lon,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,94,2020-04-08T15:56:33Z,-73.745805,lon,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,95,2020-04-08T15:58:10Z,-73.752465,lon,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,96,2020-04-08T15:56:53Z,-73.749413,lon,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,97,2020-04-08T15:57:52Z,-73.751322,lon,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,98,2020-04-08T15:44:58Z,1586304000,tid,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,99,2020-04-08T16:19:27Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,100,2020-04-08T16:16:50Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,101,2020-04-08T16:15:59Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,102,2020-04-08T16:16:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,103,2020-04-08T16:14:32Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,104,2020-04-08T16:14:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,105,2020-04-08T16:18:18Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,106,2020-04-08T16:11:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,107,2020-04-08T16:10:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,108,2020-04-08T16:09:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,109,2020-04-08T16:09:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,110,2020-04-08T16:09:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,111,2020-04-08T16:08:19Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,112,2020-04-08T16:08:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,113,2020-04-08T16:07:43Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,114,2020-04-08T16:06:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,115,2020-04-08T16:06:31Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,116,2020-04-08T16:06:11Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,117,2020-04-08T16:03:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,118,2020-04-08T16:04:28Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,119,2020-04-08T16:05:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,120,2020-04-08T16:10:29Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,121,2020-04-08T16:03:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,122,2020-04-08T16:02:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,123,2020-04-08T16:01:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,124,2020-04-08T15:59:24Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,125,2020-04-08T15:45:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,126,2020-04-08T15:45:51Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,127,2020-04-08T15:46:12Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,128,2020-04-08T15:47:45Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,129,2020-04-08T15:48:04Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,130,2020-04-08T15:49:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,131,2020-04-08T15:49:22Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,132,2020-04-08T15:50:44Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,133,2020-04-08T15:53:56Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,134,2020-04-08T15:52:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,135,2020-04-08T15:52:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,136,2020-04-08T15:51:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,137,2020-04-08T15:51:20Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,138,2020-04-08T15:51:37Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,139,2020-04-08T15:51:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,140,2020-04-08T15:54:57Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,141,2020-04-08T15:55:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,142,2020-04-08T15:56:13Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,143,2020-04-08T15:56:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,144,2020-04-08T15:58:10Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,145,2020-04-08T15:56:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,146,2020-04-08T15:57:52Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   10,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 7,
							Line:   10,
						},
						File:   "st_dwithin_test.flux",
						Source: "inData",
						Start: ast.Position{
							Column: 1,
							Line:   10,
						},
					},
				},
				Name: "inData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   167,
						},
						File:   "st_dwithin_test.flux",
						Source: "\"\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,0,2020-04-08T15:44:58Z,40.820317,lat,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,1,2020-04-08T16:19:27Z,40.745249,lat,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,2,2020-04-08T16:16:50Z,40.751085,lat,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,3,2020-04-08T16:15:59Z,40.748141,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,4,2020-04-08T16:16:16Z,40.748909,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,5,2020-04-08T16:14:32Z,40.743989,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,6,2020-04-08T16:14:49Z,40.745851,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,7,2020-04-08T16:18:18Z,40.748495,lat,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,8,2020-04-08T16:11:03Z,40.749543,lat,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,9,2020-04-08T16:10:46Z,40.750688,lat,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,10,2020-04-08T16:09:36Z,40.757106,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,11,2020-04-08T16:09:53Z,40.7565,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,12,2020-04-08T16:09:01Z,40.757895,lat,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,13,2020-04-08T16:08:19Z,40.759873,lat,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,14,2020-04-08T16:08:38Z,40.759128,lat,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,15,2020-04-08T16:07:43Z,40.762143,lat,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,16,2020-04-08T16:06:49Z,40.762709,lat,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,17,2020-04-08T16:06:31Z,40.762441,lat,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,18,2020-04-08T16:06:11Z,40.762373,lat,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,19,2020-04-08T16:03:54Z,40.76117,lat,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,20,2020-04-08T16:04:28Z,40.761653,lat,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,21,2020-04-08T16:05:46Z,40.761908,lat,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,22,2020-04-08T16:10:29Z,40.753279,lat,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,23,2020-04-08T16:03:36Z,40.761241,lat,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,24,2020-04-08T16:02:33Z,40.761443,lat,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,25,2020-04-08T16:01:55Z,40.761878,lat,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,26,2020-04-08T15:59:24Z,40.763356,lat,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,27,2020-04-08T15:45:33Z,40.815413,lat,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,28,2020-04-08T15:45:51Z,40.814096,lat,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,29,2020-04-08T15:46:12Z,40.810699,lat,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,30,2020-04-08T15:47:45Z,40.808517,lat,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,31,2020-04-08T15:48:04Z,40.806882,lat,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,32,2020-04-08T15:49:01Z,40.800397,lat,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,33,2020-04-08T15:49:22Z,40.796724,lat,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,34,2020-04-08T15:50:44Z,40.794998,lat,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,35,2020-04-08T15:53:56Z,40.786038,lat,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,36,2020-04-08T15:52:38Z,40.787216,lat,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,37,2020-04-08T15:52:16Z,40.788413,lat,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,38,2020-04-08T15:51:55Z,40.789185,lat,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,39,2020-04-08T15:51:20Z,40.791541,lat,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,40,2020-04-08T15:51:37Z,40.791009,lat,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,41,2020-04-08T15:51:03Z,40.793905,lat,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,42,2020-04-08T15:54:57Z,40.775044,lat,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,43,2020-04-08T15:55:54Z,40.773334,lat,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,44,2020-04-08T15:56:13Z,40.772144,lat,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,45,2020-04-08T15:56:33Z,40.770953,lat,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,46,2020-04-08T15:58:10Z,40.76594,lat,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,47,2020-04-08T15:56:53Z,40.768069,lat,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,48,2020-04-08T15:57:52Z,40.76661,lat,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n,,49,2020-04-08T15:44:58Z,-73.68691,lon,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,50,2020-04-08T16:19:27Z,-73.940563,lon,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,51,2020-04-08T16:16:50Z,-73.912119,lon,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,52,2020-04-08T16:15:59Z,-73.905367,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,53,2020-04-08T16:16:16Z,-73.906398,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,54,2020-04-08T16:14:32Z,-73.900815,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,55,2020-04-08T16:14:49Z,-73.902975,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,56,2020-04-08T16:18:18Z,-73.927597,lon,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,57,2020-04-08T16:11:03Z,-73.852242,lon,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,58,2020-04-08T16:10:46Z,-73.848962,lon,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,59,2020-04-08T16:09:36Z,-73.833095,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,60,2020-04-08T16:09:53Z,-73.834298,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,61,2020-04-08T16:09:01Z,-73.831347,lon,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,62,2020-04-08T16:08:19Z,-73.826087,lon,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,63,2020-04-08T16:08:38Z,-73.828799,lon,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,64,2020-04-08T16:07:43Z,-73.817956,lon,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,65,2020-04-08T16:06:49Z,-73.814539,lon,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,66,2020-04-08T16:06:31Z,-73.810154,lon,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,67,2020-04-08T16:06:11Z,-73.809437,lon,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,68,2020-04-08T16:03:54Z,-73.795812,lon,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,69,2020-04-08T16:04:28Z,-73.801766,lon,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,70,2020-04-08T16:05:46Z,-73.804421,lon,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,71,2020-04-08T16:10:29Z,-73.841791,lon,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,72,2020-04-08T16:03:36Z,-73.792932,lon,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,73,2020-04-08T16:02:33Z,-73.789959,lon,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,74,2020-04-08T16:01:55Z,-73.785035,lon,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,75,2020-04-08T15:59:24Z,-73.769272,lon,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,76,2020-04-08T15:45:33Z,-73.690054,lon,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,77,2020-04-08T15:45:51Z,-73.693214,lon,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,78,2020-04-08T15:46:12Z,-73.695214,lon,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,79,2020-04-08T15:47:45Z,-73.695594,lon,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,80,2020-04-08T15:48:04Z,-73.695858,lon,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,81,2020-04-08T15:49:01Z,-73.695023,lon,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,82,2020-04-08T15:49:22Z,-73.699899,lon,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,83,2020-04-08T15:50:44Z,-73.702982,lon,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,84,2020-04-08T15:53:56Z,-73.72924,lon,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,85,2020-04-08T15:52:38Z,-73.7261,lon,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,86,2020-04-08T15:52:16Z,-73.721973,lon,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,87,2020-04-08T15:51:55Z,-73.720059,lon,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,88,2020-04-08T15:51:20Z,-73.713571,lon,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,89,2020-04-08T15:51:37Z,-73.715622,lon,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,90,2020-04-08T15:51:03Z,-73.705485,lon,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,91,2020-04-08T15:54:57Z,-73.740647,lon,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,92,2020-04-08T15:55:54Z,-73.742812,lon,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,93,2020-04-08T15:56:13Z,-73.74431,lon,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,94,2020-04-08T15:56:33Z,-73.745805,lon,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,95,2020-04-08T15:58:10Z,-73.752465,lon,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,96,2020-04-08T15:56:53Z,-73.749413,lon,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,97,2020-04-08T15:57:52Z,-73.751322,lon,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,98,2020-04-08T15:44:58Z,1586304000,tid,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,99,2020-04-08T16:19:27Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,100,2020-04-08T16:16:50Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,101,2020-04-08T16:15:59Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,102,2020-04-08T16:16:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,103,2020-04-08T16:14:32Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,104,2020-04-08T16:14:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,105,2020-04-08T16:18:18Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,106,2020-04-08T16:11:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,107,2020-04-08T16:10:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,108,2020-04-08T16:09:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,109,2020-04-08T16:09:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,110,2020-04-08T16:09:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,111,2020-04-08T16:08:19Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,112,2020-04-08T16:08:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,113,2020-04-08T16:07:43Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,114,2020-04-08T16:06:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,115,2020-04-08T16:06:31Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,116,2020-04-08T16:06:11Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,117,2020-04-08T16:03:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,118,2020-04-08T16:04:28Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,119,2020-04-08T16:05:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,120,2020-04-08T16:10:29Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,121,2020-04-08T16:03:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,122,2020-04-08T16:02:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,123,2020-04-08T16:01:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,124,2020-04-08T15:59:24Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,125,2020-04-08T15:45:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,126,2020-04-08T15:45:51Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,127,2020-04-08T15:46:12Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,128,2020-04-08T15:47:45Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,129,2020-04-08T15:48:04Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,130,2020-04-08T15:49:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,131,2020-04-08T15:49:22Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,132,2020-04-08T15:50:44Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,133,2020-04-08T15:53:56Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,134,2020-04-08T15:52:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,135,2020-04-08T15:52:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,136,2020-04-08T15:51:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,137,2020-04-08T15:51:20Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,138,2020-04-08T15:51:37Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,139,2020-04-08T15:51:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,140,2020-04-08T15:54:57Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,141,2020-04-08T15:55:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,142,2020-04-08T15:56:13Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,143,2020-04-08T15:56:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,144,2020-04-08T15:58:10Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,145,2020-04-08T15:56:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,146,2020-04-08T15:57:52Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\"",
						Start: ast.Position{
							Column: 10,
							Line:   10,
						},
					},
				},
				Value: "\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,0,2020-04-08T15:44:58Z,40.820317,lat,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,1,2020-04-08T16:19:27Z,40.745249,lat,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,2,2020-04-08T16:16:50Z,40.751085,lat,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,3,2020-04-08T16:15:59Z,40.748141,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,4,2020-04-08T16:16:16Z,40.748909,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,5,2020-04-08T16:14:32Z,40.743989,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,6,2020-04-08T16:14:49Z,40.745851,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,7,2020-04-08T16:18:18Z,40.748495,lat,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,8,2020-04-08T16:11:03Z,40.749543,lat,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,9,2020-04-08T16:10:46Z,40.750688,lat,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,10,2020-04-08T16:09:36Z,40.757106,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,11,2020-04-08T16:09:53Z,40.7565,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,12,2020-04-08T16:09:01Z,40.757895,lat,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,13,2020-04-08T16:08:19Z,40.759873,lat,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,14,2020-04-08T16:08:38Z,40.759128,lat,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,15,2020-04-08T16:07:43Z,40.762143,lat,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,16,2020-04-08T16:06:49Z,40.762709,lat,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,17,2020-04-08T16:06:31Z,40.762441,lat,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,18,2020-04-08T16:06:11Z,40.762373,lat,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,19,2020-04-08T16:03:54Z,40.76117,lat,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,20,2020-04-08T16:04:28Z,40.761653,lat,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,21,2020-04-08T16:05:46Z,40.761908,lat,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,22,2020-04-08T16:10:29Z,40.753279,lat,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,23,2020-04-08T16:03:36Z,40.761241,lat,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,24,2020-04-08T16:02:33Z,40.761443,lat,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,25,2020-04-08T16:01:55Z,40.761878,lat,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,26,2020-04-08T15:59:24Z,40.763356,lat,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,27,2020-04-08T15:45:33Z,40.815413,lat,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,28,2020-04-08T15:45:51Z,40.814096,lat,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,29,2020-04-08T15:46:12Z,40.810699,lat,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,30,2020-04-08T15:47:45Z,40.808517,lat,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,31,2020-04-08T15:48:04Z,40.806882,lat,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,32,2020-04-08T15:49:01Z,40.800397,lat,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,33,2020-04-08T15:49:22Z,40.796724,lat,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,34,2020-04-08T15:50:44Z,40.794998,lat,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,35,2020-04-08T15:53:56Z,40.786038,lat,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,36,2020-04-08T15:52:38Z,40.787216,lat,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,37,2020-04-08T15:52:16Z,40.788413,lat,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,38,2020-04-08T15:51:55Z,40.789185,lat,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,39,2020-04-08T15:51:20Z,40.791541,lat,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,40,2020-04-08T15:51:37Z,40.791009,lat,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,41,2020-04-08T15:51:03Z,40.793905,lat,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,42,2020-04-08T15:54:57Z,40.775044,lat,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,43,2020-04-08T15:55:54Z,40.773334,lat,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,44,2020-04-08T15:56:13Z,40.772144,lat,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,45,2020-04-08T15:56:33Z,40.770953,lat,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,46,2020-04-08T15:58:10Z,40.76594,lat,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,47,2020-04-08T15:56:53Z,40.768069,lat,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,48,2020-04-08T15:57:52Z,40.76661,lat,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n,,49,2020-04-08T15:44:58Z,-73.68691,lon,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,50,2020-04-08T16:19:27Z,-73.940563,lon,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,51,2020-04-08T16:16:50Z,-73.912119,lon,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,52,2020-04-08T16:15:59Z,-73.905367,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,53,2020-04-08T16:16:16Z,-73.906398,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,54,2020-04-08T16:14:32Z,-73.900815,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,55,2020-04-08T16:14:49Z,-73.902975,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,56,2020-04-08T16:18:18Z,-73.927597,lon,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,57,2020-04-08T16:11:03Z,-73.852242,lon,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,58,2020-04-08T16:10:46Z,-73.848962,lon,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,59,2020-04-08T16:09:36Z,-73.833095,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,60,2020-04-08T16:09:53Z,-73.834298,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,61,2020-04-08T16:09:01Z,-73.831347,lon,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,62,2020-04-08T16:08:19Z,-73.826087,lon,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,63,2020-04-08T16:08:38Z,-73.828799,lon,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,64,2020-04-08T16:07:43Z,-73.817956,lon,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,65,2020-04-08T16:06:49Z,-73.814539,lon,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,66,2020-04-08T16:06:31Z,-73.810154,lon,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,67,2020-04-08T16:06:11Z,-73.809437,lon,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,68,2020-04-08T16:03:54Z,-73.795812,lon,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,69,2020-04-08T16:04:28Z,-73.801766,lon,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,70,2020-04-08T16:05:46Z,-73.804421,lon,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,71,2020-04-08T16:10:29Z,-73.841791,lon,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,72,2020-04-08T16:03:36Z,-73.792932,lon,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,73,2020-04-08T16:02:33Z,-73.789959,lon,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,74,2020-04-08T16:01:55Z,-73.785035,lon,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,75,2020-04-08T15:59:24Z,-73.769272,lon,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,76,2020-04-08T15:45:33Z,-73.690054,lon,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,77,2020-04-08T15:45:51Z,-73.693214,lon,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,78,2020-04-08T15:46:12Z,-73.695214,lon,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,79,2020-04-08T15:47:45Z,-73.695594,lon,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,80,2020-04-08T15:48:04Z,-73.695858,lon,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,81,2020-04-08T15:49:01Z,-73.695023,lon,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,82,2020-04-08T15:49:22Z,-73.699899,lon,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,83,2020-04-08T15:50:44Z,-73.702982,lon,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,84,2020-04-08T15:53:56Z,-73.72924,lon,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,85,2020-04-08T15:52:38Z,-73.7261,lon,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,86,2020-04-08T15:52:16Z,-73.721973,lon,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,87,2020-04-08T15:51:55Z,-73.720059,lon,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,88,2020-04-08T15:51:20Z,-73.713571,lon,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,89,2020-04-08T15:51:37Z,-73.715622,lon,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,90,2020-04-08T15:51:03Z,-73.705485,lon,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,91,2020-04-08T15:54:57Z,-73.740647,lon,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,92,2020-04-08T15:55:54Z,-73.742812,lon,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,93,2020-04-08T15:56:13Z,-73.74431,lon,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,94,2020-04-08T15:56:33Z,-73.745805,lon,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,95,2020-04-08T15:58:10Z,-73.752465,lon,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,96,2020-04-08T15:56:53Z,-73.749413,lon,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,97,2020-04-08T15:57:52Z,-73.751322,lon,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,98,2020-04-08T15:44:58Z,1586304000,tid,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,99,2020-04-08T16:19:27Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,100,2020-04-08T16:16:50Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,101,2020-04-08T16:15:59Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,102,2020-04-08T16:16:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,103,2020-04-08T16:14:32Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,104,2020-04-08T16:14:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,105,2020-04-08T16:18:18Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,106,2020-04-08T16:11:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,107,2020-04-08T16:10:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,108,2020-04-08T16:09:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,109,2020-04-08T16:09:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,110,2020-04-08T16:09:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,111,2020-04-08T16:08:19Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,112,2020-04-08T16:08:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,113,2020-04-08T16:07:43Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,114,2020-04-08T16:06:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,115,2020-04-08T16:06:31Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,116,2020-04-08T16:06:11Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,117,2020-04-08T16:03:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,118,2020-04-08T16:04:28Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,119,2020-04-08T16:05:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,120,2020-04-08T16:10:29Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,121,2020-04-08T16:03:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,122,2020-04-08T16:02:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,123,2020-04-08T16:01:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,124,2020-04-08T15:59:24Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,125,2020-04-08T15:45:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,126,2020-04-08T15:45:51Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,127,2020-04-08T15:46:12Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,128,2020-04-08T15:47:45Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,129,2020-04-08T15:48:04Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,130,2020-04-08T15:49:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,131,2020-04-08T15:49:22Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,132,2020-04-08T15:50:44Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,133,2020-04-08T15:53:56Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,134,2020-04-08T15:52:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,135,2020-04-08T15:52:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,136,2020-04-08T15:51:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,137,2020-04-08T15:51:20Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,138,2020-04-08T15:51:37Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,139,2020-04-08T15:51:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,140,2020-04-08T15:54:57Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,141,2020-04-08T15:55:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,142,2020-04-08T15:56:13Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,143,2020-04-08T15:56:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,144,2020-04-08T15:58:10Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,145,2020-04-08T15:56:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,146,2020-04-08T15:57:52Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   223,
					},
					File:   "st_dwithin_test.flux",
					Source: "outData = \"\n#group,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true\n#datatype,string,long,string,string,boolean,dateTime:RFC3339,string,string,double,double,string,string,string,string,long,string\n#default,_result,,,,,,,,,,,,,,,\n,result,table,_measurement,_pt,_st_dwithin,_time,area,id,lat,lon,s2_cell_id,seq_idx,status,stop_id,tid,trip_id\n,,0,mta,start,false,2020-04-08T15:44:58Z,LLIR,GO506_20_6431,40.820317,-73.68691,89c288c54,1,STOPPED_AT,171,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:45:33Z,LLIR,GO506_20_6431,40.815413,-73.690054,89c288dcc,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:45:51Z,LLIR,GO506_20_6431,40.814096,-73.693214,89c288ddc,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:46:12Z,LLIR,GO506_20_6431,40.810699,-73.695214,89c288e0c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:47:45Z,LLIR,GO506_20_6431,40.808517,-73.695594,89c288e14,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:48:04Z,LLIR,GO506_20_6431,40.806882,-73.695858,89c288e3c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:49:01Z,LLIR,GO506_20_6431,40.800397,-73.695023,89c288fcc,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:49:22Z,LLIR,GO506_20_6431,40.796724,-73.699899,89c288fe4,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:50:44Z,LLIR,GO506_20_6431,40.794998,-73.702982,89c289004,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:51:03Z,LLIR,GO506_20_6431,40.793905,-73.705485,89c289aa4,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:51:20Z,LLIR,GO506_20_6431,40.791541,-73.713571,89c289a64,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:51:37Z,LLIR,GO506_20_6431,40.791009,-73.715622,89c289a6c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:51:55Z,LLIR,GO506_20_6431,40.789185,-73.720059,89c289a3c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:52:16Z,LLIR,GO506_20_6431,40.788413,-73.721973,89c289a2c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:52:38Z,LLIR,GO506_20_6431,40.787216,-73.7261,89c28997c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:53:56Z,LLIR,GO506_20_6431,40.786038,-73.72924,89c289974,5,IN_TRANSIT_TO,120,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:54:57Z,LLIR,GO506_20_6431,40.775044,-73.740647,89c289f3c,5,STOPPED_AT,120,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:55:54Z,LLIR,GO506_20_6431,40.773334,-73.742812,89c289f6c,5,STOPPED_AT,120,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:56:13Z,LLIR,GO506_20_6431,40.772144,-73.74431,89c289f74,6,IN_TRANSIT_TO,42,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:56:33Z,LLIR,GO506_20_6431,40.770953,-73.745805,89c289f7c,6,IN_TRANSIT_TO,42,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:56:53Z,LLIR,GO506_20_6431,40.768069,-73.749413,89c28a024,6,STOPPED_AT,42,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:57:52Z,LLIR,GO506_20_6431,40.76661,-73.751322,89c28a03c,6,STOPPED_AT,42,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:58:10Z,LLIR,GO506_20_6431,40.76594,-73.752465,89c28a014,7,IN_TRANSIT_TO,25,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:59:24Z,LLIR,GO506_20_6431,40.763356,-73.769272,89c261e04,7,STOPPED_AT,25,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:01:55Z,LLIR,GO506_20_6431,40.761878,-73.785035,89c261d74,8,IN_TRANSIT_TO,2,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:02:33Z,LLIR,GO506_20_6431,40.761443,-73.789959,89c261d3c,8,STOPPED_AT,2,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:03:36Z,LLIR,GO506_20_6431,40.761241,-73.792932,89c261d34,8,STOPPED_AT,2,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:03:54Z,LLIR,GO506_20_6431,40.76117,-73.795812,89c2602cc,9,IN_TRANSIT_TO,11,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:04:28Z,LLIR,GO506_20_6431,40.761653,-73.801766,89c2602ec,9,STOPPED_AT,11,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:05:46Z,LLIR,GO506_20_6431,40.761908,-73.804421,89c2602f4,9,STOPPED_AT,11,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:06:11Z,LLIR,GO506_20_6431,40.762373,-73.809437,89c260254,10,IN_TRANSIT_TO,130,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:06:31Z,LLIR,GO506_20_6431,40.762441,-73.810154,89c26024c,10,IN_TRANSIT_TO,130,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:06:49Z,LLIR,GO506_20_6431,40.762709,-73.814539,89c260234,10,STOPPED_AT,130,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:07:43Z,LLIR,GO506_20_6431,40.762143,-73.817956,89c26022c,11,IN_TRANSIT_TO,56,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:08:19Z,LLIR,GO506_20_6431,40.759873,-73.826087,89c26010c,11,IN_TRANSIT_TO,56,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:08:38Z,LLIR,GO506_20_6431,40.759128,-73.828799,89c26011c,11,STOPPED_AT,56,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:09:01Z,LLIR,GO506_20_6431,40.757895,-73.831347,89c2600dc,11,STOPPED_AT,56,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:09:36Z,LLIR,GO506_20_6431,40.757106,-73.833095,89c2600c4,11,STOPPED_AT,56,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:09:53Z,LLIR,GO506_20_6431,40.7565,-73.834298,89c2600c4,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:10:29Z,LLIR,GO506_20_6431,40.753279,-73.841791,89c260754,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:10:46Z,LLIR,GO506_20_6431,40.750688,-73.848962,89c25fdbc,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:11:03Z,LLIR,GO506_20_6431,40.749543,-73.852242,89c25fdb4,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:14:32Z,LLIR,GO506_20_6431,40.743989,-73.900815,89c25f1d4,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:14:49Z,LLIR,GO506_20_6431,40.745851,-73.902975,89c25f1d4,12,STOPPED_AT,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:15:59Z,LLIR,GO506_20_6431,40.748141,-73.905367,89c25f1c4,12,STOPPED_AT,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:16:16Z,LLIR,GO506_20_6431,40.748909,-73.906398,89c25f1c4,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:16:50Z,LLIR,GO506_20_6431,40.751085,-73.912119,89c25f18c,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:18:18Z,LLIR,GO506_20_6431,40.748495,-73.927597,89c25f29c,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:19:27Z,LLIR,GO506_20_6431,40.745249,-73.940563,89c2592bc,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   169,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 8,
							Line:   169,
						},
						File:   "st_dwithin_test.flux",
						Source: "outData",
						Start: ast.Position{
							Column: 1,
							Line:   169,
						},
					},
				},
				Name: "outData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   223,
						},
						File:   "st_dwithin_test.flux",
						Source: "\"\n#group,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true\n#datatype,string,long,string,string,boolean,dateTime:RFC3339,string,string,double,double,string,string,string,string,long,string\n#default,_result,,,,,,,,,,,,,,,\n,result,table,_measurement,_pt,_st_dwithin,_time,area,id,lat,lon,s2_cell_id,seq_idx,status,stop_id,tid,trip_id\n,,0,mta,start,false,2020-04-08T15:44:58Z,LLIR,GO506_20_6431,40.820317,-73.68691,89c288c54,1,STOPPED_AT,171,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:45:33Z,LLIR,GO506_20_6431,40.815413,-73.690054,89c288dcc,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:45:51Z,LLIR,GO506_20_6431,40.814096,-73.693214,89c288ddc,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:46:12Z,LLIR,GO506_20_6431,40.810699,-73.695214,89c288e0c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:47:45Z,LLIR,GO506_20_6431,40.808517,-73.695594,89c288e14,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:48:04Z,LLIR,GO506_20_6431,40.806882,-73.695858,89c288e3c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:49:01Z,LLIR,GO506_20_6431,40.800397,-73.695023,89c288fcc,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:49:22Z,LLIR,GO506_20_6431,40.796724,-73.699899,89c288fe4,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:50:44Z,LLIR,GO506_20_6431,40.794998,-73.702982,89c289004,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:51:03Z,LLIR,GO506_20_6431,40.793905,-73.705485,89c289aa4,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:51:20Z,LLIR,GO506_20_6431,40.791541,-73.713571,89c289a64,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:51:37Z,LLIR,GO506_20_6431,40.791009,-73.715622,89c289a6c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:51:55Z,LLIR,GO506_20_6431,40.789185,-73.720059,89c289a3c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:52:16Z,LLIR,GO506_20_6431,40.788413,-73.721973,89c289a2c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:52:38Z,LLIR,GO506_20_6431,40.787216,-73.7261,89c28997c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:53:56Z,LLIR,GO506_20_6431,40.786038,-73.72924,89c289974,5,IN_TRANSIT_TO,120,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:54:57Z,LLIR,GO506_20_6431,40.775044,-73.740647,89c289f3c,5,STOPPED_AT,120,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:55:54Z,LLIR,GO506_20_6431,40.773334,-73.742812,89c289f6c,5,STOPPED_AT,120,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:56:13Z,LLIR,GO506_20_6431,40.772144,-73.74431,89c289f74,6,IN_TRANSIT_TO,42,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:56:33Z,LLIR,GO506_20_6431,40.770953,-73.745805,89c289f7c,6,IN_TRANSIT_TO,42,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:56:53Z,LLIR,GO506_20_6431,40.768069,-73.749413,89c28a024,6,STOPPED_AT,42,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:57:52Z,LLIR,GO506_20_6431,40.76661,-73.751322,89c28a03c,6,STOPPED_AT,42,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:58:10Z,LLIR,GO506_20_6431,40.76594,-73.752465,89c28a014,7,IN_TRANSIT_TO,25,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:59:24Z,LLIR,GO506_20_6431,40.763356,-73.769272,89c261e04,7,STOPPED_AT,25,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:01:55Z,LLIR,GO506_20_6431,40.761878,-73.785035,89c261d74,8,IN_TRANSIT_TO,2,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:02:33Z,LLIR,GO506_20_6431,40.761443,-73.789959,89c261d3c,8,STOPPED_AT,2,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:03:36Z,LLIR,GO506_20_6431,40.761241,-73.792932,89c261d34,8,STOPPED_AT,2,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:03:54Z,LLIR,GO506_20_6431,40.76117,-73.795812,89c2602cc,9,IN_TRANSIT_TO,11,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:04:28Z,LLIR,GO506_20_6431,40.761653,-73.801766,89c2602ec,9,STOPPED_AT,11,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:05:46Z,LLIR,GO506_20_6431,40.761908,-73.804421,89c2602f4,9,STOPPED_AT,11,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:06:11Z,LLIR,GO506_20_6431,40.762373,-73.809437,89c260254,10,IN_TRANSIT_TO,130,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:06:31Z,LLIR,GO506_20_6431,40.762441,-73.810154,89c26024c,10,IN_TRANSIT_TO,130,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:06:49Z,LLIR,GO506_20_6431,40.762709,-73.814539,89c260234,10,STOPPED_AT,130,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:07:43Z,LLIR,GO506_20_6431,40.762143,-73.817956,89c26022c,11,IN_TRANSIT_TO,56,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:08:19Z,LLIR,GO506_20_6431,40.759873,-73.826087,89c26010c,11,IN_TRANSIT_TO,56,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:08:38Z,LLIR,GO506_20_6431,40.759128,-73.828799,89c26011c,11,STOPPED_AT,56,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:09:01Z,LLIR,GO506_20_6431,40.757895,-73.831347,89c2600dc,11,STOPPED_AT,56,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:09:36Z,LLIR,GO506_20_6431,40.757106,-73.833095,89c2600c4,11,STOPPED_AT,56,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:09:53Z,LLIR,GO506_20_6431,40.7565,-73.834298,89c2600c4,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:10:29Z,LLIR,GO506_20_6431,40.753279,-73.841791,89c260754,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:10:46Z,LLIR,GO506_20_6431,40.750688,-73.848962,89c25fdbc,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:11:03Z,LLIR,GO506_20_6431,40.749543,-73.852242,89c25fdb4,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:14:32Z,LLIR,GO506_20_6431,40.743989,-73.900815,89c25f1d4,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:14:49Z,LLIR,GO506_20_6431,40.745851,-73.902975,89c25f1d4,12,STOPPED_AT,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:15:59Z,LLIR,GO506_20_6431,40.748141,-73.905367,89c25f1c4,12,STOPPED_AT,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:16:16Z,LLIR,GO506_20_6431,40.748909,-73.906398,89c25f1c4,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:16:50Z,LLIR,GO506_20_6431,40.751085,-73.912119,89c25f18c,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:18:18Z,LLIR,GO506_20_6431,40.748495,-73.927597,89c25f29c,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:19:27Z,LLIR,GO506_20_6431,40.745249,-73.940563,89c2592bc,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n\"",
						Start: ast.Position{
							Column: 11,
							Line:   169,
						},
					},
				},
				Value: "\n#group,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true\n#datatype,string,long,string,string,boolean,dateTime:RFC3339,string,string,double,double,string,string,string,string,long,string\n#default,_result,,,,,,,,,,,,,,,\n,result,table,_measurement,_pt,_st_dwithin,_time,area,id,lat,lon,s2_cell_id,seq_idx,status,stop_id,tid,trip_id\n,,0,mta,start,false,2020-04-08T15:44:58Z,LLIR,GO506_20_6431,40.820317,-73.68691,89c288c54,1,STOPPED_AT,171,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:45:33Z,LLIR,GO506_20_6431,40.815413,-73.690054,89c288dcc,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:45:51Z,LLIR,GO506_20_6431,40.814096,-73.693214,89c288ddc,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:46:12Z,LLIR,GO506_20_6431,40.810699,-73.695214,89c288e0c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:47:45Z,LLIR,GO506_20_6431,40.808517,-73.695594,89c288e14,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:48:04Z,LLIR,GO506_20_6431,40.806882,-73.695858,89c288e3c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:49:01Z,LLIR,GO506_20_6431,40.800397,-73.695023,89c288fcc,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:49:22Z,LLIR,GO506_20_6431,40.796724,-73.699899,89c288fe4,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:50:44Z,LLIR,GO506_20_6431,40.794998,-73.702982,89c289004,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:51:03Z,LLIR,GO506_20_6431,40.793905,-73.705485,89c289aa4,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:51:20Z,LLIR,GO506_20_6431,40.791541,-73.713571,89c289a64,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:51:37Z,LLIR,GO506_20_6431,40.791009,-73.715622,89c289a6c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:51:55Z,LLIR,GO506_20_6431,40.789185,-73.720059,89c289a3c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:52:16Z,LLIR,GO506_20_6431,40.788413,-73.721973,89c289a2c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:52:38Z,LLIR,GO506_20_6431,40.787216,-73.7261,89c28997c,4,STOPPED_AT,72,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:53:56Z,LLIR,GO506_20_6431,40.786038,-73.72924,89c289974,5,IN_TRANSIT_TO,120,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:54:57Z,LLIR,GO506_20_6431,40.775044,-73.740647,89c289f3c,5,STOPPED_AT,120,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:55:54Z,LLIR,GO506_20_6431,40.773334,-73.742812,89c289f6c,5,STOPPED_AT,120,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:56:13Z,LLIR,GO506_20_6431,40.772144,-73.74431,89c289f74,6,IN_TRANSIT_TO,42,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:56:33Z,LLIR,GO506_20_6431,40.770953,-73.745805,89c289f7c,6,IN_TRANSIT_TO,42,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:56:53Z,LLIR,GO506_20_6431,40.768069,-73.749413,89c28a024,6,STOPPED_AT,42,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:57:52Z,LLIR,GO506_20_6431,40.76661,-73.751322,89c28a03c,6,STOPPED_AT,42,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:58:10Z,LLIR,GO506_20_6431,40.76594,-73.752465,89c28a014,7,IN_TRANSIT_TO,25,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T15:59:24Z,LLIR,GO506_20_6431,40.763356,-73.769272,89c261e04,7,STOPPED_AT,25,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:01:55Z,LLIR,GO506_20_6431,40.761878,-73.785035,89c261d74,8,IN_TRANSIT_TO,2,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:02:33Z,LLIR,GO506_20_6431,40.761443,-73.789959,89c261d3c,8,STOPPED_AT,2,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:03:36Z,LLIR,GO506_20_6431,40.761241,-73.792932,89c261d34,8,STOPPED_AT,2,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:03:54Z,LLIR,GO506_20_6431,40.76117,-73.795812,89c2602cc,9,IN_TRANSIT_TO,11,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:04:28Z,LLIR,GO506_20_6431,40.761653,-73.801766,89c2602ec,9,STOPPED_AT,11,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:05:46Z,LLIR,GO506_20_6431,40.761908,-73.804421,89c2602f4,9,STOPPED_AT,11,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:06:11Z,LLIR,GO506_20_6431,40.762373,-73.809437,89c260254,10,IN_TRANSIT_TO,130,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:06:31Z,LLIR,GO506_20_6431,40.762441,-73.810154,89c26024c,10,IN_TRANSIT_TO,130,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:06:49Z,LLIR,GO506_20_6431,40.762709,-73.814539,89c260234,10,STOPPED_AT,130,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:07:43Z,LLIR,GO506_20_6431,40.762143,-73.817956,89c26022c,11,IN_TRANSIT_TO,56,1586304000,GO506_20_6431\n,,0,mta,via,false,2020-04-08T16:08:19Z,LLIR,GO506_20_6431,40.759873,-73.826087,89c26010c,11,IN_TRANSIT_TO,56,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:08:38Z,LLIR,GO506_20_6431,40.759128,-73.828799,89c26011c,11,STOPPED_AT,56,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:09:01Z,LLIR,GO506_20_6431,40.757895,-73.831347,89c2600dc,11,STOPPED_AT,56,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:09:36Z,LLIR,GO506_20_6431,40.757106,-73.833095,89c2600c4,11,STOPPED_AT,56,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:09:53Z,LLIR,GO506_20_6431,40.7565,-73.834298,89c2600c4,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:10:29Z,LLIR,GO506_20_6431,40.753279,-73.841791,89c260754,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:10:46Z,LLIR,GO506_20_6431,40.750688,-73.848962,89c25fdbc,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:11:03Z,LLIR,GO506_20_6431,40.749543,-73.852242,89c25fdb4,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:14:32Z,LLIR,GO506_20_6431,40.743989,-73.900815,89c25f1d4,12,IN_TRANSIT_TO,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:14:49Z,LLIR,GO506_20_6431,40.745851,-73.902975,89c25f1d4,12,STOPPED_AT,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:15:59Z,LLIR,GO506_20_6431,40.748141,-73.905367,89c25f1c4,12,STOPPED_AT,214,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:16:16Z,LLIR,GO506_20_6431,40.748909,-73.906398,89c25f1c4,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:16:50Z,LLIR,GO506_20_6431,40.751085,-73.912119,89c25f18c,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:18:18Z,LLIR,GO506_20_6431,40.748495,-73.927597,89c25f29c,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n,,0,mta,via,true,2020-04-08T16:19:27Z,LLIR,GO506_20_6431,40.745249,-73.940563,89c2592bc,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 41,
						Line:   226,
					},
					File:   "st_dwithin_test.flux",
					Source: "refPoint = {lat: 40.6892, lon: -74.0445}",
					Start: ast.Position{
						Column: 1,
						Line:   226,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 9,
							Line:   226,
						},
						File:   "st_dwithin_test.flux",
						Source: "refPoint",
						Start: ast.Position{
							Column: 1,
							Line:   226,
						},
					},
				},
				Name: "refPoint",
			},
			Init: &ast.ObjectExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 41,
							Line:   226,
						},
						File:   "st_dwithin_test.flux",
						Source: "{lat: 40.6892, lon: -74.0445}",
						Start: ast.Position{
							Column: 12,
							Line:   226,
						},
					},
				},
				Properties: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 25,
								Line:   226,
							},
							File:   "st_dwithin_test.flux",
							Source: "lat: 40.6892",
							Start: ast.Position{
								Column: 13,
								Line:   226,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 16,
									Line:   226,
								},
								File:   "st_dwithin_test.flux",
								Source: "lat",
								Start: ast.Position{
									Column: 13,
									Line:   226,
								},
							},
						},
						Name: "lat",
					},
					Value: &ast.FloatLiteral{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 25,
									Line:   226,
								},
								File:   "st_dwithin_test.flux",
								Source: "40.6892",
								Start: ast.Position{
									Column: 18,
									Line:   226,
								},
							},
						},
						Value: 40.6892,
					},
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 40,
								Line:   226,
							},
							File:   "st_dwithin_test.flux",
							Source: "lon: -74.0445",
							Start: ast.Position{
								Column: 27,
								Line:   226,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 30,
									Line:   226,
								},
								File:   "st_dwithin_test.flux",
								Source: "lon",
								Start: ast.Position{
									Column: 27,
									Line:   226,
								},
							},
						},
						Name: "lon",
					},
					Value: &ast.UnaryExpression{
						Argument: &ast.FloatLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 40,
										Line:   226,
									},
									File:   "st_dwithin_test.flux",
									Source: "74.0445",
									Start: ast.Position{
										Column: 33,
										Line:   226,
									},
								},
							},
							Value: 74.0445,
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 40,
									Line:   226,
								},
								File:   "st_dwithin_test.flux",
								Source: "-74.0445",
								Start: ast.Position{
									Column: 32,
									Line:   226,
								},
							},
						},
						Operator: 6,
					},
				}},
				With: nil,
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   236,
					},
					File:   "st_dwithin_test.flux",
					Source: "t_stDWithin = (table=<-) =>\n  table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to see the train closing in\n    |> map(fn: (r) => ({\n        r with _st_dwithin: geo.ST_DWithin(region: refPoint, geometry: {lat: r.lat, lon: r.lon}, distance: 20.0)\n    }))\n    |> drop(columns: [\"_start\", \"_stop\"])",
					Start: ast.Position{
						Column: 1,
						Line:   228,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 12,
							Line:   228,
						},
						File:   "st_dwithin_test.flux",
						Source: "t_stDWithin",
						Start: ast.Position{
							Column: 1,
							Line:   228,
						},
					},
				},
				Name: "t_stDWithin",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   236,
						},
						File:   "st_dwithin_test.flux",
						Source: "(table=<-) =>\n  table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to see the train closing in\n    |> map(fn: (r) => ({\n        r with _st_dwithin: geo.ST_DWithin(region: refPoint, geometry: {lat: r.lat, lon: r.lon}, distance: 20.0)\n    }))\n    |> drop(columns: [\"_start\", \"_stop\"])",
						Start: ast.Position{
							Column: 15,
							Line:   228,
						},
					},
				},
				Body: &ast.PipeExpression{
					Argument: &ast.PipeExpression{
						Argument: &ast.PipeExpression{
							Argument: &ast.PipeExpression{
								Argument: &ast.PipeExpression{
									Argument: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 8,
													Line:   229,
												},
												File:   "st_dwithin_test.flux",
												Source: "table",
												Start: ast.Position{
													Column: 3,
													Line:   229,
												},
											},
										},
										Name: "table",
									},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 42,
												Line:   230,
											},
											File:   "st_dwithin_test.flux",
											Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)",
											Start: ast.Position{
												Column: 3,
												Line:   229,
											},
										},
									},
									Call: &ast.CallExpression{
										Arguments: []ast.Expression{&ast.ObjectExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 41,
														Line:   230,
													},
													File:   "st_dwithin_test.flux",
													Source: "start: 2020-04-01T00:00:00Z",
													Start: ast.Position{
														Column: 14,
														Line:   230,
													},
												},
											},
											Properties: []*ast.Property{&ast.Property{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 41,
															Line:   230,
														},
														File:   "st_dwithin_test.flux",
														Source: "start: 2020-04-01T00:00:00Z",
														Start: ast.Position{
															Column: 14,
															Line:   230,
														},
													},
												},
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 19,
																Line:   230,
															},
															File:   "st_dwithin_test.flux",
															Source: "start",
															Start: ast.Position{
																Column: 14,
																Line:   230,
															},
														},
													},
													Name: "start",
												},
												Value: &ast.DateTimeLiteral{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 41,
																Line:   230,
															},
															File:   "st_dwithin_test.flux",
															Source: "2020-04-01T00:00:00Z",
															Start: ast.Position{
																Column: 21,
																Line:   230,
															},
														},
													},
													Value: parser.MustParseTime("2020-04-01T00:00:00Z"),
												},
											}},
											With: nil,
										}},
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   230,
												},
												File:   "st_dwithin_test.flux",
												Source: "range(start: 2020-04-01T00:00:00Z)",
												Start: ast.Position{
													Column: 8,
													Line:   230,
												},
											},
										},
										Callee: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 13,
														Line:   230,
													},
													File:   "st_dwithin_test.flux",
													Source: "range",
													Start: ast.Position{
														Column: 8,
														Line:   230,
													},
												},
											},
											Name: "range",
										},
									},
								},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 25,
											Line:   231,
										},
										File:   "st_dwithin_test.flux",
										Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()",
										Start: ast.Position{
											Column: 3,
											Line:   229,
										},
									},
								},
								Call: &ast.CallExpression{
									Arguments: nil,
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 25,
												Line:   231,
											},
											File:   "st_dwithin_test.flux",
											Source: "v1.fieldsAsCols()",
											Start: ast.Position{
												Column: 8,
												Line:   231,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 23,
													Line:   231,
												},
												File:   "st_dwithin_test.flux",
												Source: "v1.fieldsAsCols",
												Start: ast.Position{
													Column: 8,
													Line:   231,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 10,
														Line:   231,
													},
													File:   "st_dwithin_test.flux",
													Source: "v1",
													Start: ast.Position{
														Column: 8,
														Line:   231,
													},
												},
											},
											Name: "v1",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 23,
														Line:   231,
													},
													File:   "st_dwithin_test.flux",
													Source: "fieldsAsCols",
													Start: ast.Position{
														Column: 11,
														Line:   231,
													},
												},
											},
											Name: "fieldsAsCols",
										},
									},
								},
							},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 47,
										Line:   232,
									},
									File:   "st_dwithin_test.flux",
									Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"])",
									Start: ast.Position{
										Column: 3,
										Line:   229,
									},
								},
							},
							Call: &ast.CallExpression{
								Arguments: []ast.Expression{&ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 46,
												Line:   232,
											},
											File:   "st_dwithin_test.flux",
											Source: "groupBy: [\"id\",\"trip_id\"]",
											Start: ast.Position{
												Column: 21,
												Line:   232,
											},
										},
									},
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 46,
													Line:   232,
												},
												File:   "st_dwithin_test.flux",
												Source: "groupBy: [\"id\",\"trip_id\"]",
												Start: ast.Position{
													Column: 21,
													Line:   232,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 28,
														Line:   232,
													},
													File:   "st_dwithin_test.flux",
													Source: "groupBy",
													Start: ast.Position{
														Column: 21,
														Line:   232,
													},
												},
											},
											Name: "groupBy",
										},
										Value: &ast.ArrayExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 46,
														Line:   232,
													},
													File:   "st_dwithin_test.flux",
													Source: "[\"id\",\"trip_id\"]",
													Start: ast.Position{
														Column: 30,
														Line:   232,
													},
												},
											},
											Elements: []ast.Expression{&ast.StringLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 35,
															Line:   232,
														},
														File:   "st_dwithin_test.flux",
														Source: "\"id\"",
														Start: ast.Position{
															Column: 31,
															Line:   232,
														},
													},
												},
												Value: "id",
											}, &ast.StringLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 45,
															Line:   232,
														},
														File:   "st_dwithin_test.flux",
														Source: "\"trip_id\"",
														Start: ast.Position{
															Column: 36,
															Line:   232,
														},
													},
												},
												Value: "trip_id",
											}},
										},
									}},
									With: nil,
								}},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 47,
											Line:   232,
										},
										File:   "st_dwithin_test.flux",
										Source: "geo.asTracks(groupBy: [\"id\",\"trip_id\"])",
										Start: ast.Position{
											Column: 8,
											Line:   232,
										},
									},
								},
								Callee: &ast.MemberExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 20,
												Line:   232,
											},
											File:   "st_dwithin_test.flux",
											Source: "geo.asTracks",
											Start: ast.Position{
												Column: 8,
												Line:   232,
											},
										},
									},
									Object: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 11,
													Line:   232,
												},
												File:   "st_dwithin_test.flux",
												Source: "geo",
												Start: ast.Position{
													Column: 8,
													Line:   232,
												},
											},
										},
										Name: "geo",
									},
									Property: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 20,
													Line:   232,
												},
												File:   "st_dwithin_test.flux",
												Source: "asTracks",
												Start: ast.Position{
													Column: 12,
													Line:   232,
												},
											},
										},
										Name: "asTracks",
									},
								},
							},
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 8,
									Line:   235,
								},
								File:   "st_dwithin_test.flux",
								Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to see the train closing in\n    |> map(fn: (r) => ({\n        r with _st_dwithin: geo.ST_DWithin(region: refPoint, geometry: {lat: r.lat, lon: r.lon}, distance: 20.0)\n    }))",
								Start: ast.Position{
									Column: 3,
									Line:   229,
								},
							},
						},
						Call: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 7,
											Line:   235,
										},
										File:   "st_dwithin_test.flux",
										Source: "fn: (r) => ({\n        r with _st_dwithin: geo.ST_DWithin(region: refPoint, geometry: {lat: r.lat, lon: r.lon}, distance: 20.0)\n    })",
										Start: ast.Position{
											Column: 12,
											Line:   233,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 7,
												Line:   235,
											},
											File:   "st_dwithin_test.flux",
											Source: "fn: (r) => ({\n        r with _st_dwithin: geo.ST_DWithin(region: refPoint, geometry: {lat: r.lat, lon: r.lon}, distance: 20.0)\n    })",
											Start: ast.Position{
												Column: 12,
												Line:   233,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 14,
													Line:   233,
												},
												File:   "st_dwithin_test.flux",
												Source: "fn",
												Start: ast.Position{
													Column: 12,
													Line:   233,
												},
											},
										},
										Name: "fn",
									},
									Value: &ast.FunctionExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 7,
													Line:   235,
												},
												File:   "st_dwithin_test.flux",
												Source: "(r) => ({\n        r with _st_dwithin: geo.ST_DWithin(region: refPoint, geometry: {lat: r.lat, lon: r.lon}, distance: 20.0)\n    })",
												Start: ast.Position{
													Column: 16,
													Line:   233,
												},
											},
										},
										Body: &ast.ParenExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 7,
														Line:   235,
													},
													File:   "st_dwithin_test.flux",
													Source: "({\n        r with _st_dwithin: geo.ST_DWithin(region: refPoint, geometry: {lat: r.lat, lon: r.lon}, distance: 20.0)\n    })",
													Start: ast.Position{
														Column: 23,
														Line:   233,
													},
												},
											},
											Expression: &ast.ObjectExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 6,
															Line:   235,
														},
														File:   "st_dwithin_test.flux",
														Source: "{\n        r with _st_dwithin: geo.ST_DWithin(region: refPoint, geometry: {lat: r.lat, lon: r.lon}, distance: 20.0)\n    }",
														Start: ast.Position{
															Column: 24,
															Line:   233,
														},
													},
												},
												Properties: []*ast.Property{&ast.Property{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 113,
																Line:   234,
															},
															File:   "st_dwithin_test.flux",
															Source: "_st_dwithin: geo.ST_DWithin(region: refPoint, geometry: {lat: r.lat, lon: r.lon}, distance: 20.0)",
															Start: ast.Position{
																Column: 16,
																Line:   234,
															},
														},
													},
													Key: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 27,
																	Line:   234,
																},
																File:   "st_dwithin_test.flux",
																Source: "_st_dwithin",
																Start: ast.Position{
																	Column: 16,
																	Line:   234,
																},
															},
														},
														Name: "_st_dwithin",
													},
													Value: &ast.CallExpression{
														Arguments: []ast.Expression{&ast.ObjectExpression{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 112,
																		Line:   234,
																	},
																	File:   "st_dwithin_test.flux",
																	Source: "region: refPoint, geometry: {lat: r.lat, lon: r.lon}, distance: 20.0",
																	Start: ast.Position{
																		Column: 44,
																		Line:   234,
																	},
																},
															},
															Properties: []*ast.Property{&ast.Property{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 60,
																			Line:   234,
																		},
																		File:   "st_dwithin_test.flux",
																		Source: "region: refPoint",
																		Start: ast.Position{
																			Column: 44,
																			Line:   234,
																		},
																	},
																},
																Key: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 50,
																				Line:   234,
																			},
																			File:   "st_dwithin_test.flux",
																			Source: "region",
																			Start: ast.Position{
																				Column: 44,
																				Line:   234,
																			},
																		},
																	},
																	Name: "region",
																},
																Value: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 60,
																				Line:   234,
																			},
																			File:   "st_dwithin_test.flux",
																			Source: "refPoint",
																			Start: ast.Position{
																				Column: 52,
																				Line:   234,
																			},
																		},
																	},
																	Name: "refPoint",
																},
															}, &ast.Property{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 96,
																			Line:   234,
																		},
																		File:   "st_dwithin_test.flux",
																		Source: "geometry: {lat: r.lat, lon: r.lon}",
																		Start: ast.Position{
																			Column: 62,
																			Line:   234,
																		},
																	},
																},
																Key: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 70,
																				Line:   234,
																			},
																			File:   "st_dwithin_test.flux",
																			Source: "geometry",
																			Start: ast.Position{
																				Column: 62,
																				Line:   234,
																			},
																		},
																	},
																	Name: "geometry",
																},
																Value: &ast.ObjectExpression{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 96,
																				Line:   234,
																			},
																			File:   "st_dwithin_test.flux",
																			Source: "{lat: r.lat, lon: r.lon}",
																			Start: ast.Position{
																				Column: 72,
																				Line:   234,
																			},
																		},
																	},
																	Properties: []*ast.Property{&ast.Property{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 83,
																					Line:   234,
																				},
																				File:   "st_dwithin_test.flux",
																				Source: "lat: r.lat",
																				Start: ast.Position{
																					Column: 73,
																					Line:   234,
																				},
																			},
																		},
																		Key: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 76,
																						Line:   234,
																					},
																					File:   "st_dwithin_test.flux",
																					Source: "lat",
																					Start: ast.Position{
																						Column: 73,
																						Line:   234,
																					},
																				},
																			},
																			Name: "lat",
																		},
																		Value: &ast.MemberExpression{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 83,
																						Line:   234,
																					},
																					File:   "st_dwithin_test.flux",
																					Source: "r.lat",
																					Start: ast.Position{
																						Column: 78,
																						Line:   234,
																					},
																				},
																			},
																			Object: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 79,
																							Line:   234,
																						},
																						File:   "st_dwithin_test.flux",
																						Source: "r",
																						Start: ast.Position{
																							Column: 78,
																							Line:   234,
																						},
																					},
																				},
																				Name: "r",
																			},
																			Property: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 83,
																							Line:   234,
																						},
																						File:   "st_dwithin_test.flux",
																						Source: "lat",
																						Start: ast.Position{
																							Column: 80,
																							Line:   234,
																						},
																					},
																				},
																				Name: "lat",
																			},
																		},
																	}, &ast.Property{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 95,
																					Line:   234,
																				},
																				File:   "st_dwithin_test.flux",
																				Source: "lon: r.lon",
																				Start: ast.Position{
																					Column: 85,
																					Line:   234,
																				},
																			},
																		},
																		Key: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 88,
																						Line:   234,
																					},
																					File:   "st_dwithin_test.flux",
																					Source: "lon",
																					Start: ast.Position{
																						Column: 85,
																						Line:   234,
																					},
																				},
																			},
																			Name: "lon",
																		},
																		Value: &ast.MemberExpression{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 95,
																						Line:   234,
																					},
																					File:   "st_dwithin_test.flux",
																					Source: "r.lon",
																					Start: ast.Position{
																						Column: 90,
																						Line:   234,
																					},
																				},
																			},
																			Object: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 91,
																							Line:   234,
																						},
																						File:   "st_dwithin_test.flux",
																						Source: "r",
																						Start: ast.Position{
																							Column: 90,
																							Line:   234,
																						},
																					},
																				},
																				Name: "r",
																			},
																			Property: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 95,
																							Line:   234,
																						},
																						File:   "st_dwithin_test.flux",
																						Source: "lon",
																						Start: ast.Position{
																							Column: 92,
																							Line:   234,
																						},
																					},
																				},
																				Name: "lon",
																			},
																		},
																	}},
																	With: nil,
																},
															}, &ast.Property{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 112,
																			Line:   234,
																		},
																		File:   "st_dwithin_test.flux",
																		Source: "distance: 20.0",
																		Start: ast.Position{
																			Column: 98,
																			Line:   234,
																		},
																	},
																},
																Key: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 106,
																				Line:   234,
																			},
																			File:   "st_dwithin_test.flux",
																			Source: "distance",
																			Start: ast.Position{
																				Column: 98,
																				Line:   234,
																			},
																		},
																	},
																	Name: "distance",
																},
																Value: &ast.FloatLiteral{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 112,
																				Line:   234,
																			},
																			File:   "st_dwithin_test.flux",
																			Source: "20.0",
																			Start: ast.Position{
																				Column: 108,
																				Line:   234,
																			},
																		},
																	},
																	Value: 20.0,
																},
															}},
															With: nil,
														}},
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 113,
																	Line:   234,
																},
																File:   "st_dwithin_test.flux",
																Source: "geo.ST_DWithin(region: refPoint, geometry: {lat: r.lat, lon: r.lon}, distance: 20.0)",
																Start: ast.Position{
																	Column: 29,
																	Line:   234,
																},
															},
														},
														Callee: &ast.MemberExpression{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 43,
																		Line:   234,
																	},
																	File:   "st_dwithin_test.flux",
																	Source: "geo.ST_DWithin",
																	Start: ast.Position{
																		Column: 29,
																		Line:   234,
																	},
																},
															},
															Object: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 32,
																			Line:   234,
																		},
																		File:   "st_dwithin_test.flux",
																		Source: "geo",
																		Start: ast.Position{
																			Column: 29,
																			Line:   234,
																		},
																	},
																},
																Name: "geo",
															},
															Property: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 43,
																			Line:   234,
																		},
																		File:   "st_dwithin_test.flux",
																		Source: "ST_DWithin",
																		Start: ast.Position{
																			Column: 33,
																			Line:   234,
																		},
																	},
																},
																Name: "ST_DWithin",
															},
														},
													},
												}},
												With: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 10,
																Line:   234,
															},
															File:   "st_dwithin_test.flux",
															Source: "r",
															Start: ast.Position{
																Column: 9,
																Line:   234,
															},
														},
													},
													Name: "r",
												},
											},
										},
										Params: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   233,
													},
													File:   "st_dwithin_test.flux",
													Source: "r",
													Start: ast.Position{
														Column: 17,
														Line:   233,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 18,
															Line:   233,
														},
														File:   "st_dwithin_test.flux",
														Source: "r",
														Start: ast.Position{
															Column: 17,
															Line:   233,
														},
													},
												},
												Name: "r",
											},
											Value: nil,
										}},
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 8,
										Line:   235,
									},
									File:   "st_dwithin_test.flux",
									Source: "map(fn: (r) => ({\n        r with _st_dwithin: geo.ST_DWithin(region: refPoint, geometry: {lat: r.lat, lon: r.lon}, distance: 20.0)\n    }))",
									Start: ast.Position{
										Column: 8,
										Line:   233,
									},
								},
							},
							Callee: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 11,
											Line:   233,
										},
										File:   "st_dwithin_test.flux",
										Source: "map",
										Start: ast.Position{
											Column: 8,
											Line:   233,
										},
									},
								},
								Name: "map",
							},
						},
					},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   236,
							},
							File:   "st_dwithin_test.flux",
							Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to see the train closing in\n    |> map(fn: (r) => ({\n        r with _st_dwithin: geo.ST_DWithin(region: refPoint, geometry: {lat: r.lat, lon: r.lon}, distance: 20.0)\n    }))\n    |> drop(columns: [\"_start\", \"_stop\"])",
							Start: ast.Position{
								Column: 3,
								Line:   229,
							},
						},
					},
					Call: &ast.CallExpression{
						Arguments: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   236,
									},
									File:   "st_dwithin_test.flux",
									Source: "columns: [\"_start\", \"_stop\"]",
									Start: ast.Position{
										Column: 13,
										Line:   236,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 41,
											Line:   236,
										},
										File:   "st_dwithin_test.flux",
										Source: "columns: [\"_start\", \"_stop\"]",
										Start: ast.Position{
											Column: 13,
											Line:   236,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 20,
												Line:   236,
											},
											File:   "st_dwithin_test.flux",
											Source: "columns",
											Start: ast.Position{
												Column: 13,
												Line:   236,
											},
										},
									},
									Name: "columns",
								},
								Value: &ast.ArrayExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 41,
												Line:   236,
											},
											File:   "st_dwithin_test.flux",
											Source: "[\"_start\", \"_stop\"]",
											Start: ast.Position{
												Column: 22,
												Line:   236,
											},
										},
									},
									Elements: []ast.Expression{&ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 31,
													Line:   236,
												},
												File:   "st_dwithin_test.flux",
												Source: "\"_start\"",
												Start: ast.Position{
													Column: 23,
													Line:   236,
												},
											},
										},
										Value: "_start",
									}, &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 40,
													Line:   236,
												},
												File:   "st_dwithin_test.flux",
												Source: "\"_stop\"",
												Start: ast.Position{
													Column: 33,
													Line:   236,
												},
											},
										},
										Value: "_stop",
									}},
								},
							}},
							With: nil,
						}},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   236,
								},
								File:   "st_dwithin_test.flux",
								Source: "drop(columns: [\"_start\", \"_stop\"])",
								Start: ast.Position{
									Column: 8,
									Line:   236,
								},
							},
						},
						Callee: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 12,
										Line:   236,
									},
									File:   "st_dwithin_test.flux",
									Source: "drop",
									Start: ast.Position{
										Column: 8,
										Line:   236,
									},
								},
							},
							Name: "drop",
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 24,
								Line:   228,
							},
							File:   "st_dwithin_test.flux",
							Source: "table=<-",
							Start: ast.Position{
								Column: 16,
								Line:   228,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 21,
									Line:   228,
								},
								File:   "st_dwithin_test.flux",
								Source: "table",
								Start: ast.Position{
									Column: 16,
									Line:   228,
								},
							},
						},
						Name: "table",
					},
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 24,
								Line:   228,
							},
							File:   "st_dwithin_test.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 22,
								Line:   228,
							},
						},
					}},
				}},
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 99,
							Line:   238,
						},
						File:   "st_dwithin_test.flux",
						Source: "_stDWithin = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stDWithin})",
						Start: ast.Position{
							Column: 6,
							Line:   237,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 16,
								Line:   237,
							},
							File:   "st_dwithin_test.flux",
							Source: "_stDWithin",
							Start: ast.Position{
								Column: 6,
								Line:   237,
							},
						},
					},
					Name: "_stDWithin",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 99,
								Line:   238,
							},
							File:   "st_dwithin_test.flux",
							Source: "() =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stDWithin})",
							Start: ast.Position{
								Column: 19,
								Line:   237,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 99,
									Line:   238,
								},
								File:   "st_dwithin_test.flux",
								Source: "({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stDWithin})",
								Start: ast.Position{
									Column: 2,
									Line:   238,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 98,
										Line:   238,
									},
									File:   "st_dwithin_test.flux",
									Source: "{input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stDWithin}",
									Start: ast.Position{
										Column: 3,
										Line:   238,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 43,
											Line:   238,
										},
										File:   "st_dwithin_test.flux",
										Source: "input: testing.loadStorage(csv: inData)",
										Start: ast.Position{
											Column: 4,
											Line:   238,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 9,
												Line:   238,
											},
											File:   "st_dwithin_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 4,
												Line:   238,
											},
										},
									},
									Name: "input",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   238,
												},
												File:   "st_dwithin_test.flux",
												Source: "csv: inData",
												Start: ast.Position{
													Column: 31,
													Line:   238,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 42,
														Line:   238,
													},
													File:   "st_dwithin_test.flux",
													Source: "csv: inData",
													Start: ast.Position{
														Column: 31,
														Line:   238,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 34,
															Line:   238,
														},
														File:   "st_dwithin_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 31,
															Line:   238,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 42,
															Line:   238,
														},
														File:   "st_dwithin_test.flux",
														Source: "inData",
														Start: ast.Position{
															Column: 36,
															Line:   238,
														},
													},
												},
												Name: "inData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 43,
												Line:   238,
											},
											File:   "st_dwithin_test.flux",
											Source: "testing.loadStorage(csv: inData)",
											Start: ast.Position{
												Column: 11,
												Line:   238,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   238,
												},
												File:   "st_dwithin_test.flux",
												Source: "testing.loadStorage",
												Start: ast.Position{
													Column: 11,
													Line:   238,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   238,
													},
													File:   "st_dwithin_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 11,
														Line:   238,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 30,
														Line:   238,
													},
													File:   "st_dwithin_test.flux",
													Source: "loadStorage",
													Start: ast.Position{
														Column: 19,
														Line:   238,
													},
												},
											},
											Name: "loadStorage",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 80,
											Line:   238,
										},
										File:   "st_dwithin_test.flux",
										Source: "want: testing.loadMem(csv: outData)",
										Start: ast.Position{
											Column: 45,
											Line:   238,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 49,
												Line:   238,
											},
											File:   "st_dwithin_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 45,
												Line:   238,
											},
										},
									},
									Name: "want",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 79,
													Line:   238,
												},
												File:   "st_dwithin_test.flux",
												Source: "csv: outData",
												Start: ast.Position{
													Column: 67,
													Line:   238,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 79,
														Line:   238,
													},
													File:   "st_dwithin_test.flux",
													Source: "csv: outData",
													Start: ast.Position{
														Column: 67,
														Line:   238,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 70,
															Line:   238,
														},
														File:   "st_dwithin_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 67,
															Line:   238,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 79,
															Line:   238,
														},
														File:   "st_dwithin_test.flux",
														Source: "outData",
														Start: ast.Position{
															Column: 72,
															Line:   238,
														},
													},
												},
												Name: "outData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 80,
												Line:   238,
											},
											File:   "st_dwithin_test.flux",
											Source: "testing.loadMem(csv: outData)",
											Start: ast.Position{
												Column: 51,
												Line:   238,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   238,
												},
												File:   "st_dwithin_test.flux",
												Source: "testing.loadMem",
												Start: ast.Position{
													Column: 51,
													Line:   238,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 58,
														Line:   238,
													},
													File:   "st_dwithin_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 51,
														Line:   238,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 66,
														Line:   238,
													},
													File:   "st_dwithin_test.flux",
													Source: "loadMem",
													Start: ast.Position{
														Column: 59,
														Line:   238,
													},
												},
											},
											Name: "loadMem",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 97,
											Line:   238,
										},
										File:   "st_dwithin_test.flux",
										Source: "fn: t_stDWithin",
										Start: ast.Position{
											Column: 82,
											Line:   238,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 84,
												Line:   238,
											},
											File:   "st_dwithin_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 82,
												Line:   238,
											},
										},
									},
									Name: "fn",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 97,
												Line:   238,
											},
											File:   "st_dwithin_test.flux",
											Source: "t_stDWithin",
											Start: ast.Position{
												Column: 86,
												Line:   238,
											},
										},
									},
									Name: "t_stDWithin",
								},
							}},
							With: nil,
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 99,
						Line:   238,
					},
					File:   "st_dwithin_test.flux",
					Source: "test _stDWithin = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stDWithin})",
					Start: ast.Position{
						Column: 1,
						Line:   237,
					},
				},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 26,
						Line:   3,
					},
					File:   "st_dwithin_test.flux",
					Source: "import \"experimental/geo\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 26,
							Line:   3,
						},
						File:   "st_dwithin_test.flux",
						Source: "\"experimental/geo\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "experimental/geo",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 32,
						Line:   4,
					},
					File:   "st_dwithin_test.flux",
					Source: "import \"influxdata/influxdb/v1\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 32,
							Line:   4,
						},
						File:   "st_dwithin_test.flux",
						Source: "\"influxdata/influxdb/v1\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "influxdata/influxdb/v1",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   5,
					},
					File:   "st_dwithin_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   5,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   5,
						},
						File:   "st_dwithin_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   5,
						},
					},
				},
				Value: "testing",
			},
		}},
		Metadata: "parser-type=rust",
		Name:     "st_dwithin_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   1,
					},
					File:   "st_dwithin_test.flux",
					Source: "package geo_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   1,
						},
						File:   "st_dwithin_test.flux",
						Source: "geo_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "geo_test",
			},
		},
	}, &ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 112,
					Line:   190,
				},
				File:   "st_intersects_linestring_test.flux",
				Source: "package geo_test\n\nimport \"experimental/geo\"\nimport \"influxdata/influxdb/v1\"\nimport \"testing\"\n\noption now = () => (2030-01-01T00:00:00Z)\n\ninData = \"\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,0,2020-04-08T15:44:58Z,40.820317,lat,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,1,2020-04-08T16:19:27Z,40.745249,lat,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,2,2020-04-08T16:16:50Z,40.751085,lat,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,3,2020-04-08T16:15:59Z,40.748141,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,4,2020-04-08T16:16:16Z,40.748909,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,5,2020-04-08T16:14:32Z,40.743989,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,6,2020-04-08T16:14:49Z,40.745851,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,7,2020-04-08T16:18:18Z,40.748495,lat,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,8,2020-04-08T16:11:03Z,40.749543,lat,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,9,2020-04-08T16:10:46Z,40.750688,lat,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,10,2020-04-08T16:09:36Z,40.757106,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,11,2020-04-08T16:09:53Z,40.7565,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,12,2020-04-08T16:09:01Z,40.757895,lat,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,13,2020-04-08T16:08:19Z,40.759873,lat,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,14,2020-04-08T16:08:38Z,40.759128,lat,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,15,2020-04-08T16:07:43Z,40.762143,lat,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,16,2020-04-08T16:06:49Z,40.762709,lat,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,17,2020-04-08T16:06:31Z,40.762441,lat,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,18,2020-04-08T16:06:11Z,40.762373,lat,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,19,2020-04-08T16:03:54Z,40.76117,lat,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,20,2020-04-08T16:04:28Z,40.761653,lat,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,21,2020-04-08T16:05:46Z,40.761908,lat,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,22,2020-04-08T16:10:29Z,40.753279,lat,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,23,2020-04-08T16:03:36Z,40.761241,lat,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,24,2020-04-08T16:02:33Z,40.761443,lat,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,25,2020-04-08T16:01:55Z,40.761878,lat,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,26,2020-04-08T15:59:24Z,40.763356,lat,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,27,2020-04-08T15:45:33Z,40.815413,lat,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,28,2020-04-08T15:45:51Z,40.814096,lat,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,29,2020-04-08T15:46:12Z,40.810699,lat,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,30,2020-04-08T15:47:45Z,40.808517,lat,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,31,2020-04-08T15:48:04Z,40.806882,lat,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,32,2020-04-08T15:49:01Z,40.800397,lat,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,33,2020-04-08T15:49:22Z,40.796724,lat,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,34,2020-04-08T15:50:44Z,40.794998,lat,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,35,2020-04-08T15:53:56Z,40.786038,lat,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,36,2020-04-08T15:52:38Z,40.787216,lat,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,37,2020-04-08T15:52:16Z,40.788413,lat,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,38,2020-04-08T15:51:55Z,40.789185,lat,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,39,2020-04-08T15:51:20Z,40.791541,lat,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,40,2020-04-08T15:51:37Z,40.791009,lat,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,41,2020-04-08T15:51:03Z,40.793905,lat,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,42,2020-04-08T15:54:57Z,40.775044,lat,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,43,2020-04-08T15:55:54Z,40.773334,lat,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,44,2020-04-08T15:56:13Z,40.772144,lat,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,45,2020-04-08T15:56:33Z,40.770953,lat,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,46,2020-04-08T15:58:10Z,40.76594,lat,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,47,2020-04-08T15:56:53Z,40.768069,lat,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,48,2020-04-08T15:57:52Z,40.76661,lat,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n,,49,2020-04-08T15:44:58Z,-73.68691,lon,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,50,2020-04-08T16:19:27Z,-73.940563,lon,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,51,2020-04-08T16:16:50Z,-73.912119,lon,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,52,2020-04-08T16:15:59Z,-73.905367,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,53,2020-04-08T16:16:16Z,-73.906398,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,54,2020-04-08T16:14:32Z,-73.900815,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,55,2020-04-08T16:14:49Z,-73.902975,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,56,2020-04-08T16:18:18Z,-73.927597,lon,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,57,2020-04-08T16:11:03Z,-73.852242,lon,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,58,2020-04-08T16:10:46Z,-73.848962,lon,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,59,2020-04-08T16:09:36Z,-73.833095,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,60,2020-04-08T16:09:53Z,-73.834298,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,61,2020-04-08T16:09:01Z,-73.831347,lon,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,62,2020-04-08T16:08:19Z,-73.826087,lon,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,63,2020-04-08T16:08:38Z,-73.828799,lon,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,64,2020-04-08T16:07:43Z,-73.817956,lon,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,65,2020-04-08T16:06:49Z,-73.814539,lon,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,66,2020-04-08T16:06:31Z,-73.810154,lon,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,67,2020-04-08T16:06:11Z,-73.809437,lon,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,68,2020-04-08T16:03:54Z,-73.795812,lon,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,69,2020-04-08T16:04:28Z,-73.801766,lon,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,70,2020-04-08T16:05:46Z,-73.804421,lon,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,71,2020-04-08T16:10:29Z,-73.841791,lon,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,72,2020-04-08T16:03:36Z,-73.792932,lon,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,73,2020-04-08T16:02:33Z,-73.789959,lon,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,74,2020-04-08T16:01:55Z,-73.785035,lon,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,75,2020-04-08T15:59:24Z,-73.769272,lon,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,76,2020-04-08T15:45:33Z,-73.690054,lon,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,77,2020-04-08T15:45:51Z,-73.693214,lon,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,78,2020-04-08T15:46:12Z,-73.695214,lon,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,79,2020-04-08T15:47:45Z,-73.695594,lon,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,80,2020-04-08T15:48:04Z,-73.695858,lon,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,81,2020-04-08T15:49:01Z,-73.695023,lon,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,82,2020-04-08T15:49:22Z,-73.699899,lon,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,83,2020-04-08T15:50:44Z,-73.702982,lon,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,84,2020-04-08T15:53:56Z,-73.72924,lon,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,85,2020-04-08T15:52:38Z,-73.7261,lon,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,86,2020-04-08T15:52:16Z,-73.721973,lon,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,87,2020-04-08T15:51:55Z,-73.720059,lon,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,88,2020-04-08T15:51:20Z,-73.713571,lon,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,89,2020-04-08T15:51:37Z,-73.715622,lon,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,90,2020-04-08T15:51:03Z,-73.705485,lon,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,91,2020-04-08T15:54:57Z,-73.740647,lon,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,92,2020-04-08T15:55:54Z,-73.742812,lon,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,93,2020-04-08T15:56:13Z,-73.74431,lon,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,94,2020-04-08T15:56:33Z,-73.745805,lon,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,95,2020-04-08T15:58:10Z,-73.752465,lon,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,96,2020-04-08T15:56:53Z,-73.749413,lon,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,97,2020-04-08T15:57:52Z,-73.751322,lon,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,98,2020-04-08T15:44:58Z,1586304000,tid,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,99,2020-04-08T16:19:27Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,100,2020-04-08T16:16:50Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,101,2020-04-08T16:15:59Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,102,2020-04-08T16:16:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,103,2020-04-08T16:14:32Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,104,2020-04-08T16:14:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,105,2020-04-08T16:18:18Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,106,2020-04-08T16:11:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,107,2020-04-08T16:10:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,108,2020-04-08T16:09:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,109,2020-04-08T16:09:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,110,2020-04-08T16:09:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,111,2020-04-08T16:08:19Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,112,2020-04-08T16:08:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,113,2020-04-08T16:07:43Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,114,2020-04-08T16:06:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,115,2020-04-08T16:06:31Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,116,2020-04-08T16:06:11Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,117,2020-04-08T16:03:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,118,2020-04-08T16:04:28Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,119,2020-04-08T16:05:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,120,2020-04-08T16:10:29Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,121,2020-04-08T16:03:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,122,2020-04-08T16:02:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,123,2020-04-08T16:01:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,124,2020-04-08T15:59:24Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,125,2020-04-08T15:45:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,126,2020-04-08T15:45:51Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,127,2020-04-08T15:46:12Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,128,2020-04-08T15:47:45Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,129,2020-04-08T15:48:04Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,130,2020-04-08T15:49:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,131,2020-04-08T15:49:22Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,132,2020-04-08T15:50:44Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,133,2020-04-08T15:53:56Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,134,2020-04-08T15:52:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,135,2020-04-08T15:52:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,136,2020-04-08T15:51:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,137,2020-04-08T15:51:20Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,138,2020-04-08T15:51:37Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,139,2020-04-08T15:51:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,140,2020-04-08T15:54:57Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,141,2020-04-08T15:55:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,142,2020-04-08T15:56:13Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,143,2020-04-08T15:56:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,144,2020-04-08T15:58:10Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,145,2020-04-08T15:56:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,146,2020-04-08T15:57:52Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\"\n\noutData = \"\n#group,false,false,false,true,false,true\n#datatype,string,long,boolean,string,string,string\n#default,_result,,,,,\n,result,table,_st_intersects,id,st_linestring,trip_id\n,,0,true,GO506_20_6431,\\\"-73.68691 40.820317, -73.690054 40.815413, -73.693214 40.814096, -73.695214 40.810699, -73.695594 40.808517, -73.695858 40.806882, -73.695023 40.800397, -73.699899 40.796724, -73.702982 40.794998, -73.705485 40.793905, -73.713571 40.791541, -73.715622 40.791009, -73.720059 40.789185, -73.721973 40.788413, -73.7261 40.787216, -73.72924 40.786038, -73.740647 40.775044, -73.742812 40.773334, -73.74431 40.772144, -73.745805 40.770953, -73.749413 40.768069, -73.751322 40.76661, -73.752465 40.76594, -73.769272 40.763356, -73.785035 40.761878, -73.789959 40.761443, -73.792932 40.761241, -73.795812 40.76117, -73.801766 40.761653, -73.804421 40.761908, -73.809437 40.762373, -73.810154 40.762441, -73.814539 40.762709, -73.817956 40.762143, -73.826087 40.759873, -73.828799 40.759128, -73.831347 40.757895, -73.833095 40.757106, -73.834298 40.7565, -73.841791 40.753279, -73.848962 40.750688, -73.852242 40.749543, -73.900815 40.743989, -73.902975 40.745851, -73.905367 40.748141, -73.906398 40.748909, -73.912119 40.751085, -73.927597 40.748495, -73.940563 40.745249\\\",GO506_20_6431\n\"\n\n// polygon in Brooklyn\nbt = {points: [{lat: 40.671659, lon: -73.936631}, {lat: 40.706543, lon: -73.749177},{lat: 40.791333, lon: -73.880327}]}\n\nt_stIntersectsLinestring = (table=<-) =>\n  table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to see train crossing defined region\n    |> geo.ST_LineString()\n    |> map(fn: (r) => ({\n        r with _st_intersects: geo.ST_Intersects(region: bt, geometry: {linestring: r.st_linestring})\n    }))\n    |> drop(columns: [\"_start\", \"_stop\"])\ntest _stIntersectsLinestring = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stIntersectsLinestring})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   7,
						},
						File:   "st_intersects_linestring_test.flux",
						Source: "now = () => (2030-01-01T00:00:00Z)",
						Start: ast.Position{
							Column: 8,
							Line:   7,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   7,
							},
							File:   "st_intersects_linestring_test.flux",
							Source: "now",
							Start: ast.Position{
								Column: 8,
								Line:   7,
							},
						},
					},
					Name: "now",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   7,
							},
							File:   "st_intersects_linestring_test.flux",
							Source: "() => (2030-01-01T00:00:00Z)",
							Start: ast.Position{
								Column: 14,
								Line:   7,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   7,
								},
								File:   "st_intersects_linestring_test.flux",
								Source: "(2030-01-01T00:00:00Z)",
								Start: ast.Position{
									Column: 20,
									Line:   7,
								},
							},
						},
						Expression: &ast.DateTimeLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   7,
									},
									File:   "st_intersects_linestring_test.flux",
									Source: "2030-01-01T00:00:00Z",
									Start: ast.Position{
										Column: 21,
										Line:   7,
									},
								},
							},
							Value: parser.MustParseTime("2030-01-01T00:00:00Z"),
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   7,
					},
					File:   "st_intersects_linestring_test.flux",
					Source: "option now = () => (2030-01-01T00:00:00Z)",
					Start: ast.Position{
						Column: 1,
						Line:   7,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   166,
					},
					File:   "st_intersects_linestring_test.flux",
					Source: "inData = \"\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,0,2020-04-08T15:44:58Z,40.820317,lat,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,1,2020-04-08T16:19:27Z,40.745249,lat,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,2,2020-04-08T16:16:50Z,40.751085,lat,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,3,2020-04-08T16:15:59Z,40.748141,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,4,2020-04-08T16:16:16Z,40.748909,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,5,2020-04-08T16:14:32Z,40.743989,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,6,2020-04-08T16:14:49Z,40.745851,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,7,2020-04-08T16:18:18Z,40.748495,lat,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,8,2020-04-08T16:11:03Z,40.749543,lat,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,9,2020-04-08T16:10:46Z,40.750688,lat,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,10,2020-04-08T16:09:36Z,40.757106,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,11,2020-04-08T16:09:53Z,40.7565,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,12,2020-04-08T16:09:01Z,40.757895,lat,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,13,2020-04-08T16:08:19Z,40.759873,lat,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,14,2020-04-08T16:08:38Z,40.759128,lat,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,15,2020-04-08T16:07:43Z,40.762143,lat,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,16,2020-04-08T16:06:49Z,40.762709,lat,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,17,2020-04-08T16:06:31Z,40.762441,lat,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,18,2020-04-08T16:06:11Z,40.762373,lat,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,19,2020-04-08T16:03:54Z,40.76117,lat,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,20,2020-04-08T16:04:28Z,40.761653,lat,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,21,2020-04-08T16:05:46Z,40.761908,lat,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,22,2020-04-08T16:10:29Z,40.753279,lat,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,23,2020-04-08T16:03:36Z,40.761241,lat,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,24,2020-04-08T16:02:33Z,40.761443,lat,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,25,2020-04-08T16:01:55Z,40.761878,lat,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,26,2020-04-08T15:59:24Z,40.763356,lat,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,27,2020-04-08T15:45:33Z,40.815413,lat,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,28,2020-04-08T15:45:51Z,40.814096,lat,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,29,2020-04-08T15:46:12Z,40.810699,lat,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,30,2020-04-08T15:47:45Z,40.808517,lat,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,31,2020-04-08T15:48:04Z,40.806882,lat,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,32,2020-04-08T15:49:01Z,40.800397,lat,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,33,2020-04-08T15:49:22Z,40.796724,lat,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,34,2020-04-08T15:50:44Z,40.794998,lat,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,35,2020-04-08T15:53:56Z,40.786038,lat,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,36,2020-04-08T15:52:38Z,40.787216,lat,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,37,2020-04-08T15:52:16Z,40.788413,lat,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,38,2020-04-08T15:51:55Z,40.789185,lat,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,39,2020-04-08T15:51:20Z,40.791541,lat,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,40,2020-04-08T15:51:37Z,40.791009,lat,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,41,2020-04-08T15:51:03Z,40.793905,lat,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,42,2020-04-08T15:54:57Z,40.775044,lat,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,43,2020-04-08T15:55:54Z,40.773334,lat,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,44,2020-04-08T15:56:13Z,40.772144,lat,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,45,2020-04-08T15:56:33Z,40.770953,lat,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,46,2020-04-08T15:58:10Z,40.76594,lat,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,47,2020-04-08T15:56:53Z,40.768069,lat,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,48,2020-04-08T15:57:52Z,40.76661,lat,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n,,49,2020-04-08T15:44:58Z,-73.68691,lon,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,50,2020-04-08T16:19:27Z,-73.940563,lon,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,51,2020-04-08T16:16:50Z,-73.912119,lon,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,52,2020-04-08T16:15:59Z,-73.905367,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,53,2020-04-08T16:16:16Z,-73.906398,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,54,2020-04-08T16:14:32Z,-73.900815,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,55,2020-04-08T16:14:49Z,-73.902975,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,56,2020-04-08T16:18:18Z,-73.927597,lon,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,57,2020-04-08T16:11:03Z,-73.852242,lon,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,58,2020-04-08T16:10:46Z,-73.848962,lon,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,59,2020-04-08T16:09:36Z,-73.833095,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,60,2020-04-08T16:09:53Z,-73.834298,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,61,2020-04-08T16:09:01Z,-73.831347,lon,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,62,2020-04-08T16:08:19Z,-73.826087,lon,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,63,2020-04-08T16:08:38Z,-73.828799,lon,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,64,2020-04-08T16:07:43Z,-73.817956,lon,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,65,2020-04-08T16:06:49Z,-73.814539,lon,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,66,2020-04-08T16:06:31Z,-73.810154,lon,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,67,2020-04-08T16:06:11Z,-73.809437,lon,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,68,2020-04-08T16:03:54Z,-73.795812,lon,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,69,2020-04-08T16:04:28Z,-73.801766,lon,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,70,2020-04-08T16:05:46Z,-73.804421,lon,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,71,2020-04-08T16:10:29Z,-73.841791,lon,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,72,2020-04-08T16:03:36Z,-73.792932,lon,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,73,2020-04-08T16:02:33Z,-73.789959,lon,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,74,2020-04-08T16:01:55Z,-73.785035,lon,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,75,2020-04-08T15:59:24Z,-73.769272,lon,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,76,2020-04-08T15:45:33Z,-73.690054,lon,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,77,2020-04-08T15:45:51Z,-73.693214,lon,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,78,2020-04-08T15:46:12Z,-73.695214,lon,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,79,2020-04-08T15:47:45Z,-73.695594,lon,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,80,2020-04-08T15:48:04Z,-73.695858,lon,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,81,2020-04-08T15:49:01Z,-73.695023,lon,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,82,2020-04-08T15:49:22Z,-73.699899,lon,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,83,2020-04-08T15:50:44Z,-73.702982,lon,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,84,2020-04-08T15:53:56Z,-73.72924,lon,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,85,2020-04-08T15:52:38Z,-73.7261,lon,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,86,2020-04-08T15:52:16Z,-73.721973,lon,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,87,2020-04-08T15:51:55Z,-73.720059,lon,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,88,2020-04-08T15:51:20Z,-73.713571,lon,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,89,2020-04-08T15:51:37Z,-73.715622,lon,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,90,2020-04-08T15:51:03Z,-73.705485,lon,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,91,2020-04-08T15:54:57Z,-73.740647,lon,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,92,2020-04-08T15:55:54Z,-73.742812,lon,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,93,2020-04-08T15:56:13Z,-73.74431,lon,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,94,2020-04-08T15:56:33Z,-73.745805,lon,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,95,2020-04-08T15:58:10Z,-73.752465,lon,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,96,2020-04-08T15:56:53Z,-73.749413,lon,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,97,2020-04-08T15:57:52Z,-73.751322,lon,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,98,2020-04-08T15:44:58Z,1586304000,tid,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,99,2020-04-08T16:19:27Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,100,2020-04-08T16:16:50Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,101,2020-04-08T16:15:59Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,102,2020-04-08T16:16:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,103,2020-04-08T16:14:32Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,104,2020-04-08T16:14:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,105,2020-04-08T16:18:18Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,106,2020-04-08T16:11:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,107,2020-04-08T16:10:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,108,2020-04-08T16:09:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,109,2020-04-08T16:09:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,110,2020-04-08T16:09:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,111,2020-04-08T16:08:19Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,112,2020-04-08T16:08:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,113,2020-04-08T16:07:43Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,114,2020-04-08T16:06:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,115,2020-04-08T16:06:31Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,116,2020-04-08T16:06:11Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,117,2020-04-08T16:03:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,118,2020-04-08T16:04:28Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,119,2020-04-08T16:05:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,120,2020-04-08T16:10:29Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,121,2020-04-08T16:03:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,122,2020-04-08T16:02:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,123,2020-04-08T16:01:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,124,2020-04-08T15:59:24Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,125,2020-04-08T15:45:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,126,2020-04-08T15:45:51Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,127,2020-04-08T15:46:12Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,128,2020-04-08T15:47:45Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,129,2020-04-08T15:48:04Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,130,2020-04-08T15:49:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,131,2020-04-08T15:49:22Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,132,2020-04-08T15:50:44Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,133,2020-04-08T15:53:56Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,134,2020-04-08T15:52:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,135,2020-04-08T15:52:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,136,2020-04-08T15:51:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,137,2020-04-08T15:51:20Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,138,2020-04-08T15:51:37Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,139,2020-04-08T15:51:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,140,2020-04-08T15:54:57Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,141,2020-04-08T15:55:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,142,2020-04-08T15:56:13Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,143,2020-04-08T15:56:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,144,2020-04-08T15:58:10Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,145,2020-04-08T15:56:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,146,2020-04-08T15:57:52Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   9,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 7,
							Line:   9,
						},
						File:   "st_intersects_linestring_test.flux",
						Source: "inData",
						Start: ast.Position{
							Column: 1,
							Line:   9,
						},
					},
				},
				Name: "inData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   166,
						},
						File:   "st_intersects_linestring_test.flux",
						Source: "\"\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,0,2020-04-08T15:44:58Z,40.820317,lat,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,1,2020-04-08T16:19:27Z,40.745249,lat,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,2,2020-04-08T16:16:50Z,40.751085,lat,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,3,2020-04-08T16:15:59Z,40.748141,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,4,2020-04-08T16:16:16Z,40.748909,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,5,2020-04-08T16:14:32Z,40.743989,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,6,2020-04-08T16:14:49Z,40.745851,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,7,2020-04-08T16:18:18Z,40.748495,lat,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,8,2020-04-08T16:11:03Z,40.749543,lat,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,9,2020-04-08T16:10:46Z,40.750688,lat,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,10,2020-04-08T16:09:36Z,40.757106,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,11,2020-04-08T16:09:53Z,40.7565,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,12,2020-04-08T16:09:01Z,40.757895,lat,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,13,2020-04-08T16:08:19Z,40.759873,lat,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,14,2020-04-08T16:08:38Z,40.759128,lat,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,15,2020-04-08T16:07:43Z,40.762143,lat,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,16,2020-04-08T16:06:49Z,40.762709,lat,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,17,2020-04-08T16:06:31Z,40.762441,lat,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,18,2020-04-08T16:06:11Z,40.762373,lat,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,19,2020-04-08T16:03:54Z,40.76117,lat,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,20,2020-04-08T16:04:28Z,40.761653,lat,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,21,2020-04-08T16:05:46Z,40.761908,lat,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,22,2020-04-08T16:10:29Z,40.753279,lat,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,23,2020-04-08T16:03:36Z,40.761241,lat,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,24,2020-04-08T16:02:33Z,40.761443,lat,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,25,2020-04-08T16:01:55Z,40.761878,lat,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,26,2020-04-08T15:59:24Z,40.763356,lat,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,27,2020-04-08T15:45:33Z,40.815413,lat,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,28,2020-04-08T15:45:51Z,40.814096,lat,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,29,2020-04-08T15:46:12Z,40.810699,lat,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,30,2020-04-08T15:47:45Z,40.808517,lat,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,31,2020-04-08T15:48:04Z,40.806882,lat,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,32,2020-04-08T15:49:01Z,40.800397,lat,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,33,2020-04-08T15:49:22Z,40.796724,lat,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,34,2020-04-08T15:50:44Z,40.794998,lat,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,35,2020-04-08T15:53:56Z,40.786038,lat,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,36,2020-04-08T15:52:38Z,40.787216,lat,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,37,2020-04-08T15:52:16Z,40.788413,lat,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,38,2020-04-08T15:51:55Z,40.789185,lat,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,39,2020-04-08T15:51:20Z,40.791541,lat,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,40,2020-04-08T15:51:37Z,40.791009,lat,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,41,2020-04-08T15:51:03Z,40.793905,lat,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,42,2020-04-08T15:54:57Z,40.775044,lat,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,43,2020-04-08T15:55:54Z,40.773334,lat,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,44,2020-04-08T15:56:13Z,40.772144,lat,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,45,2020-04-08T15:56:33Z,40.770953,lat,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,46,2020-04-08T15:58:10Z,40.76594,lat,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,47,2020-04-08T15:56:53Z,40.768069,lat,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,48,2020-04-08T15:57:52Z,40.76661,lat,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n,,49,2020-04-08T15:44:58Z,-73.68691,lon,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,50,2020-04-08T16:19:27Z,-73.940563,lon,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,51,2020-04-08T16:16:50Z,-73.912119,lon,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,52,2020-04-08T16:15:59Z,-73.905367,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,53,2020-04-08T16:16:16Z,-73.906398,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,54,2020-04-08T16:14:32Z,-73.900815,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,55,2020-04-08T16:14:49Z,-73.902975,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,56,2020-04-08T16:18:18Z,-73.927597,lon,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,57,2020-04-08T16:11:03Z,-73.852242,lon,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,58,2020-04-08T16:10:46Z,-73.848962,lon,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,59,2020-04-08T16:09:36Z,-73.833095,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,60,2020-04-08T16:09:53Z,-73.834298,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,61,2020-04-08T16:09:01Z,-73.831347,lon,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,62,2020-04-08T16:08:19Z,-73.826087,lon,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,63,2020-04-08T16:08:38Z,-73.828799,lon,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,64,2020-04-08T16:07:43Z,-73.817956,lon,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,65,2020-04-08T16:06:49Z,-73.814539,lon,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,66,2020-04-08T16:06:31Z,-73.810154,lon,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,67,2020-04-08T16:06:11Z,-73.809437,lon,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,68,2020-04-08T16:03:54Z,-73.795812,lon,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,69,2020-04-08T16:04:28Z,-73.801766,lon,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,70,2020-04-08T16:05:46Z,-73.804421,lon,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,71,2020-04-08T16:10:29Z,-73.841791,lon,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,72,2020-04-08T16:03:36Z,-73.792932,lon,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,73,2020-04-08T16:02:33Z,-73.789959,lon,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,74,2020-04-08T16:01:55Z,-73.785035,lon,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,75,2020-04-08T15:59:24Z,-73.769272,lon,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,76,2020-04-08T15:45:33Z,-73.690054,lon,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,77,2020-04-08T15:45:51Z,-73.693214,lon,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,78,2020-04-08T15:46:12Z,-73.695214,lon,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,79,2020-04-08T15:47:45Z,-73.695594,lon,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,80,2020-04-08T15:48:04Z,-73.695858,lon,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,81,2020-04-08T15:49:01Z,-73.695023,lon,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,82,2020-04-08T15:49:22Z,-73.699899,lon,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,83,2020-04-08T15:50:44Z,-73.702982,lon,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,84,2020-04-08T15:53:56Z,-73.72924,lon,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,85,2020-04-08T15:52:38Z,-73.7261,lon,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,86,2020-04-08T15:52:16Z,-73.721973,lon,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,87,2020-04-08T15:51:55Z,-73.720059,lon,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,88,2020-04-08T15:51:20Z,-73.713571,lon,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,89,2020-04-08T15:51:37Z,-73.715622,lon,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,90,2020-04-08T15:51:03Z,-73.705485,lon,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,91,2020-04-08T15:54:57Z,-73.740647,lon,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,92,2020-04-08T15:55:54Z,-73.742812,lon,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,93,2020-04-08T15:56:13Z,-73.74431,lon,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,94,2020-04-08T15:56:33Z,-73.745805,lon,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,95,2020-04-08T15:58:10Z,-73.752465,lon,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,96,2020-04-08T15:56:53Z,-73.749413,lon,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,97,2020-04-08T15:57:52Z,-73.751322,lon,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,98,2020-04-08T15:44:58Z,1586304000,tid,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,99,2020-04-08T16:19:27Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,100,2020-04-08T16:16:50Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,101,2020-04-08T16:15:59Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,102,2020-04-08T16:16:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,103,2020-04-08T16:14:32Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,104,2020-04-08T16:14:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,105,2020-04-08T16:18:18Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,106,2020-04-08T16:11:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,107,2020-04-08T16:10:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,108,2020-04-08T16:09:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,109,2020-04-08T16:09:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,110,2020-04-08T16:09:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,111,2020-04-08T16:08:19Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,112,2020-04-08T16:08:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,113,2020-04-08T16:07:43Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,114,2020-04-08T16:06:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,115,2020-04-08T16:06:31Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,116,2020-04-08T16:06:11Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,117,2020-04-08T16:03:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,118,2020-04-08T16:04:28Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,119,2020-04-08T16:05:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,120,2020-04-08T16:10:29Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,121,2020-04-08T16:03:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,122,2020-04-08T16:02:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,123,2020-04-08T16:01:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,124,2020-04-08T15:59:24Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,125,2020-04-08T15:45:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,126,2020-04-08T15:45:51Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,127,2020-04-08T15:46:12Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,128,2020-04-08T15:47:45Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,129,2020-04-08T15:48:04Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,130,2020-04-08T15:49:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,131,2020-04-08T15:49:22Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,132,2020-04-08T15:50:44Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,133,2020-04-08T15:53:56Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,134,2020-04-08T15:52:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,135,2020-04-08T15:52:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,136,2020-04-08T15:51:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,137,2020-04-08T15:51:20Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,138,2020-04-08T15:51:37Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,139,2020-04-08T15:51:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,140,2020-04-08T15:54:57Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,141,2020-04-08T15:55:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,142,2020-04-08T15:56:13Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,143,2020-04-08T15:56:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,144,2020-04-08T15:58:10Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,145,2020-04-08T15:56:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,146,2020-04-08T15:57:52Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\"",
						Start: ast.Position{
							Column: 10,
							Line:   9,
						},
					},
				},
				Value: "\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,0,2020-04-08T15:44:58Z,40.820317,lat,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,1,2020-04-08T16:19:27Z,40.745249,lat,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,2,2020-04-08T16:16:50Z,40.751085,lat,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,3,2020-04-08T16:15:59Z,40.748141,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,4,2020-04-08T16:16:16Z,40.748909,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,5,2020-04-08T16:14:32Z,40.743989,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,6,2020-04-08T16:14:49Z,40.745851,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,7,2020-04-08T16:18:18Z,40.748495,lat,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,8,2020-04-08T16:11:03Z,40.749543,lat,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,9,2020-04-08T16:10:46Z,40.750688,lat,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,10,2020-04-08T16:09:36Z,40.757106,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,11,2020-04-08T16:09:53Z,40.7565,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,12,2020-04-08T16:09:01Z,40.757895,lat,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,13,2020-04-08T16:08:19Z,40.759873,lat,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,14,2020-04-08T16:08:38Z,40.759128,lat,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,15,2020-04-08T16:07:43Z,40.762143,lat,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,16,2020-04-08T16:06:49Z,40.762709,lat,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,17,2020-04-08T16:06:31Z,40.762441,lat,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,18,2020-04-08T16:06:11Z,40.762373,lat,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,19,2020-04-08T16:03:54Z,40.76117,lat,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,20,2020-04-08T16:04:28Z,40.761653,lat,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,21,2020-04-08T16:05:46Z,40.761908,lat,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,22,2020-04-08T16:10:29Z,40.753279,lat,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,23,2020-04-08T16:03:36Z,40.761241,lat,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,24,2020-04-08T16:02:33Z,40.761443,lat,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,25,2020-04-08T16:01:55Z,40.761878,lat,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,26,2020-04-08T15:59:24Z,40.763356,lat,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,27,2020-04-08T15:45:33Z,40.815413,lat,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,28,2020-04-08T15:45:51Z,40.814096,lat,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,29,2020-04-08T15:46:12Z,40.810699,lat,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,30,2020-04-08T15:47:45Z,40.808517,lat,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,31,2020-04-08T15:48:04Z,40.806882,lat,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,32,2020-04-08T15:49:01Z,40.800397,lat,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,33,2020-04-08T15:49:22Z,40.796724,lat,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,34,2020-04-08T15:50:44Z,40.794998,lat,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,35,2020-04-08T15:53:56Z,40.786038,lat,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,36,2020-04-08T15:52:38Z,40.787216,lat,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,37,2020-04-08T15:52:16Z,40.788413,lat,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,38,2020-04-08T15:51:55Z,40.789185,lat,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,39,2020-04-08T15:51:20Z,40.791541,lat,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,40,2020-04-08T15:51:37Z,40.791009,lat,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,41,2020-04-08T15:51:03Z,40.793905,lat,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,42,2020-04-08T15:54:57Z,40.775044,lat,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,43,2020-04-08T15:55:54Z,40.773334,lat,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,44,2020-04-08T15:56:13Z,40.772144,lat,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,45,2020-04-08T15:56:33Z,40.770953,lat,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,46,2020-04-08T15:58:10Z,40.76594,lat,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,47,2020-04-08T15:56:53Z,40.768069,lat,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,48,2020-04-08T15:57:52Z,40.76661,lat,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n,,49,2020-04-08T15:44:58Z,-73.68691,lon,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,50,2020-04-08T16:19:27Z,-73.940563,lon,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,51,2020-04-08T16:16:50Z,-73.912119,lon,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,52,2020-04-08T16:15:59Z,-73.905367,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,53,2020-04-08T16:16:16Z,-73.906398,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,54,2020-04-08T16:14:32Z,-73.900815,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,55,2020-04-08T16:14:49Z,-73.902975,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,56,2020-04-08T16:18:18Z,-73.927597,lon,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,57,2020-04-08T16:11:03Z,-73.852242,lon,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,58,2020-04-08T16:10:46Z,-73.848962,lon,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,59,2020-04-08T16:09:36Z,-73.833095,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,60,2020-04-08T16:09:53Z,-73.834298,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,61,2020-04-08T16:09:01Z,-73.831347,lon,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,62,2020-04-08T16:08:19Z,-73.826087,lon,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,63,2020-04-08T16:08:38Z,-73.828799,lon,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,64,2020-04-08T16:07:43Z,-73.817956,lon,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,65,2020-04-08T16:06:49Z,-73.814539,lon,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,66,2020-04-08T16:06:31Z,-73.810154,lon,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,67,2020-04-08T16:06:11Z,-73.809437,lon,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,68,2020-04-08T16:03:54Z,-73.795812,lon,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,69,2020-04-08T16:04:28Z,-73.801766,lon,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,70,2020-04-08T16:05:46Z,-73.804421,lon,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,71,2020-04-08T16:10:29Z,-73.841791,lon,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,72,2020-04-08T16:03:36Z,-73.792932,lon,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,73,2020-04-08T16:02:33Z,-73.789959,lon,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,74,2020-04-08T16:01:55Z,-73.785035,lon,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,75,2020-04-08T15:59:24Z,-73.769272,lon,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,76,2020-04-08T15:45:33Z,-73.690054,lon,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,77,2020-04-08T15:45:51Z,-73.693214,lon,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,78,2020-04-08T15:46:12Z,-73.695214,lon,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,79,2020-04-08T15:47:45Z,-73.695594,lon,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,80,2020-04-08T15:48:04Z,-73.695858,lon,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,81,2020-04-08T15:49:01Z,-73.695023,lon,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,82,2020-04-08T15:49:22Z,-73.699899,lon,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,83,2020-04-08T15:50:44Z,-73.702982,lon,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,84,2020-04-08T15:53:56Z,-73.72924,lon,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,85,2020-04-08T15:52:38Z,-73.7261,lon,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,86,2020-04-08T15:52:16Z,-73.721973,lon,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,87,2020-04-08T15:51:55Z,-73.720059,lon,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,88,2020-04-08T15:51:20Z,-73.713571,lon,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,89,2020-04-08T15:51:37Z,-73.715622,lon,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,90,2020-04-08T15:51:03Z,-73.705485,lon,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,91,2020-04-08T15:54:57Z,-73.740647,lon,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,92,2020-04-08T15:55:54Z,-73.742812,lon,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,93,2020-04-08T15:56:13Z,-73.74431,lon,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,94,2020-04-08T15:56:33Z,-73.745805,lon,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,95,2020-04-08T15:58:10Z,-73.752465,lon,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,96,2020-04-08T15:56:53Z,-73.749413,lon,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,97,2020-04-08T15:57:52Z,-73.751322,lon,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,98,2020-04-08T15:44:58Z,1586304000,tid,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,99,2020-04-08T16:19:27Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,100,2020-04-08T16:16:50Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,101,2020-04-08T16:15:59Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,102,2020-04-08T16:16:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,103,2020-04-08T16:14:32Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,104,2020-04-08T16:14:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,105,2020-04-08T16:18:18Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,106,2020-04-08T16:11:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,107,2020-04-08T16:10:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,108,2020-04-08T16:09:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,109,2020-04-08T16:09:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,110,2020-04-08T16:09:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,111,2020-04-08T16:08:19Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,112,2020-04-08T16:08:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,113,2020-04-08T16:07:43Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,114,2020-04-08T16:06:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,115,2020-04-08T16:06:31Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,116,2020-04-08T16:06:11Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,117,2020-04-08T16:03:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,118,2020-04-08T16:04:28Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,119,2020-04-08T16:05:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,120,2020-04-08T16:10:29Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,121,2020-04-08T16:03:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,122,2020-04-08T16:02:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,123,2020-04-08T16:01:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,124,2020-04-08T15:59:24Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,125,2020-04-08T15:45:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,126,2020-04-08T15:45:51Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,127,2020-04-08T15:46:12Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,128,2020-04-08T15:47:45Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,129,2020-04-08T15:48:04Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,130,2020-04-08T15:49:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,131,2020-04-08T15:49:22Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,132,2020-04-08T15:50:44Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,133,2020-04-08T15:53:56Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,134,2020-04-08T15:52:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,135,2020-04-08T15:52:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,136,2020-04-08T15:51:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,137,2020-04-08T15:51:20Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,138,2020-04-08T15:51:37Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,139,2020-04-08T15:51:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,140,2020-04-08T15:54:57Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,141,2020-04-08T15:55:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,142,2020-04-08T15:56:13Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,143,2020-04-08T15:56:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,144,2020-04-08T15:58:10Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,145,2020-04-08T15:56:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,146,2020-04-08T15:57:52Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   174,
					},
					File:   "st_intersects_linestring_test.flux",
					Source: "outData = \"\n#group,false,false,false,true,false,true\n#datatype,string,long,boolean,string,string,string\n#default,_result,,,,,\n,result,table,_st_intersects,id,st_linestring,trip_id\n,,0,true,GO506_20_6431,\\\"-73.68691 40.820317, -73.690054 40.815413, -73.693214 40.814096, -73.695214 40.810699, -73.695594 40.808517, -73.695858 40.806882, -73.695023 40.800397, -73.699899 40.796724, -73.702982 40.794998, -73.705485 40.793905, -73.713571 40.791541, -73.715622 40.791009, -73.720059 40.789185, -73.721973 40.788413, -73.7261 40.787216, -73.72924 40.786038, -73.740647 40.775044, -73.742812 40.773334, -73.74431 40.772144, -73.745805 40.770953, -73.749413 40.768069, -73.751322 40.76661, -73.752465 40.76594, -73.769272 40.763356, -73.785035 40.761878, -73.789959 40.761443, -73.792932 40.761241, -73.795812 40.76117, -73.801766 40.761653, -73.804421 40.761908, -73.809437 40.762373, -73.810154 40.762441, -73.814539 40.762709, -73.817956 40.762143, -73.826087 40.759873, -73.828799 40.759128, -73.831347 40.757895, -73.833095 40.757106, -73.834298 40.7565, -73.841791 40.753279, -73.848962 40.750688, -73.852242 40.749543, -73.900815 40.743989, -73.902975 40.745851, -73.905367 40.748141, -73.906398 40.748909, -73.912119 40.751085, -73.927597 40.748495, -73.940563 40.745249\\\",GO506_20_6431\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   168,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 8,
							Line:   168,
						},
						File:   "st_intersects_linestring_test.flux",
						Source: "outData",
						Start: ast.Position{
							Column: 1,
							Line:   168,
						},
					},
				},
				Name: "outData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   174,
						},
						File:   "st_intersects_linestring_test.flux",
						Source: "\"\n#group,false,false,false,true,false,true\n#datatype,string,long,boolean,string,string,string\n#default,_result,,,,,\n,result,table,_st_intersects,id,st_linestring,trip_id\n,,0,true,GO506_20_6431,\\\"-73.68691 40.820317, -73.690054 40.815413, -73.693214 40.814096, -73.695214 40.810699, -73.695594 40.808517, -73.695858 40.806882, -73.695023 40.800397, -73.699899 40.796724, -73.702982 40.794998, -73.705485 40.793905, -73.713571 40.791541, -73.715622 40.791009, -73.720059 40.789185, -73.721973 40.788413, -73.7261 40.787216, -73.72924 40.786038, -73.740647 40.775044, -73.742812 40.773334, -73.74431 40.772144, -73.745805 40.770953, -73.749413 40.768069, -73.751322 40.76661, -73.752465 40.76594, -73.769272 40.763356, -73.785035 40.761878, -73.789959 40.761443, -73.792932 40.761241, -73.795812 40.76117, -73.801766 40.761653, -73.804421 40.761908, -73.809437 40.762373, -73.810154 40.762441, -73.814539 40.762709, -73.817956 40.762143, -73.826087 40.759873, -73.828799 40.759128, -73.831347 40.757895, -73.833095 40.757106, -73.834298 40.7565, -73.841791 40.753279, -73.848962 40.750688, -73.852242 40.749543, -73.900815 40.743989, -73.902975 40.745851, -73.905367 40.748141, -73.906398 40.748909, -73.912119 40.751085, -73.927597 40.748495, -73.940563 40.745249\\\",GO506_20_6431\n\"",
						Start: ast.Position{
							Column: 11,
							Line:   168,
						},
					},
				},
				Value: "\n#group,false,false,false,true,false,true\n#datatype,string,long,boolean,string,string,string\n#default,_result,,,,,\n,result,table,_st_intersects,id,st_linestring,trip_id\n,,0,true,GO506_20_6431,\"-73.68691 40.820317, -73.690054 40.815413, -73.693214 40.814096, -73.695214 40.810699, -73.695594 40.808517, -73.695858 40.806882, -73.695023 40.800397, -73.699899 40.796724, -73.702982 40.794998, -73.705485 40.793905, -73.713571 40.791541, -73.715622 40.791009, -73.720059 40.789185, -73.721973 40.788413, -73.7261 40.787216, -73.72924 40.786038, -73.740647 40.775044, -73.742812 40.773334, -73.74431 40.772144, -73.745805 40.770953, -73.749413 40.768069, -73.751322 40.76661, -73.752465 40.76594, -73.769272 40.763356, -73.785035 40.761878, -73.789959 40.761443, -73.792932 40.761241, -73.795812 40.76117, -73.801766 40.761653, -73.804421 40.761908, -73.809437 40.762373, -73.810154 40.762441, -73.814539 40.762709, -73.817956 40.762143, -73.826087 40.759873, -73.828799 40.759128, -73.831347 40.757895, -73.833095 40.757106, -73.834298 40.7565, -73.841791 40.753279, -73.848962 40.750688, -73.852242 40.749543, -73.900815 40.743989, -73.902975 40.745851, -73.905367 40.748141, -73.906398 40.748909, -73.912119 40.751085, -73.927597 40.748495, -73.940563 40.745249\",GO506_20_6431\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 120,
						Line:   177,
					},
					File:   "st_intersects_linestring_test.flux",
					Source: "bt = {points: [{lat: 40.671659, lon: -73.936631}, {lat: 40.706543, lon: -73.749177},{lat: 40.791333, lon: -73.880327}]}",
					Start: ast.Position{
						Column: 1,
						Line:   177,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 3,
							Line:   177,
						},
						File:   "st_intersects_linestring_test.flux",
						Source: "bt",
						Start: ast.Position{
							Column: 1,
							Line:   177,
						},
					},
				},
				Name: "bt",
			},
			Init: &ast.ObjectExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 120,
							Line:   177,
						},
						File:   "st_intersects_linestring_test.flux",
						Source: "{points: [{lat: 40.671659, lon: -73.936631}, {lat: 40.706543, lon: -73.749177},{lat: 40.791333, lon: -73.880327}]}",
						Start: ast.Position{
							Column: 6,
							Line:   177,
						},
					},
				},
				Properties: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 119,
								Line:   177,
							},
							File:   "st_intersects_linestring_test.flux",
							Source: "points: [{lat: 40.671659, lon: -73.936631}, {lat: 40.706543, lon: -73.749177},{lat: 40.791333, lon: -73.880327}]",
							Start: ast.Position{
								Column: 7,
								Line:   177,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 13,
									Line:   177,
								},
								File:   "st_intersects_linestring_test.flux",
								Source: "points",
								Start: ast.Position{
									Column: 7,
									Line:   177,
								},
							},
						},
						Name: "points",
					},
					Value: &ast.ArrayExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 119,
									Line:   177,
								},
								File:   "st_intersects_linestring_test.flux",
								Source: "[{lat: 40.671659, lon: -73.936631}, {lat: 40.706543, lon: -73.749177},{lat: 40.791333, lon: -73.880327}]",
								Start: ast.Position{
									Column: 15,
									Line:   177,
								},
							},
						},
						Elements: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 49,
										Line:   177,
									},
									File:   "st_intersects_linestring_test.flux",
									Source: "{lat: 40.671659, lon: -73.936631}",
									Start: ast.Position{
										Column: 16,
										Line:   177,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 31,
											Line:   177,
										},
										File:   "st_intersects_linestring_test.flux",
										Source: "lat: 40.671659",
										Start: ast.Position{
											Column: 17,
											Line:   177,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 20,
												Line:   177,
											},
											File:   "st_intersects_linestring_test.flux",
											Source: "lat",
											Start: ast.Position{
												Column: 17,
												Line:   177,
											},
										},
									},
									Name: "lat",
								},
								Value: &ast.FloatLiteral{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 31,
												Line:   177,
											},
											File:   "st_intersects_linestring_test.flux",
											Source: "40.671659",
											Start: ast.Position{
												Column: 22,
												Line:   177,
											},
										},
									},
									Value: 40.671659,
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 48,
											Line:   177,
										},
										File:   "st_intersects_linestring_test.flux",
										Source: "lon: -73.936631",
										Start: ast.Position{
											Column: 33,
											Line:   177,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 36,
												Line:   177,
											},
											File:   "st_intersects_linestring_test.flux",
											Source: "lon",
											Start: ast.Position{
												Column: 33,
												Line:   177,
											},
										},
									},
									Name: "lon",
								},
								Value: &ast.UnaryExpression{
									Argument: &ast.FloatLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 48,
													Line:   177,
												},
												File:   "st_intersects_linestring_test.flux",
												Source: "73.936631",
												Start: ast.Position{
													Column: 39,
													Line:   177,
												},
											},
										},
										Value: 73.936631,
									},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 48,
												Line:   177,
											},
											File:   "st_intersects_linestring_test.flux",
											Source: "-73.936631",
											Start: ast.Position{
												Column: 38,
												Line:   177,
											},
										},
									},
									Operator: 6,
								},
							}},
							With: nil,
						}, &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 84,
										Line:   177,
									},
									File:   "st_intersects_linestring_test.flux",
									Source: "{lat: 40.706543, lon: -73.749177}",
									Start: ast.Position{
										Column: 51,
										Line:   177,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 66,
											Line:   177,
										},
										File:   "st_intersects_linestring_test.flux",
										Source: "lat: 40.706543",
										Start: ast.Position{
											Column: 52,
											Line:   177,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 55,
												Line:   177,
											},
											File:   "st_intersects_linestring_test.flux",
											Source: "lat",
											Start: ast.Position{
												Column: 52,
												Line:   177,
											},
										},
									},
									Name: "lat",
								},
								Value: &ast.FloatLiteral{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 66,
												Line:   177,
											},
											File:   "st_intersects_linestring_test.flux",
											Source: "40.706543",
											Start: ast.Position{
												Column: 57,
												Line:   177,
											},
										},
									},
									Value: 40.706543,
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 83,
											Line:   177,
										},
										File:   "st_intersects_linestring_test.flux",
										Source: "lon: -73.749177",
										Start: ast.Position{
											Column: 68,
											Line:   177,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 71,
												Line:   177,
											},
											File:   "st_intersects_linestring_test.flux",
											Source: "lon",
											Start: ast.Position{
												Column: 68,
												Line:   177,
											},
										},
									},
									Name: "lon",
								},
								Value: &ast.UnaryExpression{
									Argument: &ast.FloatLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 83,
													Line:   177,
												},
												File:   "st_intersects_linestring_test.flux",
												Source: "73.749177",
												Start: ast.Position{
													Column: 74,
													Line:   177,
												},
											},
										},
										Value: 73.749177,
									},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 83,
												Line:   177,
											},
											File:   "st_intersects_linestring_test.flux",
											Source: "-73.749177",
											Start: ast.Position{
												Column: 73,
												Line:   177,
											},
										},
									},
									Operator: 6,
								},
							}},
							With: nil,
						}, &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 118,
										Line:   177,
									},
									File:   "st_intersects_linestring_test.flux",
									Source: "{lat: 40.791333, lon: -73.880327}",
									Start: ast.Position{
										Column: 85,
										Line:   177,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 100,
											Line:   177,
										},
										File:   "st_intersects_linestring_test.flux",
										Source: "lat: 40.791333",
										Start: ast.Position{
											Column: 86,
											Line:   177,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 89,
												Line:   177,
											},
											File:   "st_intersects_linestring_test.flux",
											Source: "lat",
											Start: ast.Position{
												Column: 86,
												Line:   177,
											},
										},
									},
									Name: "lat",
								},
								Value: &ast.FloatLiteral{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 100,
												Line:   177,
											},
											File:   "st_intersects_linestring_test.flux",
											Source: "40.791333",
											Start: ast.Position{
												Column: 91,
												Line:   177,
											},
										},
									},
									Value: 40.791333,
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 117,
											Line:   177,
										},
										File:   "st_intersects_linestring_test.flux",
										Source: "lon: -73.880327",
										Start: ast.Position{
											Column: 102,
											Line:   177,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 105,
												Line:   177,
											},
											File:   "st_intersects_linestring_test.flux",
											Source: "lon",
											Start: ast.Position{
												Column: 102,
												Line:   177,
											},
										},
									},
									Name: "lon",
								},
								Value: &ast.UnaryExpression{
									Argument: &ast.FloatLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 117,
													Line:   177,
												},
												File:   "st_intersects_linestring_test.flux",
												Source: "73.880327",
												Start: ast.Position{
													Column: 108,
													Line:   177,
												},
											},
										},
										Value: 73.880327,
									},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 117,
												Line:   177,
											},
											File:   "st_intersects_linestring_test.flux",
											Source: "-73.880327",
											Start: ast.Position{
												Column: 107,
												Line:   177,
											},
										},
									},
									Operator: 6,
								},
							}},
							With: nil,
						}},
					},
				}},
				With: nil,
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   188,
					},
					File:   "st_intersects_linestring_test.flux",
					Source: "t_stIntersectsLinestring = (table=<-) =>\n  table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to see train crossing defined region\n    |> geo.ST_LineString()\n    |> map(fn: (r) => ({\n        r with _st_intersects: geo.ST_Intersects(region: bt, geometry: {linestring: r.st_linestring})\n    }))\n    |> drop(columns: [\"_start\", \"_stop\"])",
					Start: ast.Position{
						Column: 1,
						Line:   179,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 25,
							Line:   179,
						},
						File:   "st_intersects_linestring_test.flux",
						Source: "t_stIntersectsLinestring",
						Start: ast.Position{
							Column: 1,
							Line:   179,
						},
					},
				},
				Name: "t_stIntersectsLinestring",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   188,
						},
						File:   "st_intersects_linestring_test.flux",
						Source: "(table=<-) =>\n  table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to see train crossing defined region\n    |> geo.ST_LineString()\n    |> map(fn: (r) => ({\n        r with _st_intersects: geo.ST_Intersects(region: bt, geometry: {linestring: r.st_linestring})\n    }))\n    |> drop(columns: [\"_start\", \"_stop\"])",
						Start: ast.Position{
							Column: 28,
							Line:   179,
						},
					},
				},
				Body: &ast.PipeExpression{
					Argument: &ast.PipeExpression{
						Argument: &ast.PipeExpression{
							Argument: &ast.PipeExpression{
								Argument: &ast.PipeExpression{
									Argument: &ast.PipeExpression{
										Argument: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 8,
														Line:   180,
													},
													File:   "st_intersects_linestring_test.flux",
													Source: "table",
													Start: ast.Position{
														Column: 3,
														Line:   180,
													},
												},
											},
											Name: "table",
										},
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   181,
												},
												File:   "st_intersects_linestring_test.flux",
												Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)",
												Start: ast.Position{
													Column: 3,
													Line:   180,
												},
											},
										},
										Call: &ast.CallExpression{
											Arguments: []ast.Expression{&ast.ObjectExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 41,
															Line:   181,
														},
														File:   "st_intersects_linestring_test.flux",
														Source: "start: 2020-04-01T00:00:00Z",
														Start: ast.Position{
															Column: 14,
															Line:   181,
														},
													},
												},
												Properties: []*ast.Property{&ast.Property{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 41,
																Line:   181,
															},
															File:   "st_intersects_linestring_test.flux",
															Source: "start: 2020-04-01T00:00:00Z",
															Start: ast.Position{
																Column: 14,
																Line:   181,
															},
														},
													},
													Key: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 19,
																	Line:   181,
																},
																File:   "st_intersects_linestring_test.flux",
																Source: "start",
																Start: ast.Position{
																	Column: 14,
																	Line:   181,
																},
															},
														},
														Name: "start",
													},
													Value: &ast.DateTimeLiteral{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 41,
																	Line:   181,
																},
																File:   "st_intersects_linestring_test.flux",
																Source: "2020-04-01T00:00:00Z",
																Start: ast.Position{
																	Column: 21,
																	Line:   181,
																},
															},
														},
														Value: parser.MustParseTime("2020-04-01T00:00:00Z"),
													},
												}},
												With: nil,
											}},
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 42,
														Line:   181,
													},
													File:   "st_intersects_linestring_test.flux",
													Source: "range(start: 2020-04-01T00:00:00Z)",
													Start: ast.Position{
														Column: 8,
														Line:   181,
													},
												},
											},
											Callee: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 13,
															Line:   181,
														},
														File:   "st_intersects_linestring_test.flux",
														Source: "range",
														Start: ast.Position{
															Column: 8,
															Line:   181,
														},
													},
												},
												Name: "range",
											},
										},
									},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 25,
												Line:   182,
											},
											File:   "st_intersects_linestring_test.flux",
											Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()",
											Start: ast.Position{
												Column: 3,
												Line:   180,
											},
										},
									},
									Call: &ast.CallExpression{
										Arguments: nil,
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 25,
													Line:   182,
												},
												File:   "st_intersects_linestring_test.flux",
												Source: "v1.fieldsAsCols()",
												Start: ast.Position{
													Column: 8,
													Line:   182,
												},
											},
										},
										Callee: &ast.MemberExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 23,
														Line:   182,
													},
													File:   "st_intersects_linestring_test.flux",
													Source: "v1.fieldsAsCols",
													Start: ast.Position{
														Column: 8,
														Line:   182,
													},
												},
											},
											Object: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 10,
															Line:   182,
														},
														File:   "st_intersects_linestring_test.flux",
														Source: "v1",
														Start: ast.Position{
															Column: 8,
															Line:   182,
														},
													},
												},
												Name: "v1",
											},
											Property: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 23,
															Line:   182,
														},
														File:   "st_intersects_linestring_test.flux",
														Source: "fieldsAsCols",
														Start: ast.Position{
															Column: 11,
															Line:   182,
														},
													},
												},
												Name: "fieldsAsCols",
											},
										},
									},
								},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 47,
											Line:   183,
										},
										File:   "st_intersects_linestring_test.flux",
										Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"])",
										Start: ast.Position{
											Column: 3,
											Line:   180,
										},
									},
								},
								Call: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 46,
													Line:   183,
												},
												File:   "st_intersects_linestring_test.flux",
												Source: "groupBy: [\"id\",\"trip_id\"]",
												Start: ast.Position{
													Column: 21,
													Line:   183,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 46,
														Line:   183,
													},
													File:   "st_intersects_linestring_test.flux",
													Source: "groupBy: [\"id\",\"trip_id\"]",
													Start: ast.Position{
														Column: 21,
														Line:   183,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 28,
															Line:   183,
														},
														File:   "st_intersects_linestring_test.flux",
														Source: "groupBy",
														Start: ast.Position{
															Column: 21,
															Line:   183,
														},
													},
												},
												Name: "groupBy",
											},
											Value: &ast.ArrayExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 46,
															Line:   183,
														},
														File:   "st_intersects_linestring_test.flux",
														Source: "[\"id\",\"trip_id\"]",
														Start: ast.Position{
															Column: 30,
															Line:   183,
														},
													},
												},
												Elements: []ast.Expression{&ast.StringLiteral{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 35,
																Line:   183,
															},
															File:   "st_intersects_linestring_test.flux",
															Source: "\"id\"",
															Start: ast.Position{
																Column: 31,
																Line:   183,
															},
														},
													},
													Value: "id",
												}, &ast.StringLiteral{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 45,
																Line:   183,
															},
															File:   "st_intersects_linestring_test.flux",
															Source: "\"trip_id\"",
															Start: ast.Position{
																Column: 36,
																Line:   183,
															},
														},
													},
													Value: "trip_id",
												}},
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 47,
												Line:   183,
											},
											File:   "st_intersects_linestring_test.flux",
											Source: "geo.asTracks(groupBy: [\"id\",\"trip_id\"])",
											Start: ast.Position{
												Column: 8,
												Line:   183,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 20,
													Line:   183,
												},
												File:   "st_intersects_linestring_test.flux",
												Source: "geo.asTracks",
												Start: ast.Position{
													Column: 8,
													Line:   183,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 11,
														Line:   183,
													},
													File:   "st_intersects_linestring_test.flux",
													Source: "geo",
													Start: ast.Position{
														Column: 8,
														Line:   183,
													},
												},
											},
											Name: "geo",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 20,
														Line:   183,
													},
													File:   "st_intersects_linestring_test.flux",
													Source: "asTracks",
													Start: ast.Position{
														Column: 12,
														Line:   183,
													},
												},
											},
											Name: "asTracks",
										},
									},
								},
							},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 27,
										Line:   184,
									},
									File:   "st_intersects_linestring_test.flux",
									Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to see train crossing defined region\n    |> geo.ST_LineString()",
									Start: ast.Position{
										Column: 3,
										Line:   180,
									},
								},
							},
							Call: &ast.CallExpression{
								Arguments: nil,
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 27,
											Line:   184,
										},
										File:   "st_intersects_linestring_test.flux",
										Source: "geo.ST_LineString()",
										Start: ast.Position{
											Column: 8,
											Line:   184,
										},
									},
								},
								Callee: &ast.MemberExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 25,
												Line:   184,
											},
											File:   "st_intersects_linestring_test.flux",
											Source: "geo.ST_LineString",
											Start: ast.Position{
												Column: 8,
												Line:   184,
											},
										},
									},
									Object: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 11,
													Line:   184,
												},
												File:   "st_intersects_linestring_test.flux",
												Source: "geo",
												Start: ast.Position{
													Column: 8,
													Line:   184,
												},
											},
										},
										Name: "geo",
									},
									Property: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 25,
													Line:   184,
												},
												File:   "st_intersects_linestring_test.flux",
												Source: "ST_LineString",
												Start: ast.Position{
													Column: 12,
													Line:   184,
												},
											},
										},
										Name: "ST_LineString",
									},
								},
							},
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 8,
									Line:   187,
								},
								File:   "st_intersects_linestring_test.flux",
								Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to see train crossing defined region\n    |> geo.ST_LineString()\n    |> map(fn: (r) => ({\n        r with _st_intersects: geo.ST_Intersects(region: bt, geometry: {linestring: r.st_linestring})\n    }))",
								Start: ast.Position{
									Column: 3,
									Line:   180,
								},
							},
						},
						Call: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 7,
											Line:   187,
										},
										File:   "st_intersects_linestring_test.flux",
										Source: "fn: (r) => ({\n        r with _st_intersects: geo.ST_Intersects(region: bt, geometry: {linestring: r.st_linestring})\n    })",
										Start: ast.Position{
											Column: 12,
											Line:   185,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 7,
												Line:   187,
											},
											File:   "st_intersects_linestring_test.flux",
											Source: "fn: (r) => ({\n        r with _st_intersects: geo.ST_Intersects(region: bt, geometry: {linestring: r.st_linestring})\n    })",
											Start: ast.Position{
												Column: 12,
												Line:   185,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 14,
													Line:   185,
												},
												File:   "st_intersects_linestring_test.flux",
												Source: "fn",
												Start: ast.Position{
													Column: 12,
													Line:   185,
												},
											},
										},
										Name: "fn",
									},
									Value: &ast.FunctionExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 7,
													Line:   187,
												},
												File:   "st_intersects_linestring_test.flux",
												Source: "(r) => ({\n        r with _st_intersects: geo.ST_Intersects(region: bt, geometry: {linestring: r.st_linestring})\n    })",
												Start: ast.Position{
													Column: 16,
													Line:   185,
												},
											},
										},
										Body: &ast.ParenExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 7,
														Line:   187,
													},
													File:   "st_intersects_linestring_test.flux",
													Source: "({\n        r with _st_intersects: geo.ST_Intersects(region: bt, geometry: {linestring: r.st_linestring})\n    })",
													Start: ast.Position{
														Column: 23,
														Line:   185,
													},
												},
											},
											Expression: &ast.ObjectExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 6,
															Line:   187,
														},
														File:   "st_intersects_linestring_test.flux",
														Source: "{\n        r with _st_intersects: geo.ST_Intersects(region: bt, geometry: {linestring: r.st_linestring})\n    }",
														Start: ast.Position{
															Column: 24,
															Line:   185,
														},
													},
												},
												Properties: []*ast.Property{&ast.Property{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 102,
																Line:   186,
															},
															File:   "st_intersects_linestring_test.flux",
															Source: "_st_intersects: geo.ST_Intersects(region: bt, geometry: {linestring: r.st_linestring})",
															Start: ast.Position{
																Column: 16,
																Line:   186,
															},
														},
													},
													Key: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 30,
																	Line:   186,
																},
																File:   "st_intersects_linestring_test.flux",
																Source: "_st_intersects",
																Start: ast.Position{
																	Column: 16,
																	Line:   186,
																},
															},
														},
														Name: "_st_intersects",
													},
													Value: &ast.CallExpression{
														Arguments: []ast.Expression{&ast.ObjectExpression{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 101,
																		Line:   186,
																	},
																	File:   "st_intersects_linestring_test.flux",
																	Source: "region: bt, geometry: {linestring: r.st_linestring}",
																	Start: ast.Position{
																		Column: 50,
																		Line:   186,
																	},
																},
															},
															Properties: []*ast.Property{&ast.Property{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 60,
																			Line:   186,
																		},
																		File:   "st_intersects_linestring_test.flux",
																		Source: "region: bt",
																		Start: ast.Position{
																			Column: 50,
																			Line:   186,
																		},
																	},
																},
																Key: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 56,
																				Line:   186,
																			},
																			File:   "st_intersects_linestring_test.flux",
																			Source: "region",
																			Start: ast.Position{
																				Column: 50,
																				Line:   186,
																			},
																		},
																	},
																	Name: "region",
																},
																Value: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 60,
																				Line:   186,
																			},
																			File:   "st_intersects_linestring_test.flux",
																			Source: "bt",
																			Start: ast.Position{
																				Column: 58,
																				Line:   186,
																			},
																		},
																	},
																	Name: "bt",
																},
															}, &ast.Property{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 101,
																			Line:   186,
																		},
																		File:   "st_intersects_linestring_test.flux",
																		Source: "geometry: {linestring: r.st_linestring}",
																		Start: ast.Position{
																			Column: 62,
																			Line:   186,
																		},
																	},
																},
																Key: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 70,
																				Line:   186,
																			},
																			File:   "st_intersects_linestring_test.flux",
																			Source: "geometry",
																			Start: ast.Position{
																				Column: 62,
																				Line:   186,
																			},
																		},
																	},
																	Name: "geometry",
																},
																Value: &ast.ObjectExpression{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 101,
																				Line:   186,
																			},
																			File:   "st_intersects_linestring_test.flux",
																			Source: "{linestring: r.st_linestring}",
																			Start: ast.Position{
																				Column: 72,
																				Line:   186,
																			},
																		},
																	},
																	Properties: []*ast.Property{&ast.Property{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 100,
																					Line:   186,
																				},
																				File:   "st_intersects_linestring_test.flux",
																				Source: "linestring: r.st_linestring",
																				Start: ast.Position{
																					Column: 73,
																					Line:   186,
																				},
																			},
																		},
																		Key: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 83,
																						Line:   186,
																					},
																					File:   "st_intersects_linestring_test.flux",
																					Source: "linestring",
																					Start: ast.Position{
																						Column: 73,
																						Line:   186,
																					},
																				},
																			},
																			Name: "linestring",
																		},
																		Value: &ast.MemberExpression{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 100,
																						Line:   186,
																					},
																					File:   "st_intersects_linestring_test.flux",
																					Source: "r.st_linestring",
																					Start: ast.Position{
																						Column: 85,
																						Line:   186,
																					},
																				},
																			},
																			Object: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 86,
																							Line:   186,
																						},
																						File:   "st_intersects_linestring_test.flux",
																						Source: "r",
																						Start: ast.Position{
																							Column: 85,
																							Line:   186,
																						},
																					},
																				},
																				Name: "r",
																			},
																			Property: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 100,
																							Line:   186,
																						},
																						File:   "st_intersects_linestring_test.flux",
																						Source: "st_linestring",
																						Start: ast.Position{
																							Column: 87,
																							Line:   186,
																						},
																					},
																				},
																				Name: "st_linestring",
																			},
																		},
																	}},
																	With: nil,
																},
															}},
															With: nil,
														}},
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 102,
																	Line:   186,
																},
																File:   "st_intersects_linestring_test.flux",
																Source: "geo.ST_Intersects(region: bt, geometry: {linestring: r.st_linestring})",
																Start: ast.Position{
																	Column: 32,
																	Line:   186,
																},
															},
														},
														Callee: &ast.MemberExpression{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 49,
																		Line:   186,
																	},
																	File:   "st_intersects_linestring_test.flux",
																	Source: "geo.ST_Intersects",
																	Start: ast.Position{
																		Column: 32,
																		Line:   186,
																	},
																},
															},
															Object: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 35,
																			Line:   186,
																		},
																		File:   "st_intersects_linestring_test.flux",
																		Source: "geo",
																		Start: ast.Position{
																			Column: 32,
																			Line:   186,
																		},
																	},
																},
																Name: "geo",
															},
															Property: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 49,
																			Line:   186,
																		},
																		File:   "st_intersects_linestring_test.flux",
																		Source: "ST_Intersects",
																		Start: ast.Position{
																			Column: 36,
																			Line:   186,
																		},
																	},
																},
																Name: "ST_Intersects",
															},
														},
													},
												}},
												With: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 10,
																Line:   186,
															},
															File:   "st_intersects_linestring_test.flux",
															Source: "r",
															Start: ast.Position{
																Column: 9,
																Line:   186,
															},
														},
													},
													Name: "r",
												},
											},
										},
										Params: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   185,
													},
													File:   "st_intersects_linestring_test.flux",
													Source: "r",
													Start: ast.Position{
														Column: 17,
														Line:   185,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 18,
															Line:   185,
														},
														File:   "st_intersects_linestring_test.flux",
														Source: "r",
														Start: ast.Position{
															Column: 17,
															Line:   185,
														},
													},
												},
												Name: "r",
											},
											Value: nil,
										}},
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 8,
										Line:   187,
									},
									File:   "st_intersects_linestring_test.flux",
									Source: "map(fn: (r) => ({\n        r with _st_intersects: geo.ST_Intersects(region: bt, geometry: {linestring: r.st_linestring})\n    }))",
									Start: ast.Position{
										Column: 8,
										Line:   185,
									},
								},
							},
							Callee: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 11,
											Line:   185,
										},
										File:   "st_intersects_linestring_test.flux",
										Source: "map",
										Start: ast.Position{
											Column: 8,
											Line:   185,
										},
									},
								},
								Name: "map",
							},
						},
					},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   188,
							},
							File:   "st_intersects_linestring_test.flux",
							Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to see train crossing defined region\n    |> geo.ST_LineString()\n    |> map(fn: (r) => ({\n        r with _st_intersects: geo.ST_Intersects(region: bt, geometry: {linestring: r.st_linestring})\n    }))\n    |> drop(columns: [\"_start\", \"_stop\"])",
							Start: ast.Position{
								Column: 3,
								Line:   180,
							},
						},
					},
					Call: &ast.CallExpression{
						Arguments: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   188,
									},
									File:   "st_intersects_linestring_test.flux",
									Source: "columns: [\"_start\", \"_stop\"]",
									Start: ast.Position{
										Column: 13,
										Line:   188,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 41,
											Line:   188,
										},
										File:   "st_intersects_linestring_test.flux",
										Source: "columns: [\"_start\", \"_stop\"]",
										Start: ast.Position{
											Column: 13,
											Line:   188,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 20,
												Line:   188,
											},
											File:   "st_intersects_linestring_test.flux",
											Source: "columns",
											Start: ast.Position{
												Column: 13,
												Line:   188,
											},
										},
									},
									Name: "columns",
								},
								Value: &ast.ArrayExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 41,
												Line:   188,
											},
											File:   "st_intersects_linestring_test.flux",
											Source: "[\"_start\", \"_stop\"]",
											Start: ast.Position{
												Column: 22,
												Line:   188,
											},
										},
									},
									Elements: []ast.Expression{&ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 31,
													Line:   188,
												},
												File:   "st_intersects_linestring_test.flux",
												Source: "\"_start\"",
												Start: ast.Position{
													Column: 23,
													Line:   188,
												},
											},
										},
										Value: "_start",
									}, &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 40,
													Line:   188,
												},
												File:   "st_intersects_linestring_test.flux",
												Source: "\"_stop\"",
												Start: ast.Position{
													Column: 33,
													Line:   188,
												},
											},
										},
										Value: "_stop",
									}},
								},
							}},
							With: nil,
						}},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   188,
								},
								File:   "st_intersects_linestring_test.flux",
								Source: "drop(columns: [\"_start\", \"_stop\"])",
								Start: ast.Position{
									Column: 8,
									Line:   188,
								},
							},
						},
						Callee: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 12,
										Line:   188,
									},
									File:   "st_intersects_linestring_test.flux",
									Source: "drop",
									Start: ast.Position{
										Column: 8,
										Line:   188,
									},
								},
							},
							Name: "drop",
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 37,
								Line:   179,
							},
							File:   "st_intersects_linestring_test.flux",
							Source: "table=<-",
							Start: ast.Position{
								Column: 29,
								Line:   179,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 34,
									Line:   179,
								},
								File:   "st_intersects_linestring_test.flux",
								Source: "table",
								Start: ast.Position{
									Column: 29,
									Line:   179,
								},
							},
						},
						Name: "table",
					},
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 37,
								Line:   179,
							},
							File:   "st_intersects_linestring_test.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 35,
								Line:   179,
							},
						},
					}},
				}},
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 112,
							Line:   190,
						},
						File:   "st_intersects_linestring_test.flux",
						Source: "_stIntersectsLinestring = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stIntersectsLinestring})",
						Start: ast.Position{
							Column: 6,
							Line:   189,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 29,
								Line:   189,
							},
							File:   "st_intersects_linestring_test.flux",
							Source: "_stIntersectsLinestring",
							Start: ast.Position{
								Column: 6,
								Line:   189,
							},
						},
					},
					Name: "_stIntersectsLinestring",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 112,
								Line:   190,
							},
							File:   "st_intersects_linestring_test.flux",
							Source: "() =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stIntersectsLinestring})",
							Start: ast.Position{
								Column: 32,
								Line:   189,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 112,
									Line:   190,
								},
								File:   "st_intersects_linestring_test.flux",
								Source: "({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stIntersectsLinestring})",
								Start: ast.Position{
									Column: 2,
									Line:   190,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 111,
										Line:   190,
									},
									File:   "st_intersects_linestring_test.flux",
									Source: "{input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stIntersectsLinestring}",
									Start: ast.Position{
										Column: 3,
										Line:   190,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 43,
											Line:   190,
										},
										File:   "st_intersects_linestring_test.flux",
										Source: "input: testing.loadStorage(csv: inData)",
										Start: ast.Position{
											Column: 4,
											Line:   190,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 9,
												Line:   190,
											},
											File:   "st_intersects_linestring_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 4,
												Line:   190,
											},
										},
									},
									Name: "input",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   190,
												},
												File:   "st_intersects_linestring_test.flux",
												Source: "csv: inData",
												Start: ast.Position{
													Column: 31,
													Line:   190,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 42,
														Line:   190,
													},
													File:   "st_intersects_linestring_test.flux",
													Source: "csv: inData",
													Start: ast.Position{
														Column: 31,
														Line:   190,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 34,
															Line:   190,
														},
														File:   "st_intersects_linestring_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 31,
															Line:   190,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 42,
															Line:   190,
														},
														File:   "st_intersects_linestring_test.flux",
														Source: "inData",
														Start: ast.Position{
															Column: 36,
															Line:   190,
														},
													},
												},
												Name: "inData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 43,
												Line:   190,
											},
											File:   "st_intersects_linestring_test.flux",
											Source: "testing.loadStorage(csv: inData)",
											Start: ast.Position{
												Column: 11,
												Line:   190,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   190,
												},
												File:   "st_intersects_linestring_test.flux",
												Source: "testing.loadStorage",
												Start: ast.Position{
													Column: 11,
													Line:   190,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   190,
													},
													File:   "st_intersects_linestring_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 11,
														Line:   190,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 30,
														Line:   190,
													},
													File:   "st_intersects_linestring_test.flux",
													Source: "loadStorage",
													Start: ast.Position{
														Column: 19,
														Line:   190,
													},
												},
											},
											Name: "loadStorage",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 80,
											Line:   190,
										},
										File:   "st_intersects_linestring_test.flux",
										Source: "want: testing.loadMem(csv: outData)",
										Start: ast.Position{
											Column: 45,
											Line:   190,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 49,
												Line:   190,
											},
											File:   "st_intersects_linestring_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 45,
												Line:   190,
											},
										},
									},
									Name: "want",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 79,
													Line:   190,
												},
												File:   "st_intersects_linestring_test.flux",
												Source: "csv: outData",
												Start: ast.Position{
													Column: 67,
													Line:   190,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 79,
														Line:   190,
													},
													File:   "st_intersects_linestring_test.flux",
													Source: "csv: outData",
													Start: ast.Position{
														Column: 67,
														Line:   190,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 70,
															Line:   190,
														},
														File:   "st_intersects_linestring_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 67,
															Line:   190,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 79,
															Line:   190,
														},
														File:   "st_intersects_linestring_test.flux",
														Source: "outData",
														Start: ast.Position{
															Column: 72,
															Line:   190,
														},
													},
												},
												Name: "outData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 80,
												Line:   190,
											},
											File:   "st_intersects_linestring_test.flux",
											Source: "testing.loadMem(csv: outData)",
											Start: ast.Position{
												Column: 51,
												Line:   190,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   190,
												},
												File:   "st_intersects_linestring_test.flux",
												Source: "testing.loadMem",
												Start: ast.Position{
													Column: 51,
													Line:   190,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 58,
														Line:   190,
													},
													File:   "st_intersects_linestring_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 51,
														Line:   190,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 66,
														Line:   190,
													},
													File:   "st_intersects_linestring_test.flux",
													Source: "loadMem",
													Start: ast.Position{
														Column: 59,
														Line:   190,
													},
												},
											},
											Name: "loadMem",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 110,
											Line:   190,
										},
										File:   "st_intersects_linestring_test.flux",
										Source: "fn: t_stIntersectsLinestring",
										Start: ast.Position{
											Column: 82,
											Line:   190,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 84,
												Line:   190,
											},
											File:   "st_intersects_linestring_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 82,
												Line:   190,
											},
										},
									},
									Name: "fn",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 110,
												Line:   190,
											},
											File:   "st_intersects_linestring_test.flux",
											Source: "t_stIntersectsLinestring",
											Start: ast.Position{
												Column: 86,
												Line:   190,
											},
										},
									},
									Name: "t_stIntersectsLinestring",
								},
							}},
							With: nil,
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 112,
						Line:   190,
					},
					File:   "st_intersects_linestring_test.flux",
					Source: "test _stIntersectsLinestring = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stIntersectsLinestring})",
					Start: ast.Position{
						Column: 1,
						Line:   189,
					},
				},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 26,
						Line:   3,
					},
					File:   "st_intersects_linestring_test.flux",
					Source: "import \"experimental/geo\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 26,
							Line:   3,
						},
						File:   "st_intersects_linestring_test.flux",
						Source: "\"experimental/geo\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "experimental/geo",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 32,
						Line:   4,
					},
					File:   "st_intersects_linestring_test.flux",
					Source: "import \"influxdata/influxdb/v1\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 32,
							Line:   4,
						},
						File:   "st_intersects_linestring_test.flux",
						Source: "\"influxdata/influxdb/v1\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "influxdata/influxdb/v1",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   5,
					},
					File:   "st_intersects_linestring_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   5,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   5,
						},
						File:   "st_intersects_linestring_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   5,
						},
					},
				},
				Value: "testing",
			},
		}},
		Metadata: "parser-type=rust",
		Name:     "st_intersects_linestring_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   1,
					},
					File:   "st_intersects_linestring_test.flux",
					Source: "package geo_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   1,
						},
						File:   "st_intersects_linestring_test.flux",
						Source: "geo_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "geo_test",
			},
		},
	}, &ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 98,
					Line:   192,
				},
				File:   "st_length_linestring_test.flux",
				Source: "package geo_test\n\nimport \"experimental/geo\"\nimport \"influxdata/influxdb/v1\"\nimport \"testing\"\n\noption now = () => (2030-01-01T00:00:00Z)\n\n// train closing to Manhattan\ninData = \"\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,0,2020-04-08T15:44:58Z,40.820317,lat,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,1,2020-04-08T16:19:27Z,40.745249,lat,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,2,2020-04-08T16:16:50Z,40.751085,lat,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,3,2020-04-08T16:15:59Z,40.748141,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,4,2020-04-08T16:16:16Z,40.748909,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,5,2020-04-08T16:14:32Z,40.743989,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,6,2020-04-08T16:14:49Z,40.745851,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,7,2020-04-08T16:18:18Z,40.748495,lat,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,8,2020-04-08T16:11:03Z,40.749543,lat,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,9,2020-04-08T16:10:46Z,40.750688,lat,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,10,2020-04-08T16:09:36Z,40.757106,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,11,2020-04-08T16:09:53Z,40.7565,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,12,2020-04-08T16:09:01Z,40.757895,lat,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,13,2020-04-08T16:08:19Z,40.759873,lat,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,14,2020-04-08T16:08:38Z,40.759128,lat,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,15,2020-04-08T16:07:43Z,40.762143,lat,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,16,2020-04-08T16:06:49Z,40.762709,lat,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,17,2020-04-08T16:06:31Z,40.762441,lat,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,18,2020-04-08T16:06:11Z,40.762373,lat,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,19,2020-04-08T16:03:54Z,40.76117,lat,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,20,2020-04-08T16:04:28Z,40.761653,lat,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,21,2020-04-08T16:05:46Z,40.761908,lat,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,22,2020-04-08T16:10:29Z,40.753279,lat,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,23,2020-04-08T16:03:36Z,40.761241,lat,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,24,2020-04-08T16:02:33Z,40.761443,lat,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,25,2020-04-08T16:01:55Z,40.761878,lat,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,26,2020-04-08T15:59:24Z,40.763356,lat,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,27,2020-04-08T15:45:33Z,40.815413,lat,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,28,2020-04-08T15:45:51Z,40.814096,lat,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,29,2020-04-08T15:46:12Z,40.810699,lat,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,30,2020-04-08T15:47:45Z,40.808517,lat,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,31,2020-04-08T15:48:04Z,40.806882,lat,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,32,2020-04-08T15:49:01Z,40.800397,lat,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,33,2020-04-08T15:49:22Z,40.796724,lat,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,34,2020-04-08T15:50:44Z,40.794998,lat,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,35,2020-04-08T15:53:56Z,40.786038,lat,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,36,2020-04-08T15:52:38Z,40.787216,lat,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,37,2020-04-08T15:52:16Z,40.788413,lat,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,38,2020-04-08T15:51:55Z,40.789185,lat,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,39,2020-04-08T15:51:20Z,40.791541,lat,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,40,2020-04-08T15:51:37Z,40.791009,lat,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,41,2020-04-08T15:51:03Z,40.793905,lat,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,42,2020-04-08T15:54:57Z,40.775044,lat,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,43,2020-04-08T15:55:54Z,40.773334,lat,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,44,2020-04-08T15:56:13Z,40.772144,lat,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,45,2020-04-08T15:56:33Z,40.770953,lat,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,46,2020-04-08T15:58:10Z,40.76594,lat,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,47,2020-04-08T15:56:53Z,40.768069,lat,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,48,2020-04-08T15:57:52Z,40.76661,lat,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n,,49,2020-04-08T15:44:58Z,-73.68691,lon,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,50,2020-04-08T16:19:27Z,-73.940563,lon,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,51,2020-04-08T16:16:50Z,-73.912119,lon,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,52,2020-04-08T16:15:59Z,-73.905367,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,53,2020-04-08T16:16:16Z,-73.906398,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,54,2020-04-08T16:14:32Z,-73.900815,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,55,2020-04-08T16:14:49Z,-73.902975,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,56,2020-04-08T16:18:18Z,-73.927597,lon,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,57,2020-04-08T16:11:03Z,-73.852242,lon,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,58,2020-04-08T16:10:46Z,-73.848962,lon,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,59,2020-04-08T16:09:36Z,-73.833095,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,60,2020-04-08T16:09:53Z,-73.834298,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,61,2020-04-08T16:09:01Z,-73.831347,lon,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,62,2020-04-08T16:08:19Z,-73.826087,lon,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,63,2020-04-08T16:08:38Z,-73.828799,lon,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,64,2020-04-08T16:07:43Z,-73.817956,lon,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,65,2020-04-08T16:06:49Z,-73.814539,lon,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,66,2020-04-08T16:06:31Z,-73.810154,lon,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,67,2020-04-08T16:06:11Z,-73.809437,lon,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,68,2020-04-08T16:03:54Z,-73.795812,lon,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,69,2020-04-08T16:04:28Z,-73.801766,lon,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,70,2020-04-08T16:05:46Z,-73.804421,lon,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,71,2020-04-08T16:10:29Z,-73.841791,lon,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,72,2020-04-08T16:03:36Z,-73.792932,lon,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,73,2020-04-08T16:02:33Z,-73.789959,lon,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,74,2020-04-08T16:01:55Z,-73.785035,lon,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,75,2020-04-08T15:59:24Z,-73.769272,lon,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,76,2020-04-08T15:45:33Z,-73.690054,lon,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,77,2020-04-08T15:45:51Z,-73.693214,lon,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,78,2020-04-08T15:46:12Z,-73.695214,lon,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,79,2020-04-08T15:47:45Z,-73.695594,lon,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,80,2020-04-08T15:48:04Z,-73.695858,lon,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,81,2020-04-08T15:49:01Z,-73.695023,lon,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,82,2020-04-08T15:49:22Z,-73.699899,lon,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,83,2020-04-08T15:50:44Z,-73.702982,lon,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,84,2020-04-08T15:53:56Z,-73.72924,lon,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,85,2020-04-08T15:52:38Z,-73.7261,lon,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,86,2020-04-08T15:52:16Z,-73.721973,lon,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,87,2020-04-08T15:51:55Z,-73.720059,lon,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,88,2020-04-08T15:51:20Z,-73.713571,lon,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,89,2020-04-08T15:51:37Z,-73.715622,lon,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,90,2020-04-08T15:51:03Z,-73.705485,lon,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,91,2020-04-08T15:54:57Z,-73.740647,lon,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,92,2020-04-08T15:55:54Z,-73.742812,lon,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,93,2020-04-08T15:56:13Z,-73.74431,lon,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,94,2020-04-08T15:56:33Z,-73.745805,lon,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,95,2020-04-08T15:58:10Z,-73.752465,lon,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,96,2020-04-08T15:56:53Z,-73.749413,lon,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,97,2020-04-08T15:57:52Z,-73.751322,lon,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,98,2020-04-08T15:44:58Z,1586304000,tid,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,99,2020-04-08T16:19:27Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,100,2020-04-08T16:16:50Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,101,2020-04-08T16:15:59Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,102,2020-04-08T16:16:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,103,2020-04-08T16:14:32Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,104,2020-04-08T16:14:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,105,2020-04-08T16:18:18Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,106,2020-04-08T16:11:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,107,2020-04-08T16:10:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,108,2020-04-08T16:09:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,109,2020-04-08T16:09:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,110,2020-04-08T16:09:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,111,2020-04-08T16:08:19Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,112,2020-04-08T16:08:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,113,2020-04-08T16:07:43Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,114,2020-04-08T16:06:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,115,2020-04-08T16:06:31Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,116,2020-04-08T16:06:11Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,117,2020-04-08T16:03:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,118,2020-04-08T16:04:28Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,119,2020-04-08T16:05:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,120,2020-04-08T16:10:29Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,121,2020-04-08T16:03:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,122,2020-04-08T16:02:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,123,2020-04-08T16:01:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,124,2020-04-08T15:59:24Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,125,2020-04-08T15:45:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,126,2020-04-08T15:45:51Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,127,2020-04-08T15:46:12Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,128,2020-04-08T15:47:45Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,129,2020-04-08T15:48:04Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,130,2020-04-08T15:49:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,131,2020-04-08T15:49:22Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,132,2020-04-08T15:50:44Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,133,2020-04-08T15:53:56Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,134,2020-04-08T15:52:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,135,2020-04-08T15:52:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,136,2020-04-08T15:51:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,137,2020-04-08T15:51:20Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,138,2020-04-08T15:51:37Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,139,2020-04-08T15:51:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,140,2020-04-08T15:54:57Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,141,2020-04-08T15:55:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,142,2020-04-08T15:56:13Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,143,2020-04-08T15:56:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,144,2020-04-08T15:58:10Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,145,2020-04-08T15:56:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,146,2020-04-08T15:57:52Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\"\n\noutData = \"\n#group,false,false,false,true,false,true\n#datatype,string,long,double,string,string,string\n#default,_result,,,,,\n,result,table,_st_length,id,st_linestring,trip_id\n,,0,25.463,GO506_20_6431,\\\"-73.68691 40.820317, -73.690054 40.815413, -73.693214 40.814096, -73.695214 40.810699, -73.695594 40.808517, -73.695858 40.806882, -73.695023 40.800397, -73.699899 40.796724, -73.702982 40.794998, -73.705485 40.793905, -73.713571 40.791541, -73.715622 40.791009, -73.720059 40.789185, -73.721973 40.788413, -73.7261 40.787216, -73.72924 40.786038, -73.740647 40.775044, -73.742812 40.773334, -73.74431 40.772144, -73.745805 40.770953, -73.749413 40.768069, -73.751322 40.76661, -73.752465 40.76594, -73.769272 40.763356, -73.785035 40.761878, -73.789959 40.761443, -73.792932 40.761241, -73.795812 40.76117, -73.801766 40.761653, -73.804421 40.761908, -73.809437 40.762373, -73.810154 40.762441, -73.814539 40.762709, -73.817956 40.762143, -73.826087 40.759873, -73.828799 40.759128, -73.831347 40.757895, -73.833095 40.757106, -73.834298 40.7565, -73.841791 40.753279, -73.848962 40.750688, -73.852242 40.749543, -73.900815 40.743989, -73.902975 40.745851, -73.905367 40.748141, -73.906398 40.748909, -73.912119 40.751085, -73.927597 40.748495, -73.940563 40.745249\\\",GO506_20_6431\n\"\n\n// limit float to 3 decimal places\nlimitFloat = (value) =>\n  (float(v: int(v: value * 1000.0)) / 1000.0)\n\nt_stLength = (table=<-) =>\n  table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to see the train closing in\n    |> geo.ST_LineString()\n    |> map(fn: (r) => ({\n        r with _st_length: limitFloat(value: geo.ST_Length(geometry: {linestring: r.st_linestring}))\n    }))\n    |> drop(columns: [\"_start\", \"_stop\"])\ntest _stLength = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stLength})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   7,
						},
						File:   "st_length_linestring_test.flux",
						Source: "now = () => (2030-01-01T00:00:00Z)",
						Start: ast.Position{
							Column: 8,
							Line:   7,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   7,
							},
							File:   "st_length_linestring_test.flux",
							Source: "now",
							Start: ast.Position{
								Column: 8,
								Line:   7,
							},
						},
					},
					Name: "now",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   7,
							},
							File:   "st_length_linestring_test.flux",
							Source: "() => (2030-01-01T00:00:00Z)",
							Start: ast.Position{
								Column: 14,
								Line:   7,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   7,
								},
								File:   "st_length_linestring_test.flux",
								Source: "(2030-01-01T00:00:00Z)",
								Start: ast.Position{
									Column: 20,
									Line:   7,
								},
							},
						},
						Expression: &ast.DateTimeLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   7,
									},
									File:   "st_length_linestring_test.flux",
									Source: "2030-01-01T00:00:00Z",
									Start: ast.Position{
										Column: 21,
										Line:   7,
									},
								},
							},
							Value: parser.MustParseTime("2030-01-01T00:00:00Z"),
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   7,
					},
					File:   "st_length_linestring_test.flux",
					Source: "option now = () => (2030-01-01T00:00:00Z)",
					Start: ast.Position{
						Column: 1,
						Line:   7,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   167,
					},
					File:   "st_length_linestring_test.flux",
					Source: "inData = \"\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,0,2020-04-08T15:44:58Z,40.820317,lat,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,1,2020-04-08T16:19:27Z,40.745249,lat,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,2,2020-04-08T16:16:50Z,40.751085,lat,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,3,2020-04-08T16:15:59Z,40.748141,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,4,2020-04-08T16:16:16Z,40.748909,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,5,2020-04-08T16:14:32Z,40.743989,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,6,2020-04-08T16:14:49Z,40.745851,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,7,2020-04-08T16:18:18Z,40.748495,lat,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,8,2020-04-08T16:11:03Z,40.749543,lat,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,9,2020-04-08T16:10:46Z,40.750688,lat,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,10,2020-04-08T16:09:36Z,40.757106,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,11,2020-04-08T16:09:53Z,40.7565,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,12,2020-04-08T16:09:01Z,40.757895,lat,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,13,2020-04-08T16:08:19Z,40.759873,lat,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,14,2020-04-08T16:08:38Z,40.759128,lat,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,15,2020-04-08T16:07:43Z,40.762143,lat,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,16,2020-04-08T16:06:49Z,40.762709,lat,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,17,2020-04-08T16:06:31Z,40.762441,lat,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,18,2020-04-08T16:06:11Z,40.762373,lat,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,19,2020-04-08T16:03:54Z,40.76117,lat,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,20,2020-04-08T16:04:28Z,40.761653,lat,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,21,2020-04-08T16:05:46Z,40.761908,lat,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,22,2020-04-08T16:10:29Z,40.753279,lat,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,23,2020-04-08T16:03:36Z,40.761241,lat,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,24,2020-04-08T16:02:33Z,40.761443,lat,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,25,2020-04-08T16:01:55Z,40.761878,lat,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,26,2020-04-08T15:59:24Z,40.763356,lat,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,27,2020-04-08T15:45:33Z,40.815413,lat,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,28,2020-04-08T15:45:51Z,40.814096,lat,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,29,2020-04-08T15:46:12Z,40.810699,lat,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,30,2020-04-08T15:47:45Z,40.808517,lat,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,31,2020-04-08T15:48:04Z,40.806882,lat,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,32,2020-04-08T15:49:01Z,40.800397,lat,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,33,2020-04-08T15:49:22Z,40.796724,lat,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,34,2020-04-08T15:50:44Z,40.794998,lat,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,35,2020-04-08T15:53:56Z,40.786038,lat,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,36,2020-04-08T15:52:38Z,40.787216,lat,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,37,2020-04-08T15:52:16Z,40.788413,lat,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,38,2020-04-08T15:51:55Z,40.789185,lat,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,39,2020-04-08T15:51:20Z,40.791541,lat,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,40,2020-04-08T15:51:37Z,40.791009,lat,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,41,2020-04-08T15:51:03Z,40.793905,lat,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,42,2020-04-08T15:54:57Z,40.775044,lat,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,43,2020-04-08T15:55:54Z,40.773334,lat,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,44,2020-04-08T15:56:13Z,40.772144,lat,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,45,2020-04-08T15:56:33Z,40.770953,lat,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,46,2020-04-08T15:58:10Z,40.76594,lat,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,47,2020-04-08T15:56:53Z,40.768069,lat,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,48,2020-04-08T15:57:52Z,40.76661,lat,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n,,49,2020-04-08T15:44:58Z,-73.68691,lon,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,50,2020-04-08T16:19:27Z,-73.940563,lon,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,51,2020-04-08T16:16:50Z,-73.912119,lon,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,52,2020-04-08T16:15:59Z,-73.905367,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,53,2020-04-08T16:16:16Z,-73.906398,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,54,2020-04-08T16:14:32Z,-73.900815,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,55,2020-04-08T16:14:49Z,-73.902975,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,56,2020-04-08T16:18:18Z,-73.927597,lon,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,57,2020-04-08T16:11:03Z,-73.852242,lon,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,58,2020-04-08T16:10:46Z,-73.848962,lon,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,59,2020-04-08T16:09:36Z,-73.833095,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,60,2020-04-08T16:09:53Z,-73.834298,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,61,2020-04-08T16:09:01Z,-73.831347,lon,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,62,2020-04-08T16:08:19Z,-73.826087,lon,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,63,2020-04-08T16:08:38Z,-73.828799,lon,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,64,2020-04-08T16:07:43Z,-73.817956,lon,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,65,2020-04-08T16:06:49Z,-73.814539,lon,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,66,2020-04-08T16:06:31Z,-73.810154,lon,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,67,2020-04-08T16:06:11Z,-73.809437,lon,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,68,2020-04-08T16:03:54Z,-73.795812,lon,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,69,2020-04-08T16:04:28Z,-73.801766,lon,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,70,2020-04-08T16:05:46Z,-73.804421,lon,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,71,2020-04-08T16:10:29Z,-73.841791,lon,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,72,2020-04-08T16:03:36Z,-73.792932,lon,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,73,2020-04-08T16:02:33Z,-73.789959,lon,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,74,2020-04-08T16:01:55Z,-73.785035,lon,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,75,2020-04-08T15:59:24Z,-73.769272,lon,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,76,2020-04-08T15:45:33Z,-73.690054,lon,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,77,2020-04-08T15:45:51Z,-73.693214,lon,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,78,2020-04-08T15:46:12Z,-73.695214,lon,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,79,2020-04-08T15:47:45Z,-73.695594,lon,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,80,2020-04-08T15:48:04Z,-73.695858,lon,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,81,2020-04-08T15:49:01Z,-73.695023,lon,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,82,2020-04-08T15:49:22Z,-73.699899,lon,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,83,2020-04-08T15:50:44Z,-73.702982,lon,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,84,2020-04-08T15:53:56Z,-73.72924,lon,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,85,2020-04-08T15:52:38Z,-73.7261,lon,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,86,2020-04-08T15:52:16Z,-73.721973,lon,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,87,2020-04-08T15:51:55Z,-73.720059,lon,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,88,2020-04-08T15:51:20Z,-73.713571,lon,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,89,2020-04-08T15:51:37Z,-73.715622,lon,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,90,2020-04-08T15:51:03Z,-73.705485,lon,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,91,2020-04-08T15:54:57Z,-73.740647,lon,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,92,2020-04-08T15:55:54Z,-73.742812,lon,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,93,2020-04-08T15:56:13Z,-73.74431,lon,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,94,2020-04-08T15:56:33Z,-73.745805,lon,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,95,2020-04-08T15:58:10Z,-73.752465,lon,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,96,2020-04-08T15:56:53Z,-73.749413,lon,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,97,2020-04-08T15:57:52Z,-73.751322,lon,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,98,2020-04-08T15:44:58Z,1586304000,tid,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,99,2020-04-08T16:19:27Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,100,2020-04-08T16:16:50Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,101,2020-04-08T16:15:59Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,102,2020-04-08T16:16:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,103,2020-04-08T16:14:32Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,104,2020-04-08T16:14:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,105,2020-04-08T16:18:18Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,106,2020-04-08T16:11:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,107,2020-04-08T16:10:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,108,2020-04-08T16:09:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,109,2020-04-08T16:09:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,110,2020-04-08T16:09:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,111,2020-04-08T16:08:19Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,112,2020-04-08T16:08:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,113,2020-04-08T16:07:43Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,114,2020-04-08T16:06:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,115,2020-04-08T16:06:31Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,116,2020-04-08T16:06:11Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,117,2020-04-08T16:03:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,118,2020-04-08T16:04:28Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,119,2020-04-08T16:05:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,120,2020-04-08T16:10:29Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,121,2020-04-08T16:03:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,122,2020-04-08T16:02:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,123,2020-04-08T16:01:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,124,2020-04-08T15:59:24Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,125,2020-04-08T15:45:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,126,2020-04-08T15:45:51Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,127,2020-04-08T15:46:12Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,128,2020-04-08T15:47:45Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,129,2020-04-08T15:48:04Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,130,2020-04-08T15:49:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,131,2020-04-08T15:49:22Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,132,2020-04-08T15:50:44Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,133,2020-04-08T15:53:56Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,134,2020-04-08T15:52:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,135,2020-04-08T15:52:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,136,2020-04-08T15:51:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,137,2020-04-08T15:51:20Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,138,2020-04-08T15:51:37Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,139,2020-04-08T15:51:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,140,2020-04-08T15:54:57Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,141,2020-04-08T15:55:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,142,2020-04-08T15:56:13Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,143,2020-04-08T15:56:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,144,2020-04-08T15:58:10Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,145,2020-04-08T15:56:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,146,2020-04-08T15:57:52Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   10,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 7,
							Line:   10,
						},
						File:   "st_length_linestring_test.flux",
						Source: "inData",
						Start: ast.Position{
							Column: 1,
							Line:   10,
						},
					},
				},
				Name: "inData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   167,
						},
						File:   "st_length_linestring_test.flux",
						Source: "\"\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,0,2020-04-08T15:44:58Z,40.820317,lat,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,1,2020-04-08T16:19:27Z,40.745249,lat,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,2,2020-04-08T16:16:50Z,40.751085,lat,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,3,2020-04-08T16:15:59Z,40.748141,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,4,2020-04-08T16:16:16Z,40.748909,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,5,2020-04-08T16:14:32Z,40.743989,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,6,2020-04-08T16:14:49Z,40.745851,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,7,2020-04-08T16:18:18Z,40.748495,lat,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,8,2020-04-08T16:11:03Z,40.749543,lat,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,9,2020-04-08T16:10:46Z,40.750688,lat,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,10,2020-04-08T16:09:36Z,40.757106,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,11,2020-04-08T16:09:53Z,40.7565,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,12,2020-04-08T16:09:01Z,40.757895,lat,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,13,2020-04-08T16:08:19Z,40.759873,lat,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,14,2020-04-08T16:08:38Z,40.759128,lat,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,15,2020-04-08T16:07:43Z,40.762143,lat,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,16,2020-04-08T16:06:49Z,40.762709,lat,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,17,2020-04-08T16:06:31Z,40.762441,lat,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,18,2020-04-08T16:06:11Z,40.762373,lat,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,19,2020-04-08T16:03:54Z,40.76117,lat,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,20,2020-04-08T16:04:28Z,40.761653,lat,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,21,2020-04-08T16:05:46Z,40.761908,lat,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,22,2020-04-08T16:10:29Z,40.753279,lat,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,23,2020-04-08T16:03:36Z,40.761241,lat,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,24,2020-04-08T16:02:33Z,40.761443,lat,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,25,2020-04-08T16:01:55Z,40.761878,lat,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,26,2020-04-08T15:59:24Z,40.763356,lat,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,27,2020-04-08T15:45:33Z,40.815413,lat,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,28,2020-04-08T15:45:51Z,40.814096,lat,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,29,2020-04-08T15:46:12Z,40.810699,lat,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,30,2020-04-08T15:47:45Z,40.808517,lat,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,31,2020-04-08T15:48:04Z,40.806882,lat,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,32,2020-04-08T15:49:01Z,40.800397,lat,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,33,2020-04-08T15:49:22Z,40.796724,lat,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,34,2020-04-08T15:50:44Z,40.794998,lat,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,35,2020-04-08T15:53:56Z,40.786038,lat,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,36,2020-04-08T15:52:38Z,40.787216,lat,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,37,2020-04-08T15:52:16Z,40.788413,lat,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,38,2020-04-08T15:51:55Z,40.789185,lat,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,39,2020-04-08T15:51:20Z,40.791541,lat,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,40,2020-04-08T15:51:37Z,40.791009,lat,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,41,2020-04-08T15:51:03Z,40.793905,lat,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,42,2020-04-08T15:54:57Z,40.775044,lat,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,43,2020-04-08T15:55:54Z,40.773334,lat,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,44,2020-04-08T15:56:13Z,40.772144,lat,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,45,2020-04-08T15:56:33Z,40.770953,lat,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,46,2020-04-08T15:58:10Z,40.76594,lat,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,47,2020-04-08T15:56:53Z,40.768069,lat,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,48,2020-04-08T15:57:52Z,40.76661,lat,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n,,49,2020-04-08T15:44:58Z,-73.68691,lon,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,50,2020-04-08T16:19:27Z,-73.940563,lon,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,51,2020-04-08T16:16:50Z,-73.912119,lon,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,52,2020-04-08T16:15:59Z,-73.905367,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,53,2020-04-08T16:16:16Z,-73.906398,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,54,2020-04-08T16:14:32Z,-73.900815,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,55,2020-04-08T16:14:49Z,-73.902975,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,56,2020-04-08T16:18:18Z,-73.927597,lon,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,57,2020-04-08T16:11:03Z,-73.852242,lon,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,58,2020-04-08T16:10:46Z,-73.848962,lon,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,59,2020-04-08T16:09:36Z,-73.833095,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,60,2020-04-08T16:09:53Z,-73.834298,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,61,2020-04-08T16:09:01Z,-73.831347,lon,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,62,2020-04-08T16:08:19Z,-73.826087,lon,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,63,2020-04-08T16:08:38Z,-73.828799,lon,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,64,2020-04-08T16:07:43Z,-73.817956,lon,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,65,2020-04-08T16:06:49Z,-73.814539,lon,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,66,2020-04-08T16:06:31Z,-73.810154,lon,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,67,2020-04-08T16:06:11Z,-73.809437,lon,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,68,2020-04-08T16:03:54Z,-73.795812,lon,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,69,2020-04-08T16:04:28Z,-73.801766,lon,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,70,2020-04-08T16:05:46Z,-73.804421,lon,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,71,2020-04-08T16:10:29Z,-73.841791,lon,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,72,2020-04-08T16:03:36Z,-73.792932,lon,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,73,2020-04-08T16:02:33Z,-73.789959,lon,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,74,2020-04-08T16:01:55Z,-73.785035,lon,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,75,2020-04-08T15:59:24Z,-73.769272,lon,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,76,2020-04-08T15:45:33Z,-73.690054,lon,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,77,2020-04-08T15:45:51Z,-73.693214,lon,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,78,2020-04-08T15:46:12Z,-73.695214,lon,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,79,2020-04-08T15:47:45Z,-73.695594,lon,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,80,2020-04-08T15:48:04Z,-73.695858,lon,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,81,2020-04-08T15:49:01Z,-73.695023,lon,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,82,2020-04-08T15:49:22Z,-73.699899,lon,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,83,2020-04-08T15:50:44Z,-73.702982,lon,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,84,2020-04-08T15:53:56Z,-73.72924,lon,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,85,2020-04-08T15:52:38Z,-73.7261,lon,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,86,2020-04-08T15:52:16Z,-73.721973,lon,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,87,2020-04-08T15:51:55Z,-73.720059,lon,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,88,2020-04-08T15:51:20Z,-73.713571,lon,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,89,2020-04-08T15:51:37Z,-73.715622,lon,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,90,2020-04-08T15:51:03Z,-73.705485,lon,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,91,2020-04-08T15:54:57Z,-73.740647,lon,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,92,2020-04-08T15:55:54Z,-73.742812,lon,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,93,2020-04-08T15:56:13Z,-73.74431,lon,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,94,2020-04-08T15:56:33Z,-73.745805,lon,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,95,2020-04-08T15:58:10Z,-73.752465,lon,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,96,2020-04-08T15:56:53Z,-73.749413,lon,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,97,2020-04-08T15:57:52Z,-73.751322,lon,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,98,2020-04-08T15:44:58Z,1586304000,tid,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,99,2020-04-08T16:19:27Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,100,2020-04-08T16:16:50Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,101,2020-04-08T16:15:59Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,102,2020-04-08T16:16:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,103,2020-04-08T16:14:32Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,104,2020-04-08T16:14:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,105,2020-04-08T16:18:18Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,106,2020-04-08T16:11:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,107,2020-04-08T16:10:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,108,2020-04-08T16:09:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,109,2020-04-08T16:09:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,110,2020-04-08T16:09:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,111,2020-04-08T16:08:19Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,112,2020-04-08T16:08:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,113,2020-04-08T16:07:43Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,114,2020-04-08T16:06:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,115,2020-04-08T16:06:31Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,116,2020-04-08T16:06:11Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,117,2020-04-08T16:03:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,118,2020-04-08T16:04:28Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,119,2020-04-08T16:05:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,120,2020-04-08T16:10:29Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,121,2020-04-08T16:03:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,122,2020-04-08T16:02:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,123,2020-04-08T16:01:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,124,2020-04-08T15:59:24Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,125,2020-04-08T15:45:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,126,2020-04-08T15:45:51Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,127,2020-04-08T15:46:12Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,128,2020-04-08T15:47:45Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,129,2020-04-08T15:48:04Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,130,2020-04-08T15:49:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,131,2020-04-08T15:49:22Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,132,2020-04-08T15:50:44Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,133,2020-04-08T15:53:56Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,134,2020-04-08T15:52:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,135,2020-04-08T15:52:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,136,2020-04-08T15:51:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,137,2020-04-08T15:51:20Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,138,2020-04-08T15:51:37Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,139,2020-04-08T15:51:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,140,2020-04-08T15:54:57Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,141,2020-04-08T15:55:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,142,2020-04-08T15:56:13Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,143,2020-04-08T15:56:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,144,2020-04-08T15:58:10Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,145,2020-04-08T15:56:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,146,2020-04-08T15:57:52Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\"",
						Start: ast.Position{
							Column: 10,
							Line:   10,
						},
					},
				},
				Value: "\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,0,2020-04-08T15:44:58Z,40.820317,lat,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,1,2020-04-08T16:19:27Z,40.745249,lat,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,2,2020-04-08T16:16:50Z,40.751085,lat,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,3,2020-04-08T16:15:59Z,40.748141,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,4,2020-04-08T16:16:16Z,40.748909,lat,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,5,2020-04-08T16:14:32Z,40.743989,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,6,2020-04-08T16:14:49Z,40.745851,lat,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,7,2020-04-08T16:18:18Z,40.748495,lat,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,8,2020-04-08T16:11:03Z,40.749543,lat,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,9,2020-04-08T16:10:46Z,40.750688,lat,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,10,2020-04-08T16:09:36Z,40.757106,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,11,2020-04-08T16:09:53Z,40.7565,lat,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,12,2020-04-08T16:09:01Z,40.757895,lat,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,13,2020-04-08T16:08:19Z,40.759873,lat,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,14,2020-04-08T16:08:38Z,40.759128,lat,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,15,2020-04-08T16:07:43Z,40.762143,lat,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,16,2020-04-08T16:06:49Z,40.762709,lat,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,17,2020-04-08T16:06:31Z,40.762441,lat,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,18,2020-04-08T16:06:11Z,40.762373,lat,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,19,2020-04-08T16:03:54Z,40.76117,lat,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,20,2020-04-08T16:04:28Z,40.761653,lat,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,21,2020-04-08T16:05:46Z,40.761908,lat,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,22,2020-04-08T16:10:29Z,40.753279,lat,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,23,2020-04-08T16:03:36Z,40.761241,lat,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,24,2020-04-08T16:02:33Z,40.761443,lat,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,25,2020-04-08T16:01:55Z,40.761878,lat,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,26,2020-04-08T15:59:24Z,40.763356,lat,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,27,2020-04-08T15:45:33Z,40.815413,lat,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,28,2020-04-08T15:45:51Z,40.814096,lat,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,29,2020-04-08T15:46:12Z,40.810699,lat,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,30,2020-04-08T15:47:45Z,40.808517,lat,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,31,2020-04-08T15:48:04Z,40.806882,lat,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,32,2020-04-08T15:49:01Z,40.800397,lat,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,33,2020-04-08T15:49:22Z,40.796724,lat,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,34,2020-04-08T15:50:44Z,40.794998,lat,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,35,2020-04-08T15:53:56Z,40.786038,lat,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,36,2020-04-08T15:52:38Z,40.787216,lat,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,37,2020-04-08T15:52:16Z,40.788413,lat,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,38,2020-04-08T15:51:55Z,40.789185,lat,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,39,2020-04-08T15:51:20Z,40.791541,lat,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,40,2020-04-08T15:51:37Z,40.791009,lat,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,41,2020-04-08T15:51:03Z,40.793905,lat,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,42,2020-04-08T15:54:57Z,40.775044,lat,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,43,2020-04-08T15:55:54Z,40.773334,lat,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,44,2020-04-08T15:56:13Z,40.772144,lat,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,45,2020-04-08T15:56:33Z,40.770953,lat,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,46,2020-04-08T15:58:10Z,40.76594,lat,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,47,2020-04-08T15:56:53Z,40.768069,lat,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,48,2020-04-08T15:57:52Z,40.76661,lat,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n,,49,2020-04-08T15:44:58Z,-73.68691,lon,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,50,2020-04-08T16:19:27Z,-73.940563,lon,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,51,2020-04-08T16:16:50Z,-73.912119,lon,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,52,2020-04-08T16:15:59Z,-73.905367,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,53,2020-04-08T16:16:16Z,-73.906398,lon,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,54,2020-04-08T16:14:32Z,-73.900815,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,55,2020-04-08T16:14:49Z,-73.902975,lon,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,56,2020-04-08T16:18:18Z,-73.927597,lon,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,57,2020-04-08T16:11:03Z,-73.852242,lon,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,58,2020-04-08T16:10:46Z,-73.848962,lon,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,59,2020-04-08T16:09:36Z,-73.833095,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,60,2020-04-08T16:09:53Z,-73.834298,lon,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,61,2020-04-08T16:09:01Z,-73.831347,lon,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,62,2020-04-08T16:08:19Z,-73.826087,lon,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,63,2020-04-08T16:08:38Z,-73.828799,lon,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,64,2020-04-08T16:07:43Z,-73.817956,lon,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,65,2020-04-08T16:06:49Z,-73.814539,lon,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,66,2020-04-08T16:06:31Z,-73.810154,lon,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,67,2020-04-08T16:06:11Z,-73.809437,lon,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,68,2020-04-08T16:03:54Z,-73.795812,lon,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,69,2020-04-08T16:04:28Z,-73.801766,lon,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,70,2020-04-08T16:05:46Z,-73.804421,lon,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,71,2020-04-08T16:10:29Z,-73.841791,lon,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,72,2020-04-08T16:03:36Z,-73.792932,lon,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,73,2020-04-08T16:02:33Z,-73.789959,lon,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,74,2020-04-08T16:01:55Z,-73.785035,lon,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,75,2020-04-08T15:59:24Z,-73.769272,lon,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,76,2020-04-08T15:45:33Z,-73.690054,lon,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,77,2020-04-08T15:45:51Z,-73.693214,lon,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,78,2020-04-08T15:46:12Z,-73.695214,lon,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,79,2020-04-08T15:47:45Z,-73.695594,lon,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,80,2020-04-08T15:48:04Z,-73.695858,lon,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,81,2020-04-08T15:49:01Z,-73.695023,lon,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,82,2020-04-08T15:49:22Z,-73.699899,lon,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,83,2020-04-08T15:50:44Z,-73.702982,lon,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,84,2020-04-08T15:53:56Z,-73.72924,lon,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,85,2020-04-08T15:52:38Z,-73.7261,lon,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,86,2020-04-08T15:52:16Z,-73.721973,lon,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,87,2020-04-08T15:51:55Z,-73.720059,lon,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,88,2020-04-08T15:51:20Z,-73.713571,lon,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,89,2020-04-08T15:51:37Z,-73.715622,lon,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,90,2020-04-08T15:51:03Z,-73.705485,lon,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,91,2020-04-08T15:54:57Z,-73.740647,lon,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,92,2020-04-08T15:55:54Z,-73.742812,lon,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,93,2020-04-08T15:56:13Z,-73.74431,lon,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,94,2020-04-08T15:56:33Z,-73.745805,lon,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,95,2020-04-08T15:58:10Z,-73.752465,lon,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,96,2020-04-08T15:56:53Z,-73.749413,lon,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,97,2020-04-08T15:57:52Z,-73.751322,lon,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,98,2020-04-08T15:44:58Z,1586304000,tid,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,99,2020-04-08T16:19:27Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,100,2020-04-08T16:16:50Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,101,2020-04-08T16:15:59Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,12,STOPPED_AT,214,GO506_20_6431\n,,102,2020-04-08T16:16:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1c4,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,103,2020-04-08T16:14:32Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,104,2020-04-08T16:14:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f1d4,12,STOPPED_AT,214,GO506_20_6431\n,,105,2020-04-08T16:18:18Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f29c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,106,2020-04-08T16:11:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdb4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,107,2020-04-08T16:10:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25fdbc,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,108,2020-04-08T16:09:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,11,STOPPED_AT,56,GO506_20_6431\n,,109,2020-04-08T16:09:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600c4,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,110,2020-04-08T16:09:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2600dc,11,STOPPED_AT,56,GO506_20_6431\n,,111,2020-04-08T16:08:19Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26010c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,112,2020-04-08T16:08:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26011c,11,STOPPED_AT,56,GO506_20_6431\n,,113,2020-04-08T16:07:43Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26022c,11,IN_TRANSIT_TO,56,GO506_20_6431\n,,114,2020-04-08T16:06:49Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260234,10,STOPPED_AT,130,GO506_20_6431\n,,115,2020-04-08T16:06:31Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c26024c,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,116,2020-04-08T16:06:11Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260254,10,IN_TRANSIT_TO,130,GO506_20_6431\n,,117,2020-04-08T16:03:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602cc,9,IN_TRANSIT_TO,11,GO506_20_6431\n,,118,2020-04-08T16:04:28Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602ec,9,STOPPED_AT,11,GO506_20_6431\n,,119,2020-04-08T16:05:46Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2602f4,9,STOPPED_AT,11,GO506_20_6431\n,,120,2020-04-08T16:10:29Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c260754,12,IN_TRANSIT_TO,214,GO506_20_6431\n,,121,2020-04-08T16:03:36Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d34,8,STOPPED_AT,2,GO506_20_6431\n,,122,2020-04-08T16:02:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d3c,8,STOPPED_AT,2,GO506_20_6431\n,,123,2020-04-08T16:01:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261d74,8,IN_TRANSIT_TO,2,GO506_20_6431\n,,124,2020-04-08T15:59:24Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c261e04,7,STOPPED_AT,25,GO506_20_6431\n,,125,2020-04-08T15:45:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288dcc,4,STOPPED_AT,72,GO506_20_6431\n,,126,2020-04-08T15:45:51Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288ddc,4,STOPPED_AT,72,GO506_20_6431\n,,127,2020-04-08T15:46:12Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e0c,4,STOPPED_AT,72,GO506_20_6431\n,,128,2020-04-08T15:47:45Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e14,4,STOPPED_AT,72,GO506_20_6431\n,,129,2020-04-08T15:48:04Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288e3c,4,STOPPED_AT,72,GO506_20_6431\n,,130,2020-04-08T15:49:01Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fcc,4,STOPPED_AT,72,GO506_20_6431\n,,131,2020-04-08T15:49:22Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c288fe4,4,STOPPED_AT,72,GO506_20_6431\n,,132,2020-04-08T15:50:44Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289004,4,STOPPED_AT,72,GO506_20_6431\n,,133,2020-04-08T15:53:56Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289974,5,IN_TRANSIT_TO,120,GO506_20_6431\n,,134,2020-04-08T15:52:38Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28997c,4,STOPPED_AT,72,GO506_20_6431\n,,135,2020-04-08T15:52:16Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a2c,4,STOPPED_AT,72,GO506_20_6431\n,,136,2020-04-08T15:51:55Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a3c,4,STOPPED_AT,72,GO506_20_6431\n,,137,2020-04-08T15:51:20Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a64,4,STOPPED_AT,72,GO506_20_6431\n,,138,2020-04-08T15:51:37Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289a6c,4,STOPPED_AT,72,GO506_20_6431\n,,139,2020-04-08T15:51:03Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289aa4,4,STOPPED_AT,72,GO506_20_6431\n,,140,2020-04-08T15:54:57Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f3c,5,STOPPED_AT,120,GO506_20_6431\n,,141,2020-04-08T15:55:54Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f6c,5,STOPPED_AT,120,GO506_20_6431\n,,142,2020-04-08T15:56:13Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f74,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,143,2020-04-08T15:56:33Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c289f7c,6,IN_TRANSIT_TO,42,GO506_20_6431\n,,144,2020-04-08T15:58:10Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a014,7,IN_TRANSIT_TO,25,GO506_20_6431\n,,145,2020-04-08T15:56:53Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a024,6,STOPPED_AT,42,GO506_20_6431\n,,146,2020-04-08T15:57:52Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c28a03c,6,STOPPED_AT,42,GO506_20_6431\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   175,
					},
					File:   "st_length_linestring_test.flux",
					Source: "outData = \"\n#group,false,false,false,true,false,true\n#datatype,string,long,double,string,string,string\n#default,_result,,,,,\n,result,table,_st_length,id,st_linestring,trip_id\n,,0,25.463,GO506_20_6431,\\\"-73.68691 40.820317, -73.690054 40.815413, -73.693214 40.814096, -73.695214 40.810699, -73.695594 40.808517, -73.695858 40.806882, -73.695023 40.800397, -73.699899 40.796724, -73.702982 40.794998, -73.705485 40.793905, -73.713571 40.791541, -73.715622 40.791009, -73.720059 40.789185, -73.721973 40.788413, -73.7261 40.787216, -73.72924 40.786038, -73.740647 40.775044, -73.742812 40.773334, -73.74431 40.772144, -73.745805 40.770953, -73.749413 40.768069, -73.751322 40.76661, -73.752465 40.76594, -73.769272 40.763356, -73.785035 40.761878, -73.789959 40.761443, -73.792932 40.761241, -73.795812 40.76117, -73.801766 40.761653, -73.804421 40.761908, -73.809437 40.762373, -73.810154 40.762441, -73.814539 40.762709, -73.817956 40.762143, -73.826087 40.759873, -73.828799 40.759128, -73.831347 40.757895, -73.833095 40.757106, -73.834298 40.7565, -73.841791 40.753279, -73.848962 40.750688, -73.852242 40.749543, -73.900815 40.743989, -73.902975 40.745851, -73.905367 40.748141, -73.906398 40.748909, -73.912119 40.751085, -73.927597 40.748495, -73.940563 40.745249\\\",GO506_20_6431\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   169,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 8,
							Line:   169,
						},
						File:   "st_length_linestring_test.flux",
						Source: "outData",
						Start: ast.Position{
							Column: 1,
							Line:   169,
						},
					},
				},
				Name: "outData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   175,
						},
						File:   "st_length_linestring_test.flux",
						Source: "\"\n#group,false,false,false,true,false,true\n#datatype,string,long,double,string,string,string\n#default,_result,,,,,\n,result,table,_st_length,id,st_linestring,trip_id\n,,0,25.463,GO506_20_6431,\\\"-73.68691 40.820317, -73.690054 40.815413, -73.693214 40.814096, -73.695214 40.810699, -73.695594 40.808517, -73.695858 40.806882, -73.695023 40.800397, -73.699899 40.796724, -73.702982 40.794998, -73.705485 40.793905, -73.713571 40.791541, -73.715622 40.791009, -73.720059 40.789185, -73.721973 40.788413, -73.7261 40.787216, -73.72924 40.786038, -73.740647 40.775044, -73.742812 40.773334, -73.74431 40.772144, -73.745805 40.770953, -73.749413 40.768069, -73.751322 40.76661, -73.752465 40.76594, -73.769272 40.763356, -73.785035 40.761878, -73.789959 40.761443, -73.792932 40.761241, -73.795812 40.76117, -73.801766 40.761653, -73.804421 40.761908, -73.809437 40.762373, -73.810154 40.762441, -73.814539 40.762709, -73.817956 40.762143, -73.826087 40.759873, -73.828799 40.759128, -73.831347 40.757895, -73.833095 40.757106, -73.834298 40.7565, -73.841791 40.753279, -73.848962 40.750688, -73.852242 40.749543, -73.900815 40.743989, -73.902975 40.745851, -73.905367 40.748141, -73.906398 40.748909, -73.912119 40.751085, -73.927597 40.748495, -73.940563 40.745249\\\",GO506_20_6431\n\"",
						Start: ast.Position{
							Column: 11,
							Line:   169,
						},
					},
				},
				Value: "\n#group,false,false,false,true,false,true\n#datatype,string,long,double,string,string,string\n#default,_result,,,,,\n,result,table,_st_length,id,st_linestring,trip_id\n,,0,25.463,GO506_20_6431,\"-73.68691 40.820317, -73.690054 40.815413, -73.693214 40.814096, -73.695214 40.810699, -73.695594 40.808517, -73.695858 40.806882, -73.695023 40.800397, -73.699899 40.796724, -73.702982 40.794998, -73.705485 40.793905, -73.713571 40.791541, -73.715622 40.791009, -73.720059 40.789185, -73.721973 40.788413, -73.7261 40.787216, -73.72924 40.786038, -73.740647 40.775044, -73.742812 40.773334, -73.74431 40.772144, -73.745805 40.770953, -73.749413 40.768069, -73.751322 40.76661, -73.752465 40.76594, -73.769272 40.763356, -73.785035 40.761878, -73.789959 40.761443, -73.792932 40.761241, -73.795812 40.76117, -73.801766 40.761653, -73.804421 40.761908, -73.809437 40.762373, -73.810154 40.762441, -73.814539 40.762709, -73.817956 40.762143, -73.826087 40.759873, -73.828799 40.759128, -73.831347 40.757895, -73.833095 40.757106, -73.834298 40.7565, -73.841791 40.753279, -73.848962 40.750688, -73.852242 40.749543, -73.900815 40.743989, -73.902975 40.745851, -73.905367 40.748141, -73.906398 40.748909, -73.912119 40.751085, -73.927597 40.748495, -73.940563 40.745249\",GO506_20_6431\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 46,
						Line:   179,
					},
					File:   "st_length_linestring_test.flux",
					Source: "limitFloat = (value) =>\n  (float(v: int(v: value * 1000.0)) / 1000.0)",
					Start: ast.Position{
						Column: 1,
						Line:   178,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 11,
							Line:   178,
						},
						File:   "st_length_linestring_test.flux",
						Source: "limitFloat",
						Start: ast.Position{
							Column: 1,
							Line:   178,
						},
					},
				},
				Name: "limitFloat",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 46,
							Line:   179,
						},
						File:   "st_length_linestring_test.flux",
						Source: "(value) =>\n  (float(v: int(v: value * 1000.0)) / 1000.0)",
						Start: ast.Position{
							Column: 14,
							Line:   178,
						},
					},
				},
				Body: &ast.ParenExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 46,
								Line:   179,
							},
							File:   "st_length_linestring_test.flux",
							Source: "(float(v: int(v: value * 1000.0)) / 1000.0)",
							Start: ast.Position{
								Column: 3,
								Line:   179,
							},
						},
					},
					Expression: &ast.BinaryExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 45,
									Line:   179,
								},
								File:   "st_length_linestring_test.flux",
								Source: "float(v: int(v: value * 1000.0)) / 1000.0",
								Start: ast.Position{
									Column: 4,
									Line:   179,
								},
							},
						},
						Left: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 35,
											Line:   179,
										},
										File:   "st_length_linestring_test.flux",
										Source: "v: int(v: value * 1000.0)",
										Start: ast.Position{
											Column: 10,
											Line:   179,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 35,
												Line:   179,
											},
											File:   "st_length_linestring_test.flux",
											Source: "v: int(v: value * 1000.0)",
											Start: ast.Position{
												Column: 10,
												Line:   179,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 11,
													Line:   179,
												},
												File:   "st_length_linestring_test.flux",
												Source: "v",
												Start: ast.Position{
													Column: 10,
													Line:   179,
												},
											},
										},
										Name: "v",
									},
									Value: &ast.CallExpression{
										Arguments: []ast.Expression{&ast.ObjectExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 34,
														Line:   179,
													},
													File:   "st_length_linestring_test.flux",
													Source: "v: value * 1000.0",
													Start: ast.Position{
														Column: 17,
														Line:   179,
													},
												},
											},
											Properties: []*ast.Property{&ast.Property{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 34,
															Line:   179,
														},
														File:   "st_length_linestring_test.flux",
														Source: "v: value * 1000.0",
														Start: ast.Position{
															Column: 17,
															Line:   179,
														},
													},
												},
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 18,
																Line:   179,
															},
															File:   "st_length_linestring_test.flux",
															Source: "v",
															Start: ast.Position{
																Column: 17,
																Line:   179,
															},
														},
													},
													Name: "v",
												},
												Value: &ast.BinaryExpression{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 34,
																Line:   179,
															},
															File:   "st_length_linestring_test.flux",
															Source: "value * 1000.0",
															Start: ast.Position{
																Column: 20,
																Line:   179,
															},
														},
													},
													Left: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 25,
																	Line:   179,
																},
																File:   "st_length_linestring_test.flux",
																Source: "value",
																Start: ast.Position{
																	Column: 20,
																	Line:   179,
																},
															},
														},
														Name: "value",
													},
													Operator: 1,
													Right: &ast.FloatLiteral{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 34,
																	Line:   179,
																},
																File:   "st_length_linestring_test.flux",
																Source: "1000.0",
																Start: ast.Position{
																	Column: 28,
																	Line:   179,
																},
															},
														},
														Value: 1000.0,
													},
												},
											}},
											With: nil,
										}},
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 35,
													Line:   179,
												},
												File:   "st_length_linestring_test.flux",
												Source: "int(v: value * 1000.0)",
												Start: ast.Position{
													Column: 13,
													Line:   179,
												},
											},
										},
										Callee: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 16,
														Line:   179,
													},
													File:   "st_length_linestring_test.flux",
													Source: "int",
													Start: ast.Position{
														Column: 13,
														Line:   179,
													},
												},
											},
											Name: "int",
										},
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 36,
										Line:   179,
									},
									File:   "st_length_linestring_test.flux",
									Source: "float(v: int(v: value * 1000.0))",
									Start: ast.Position{
										Column: 4,
										Line:   179,
									},
								},
							},
							Callee: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 9,
											Line:   179,
										},
										File:   "st_length_linestring_test.flux",
										Source: "float",
										Start: ast.Position{
											Column: 4,
											Line:   179,
										},
									},
								},
								Name: "float",
							},
						},
						Operator: 2,
						Right: &ast.FloatLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 45,
										Line:   179,
									},
									File:   "st_length_linestring_test.flux",
									Source: "1000.0",
									Start: ast.Position{
										Column: 39,
										Line:   179,
									},
								},
							},
							Value: 1000.0,
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 20,
								Line:   178,
							},
							File:   "st_length_linestring_test.flux",
							Source: "value",
							Start: ast.Position{
								Column: 15,
								Line:   178,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 20,
									Line:   178,
								},
								File:   "st_length_linestring_test.flux",
								Source: "value",
								Start: ast.Position{
									Column: 15,
									Line:   178,
								},
							},
						},
						Name: "value",
					},
					Value: nil,
				}},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   190,
					},
					File:   "st_length_linestring_test.flux",
					Source: "t_stLength = (table=<-) =>\n  table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to see the train closing in\n    |> geo.ST_LineString()\n    |> map(fn: (r) => ({\n        r with _st_length: limitFloat(value: geo.ST_Length(geometry: {linestring: r.st_linestring}))\n    }))\n    |> drop(columns: [\"_start\", \"_stop\"])",
					Start: ast.Position{
						Column: 1,
						Line:   181,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 11,
							Line:   181,
						},
						File:   "st_length_linestring_test.flux",
						Source: "t_stLength",
						Start: ast.Position{
							Column: 1,
							Line:   181,
						},
					},
				},
				Name: "t_stLength",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   190,
						},
						File:   "st_length_linestring_test.flux",
						Source: "(table=<-) =>\n  table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to see the train closing in\n    |> geo.ST_LineString()\n    |> map(fn: (r) => ({\n        r with _st_length: limitFloat(value: geo.ST_Length(geometry: {linestring: r.st_linestring}))\n    }))\n    |> drop(columns: [\"_start\", \"_stop\"])",
						Start: ast.Position{
							Column: 14,
							Line:   181,
						},
					},
				},
				Body: &ast.PipeExpression{
					Argument: &ast.PipeExpression{
						Argument: &ast.PipeExpression{
							Argument: &ast.PipeExpression{
								Argument: &ast.PipeExpression{
									Argument: &ast.PipeExpression{
										Argument: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 8,
														Line:   182,
													},
													File:   "st_length_linestring_test.flux",
													Source: "table",
													Start: ast.Position{
														Column: 3,
														Line:   182,
													},
												},
											},
											Name: "table",
										},
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   183,
												},
												File:   "st_length_linestring_test.flux",
												Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)",
												Start: ast.Position{
													Column: 3,
													Line:   182,
												},
											},
										},
										Call: &ast.CallExpression{
											Arguments: []ast.Expression{&ast.ObjectExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 41,
															Line:   183,
														},
														File:   "st_length_linestring_test.flux",
														Source: "start: 2020-04-01T00:00:00Z",
														Start: ast.Position{
															Column: 14,
															Line:   183,
														},
													},
												},
												Properties: []*ast.Property{&ast.Property{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 41,
																Line:   183,
															},
															File:   "st_length_linestring_test.flux",
															Source: "start: 2020-04-01T00:00:00Z",
															Start: ast.Position{
																Column: 14,
																Line:   183,
															},
														},
													},
													Key: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 19,
																	Line:   183,
																},
																File:   "st_length_linestring_test.flux",
																Source: "start",
																Start: ast.Position{
																	Column: 14,
																	Line:   183,
																},
															},
														},
														Name: "start",
													},
													Value: &ast.DateTimeLiteral{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 41,
																	Line:   183,
																},
																File:   "st_length_linestring_test.flux",
																Source: "2020-04-01T00:00:00Z",
																Start: ast.Position{
																	Column: 21,
																	Line:   183,
																},
															},
														},
														Value: parser.MustParseTime("2020-04-01T00:00:00Z"),
													},
												}},
												With: nil,
											}},
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 42,
														Line:   183,
													},
													File:   "st_length_linestring_test.flux",
													Source: "range(start: 2020-04-01T00:00:00Z)",
													Start: ast.Position{
														Column: 8,
														Line:   183,
													},
												},
											},
											Callee: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 13,
															Line:   183,
														},
														File:   "st_length_linestring_test.flux",
														Source: "range",
														Start: ast.Position{
															Column: 8,
															Line:   183,
														},
													},
												},
												Name: "range",
											},
										},
									},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 25,
												Line:   184,
											},
											File:   "st_length_linestring_test.flux",
											Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()",
											Start: ast.Position{
												Column: 3,
												Line:   182,
											},
										},
									},
									Call: &ast.CallExpression{
										Arguments: nil,
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 25,
													Line:   184,
												},
												File:   "st_length_linestring_test.flux",
												Source: "v1.fieldsAsCols()",
												Start: ast.Position{
													Column: 8,
													Line:   184,
												},
											},
										},
										Callee: &ast.MemberExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 23,
														Line:   184,
													},
													File:   "st_length_linestring_test.flux",
													Source: "v1.fieldsAsCols",
													Start: ast.Position{
														Column: 8,
														Line:   184,
													},
												},
											},
											Object: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 10,
															Line:   184,
														},
														File:   "st_length_linestring_test.flux",
														Source: "v1",
														Start: ast.Position{
															Column: 8,
															Line:   184,
														},
													},
												},
												Name: "v1",
											},
											Property: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 23,
															Line:   184,
														},
														File:   "st_length_linestring_test.flux",
														Source: "fieldsAsCols",
														Start: ast.Position{
															Column: 11,
															Line:   184,
														},
													},
												},
												Name: "fieldsAsCols",
											},
										},
									},
								},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 47,
											Line:   185,
										},
										File:   "st_length_linestring_test.flux",
										Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"])",
										Start: ast.Position{
											Column: 3,
											Line:   182,
										},
									},
								},
								Call: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 46,
													Line:   185,
												},
												File:   "st_length_linestring_test.flux",
												Source: "groupBy: [\"id\",\"trip_id\"]",
												Start: ast.Position{
													Column: 21,
													Line:   185,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 46,
														Line:   185,
													},
													File:   "st_length_linestring_test.flux",
													Source: "groupBy: [\"id\",\"trip_id\"]",
													Start: ast.Position{
														Column: 21,
														Line:   185,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 28,
															Line:   185,
														},
														File:   "st_length_linestring_test.flux",
														Source: "groupBy",
														Start: ast.Position{
															Column: 21,
															Line:   185,
														},
													},
												},
												Name: "groupBy",
											},
											Value: &ast.ArrayExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 46,
															Line:   185,
														},
														File:   "st_length_linestring_test.flux",
														Source: "[\"id\",\"trip_id\"]",
														Start: ast.Position{
															Column: 30,
															Line:   185,
														},
													},
												},
												Elements: []ast.Expression{&ast.StringLiteral{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 35,
																Line:   185,
															},
															File:   "st_length_linestring_test.flux",
															Source: "\"id\"",
															Start: ast.Position{
																Column: 31,
																Line:   185,
															},
														},
													},
													Value: "id",
												}, &ast.StringLiteral{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 45,
																Line:   185,
															},
															File:   "st_length_linestring_test.flux",
															Source: "\"trip_id\"",
															Start: ast.Position{
																Column: 36,
																Line:   185,
															},
														},
													},
													Value: "trip_id",
												}},
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 47,
												Line:   185,
											},
											File:   "st_length_linestring_test.flux",
											Source: "geo.asTracks(groupBy: [\"id\",\"trip_id\"])",
											Start: ast.Position{
												Column: 8,
												Line:   185,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 20,
													Line:   185,
												},
												File:   "st_length_linestring_test.flux",
												Source: "geo.asTracks",
												Start: ast.Position{
													Column: 8,
													Line:   185,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 11,
														Line:   185,
													},
													File:   "st_length_linestring_test.flux",
													Source: "geo",
													Start: ast.Position{
														Column: 8,
														Line:   185,
													},
												},
											},
											Name: "geo",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 20,
														Line:   185,
													},
													File:   "st_length_linestring_test.flux",
													Source: "asTracks",
													Start: ast.Position{
														Column: 12,
														Line:   185,
													},
												},
											},
											Name: "asTracks",
										},
									},
								},
							},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 27,
										Line:   186,
									},
									File:   "st_length_linestring_test.flux",
									Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to see the train closing in\n    |> geo.ST_LineString()",
									Start: ast.Position{
										Column: 3,
										Line:   182,
									},
								},
							},
							Call: &ast.CallExpression{
								Arguments: nil,
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 27,
											Line:   186,
										},
										File:   "st_length_linestring_test.flux",
										Source: "geo.ST_LineString()",
										Start: ast.Position{
											Column: 8,
											Line:   186,
										},
									},
								},
								Callee: &ast.MemberExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 25,
												Line:   186,
											},
											File:   "st_length_linestring_test.flux",
											Source: "geo.ST_LineString",
											Start: ast.Position{
												Column: 8,
												Line:   186,
											},
										},
									},
									Object: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 11,
													Line:   186,
												},
												File:   "st_length_linestring_test.flux",
												Source: "geo",
												Start: ast.Position{
													Column: 8,
													Line:   186,
												},
											},
										},
										Name: "geo",
									},
									Property: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 25,
													Line:   186,
												},
												File:   "st_length_linestring_test.flux",
												Source: "ST_LineString",
												Start: ast.Position{
													Column: 12,
													Line:   186,
												},
											},
										},
										Name: "ST_LineString",
									},
								},
							},
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 8,
									Line:   189,
								},
								File:   "st_length_linestring_test.flux",
								Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to see the train closing in\n    |> geo.ST_LineString()\n    |> map(fn: (r) => ({\n        r with _st_length: limitFloat(value: geo.ST_Length(geometry: {linestring: r.st_linestring}))\n    }))",
								Start: ast.Position{
									Column: 3,
									Line:   182,
								},
							},
						},
						Call: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 7,
											Line:   189,
										},
										File:   "st_length_linestring_test.flux",
										Source: "fn: (r) => ({\n        r with _st_length: limitFloat(value: geo.ST_Length(geometry: {linestring: r.st_linestring}))\n    })",
										Start: ast.Position{
											Column: 12,
											Line:   187,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 7,
												Line:   189,
											},
											File:   "st_length_linestring_test.flux",
											Source: "fn: (r) => ({\n        r with _st_length: limitFloat(value: geo.ST_Length(geometry: {linestring: r.st_linestring}))\n    })",
											Start: ast.Position{
												Column: 12,
												Line:   187,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 14,
													Line:   187,
												},
												File:   "st_length_linestring_test.flux",
												Source: "fn",
												Start: ast.Position{
													Column: 12,
													Line:   187,
												},
											},
										},
										Name: "fn",
									},
									Value: &ast.FunctionExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 7,
													Line:   189,
												},
												File:   "st_length_linestring_test.flux",
												Source: "(r) => ({\n        r with _st_length: limitFloat(value: geo.ST_Length(geometry: {linestring: r.st_linestring}))\n    })",
												Start: ast.Position{
													Column: 16,
													Line:   187,
												},
											},
										},
										Body: &ast.ParenExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 7,
														Line:   189,
													},
													File:   "st_length_linestring_test.flux",
													Source: "({\n        r with _st_length: limitFloat(value: geo.ST_Length(geometry: {linestring: r.st_linestring}))\n    })",
													Start: ast.Position{
														Column: 23,
														Line:   187,
													},
												},
											},
											Expression: &ast.ObjectExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 6,
															Line:   189,
														},
														File:   "st_length_linestring_test.flux",
														Source: "{\n        r with _st_length: limitFloat(value: geo.ST_Length(geometry: {linestring: r.st_linestring}))\n    }",
														Start: ast.Position{
															Column: 24,
															Line:   187,
														},
													},
												},
												Properties: []*ast.Property{&ast.Property{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 101,
																Line:   188,
															},
															File:   "st_length_linestring_test.flux",
															Source: "_st_length: limitFloat(value: geo.ST_Length(geometry: {linestring: r.st_linestring}))",
															Start: ast.Position{
																Column: 16,
																Line:   188,
															},
														},
													},
													Key: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 26,
																	Line:   188,
																},
																File:   "st_length_linestring_test.flux",
																Source: "_st_length",
																Start: ast.Position{
																	Column: 16,
																	Line:   188,
																},
															},
														},
														Name: "_st_length",
													},
													Value: &ast.CallExpression{
														Arguments: []ast.Expression{&ast.ObjectExpression{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 100,
																		Line:   188,
																	},
																	File:   "st_length_linestring_test.flux",
																	Source: "value: geo.ST_Length(geometry: {linestring: r.st_linestring})",
																	Start: ast.Position{
																		Column: 39,
																		Line:   188,
																	},
																},
															},
															Properties: []*ast.Property{&ast.Property{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 100,
																			Line:   188,
																		},
																		File:   "st_length_linestring_test.flux",
																		Source: "value: geo.ST_Length(geometry: {linestring: r.st_linestring})",
																		Start: ast.Position{
																			Column: 39,
																			Line:   188,
																		},
																	},
																},
																Key: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 44,
																				Line:   188,
																			},
																			File:   "st_length_linestring_test.flux",
																			Source: "value",
																			Start: ast.Position{
																				Column: 39,
																				Line:   188,
																			},
																		},
																	},
																	Name: "value",
																},
																Value: &ast.CallExpression{
																	Arguments: []ast.Expression{&ast.ObjectExpression{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 99,
																					Line:   188,
																				},
																				File:   "st_length_linestring_test.flux",
																				Source: "geometry: {linestring: r.st_linestring}",
																				Start: ast.Position{
																					Column: 60,
																					Line:   188,
																				},
																			},
																		},
																		Properties: []*ast.Property{&ast.Property{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 99,
																						Line:   188,
																					},
																					File:   "st_length_linestring_test.flux",
																					Source: "geometry: {linestring: r.st_linestring}",
																					Start: ast.Position{
																						Column: 60,
																						Line:   188,
																					},
																				},
																			},
																			Key: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 68,
																							Line:   188,
																						},
																						File:   "st_length_linestring_test.flux",
																						Source: "geometry",
																						Start: ast.Position{
																							Column: 60,
																							Line:   188,
																						},
																					},
																				},
																				Name: "geometry",
																			},
																			Value: &ast.ObjectExpression{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 99,
																							Line:   188,
																						},
																						File:   "st_length_linestring_test.flux",
																						Source: "{linestring: r.st_linestring}",
																						Start: ast.Position{
																							Column: 70,
																							Line:   188,
																						},
																					},
																				},
																				Properties: []*ast.Property{&ast.Property{
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 98,
																								Line:   188,
																							},
																							File:   "st_length_linestring_test.flux",
																							Source: "linestring: r.st_linestring",
																							Start: ast.Position{
																								Column: 71,
																								Line:   188,
																							},
																						},
																					},
																					Key: &ast.Identifier{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 81,
																									Line:   188,
																								},
																								File:   "st_length_linestring_test.flux",
																								Source: "linestring",
																								Start: ast.Position{
																									Column: 71,
																									Line:   188,
																								},
																							},
																						},
																						Name: "linestring",
																					},
																					Value: &ast.MemberExpression{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 98,
																									Line:   188,
																								},
																								File:   "st_length_linestring_test.flux",
																								Source: "r.st_linestring",
																								Start: ast.Position{
																									Column: 83,
																									Line:   188,
																								},
																							},
																						},
																						Object: &ast.Identifier{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 84,
																										Line:   188,
																									},
																									File:   "st_length_linestring_test.flux",
																									Source: "r",
																									Start: ast.Position{
																										Column: 83,
																										Line:   188,
																									},
																								},
																							},
																							Name: "r",
																						},
																						Property: &ast.Identifier{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 98,
																										Line:   188,
																									},
																									File:   "st_length_linestring_test.flux",
																									Source: "st_linestring",
																									Start: ast.Position{
																										Column: 85,
																										Line:   188,
																									},
																								},
																							},
																							Name: "st_linestring",
																						},
																					},
																				}},
																				With: nil,
																			},
																		}},
																		With: nil,
																	}},
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 100,
																				Line:   188,
																			},
																			File:   "st_length_linestring_test.flux",
																			Source: "geo.ST_Length(geometry: {linestring: r.st_linestring})",
																			Start: ast.Position{
																				Column: 46,
																				Line:   188,
																			},
																		},
																	},
																	Callee: &ast.MemberExpression{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 59,
																					Line:   188,
																				},
																				File:   "st_length_linestring_test.flux",
																				Source: "geo.ST_Length",
																				Start: ast.Position{
																					Column: 46,
																					Line:   188,
																				},
																			},
																		},
																		Object: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 49,
																						Line:   188,
																					},
																					File:   "st_length_linestring_test.flux",
																					Source: "geo",
																					Start: ast.Position{
																						Column: 46,
																						Line:   188,
																					},
																				},
																			},
																			Name: "geo",
																		},
																		Property: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 59,
																						Line:   188,
																					},
																					File:   "st_length_linestring_test.flux",
																					Source: "ST_Length",
																					Start: ast.Position{
																						Column: 50,
																						Line:   188,
																					},
																				},
																			},
																			Name: "ST_Length",
																		},
																	},
																},
															}},
															With: nil,
														}},
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 101,
																	Line:   188,
																},
																File:   "st_length_linestring_test.flux",
																Source: "limitFloat(value: geo.ST_Length(geometry: {linestring: r.st_linestring}))",
																Start: ast.Position{
																	Column: 28,
																	Line:   188,
																},
															},
														},
														Callee: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 38,
																		Line:   188,
																	},
																	File:   "st_length_linestring_test.flux",
																	Source: "limitFloat",
																	Start: ast.Position{
																		Column: 28,
																		Line:   188,
																	},
																},
															},
															Name: "limitFloat",
														},
													},
												}},
												With: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 10,
																Line:   188,
															},
															File:   "st_length_linestring_test.flux",
															Source: "r",
															Start: ast.Position{
																Column: 9,
																Line:   188,
															},
														},
													},
													Name: "r",
												},
											},
										},
										Params: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   187,
													},
													File:   "st_length_linestring_test.flux",
													Source: "r",
													Start: ast.Position{
														Column: 17,
														Line:   187,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 18,
															Line:   187,
														},
														File:   "st_length_linestring_test.flux",
														Source: "r",
														Start: ast.Position{
															Column: 17,
															Line:   187,
														},
													},
												},
												Name: "r",
											},
											Value: nil,
										}},
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 8,
										Line:   189,
									},
									File:   "st_length_linestring_test.flux",
									Source: "map(fn: (r) => ({\n        r with _st_length: limitFloat(value: geo.ST_Length(geometry: {linestring: r.st_linestring}))\n    }))",
									Start: ast.Position{
										Column: 8,
										Line:   187,
									},
								},
							},
							Callee: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 11,
											Line:   187,
										},
										File:   "st_length_linestring_test.flux",
										Source: "map",
										Start: ast.Position{
											Column: 8,
											Line:   187,
										},
									},
								},
								Name: "map",
							},
						},
					},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   190,
							},
							File:   "st_length_linestring_test.flux",
							Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> geo.asTracks(groupBy: [\"id\",\"trip_id\"]) // optional but it helps to see the train closing in\n    |> geo.ST_LineString()\n    |> map(fn: (r) => ({\n        r with _st_length: limitFloat(value: geo.ST_Length(geometry: {linestring: r.st_linestring}))\n    }))\n    |> drop(columns: [\"_start\", \"_stop\"])",
							Start: ast.Position{
								Column: 3,
								Line:   182,
							},
						},
					},
					Call: &ast.CallExpression{
						Arguments: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   190,
									},
									File:   "st_length_linestring_test.flux",
									Source: "columns: [\"_start\", \"_stop\"]",
									Start: ast.Position{
										Column: 13,
										Line:   190,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 41,
											Line:   190,
										},
										File:   "st_length_linestring_test.flux",
										Source: "columns: [\"_start\", \"_stop\"]",
										Start: ast.Position{
											Column: 13,
											Line:   190,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 20,
												Line:   190,
											},
											File:   "st_length_linestring_test.flux",
											Source: "columns",
											Start: ast.Position{
												Column: 13,
												Line:   190,
											},
										},
									},
									Name: "columns",
								},
								Value: &ast.ArrayExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 41,
												Line:   190,
											},
											File:   "st_length_linestring_test.flux",
											Source: "[\"_start\", \"_stop\"]",
											Start: ast.Position{
												Column: 22,
												Line:   190,
											},
										},
									},
									Elements: []ast.Expression{&ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 31,
													Line:   190,
												},
												File:   "st_length_linestring_test.flux",
												Source: "\"_start\"",
												Start: ast.Position{
													Column: 23,
													Line:   190,
												},
											},
										},
										Value: "_start",
									}, &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 40,
													Line:   190,
												},
												File:   "st_length_linestring_test.flux",
												Source: "\"_stop\"",
												Start: ast.Position{
													Column: 33,
													Line:   190,
												},
											},
										},
										Value: "_stop",
									}},
								},
							}},
							With: nil,
						}},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   190,
								},
								File:   "st_length_linestring_test.flux",
								Source: "drop(columns: [\"_start\", \"_stop\"])",
								Start: ast.Position{
									Column: 8,
									Line:   190,
								},
							},
						},
						Callee: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 12,
										Line:   190,
									},
									File:   "st_length_linestring_test.flux",
									Source: "drop",
									Start: ast.Position{
										Column: 8,
										Line:   190,
									},
								},
							},
							Name: "drop",
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 23,
								Line:   181,
							},
							File:   "st_length_linestring_test.flux",
							Source: "table=<-",
							Start: ast.Position{
								Column: 15,
								Line:   181,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 20,
									Line:   181,
								},
								File:   "st_length_linestring_test.flux",
								Source: "table",
								Start: ast.Position{
									Column: 15,
									Line:   181,
								},
							},
						},
						Name: "table",
					},
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 23,
								Line:   181,
							},
							File:   "st_length_linestring_test.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 21,
								Line:   181,
							},
						},
					}},
				}},
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 98,
							Line:   192,
						},
						File:   "st_length_linestring_test.flux",
						Source: "_stLength = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stLength})",
						Start: ast.Position{
							Column: 6,
							Line:   191,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 15,
								Line:   191,
							},
							File:   "st_length_linestring_test.flux",
							Source: "_stLength",
							Start: ast.Position{
								Column: 6,
								Line:   191,
							},
						},
					},
					Name: "_stLength",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 98,
								Line:   192,
							},
							File:   "st_length_linestring_test.flux",
							Source: "() =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stLength})",
							Start: ast.Position{
								Column: 18,
								Line:   191,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 98,
									Line:   192,
								},
								File:   "st_length_linestring_test.flux",
								Source: "({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stLength})",
								Start: ast.Position{
									Column: 2,
									Line:   192,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 97,
										Line:   192,
									},
									File:   "st_length_linestring_test.flux",
									Source: "{input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stLength}",
									Start: ast.Position{
										Column: 3,
										Line:   192,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 43,
											Line:   192,
										},
										File:   "st_length_linestring_test.flux",
										Source: "input: testing.loadStorage(csv: inData)",
										Start: ast.Position{
											Column: 4,
											Line:   192,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 9,
												Line:   192,
											},
											File:   "st_length_linestring_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 4,
												Line:   192,
											},
										},
									},
									Name: "input",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   192,
												},
												File:   "st_length_linestring_test.flux",
												Source: "csv: inData",
												Start: ast.Position{
													Column: 31,
													Line:   192,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 42,
														Line:   192,
													},
													File:   "st_length_linestring_test.flux",
													Source: "csv: inData",
													Start: ast.Position{
														Column: 31,
														Line:   192,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 34,
															Line:   192,
														},
														File:   "st_length_linestring_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 31,
															Line:   192,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 42,
															Line:   192,
														},
														File:   "st_length_linestring_test.flux",
														Source: "inData",
														Start: ast.Position{
															Column: 36,
															Line:   192,
														},
													},
												},
												Name: "inData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 43,
												Line:   192,
											},
											File:   "st_length_linestring_test.flux",
											Source: "testing.loadStorage(csv: inData)",
											Start: ast.Position{
												Column: 11,
												Line:   192,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   192,
												},
												File:   "st_length_linestring_test.flux",
												Source: "testing.loadStorage",
												Start: ast.Position{
													Column: 11,
													Line:   192,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   192,
													},
													File:   "st_length_linestring_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 11,
														Line:   192,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 30,
														Line:   192,
													},
													File:   "st_length_linestring_test.flux",
													Source: "loadStorage",
													Start: ast.Position{
														Column: 19,
														Line:   192,
													},
												},
											},
											Name: "loadStorage",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 80,
											Line:   192,
										},
										File:   "st_length_linestring_test.flux",
										Source: "want: testing.loadMem(csv: outData)",
										Start: ast.Position{
											Column: 45,
											Line:   192,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 49,
												Line:   192,
											},
											File:   "st_length_linestring_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 45,
												Line:   192,
											},
										},
									},
									Name: "want",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 79,
													Line:   192,
												},
												File:   "st_length_linestring_test.flux",
												Source: "csv: outData",
												Start: ast.Position{
													Column: 67,
													Line:   192,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 79,
														Line:   192,
													},
													File:   "st_length_linestring_test.flux",
													Source: "csv: outData",
													Start: ast.Position{
														Column: 67,
														Line:   192,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 70,
															Line:   192,
														},
														File:   "st_length_linestring_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 67,
															Line:   192,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 79,
															Line:   192,
														},
														File:   "st_length_linestring_test.flux",
														Source: "outData",
														Start: ast.Position{
															Column: 72,
															Line:   192,
														},
													},
												},
												Name: "outData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 80,
												Line:   192,
											},
											File:   "st_length_linestring_test.flux",
											Source: "testing.loadMem(csv: outData)",
											Start: ast.Position{
												Column: 51,
												Line:   192,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   192,
												},
												File:   "st_length_linestring_test.flux",
												Source: "testing.loadMem",
												Start: ast.Position{
													Column: 51,
													Line:   192,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 58,
														Line:   192,
													},
													File:   "st_length_linestring_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 51,
														Line:   192,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 66,
														Line:   192,
													},
													File:   "st_length_linestring_test.flux",
													Source: "loadMem",
													Start: ast.Position{
														Column: 59,
														Line:   192,
													},
												},
											},
											Name: "loadMem",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 96,
											Line:   192,
										},
										File:   "st_length_linestring_test.flux",
										Source: "fn: t_stLength",
										Start: ast.Position{
											Column: 82,
											Line:   192,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 84,
												Line:   192,
											},
											File:   "st_length_linestring_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 82,
												Line:   192,
											},
										},
									},
									Name: "fn",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 96,
												Line:   192,
											},
											File:   "st_length_linestring_test.flux",
											Source: "t_stLength",
											Start: ast.Position{
												Column: 86,
												Line:   192,
											},
										},
									},
									Name: "t_stLength",
								},
							}},
							With: nil,
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 98,
						Line:   192,
					},
					File:   "st_length_linestring_test.flux",
					Source: "test _stLength = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stLength})",
					Start: ast.Position{
						Column: 1,
						Line:   191,
					},
				},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 26,
						Line:   3,
					},
					File:   "st_length_linestring_test.flux",
					Source: "import \"experimental/geo\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 26,
							Line:   3,
						},
						File:   "st_length_linestring_test.flux",
						Source: "\"experimental/geo\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "experimental/geo",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 32,
						Line:   4,
					},
					File:   "st_length_linestring_test.flux",
					Source: "import \"influxdata/influxdb/v1\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 32,
							Line:   4,
						},
						File:   "st_length_linestring_test.flux",
						Source: "\"influxdata/influxdb/v1\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "influxdata/influxdb/v1",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   5,
					},
					File:   "st_length_linestring_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   5,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   5,
						},
						File:   "st_length_linestring_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   5,
						},
					},
				},
				Value: "testing",
			},
		}},
		Metadata: "parser-type=rust",
		Name:     "st_length_linestring_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   1,
					},
					File:   "st_length_linestring_test.flux",
					Source: "package geo_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   1,
						},
						File:   "st_length_linestring_test.flux",
						Source: "geo_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "geo_test",
			},
		},
	}, &ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 102,
					Line:   214,
				},
				File:   "strictFilter_test.flux",
				Source: "package geo_test\n\nimport \"experimental/geo\"\nimport \"testing\"\n\noption now = () => (2030-01-01T00:00:00Z)\n\ninData = \"\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n\"\n\noutData = \"\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n\"\n\nt_strictFilter = (table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> geo.strictFilter(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0})\n    |> drop(columns: [\"_start\", \"_stop\"])\ntest _strictFilter = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_strictFilter})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   6,
						},
						File:   "strictFilter_test.flux",
						Source: "now = () => (2030-01-01T00:00:00Z)",
						Start: ast.Position{
							Column: 8,
							Line:   6,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   6,
							},
							File:   "strictFilter_test.flux",
							Source: "now",
							Start: ast.Position{
								Column: 8,
								Line:   6,
							},
						},
					},
					Name: "now",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   6,
							},
							File:   "strictFilter_test.flux",
							Source: "() => (2030-01-01T00:00:00Z)",
							Start: ast.Position{
								Column: 14,
								Line:   6,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   6,
								},
								File:   "strictFilter_test.flux",
								Source: "(2030-01-01T00:00:00Z)",
								Start: ast.Position{
									Column: 20,
									Line:   6,
								},
							},
						},
						Expression: &ast.DateTimeLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   6,
									},
									File:   "strictFilter_test.flux",
									Source: "2030-01-01T00:00:00Z",
									Start: ast.Position{
										Column: 21,
										Line:   6,
									},
								},
							},
							Value: parser.MustParseTime("2030-01-01T00:00:00Z"),
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   6,
					},
					File:   "strictFilter_test.flux",
					Source: "option now = () => (2030-01-01T00:00:00Z)",
					Start: ast.Position{
						Column: 1,
						Line:   6,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   185,
					},
					File:   "strictFilter_test.flux",
					Source: "inData = \"\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   8,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 7,
							Line:   8,
						},
						File:   "strictFilter_test.flux",
						Source: "inData",
						Start: ast.Position{
							Column: 1,
							Line:   8,
						},
					},
				},
				Name: "inData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   185,
						},
						File:   "strictFilter_test.flux",
						Source: "\"\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n\"",
						Start: ast.Position{
							Column: 10,
							Line:   8,
						},
					},
				},
				Value: "\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,0,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,40.728077,89c2624,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,1,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1572615165632969758,89c261c,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,2,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1572566409947779410,89c2594,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,3,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,40.671928,89c25b4,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,4,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,-73.962692,89c25b4,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,5,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1572566426666145821,89c25b4,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,6,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,1572567458287113937,89c2664,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,7,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,-73.752579,89c261c,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,8,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,0,89c261c,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,9,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,1.2,89c2594,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,10,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,-73.776665,89c2664,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,11,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,40.733585,89c2624,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,12,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,-73.951332,89c2594,lon,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,13,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.75,89c25b4,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,14,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:17:38.287113937Z,40.645245,89c2664,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,15,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,9.7,89c2624,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,16,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,40.725647,89c261c,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,17,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,5,89c2624,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,18,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,1572567458287113937,89c2624,tid,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,40.712173,89c25bc,lat,taxi,start\n,,19,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,40.688564,89c25bc,lat,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,20,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,40.7122,89c2594,lat,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,21,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:18.082153551Z,0,89c2594,tip,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,22,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:07:41.235010051Z,1.3,89c25b4,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,23,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,-73.737175,89c2624,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,24,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:32:45.632969758Z,1572615165632969758,89c2624,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,25,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T13:41:59.331776148Z,1.3,89c261c,dist,taxi,end\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,-73.963913,89c25bc,lon,taxi,start\n,,26,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,-73.965881,89c25bc,lon,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,long,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:09.94777941Z,1572566409947779410,89c25bc,tid,taxi,start\n,,27,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:00:26.666145821Z,1572566426666145821,89c25bc,tid,taxi,start\n\n#group,false,false,true,true,false,false,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n#default,_result,,,,,,,,,\n,result,table,_start,_stop,_time,_value,s2_cell_id,_field,_measurement,_pt\n,,28,2019-02-18T04:17:43.176943164Z,2020-02-18T10:17:43.176943164Z,2019-11-01T00:33:07.54916732Z,-73.716583,89c2624,lon,taxi,end\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   205,
					},
					File:   "strictFilter_test.flux",
					Source: "outData = \"\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   187,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 8,
							Line:   187,
						},
						File:   "strictFilter_test.flux",
						Source: "outData",
						Start: ast.Position{
							Column: 1,
							Line:   187,
						},
					},
				},
				Name: "outData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   205,
						},
						File:   "strictFilter_test.flux",
						Source: "\"\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n\"",
						Start: ast.Position{
							Column: 11,
							Line:   187,
						},
					},
				},
				Value: "\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,long,double,double,double,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,tid,lon,tip,lat,dist\n,,0,2019-11-01T13:41:59.331776148Z,89c261c,taxi,end,1572615165632969758,-73.752579,0,40.725647,1.3\n\n#group,false,false,false,true,true,true,false,false,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,double,long,double\n#default,_result,,,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,dist,tip,tid,lon\n,,1,2019-11-01T00:33:07.54916732Z,89c2624,taxi,end,40.728077,9.7,5,1572567458287113937,-73.716583\n\n#group,false,false,false,true,true,true,false,false,false\n#datatype,string,long,dateTime:RFC3339,string,string,string,double,double,long\n#default,_result,,,,,,,,\n,result,table,_time,s2_cell_id,_measurement,_pt,lat,lon,tid\n,,2,2019-11-01T13:32:45.632969758Z,89c2624,taxi,start,40.733585,-73.737175,1572615165632969758\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   212,
					},
					File:   "strictFilter_test.flux",
					Source: "t_strictFilter = (table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> geo.strictFilter(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0})\n    |> drop(columns: [\"_start\", \"_stop\"])",
					Start: ast.Position{
						Column: 1,
						Line:   207,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 15,
							Line:   207,
						},
						File:   "strictFilter_test.flux",
						Source: "t_strictFilter",
						Start: ast.Position{
							Column: 1,
							Line:   207,
						},
					},
				},
				Name: "t_strictFilter",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   212,
						},
						File:   "strictFilter_test.flux",
						Source: "(table=<-) =>\n  table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> geo.strictFilter(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0})\n    |> drop(columns: [\"_start\", \"_stop\"])",
						Start: ast.Position{
							Column: 18,
							Line:   207,
						},
					},
				},
				Body: &ast.PipeExpression{
					Argument: &ast.PipeExpression{
						Argument: &ast.PipeExpression{
							Argument: &ast.PipeExpression{
								Argument: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 8,
												Line:   208,
											},
											File:   "strictFilter_test.flux",
											Source: "table",
											Start: ast.Position{
												Column: 3,
												Line:   208,
											},
										},
									},
									Name: "table",
								},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 42,
											Line:   209,
										},
										File:   "strictFilter_test.flux",
										Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)",
										Start: ast.Position{
											Column: 3,
											Line:   208,
										},
									},
								},
								Call: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 41,
													Line:   209,
												},
												File:   "strictFilter_test.flux",
												Source: "start: 2019-11-01T00:00:00Z",
												Start: ast.Position{
													Column: 14,
													Line:   209,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 41,
														Line:   209,
													},
													File:   "strictFilter_test.flux",
													Source: "start: 2019-11-01T00:00:00Z",
													Start: ast.Position{
														Column: 14,
														Line:   209,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 19,
															Line:   209,
														},
														File:   "strictFilter_test.flux",
														Source: "start",
														Start: ast.Position{
															Column: 14,
															Line:   209,
														},
													},
												},
												Name: "start",
											},
											Value: &ast.DateTimeLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 41,
															Line:   209,
														},
														File:   "strictFilter_test.flux",
														Source: "2019-11-01T00:00:00Z",
														Start: ast.Position{
															Column: 21,
															Line:   209,
														},
													},
												},
												Value: parser.MustParseTime("2019-11-01T00:00:00Z"),
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 42,
												Line:   209,
											},
											File:   "strictFilter_test.flux",
											Source: "range(start: 2019-11-01T00:00:00Z)",
											Start: ast.Position{
												Column: 8,
												Line:   209,
											},
										},
									},
									Callee: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 13,
													Line:   209,
												},
												File:   "strictFilter_test.flux",
												Source: "range",
												Start: ast.Position{
													Column: 8,
													Line:   209,
												},
											},
										},
										Name: "range",
									},
								},
							},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 77,
										Line:   210,
									},
									File:   "strictFilter_test.flux",
									Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")",
									Start: ast.Position{
										Column: 3,
										Line:   208,
									},
								},
							},
							Call: &ast.CallExpression{
								Arguments: []ast.Expression{&ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 76,
												Line:   210,
											},
											File:   "strictFilter_test.flux",
											Source: "rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\"",
											Start: ast.Position{
												Column: 14,
												Line:   210,
											},
										},
									},
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   210,
												},
												File:   "strictFilter_test.flux",
												Source: "rowKey:[\"_time\"]",
												Start: ast.Position{
													Column: 14,
													Line:   210,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 20,
														Line:   210,
													},
													File:   "strictFilter_test.flux",
													Source: "rowKey",
													Start: ast.Position{
														Column: 14,
														Line:   210,
													},
												},
											},
											Name: "rowKey",
										},
										Value: &ast.ArrayExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 30,
														Line:   210,
													},
													File:   "strictFilter_test.flux",
													Source: "[\"_time\"]",
													Start: ast.Position{
														Column: 21,
														Line:   210,
													},
												},
											},
											Elements: []ast.Expression{&ast.StringLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 29,
															Line:   210,
														},
														File:   "strictFilter_test.flux",
														Source: "\"_time\"",
														Start: ast.Position{
															Column: 22,
															Line:   210,
														},
													},
												},
												Value: "_time",
											}},
										},
									}, &ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 53,
													Line:   210,
												},
												File:   "strictFilter_test.flux",
												Source: "columnKey: [\"_field\"]",
												Start: ast.Position{
													Column: 32,
													Line:   210,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 41,
														Line:   210,
													},
													File:   "strictFilter_test.flux",
													Source: "columnKey",
													Start: ast.Position{
														Column: 32,
														Line:   210,
													},
												},
											},
											Name: "columnKey",
										},
										Value: &ast.ArrayExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 53,
														Line:   210,
													},
													File:   "strictFilter_test.flux",
													Source: "[\"_field\"]",
													Start: ast.Position{
														Column: 43,
														Line:   210,
													},
												},
											},
											Elements: []ast.Expression{&ast.StringLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 52,
															Line:   210,
														},
														File:   "strictFilter_test.flux",
														Source: "\"_field\"",
														Start: ast.Position{
															Column: 44,
															Line:   210,
														},
													},
												},
												Value: "_field",
											}},
										},
									}, &ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 76,
													Line:   210,
												},
												File:   "strictFilter_test.flux",
												Source: "valueColumn: \"_value\"",
												Start: ast.Position{
													Column: 55,
													Line:   210,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 66,
														Line:   210,
													},
													File:   "strictFilter_test.flux",
													Source: "valueColumn",
													Start: ast.Position{
														Column: 55,
														Line:   210,
													},
												},
											},
											Name: "valueColumn",
										},
										Value: &ast.StringLiteral{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 76,
														Line:   210,
													},
													File:   "strictFilter_test.flux",
													Source: "\"_value\"",
													Start: ast.Position{
														Column: 68,
														Line:   210,
													},
												},
											},
											Value: "_value",
										},
									}},
									With: nil,
								}},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 77,
											Line:   210,
										},
										File:   "strictFilter_test.flux",
										Source: "pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")",
										Start: ast.Position{
											Column: 8,
											Line:   210,
										},
									},
								},
								Callee: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 13,
												Line:   210,
											},
											File:   "strictFilter_test.flux",
											Source: "pivot",
											Start: ast.Position{
												Column: 8,
												Line:   210,
											},
										},
									},
									Name: "pivot",
								},
							},
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 81,
									Line:   211,
								},
								File:   "strictFilter_test.flux",
								Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> geo.strictFilter(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0})",
								Start: ast.Position{
									Column: 3,
									Line:   208,
								},
							},
						},
						Call: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 80,
											Line:   211,
										},
										File:   "strictFilter_test.flux",
										Source: "region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}",
										Start: ast.Position{
											Column: 25,
											Line:   211,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 80,
												Line:   211,
											},
											File:   "strictFilter_test.flux",
											Source: "region: {lat: 40.7090214, lon: -73.61846, radius: 15.0}",
											Start: ast.Position{
												Column: 25,
												Line:   211,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 31,
													Line:   211,
												},
												File:   "strictFilter_test.flux",
												Source: "region",
												Start: ast.Position{
													Column: 25,
													Line:   211,
												},
											},
										},
										Name: "region",
									},
									Value: &ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 80,
													Line:   211,
												},
												File:   "strictFilter_test.flux",
												Source: "{lat: 40.7090214, lon: -73.61846, radius: 15.0}",
												Start: ast.Position{
													Column: 33,
													Line:   211,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 49,
														Line:   211,
													},
													File:   "strictFilter_test.flux",
													Source: "lat: 40.7090214",
													Start: ast.Position{
														Column: 34,
														Line:   211,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 37,
															Line:   211,
														},
														File:   "strictFilter_test.flux",
														Source: "lat",
														Start: ast.Position{
															Column: 34,
															Line:   211,
														},
													},
												},
												Name: "lat",
											},
											Value: &ast.FloatLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 49,
															Line:   211,
														},
														File:   "strictFilter_test.flux",
														Source: "40.7090214",
														Start: ast.Position{
															Column: 39,
															Line:   211,
														},
													},
												},
												Value: 40.7090214,
											},
										}, &ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 65,
														Line:   211,
													},
													File:   "strictFilter_test.flux",
													Source: "lon: -73.61846",
													Start: ast.Position{
														Column: 51,
														Line:   211,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 54,
															Line:   211,
														},
														File:   "strictFilter_test.flux",
														Source: "lon",
														Start: ast.Position{
															Column: 51,
															Line:   211,
														},
													},
												},
												Name: "lon",
											},
											Value: &ast.UnaryExpression{
												Argument: &ast.FloatLiteral{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 65,
																Line:   211,
															},
															File:   "strictFilter_test.flux",
															Source: "73.61846",
															Start: ast.Position{
																Column: 57,
																Line:   211,
															},
														},
													},
													Value: 73.61846,
												},
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 65,
															Line:   211,
														},
														File:   "strictFilter_test.flux",
														Source: "-73.61846",
														Start: ast.Position{
															Column: 56,
															Line:   211,
														},
													},
												},
												Operator: 6,
											},
										}, &ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 79,
														Line:   211,
													},
													File:   "strictFilter_test.flux",
													Source: "radius: 15.0",
													Start: ast.Position{
														Column: 67,
														Line:   211,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 73,
															Line:   211,
														},
														File:   "strictFilter_test.flux",
														Source: "radius",
														Start: ast.Position{
															Column: 67,
															Line:   211,
														},
													},
												},
												Name: "radius",
											},
											Value: &ast.FloatLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 79,
															Line:   211,
														},
														File:   "strictFilter_test.flux",
														Source: "15.0",
														Start: ast.Position{
															Column: 75,
															Line:   211,
														},
													},
												},
												Value: 15.0,
											},
										}},
										With: nil,
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 81,
										Line:   211,
									},
									File:   "strictFilter_test.flux",
									Source: "geo.strictFilter(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0})",
									Start: ast.Position{
										Column: 8,
										Line:   211,
									},
								},
							},
							Callee: &ast.MemberExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 24,
											Line:   211,
										},
										File:   "strictFilter_test.flux",
										Source: "geo.strictFilter",
										Start: ast.Position{
											Column: 8,
											Line:   211,
										},
									},
								},
								Object: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 11,
												Line:   211,
											},
											File:   "strictFilter_test.flux",
											Source: "geo",
											Start: ast.Position{
												Column: 8,
												Line:   211,
											},
										},
									},
									Name: "geo",
								},
								Property: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 24,
												Line:   211,
											},
											File:   "strictFilter_test.flux",
											Source: "strictFilter",
											Start: ast.Position{
												Column: 12,
												Line:   211,
											},
										},
									},
									Name: "strictFilter",
								},
							},
						},
					},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   212,
							},
							File:   "strictFilter_test.flux",
							Source: "table\n    |> range(start: 2019-11-01T00:00:00Z)\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n    |> geo.strictFilter(region: {lat: 40.7090214, lon: -73.61846, radius: 15.0})\n    |> drop(columns: [\"_start\", \"_stop\"])",
							Start: ast.Position{
								Column: 3,
								Line:   208,
							},
						},
					},
					Call: &ast.CallExpression{
						Arguments: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   212,
									},
									File:   "strictFilter_test.flux",
									Source: "columns: [\"_start\", \"_stop\"]",
									Start: ast.Position{
										Column: 13,
										Line:   212,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 41,
											Line:   212,
										},
										File:   "strictFilter_test.flux",
										Source: "columns: [\"_start\", \"_stop\"]",
										Start: ast.Position{
											Column: 13,
											Line:   212,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 20,
												Line:   212,
											},
											File:   "strictFilter_test.flux",
											Source: "columns",
											Start: ast.Position{
												Column: 13,
												Line:   212,
											},
										},
									},
									Name: "columns",
								},
								Value: &ast.ArrayExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 41,
												Line:   212,
											},
											File:   "strictFilter_test.flux",
											Source: "[\"_start\", \"_stop\"]",
											Start: ast.Position{
												Column: 22,
												Line:   212,
											},
										},
									},
									Elements: []ast.Expression{&ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 31,
													Line:   212,
												},
												File:   "strictFilter_test.flux",
												Source: "\"_start\"",
												Start: ast.Position{
													Column: 23,
													Line:   212,
												},
											},
										},
										Value: "_start",
									}, &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 40,
													Line:   212,
												},
												File:   "strictFilter_test.flux",
												Source: "\"_stop\"",
												Start: ast.Position{
													Column: 33,
													Line:   212,
												},
											},
										},
										Value: "_stop",
									}},
								},
							}},
							With: nil,
						}},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   212,
								},
								File:   "strictFilter_test.flux",
								Source: "drop(columns: [\"_start\", \"_stop\"])",
								Start: ast.Position{
									Column: 8,
									Line:   212,
								},
							},
						},
						Callee: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 12,
										Line:   212,
									},
									File:   "strictFilter_test.flux",
									Source: "drop",
									Start: ast.Position{
										Column: 8,
										Line:   212,
									},
								},
							},
							Name: "drop",
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 27,
								Line:   207,
							},
							File:   "strictFilter_test.flux",
							Source: "table=<-",
							Start: ast.Position{
								Column: 19,
								Line:   207,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 24,
									Line:   207,
								},
								File:   "strictFilter_test.flux",
								Source: "table",
								Start: ast.Position{
									Column: 19,
									Line:   207,
								},
							},
						},
						Name: "table",
					},
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 27,
								Line:   207,
							},
							File:   "strictFilter_test.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 25,
								Line:   207,
							},
						},
					}},
				}},
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 102,
							Line:   214,
						},
						File:   "strictFilter_test.flux",
						Source: "_strictFilter = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_strictFilter})",
						Start: ast.Position{
							Column: 6,
							Line:   213,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 19,
								Line:   213,
							},
							File:   "strictFilter_test.flux",
							Source: "_strictFilter",
							Start: ast.Position{
								Column: 6,
								Line:   213,
							},
						},
					},
					Name: "_strictFilter",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 102,
								Line:   214,
							},
							File:   "strictFilter_test.flux",
							Source: "() =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_strictFilter})",
							Start: ast.Position{
								Column: 22,
								Line:   213,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 102,
									Line:   214,
								},
								File:   "strictFilter_test.flux",
								Source: "({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_strictFilter})",
								Start: ast.Position{
									Column: 2,
									Line:   214,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 101,
										Line:   214,
									},
									File:   "strictFilter_test.flux",
									Source: "{input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_strictFilter}",
									Start: ast.Position{
										Column: 3,
										Line:   214,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 43,
											Line:   214,
										},
										File:   "strictFilter_test.flux",
										Source: "input: testing.loadStorage(csv: inData)",
										Start: ast.Position{
											Column: 4,
											Line:   214,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 9,
												Line:   214,
											},
											File:   "strictFilter_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 4,
												Line:   214,
											},
										},
									},
									Name: "input",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   214,
												},
												File:   "strictFilter_test.flux",
												Source: "csv: inData",
												Start: ast.Position{
													Column: 31,
													Line:   214,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 42,
														Line:   214,
													},
													File:   "strictFilter_test.flux",
													Source: "csv: inData",
													Start: ast.Position{
														Column: 31,
														Line:   214,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 34,
															Line:   214,
														},
														File:   "strictFilter_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 31,
															Line:   214,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 42,
															Line:   214,
														},
														File:   "strictFilter_test.flux",
														Source: "inData",
														Start: ast.Position{
															Column: 36,
															Line:   214,
														},
													},
												},
												Name: "inData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 43,
												Line:   214,
											},
											File:   "strictFilter_test.flux",
											Source: "testing.loadStorage(csv: inData)",
											Start: ast.Position{
												Column: 11,
												Line:   214,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   214,
												},
												File:   "strictFilter_test.flux",
												Source: "testing.loadStorage",
												Start: ast.Position{
													Column: 11,
													Line:   214,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   214,
													},
													File:   "strictFilter_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 11,
														Line:   214,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 30,
														Line:   214,
													},
													File:   "strictFilter_test.flux",
													Source: "loadStorage",
													Start: ast.Position{
														Column: 19,
														Line:   214,
													},
												},
											},
											Name: "loadStorage",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 80,
											Line:   214,
										},
										File:   "strictFilter_test.flux",
										Source: "want: testing.loadMem(csv: outData)",
										Start: ast.Position{
											Column: 45,
											Line:   214,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 49,
												Line:   214,
											},
											File:   "strictFilter_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 45,
												Line:   214,
											},
										},
									},
									Name: "want",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 79,
													Line:   214,
												},
												File:   "strictFilter_test.flux",
												Source: "csv: outData",
												Start: ast.Position{
													Column: 67,
													Line:   214,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 79,
														Line:   214,
													},
													File:   "strictFilter_test.flux",
													Source: "csv: outData",
													Start: ast.Position{
														Column: 67,
														Line:   214,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 70,
															Line:   214,
														},
														File:   "strictFilter_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 67,
															Line:   214,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 79,
															Line:   214,
														},
														File:   "strictFilter_test.flux",
														Source: "outData",
														Start: ast.Position{
															Column: 72,
															Line:   214,
														},
													},
												},
												Name: "outData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 80,
												Line:   214,
											},
											File:   "strictFilter_test.flux",
											Source: "testing.loadMem(csv: outData)",
											Start: ast.Position{
												Column: 51,
												Line:   214,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   214,
												},
												File:   "strictFilter_test.flux",
												Source: "testing.loadMem",
												Start: ast.Position{
													Column: 51,
													Line:   214,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 58,
														Line:   214,
													},
													File:   "strictFilter_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 51,
														Line:   214,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 66,
														Line:   214,
													},
													File:   "strictFilter_test.flux",
													Source: "loadMem",
													Start: ast.Position{
														Column: 59,
														Line:   214,
													},
												},
											},
											Name: "loadMem",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 100,
											Line:   214,
										},
										File:   "strictFilter_test.flux",
										Source: "fn: t_strictFilter",
										Start: ast.Position{
											Column: 82,
											Line:   214,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 84,
												Line:   214,
											},
											File:   "strictFilter_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 82,
												Line:   214,
											},
										},
									},
									Name: "fn",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 100,
												Line:   214,
											},
											File:   "strictFilter_test.flux",
											Source: "t_strictFilter",
											Start: ast.Position{
												Column: 86,
												Line:   214,
											},
										},
									},
									Name: "t_strictFilter",
								},
							}},
							With: nil,
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 102,
						Line:   214,
					},
					File:   "strictFilter_test.flux",
					Source: "test _strictFilter = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_strictFilter})",
					Start: ast.Position{
						Column: 1,
						Line:   213,
					},
				},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 26,
						Line:   3,
					},
					File:   "strictFilter_test.flux",
					Source: "import \"experimental/geo\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 26,
							Line:   3,
						},
						File:   "strictFilter_test.flux",
						Source: "\"experimental/geo\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "experimental/geo",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   4,
					},
					File:   "strictFilter_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   4,
						},
						File:   "strictFilter_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "testing",
			},
		}},
		Metadata: "parser-type=rust",
		Name:     "strictFilter_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   1,
					},
					File:   "strictFilter_test.flux",
					Source: "package geo_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   1,
						},
						File:   "strictFilter_test.flux",
						Source: "geo_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "geo_test",
			},
		},
	}, &ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 107,
					Line:   59,
				},
				File:   "units_miles_test.flux",
				Source: "package geo_test\n\nimport \"experimental/geo\"\nimport \"influxdata/influxdb/v1\"\nimport \"testing\"\n\noption now = () => (2030-01-01T00:00:00Z)\n\n// change units\noption geo.units = {distance:\"mile\"}\n\ninData = \"\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,0,2020-04-08T15:44:58Z,40.820317,lat,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,1,2020-04-08T16:19:27Z,40.745249,lat,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,2,2020-04-08T16:16:50Z,40.751085,lat,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,3,2020-04-08T15:44:58Z,-73.68691,lon,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,4,2020-04-08T16:19:27Z,-73.940563,lon,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,5,2020-04-08T16:16:50Z,-73.912119,lon,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,6,2020-04-08T15:44:58Z,1586304000,tid,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,7,2020-04-08T16:19:27Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,8,2020-04-08T16:16:50Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n\"\n\noutData = \"\n#group,false,false,true,true,false,false,true,true,false,false,true,true,true,true,false,true\n#datatype,string,long,string,string,double,dateTime:RFC3339,string,string,double,double,string,string,string,string,long,string\n#default,_result,,,,,,,,,,,,,,,\n,result,table,_measurement,_pt,_st_distance,_time,area,id,lat,lon,s2_cell_id,seq_idx,status,stop_id,tid,trip_id\n,,0,mta,start,20.793,2020-04-08T15:44:58Z,LLIR,GO506_20_6431,40.820317,-73.68691,89c288c54,1,STOPPED_AT,171,1586304000,GO506_20_6431\n,,1,mta,via,6.68,2020-04-08T16:19:27Z,LLIR,GO506_20_6431,40.745249,-73.940563,89c2592bc,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n,,2,mta,via,8.144,2020-04-08T16:16:50Z,LLIR,GO506_20_6431,40.751085,-73.912119,89c25f18c,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n\"\n\n// reference point (Statue of Liberty)\nrefPoint = {lat: 40.6892, lon: -74.0445}\n\n// limit float to 3 decimal places\nlimitFloat = (value) =>\n  (float(v: int(v: value * 1000.0)) / 1000.0)\n\nt_stDistanceInMiles = (table=<-) =>\n  table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> map(fn: (r) => ({\n      r with _st_distance: limitFloat(value: geo.ST_Distance(region: refPoint, geometry: {lat: r.lat, lon: r.lon}))\n    }))\n    |> drop(columns: [\"_start\", \"_stop\"])\ntest _stDistanceInMiles = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stDistanceInMiles})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   7,
						},
						File:   "units_miles_test.flux",
						Source: "now = () => (2030-01-01T00:00:00Z)",
						Start: ast.Position{
							Column: 8,
							Line:   7,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   7,
							},
							File:   "units_miles_test.flux",
							Source: "now",
							Start: ast.Position{
								Column: 8,
								Line:   7,
							},
						},
					},
					Name: "now",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   7,
							},
							File:   "units_miles_test.flux",
							Source: "() => (2030-01-01T00:00:00Z)",
							Start: ast.Position{
								Column: 14,
								Line:   7,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   7,
								},
								File:   "units_miles_test.flux",
								Source: "(2030-01-01T00:00:00Z)",
								Start: ast.Position{
									Column: 20,
									Line:   7,
								},
							},
						},
						Expression: &ast.DateTimeLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   7,
									},
									File:   "units_miles_test.flux",
									Source: "2030-01-01T00:00:00Z",
									Start: ast.Position{
										Column: 21,
										Line:   7,
									},
								},
							},
							Value: parser.MustParseTime("2030-01-01T00:00:00Z"),
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   7,
					},
					File:   "units_miles_test.flux",
					Source: "option now = () => (2030-01-01T00:00:00Z)",
					Start: ast.Position{
						Column: 1,
						Line:   7,
					},
				},
			},
		}, &ast.OptionStatement{
			Assignment: &ast.MemberAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 37,
							Line:   10,
						},
						File:   "units_miles_test.flux",
						Source: "geo.units = {distance:\"mile\"}",
						Start: ast.Position{
							Column: 8,
							Line:   10,
						},
					},
				},
				Init: &ast.ObjectExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 37,
								Line:   10,
							},
							File:   "units_miles_test.flux",
							Source: "{distance:\"mile\"}",
							Start: ast.Position{
								Column: 20,
								Line:   10,
							},
						},
					},
					Properties: []*ast.Property{&ast.Property{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 36,
									Line:   10,
								},
								File:   "units_miles_test.flux",
								Source: "distance:\"mile\"",
								Start: ast.Position{
									Column: 21,
									Line:   10,
								},
							},
						},
						Key: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 29,
										Line:   10,
									},
									File:   "units_miles_test.flux",
									Source: "distance",
									Start: ast.Position{
										Column: 21,
										Line:   10,
									},
								},
							},
							Name: "distance",
						},
						Value: &ast.StringLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 36,
										Line:   10,
									},
									File:   "units_miles_test.flux",
									Source: "\"mile\"",
									Start: ast.Position{
										Column: 30,
										Line:   10,
									},
								},
							},
							Value: "mile",
						},
					}},
					With: nil,
				},
				Member: &ast.MemberExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 17,
								Line:   10,
							},
							File:   "units_miles_test.flux",
							Source: "geo.units",
							Start: ast.Position{
								Column: 8,
								Line:   10,
							},
						},
					},
					Object: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 11,
									Line:   10,
								},
								File:   "units_miles_test.flux",
								Source: "geo",
								Start: ast.Position{
									Column: 8,
									Line:   10,
								},
							},
						},
						Name: "geo",
					},
					Property: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 17,
									Line:   10,
								},
								File:   "units_miles_test.flux",
								Source: "units",
								Start: ast.Position{
									Column: 12,
									Line:   10,
								},
							},
						},
						Name: "units",
					},
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 37,
						Line:   10,
					},
					File:   "units_miles_test.flux",
					Source: "option geo.units = {distance:\"mile\"}",
					Start: ast.Position{
						Column: 1,
						Line:   10,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   31,
					},
					File:   "units_miles_test.flux",
					Source: "inData = \"\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,0,2020-04-08T15:44:58Z,40.820317,lat,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,1,2020-04-08T16:19:27Z,40.745249,lat,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,2,2020-04-08T16:16:50Z,40.751085,lat,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,3,2020-04-08T15:44:58Z,-73.68691,lon,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,4,2020-04-08T16:19:27Z,-73.940563,lon,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,5,2020-04-08T16:16:50Z,-73.912119,lon,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,6,2020-04-08T15:44:58Z,1586304000,tid,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,7,2020-04-08T16:19:27Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,8,2020-04-08T16:16:50Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   12,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 7,
							Line:   12,
						},
						File:   "units_miles_test.flux",
						Source: "inData",
						Start: ast.Position{
							Column: 1,
							Line:   12,
						},
					},
				},
				Name: "inData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   31,
						},
						File:   "units_miles_test.flux",
						Source: "\"\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,0,2020-04-08T15:44:58Z,40.820317,lat,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,1,2020-04-08T16:19:27Z,40.745249,lat,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,2,2020-04-08T16:16:50Z,40.751085,lat,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,3,2020-04-08T15:44:58Z,-73.68691,lon,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,4,2020-04-08T16:19:27Z,-73.940563,lon,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,5,2020-04-08T16:16:50Z,-73.912119,lon,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,6,2020-04-08T15:44:58Z,1586304000,tid,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,7,2020-04-08T16:19:27Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,8,2020-04-08T16:16:50Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n\"",
						Start: ast.Position{
							Column: 10,
							Line:   12,
						},
					},
				},
				Value: "\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,double,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,0,2020-04-08T15:44:58Z,40.820317,lat,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,1,2020-04-08T16:19:27Z,40.745249,lat,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,2,2020-04-08T16:16:50Z,40.751085,lat,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,3,2020-04-08T15:44:58Z,-73.68691,lon,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,4,2020-04-08T16:19:27Z,-73.940563,lon,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,5,2020-04-08T16:16:50Z,-73.912119,lon,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n\n#group,false,false,false,false,true,true,true,true,true,true,true,true,true,true\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,string,string,string,string,string,string,string\n#default,_result,,,,,,,,,,,,,\n,result,table,_time,_value,_field,_measurement,_pt,area,id,s2_cell_id,seq_idx,status,stop_id,trip_id\n,,6,2020-04-08T15:44:58Z,1586304000,tid,mta,start,LLIR,GO506_20_6431,89c288c54,1,STOPPED_AT,171,GO506_20_6431\n,,7,2020-04-08T16:19:27Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c2592bc,13,IN_TRANSIT_TO,237,GO506_20_6431\n,,8,2020-04-08T16:16:50Z,1586304000,tid,mta,via,LLIR,GO506_20_6431,89c25f18c,13,IN_TRANSIT_TO,237,GO506_20_6431\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   41,
					},
					File:   "units_miles_test.flux",
					Source: "outData = \"\n#group,false,false,true,true,false,false,true,true,false,false,true,true,true,true,false,true\n#datatype,string,long,string,string,double,dateTime:RFC3339,string,string,double,double,string,string,string,string,long,string\n#default,_result,,,,,,,,,,,,,,,\n,result,table,_measurement,_pt,_st_distance,_time,area,id,lat,lon,s2_cell_id,seq_idx,status,stop_id,tid,trip_id\n,,0,mta,start,20.793,2020-04-08T15:44:58Z,LLIR,GO506_20_6431,40.820317,-73.68691,89c288c54,1,STOPPED_AT,171,1586304000,GO506_20_6431\n,,1,mta,via,6.68,2020-04-08T16:19:27Z,LLIR,GO506_20_6431,40.745249,-73.940563,89c2592bc,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n,,2,mta,via,8.144,2020-04-08T16:16:50Z,LLIR,GO506_20_6431,40.751085,-73.912119,89c25f18c,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   33,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 8,
							Line:   33,
						},
						File:   "units_miles_test.flux",
						Source: "outData",
						Start: ast.Position{
							Column: 1,
							Line:   33,
						},
					},
				},
				Name: "outData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   41,
						},
						File:   "units_miles_test.flux",
						Source: "\"\n#group,false,false,true,true,false,false,true,true,false,false,true,true,true,true,false,true\n#datatype,string,long,string,string,double,dateTime:RFC3339,string,string,double,double,string,string,string,string,long,string\n#default,_result,,,,,,,,,,,,,,,\n,result,table,_measurement,_pt,_st_distance,_time,area,id,lat,lon,s2_cell_id,seq_idx,status,stop_id,tid,trip_id\n,,0,mta,start,20.793,2020-04-08T15:44:58Z,LLIR,GO506_20_6431,40.820317,-73.68691,89c288c54,1,STOPPED_AT,171,1586304000,GO506_20_6431\n,,1,mta,via,6.68,2020-04-08T16:19:27Z,LLIR,GO506_20_6431,40.745249,-73.940563,89c2592bc,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n,,2,mta,via,8.144,2020-04-08T16:16:50Z,LLIR,GO506_20_6431,40.751085,-73.912119,89c25f18c,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n\"",
						Start: ast.Position{
							Column: 11,
							Line:   33,
						},
					},
				},
				Value: "\n#group,false,false,true,true,false,false,true,true,false,false,true,true,true,true,false,true\n#datatype,string,long,string,string,double,dateTime:RFC3339,string,string,double,double,string,string,string,string,long,string\n#default,_result,,,,,,,,,,,,,,,\n,result,table,_measurement,_pt,_st_distance,_time,area,id,lat,lon,s2_cell_id,seq_idx,status,stop_id,tid,trip_id\n,,0,mta,start,20.793,2020-04-08T15:44:58Z,LLIR,GO506_20_6431,40.820317,-73.68691,89c288c54,1,STOPPED_AT,171,1586304000,GO506_20_6431\n,,1,mta,via,6.68,2020-04-08T16:19:27Z,LLIR,GO506_20_6431,40.745249,-73.940563,89c2592bc,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n,,2,mta,via,8.144,2020-04-08T16:16:50Z,LLIR,GO506_20_6431,40.751085,-73.912119,89c25f18c,13,IN_TRANSIT_TO,237,1586304000,GO506_20_6431\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 41,
						Line:   44,
					},
					File:   "units_miles_test.flux",
					Source: "refPoint = {lat: 40.6892, lon: -74.0445}",
					Start: ast.Position{
						Column: 1,
						Line:   44,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 9,
							Line:   44,
						},
						File:   "units_miles_test.flux",
						Source: "refPoint",
						Start: ast.Position{
							Column: 1,
							Line:   44,
						},
					},
				},
				Name: "refPoint",
			},
			Init: &ast.ObjectExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 41,
							Line:   44,
						},
						File:   "units_miles_test.flux",
						Source: "{lat: 40.6892, lon: -74.0445}",
						Start: ast.Position{
							Column: 12,
							Line:   44,
						},
					},
				},
				Properties: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 25,
								Line:   44,
							},
							File:   "units_miles_test.flux",
							Source: "lat: 40.6892",
							Start: ast.Position{
								Column: 13,
								Line:   44,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 16,
									Line:   44,
								},
								File:   "units_miles_test.flux",
								Source: "lat",
								Start: ast.Position{
									Column: 13,
									Line:   44,
								},
							},
						},
						Name: "lat",
					},
					Value: &ast.FloatLiteral{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 25,
									Line:   44,
								},
								File:   "units_miles_test.flux",
								Source: "40.6892",
								Start: ast.Position{
									Column: 18,
									Line:   44,
								},
							},
						},
						Value: 40.6892,
					},
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 40,
								Line:   44,
							},
							File:   "units_miles_test.flux",
							Source: "lon: -74.0445",
							Start: ast.Position{
								Column: 27,
								Line:   44,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 30,
									Line:   44,
								},
								File:   "units_miles_test.flux",
								Source: "lon",
								Start: ast.Position{
									Column: 27,
									Line:   44,
								},
							},
						},
						Name: "lon",
					},
					Value: &ast.UnaryExpression{
						Argument: &ast.FloatLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 40,
										Line:   44,
									},
									File:   "units_miles_test.flux",
									Source: "74.0445",
									Start: ast.Position{
										Column: 33,
										Line:   44,
									},
								},
							},
							Value: 74.0445,
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 40,
									Line:   44,
								},
								File:   "units_miles_test.flux",
								Source: "-74.0445",
								Start: ast.Position{
									Column: 32,
									Line:   44,
								},
							},
						},
						Operator: 6,
					},
				}},
				With: nil,
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 46,
						Line:   48,
					},
					File:   "units_miles_test.flux",
					Source: "limitFloat = (value) =>\n  (float(v: int(v: value * 1000.0)) / 1000.0)",
					Start: ast.Position{
						Column: 1,
						Line:   47,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 11,
							Line:   47,
						},
						File:   "units_miles_test.flux",
						Source: "limitFloat",
						Start: ast.Position{
							Column: 1,
							Line:   47,
						},
					},
				},
				Name: "limitFloat",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 46,
							Line:   48,
						},
						File:   "units_miles_test.flux",
						Source: "(value) =>\n  (float(v: int(v: value * 1000.0)) / 1000.0)",
						Start: ast.Position{
							Column: 14,
							Line:   47,
						},
					},
				},
				Body: &ast.ParenExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 46,
								Line:   48,
							},
							File:   "units_miles_test.flux",
							Source: "(float(v: int(v: value * 1000.0)) / 1000.0)",
							Start: ast.Position{
								Column: 3,
								Line:   48,
							},
						},
					},
					Expression: &ast.BinaryExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 45,
									Line:   48,
								},
								File:   "units_miles_test.flux",
								Source: "float(v: int(v: value * 1000.0)) / 1000.0",
								Start: ast.Position{
									Column: 4,
									Line:   48,
								},
							},
						},
						Left: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 35,
											Line:   48,
										},
										File:   "units_miles_test.flux",
										Source: "v: int(v: value * 1000.0)",
										Start: ast.Position{
											Column: 10,
											Line:   48,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 35,
												Line:   48,
											},
											File:   "units_miles_test.flux",
											Source: "v: int(v: value * 1000.0)",
											Start: ast.Position{
												Column: 10,
												Line:   48,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 11,
													Line:   48,
												},
												File:   "units_miles_test.flux",
												Source: "v",
												Start: ast.Position{
													Column: 10,
													Line:   48,
												},
											},
										},
										Name: "v",
									},
									Value: &ast.CallExpression{
										Arguments: []ast.Expression{&ast.ObjectExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 34,
														Line:   48,
													},
													File:   "units_miles_test.flux",
													Source: "v: value * 1000.0",
													Start: ast.Position{
														Column: 17,
														Line:   48,
													},
												},
											},
											Properties: []*ast.Property{&ast.Property{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 34,
															Line:   48,
														},
														File:   "units_miles_test.flux",
														Source: "v: value * 1000.0",
														Start: ast.Position{
															Column: 17,
															Line:   48,
														},
													},
												},
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 18,
																Line:   48,
															},
															File:   "units_miles_test.flux",
															Source: "v",
															Start: ast.Position{
																Column: 17,
																Line:   48,
															},
														},
													},
													Name: "v",
												},
												Value: &ast.BinaryExpression{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 34,
																Line:   48,
															},
															File:   "units_miles_test.flux",
															Source: "value * 1000.0",
															Start: ast.Position{
																Column: 20,
																Line:   48,
															},
														},
													},
													Left: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 25,
																	Line:   48,
																},
																File:   "units_miles_test.flux",
																Source: "value",
																Start: ast.Position{
																	Column: 20,
																	Line:   48,
																},
															},
														},
														Name: "value",
													},
													Operator: 1,
													Right: &ast.FloatLiteral{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 34,
																	Line:   48,
																},
																File:   "units_miles_test.flux",
																Source: "1000.0",
																Start: ast.Position{
																	Column: 28,
																	Line:   48,
																},
															},
														},
														Value: 1000.0,
													},
												},
											}},
											With: nil,
										}},
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 35,
													Line:   48,
												},
												File:   "units_miles_test.flux",
												Source: "int(v: value * 1000.0)",
												Start: ast.Position{
													Column: 13,
													Line:   48,
												},
											},
										},
										Callee: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 16,
														Line:   48,
													},
													File:   "units_miles_test.flux",
													Source: "int",
													Start: ast.Position{
														Column: 13,
														Line:   48,
													},
												},
											},
											Name: "int",
										},
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 36,
										Line:   48,
									},
									File:   "units_miles_test.flux",
									Source: "float(v: int(v: value * 1000.0))",
									Start: ast.Position{
										Column: 4,
										Line:   48,
									},
								},
							},
							Callee: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 9,
											Line:   48,
										},
										File:   "units_miles_test.flux",
										Source: "float",
										Start: ast.Position{
											Column: 4,
											Line:   48,
										},
									},
								},
								Name: "float",
							},
						},
						Operator: 2,
						Right: &ast.FloatLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 45,
										Line:   48,
									},
									File:   "units_miles_test.flux",
									Source: "1000.0",
									Start: ast.Position{
										Column: 39,
										Line:   48,
									},
								},
							},
							Value: 1000.0,
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 20,
								Line:   47,
							},
							File:   "units_miles_test.flux",
							Source: "value",
							Start: ast.Position{
								Column: 15,
								Line:   47,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 20,
									Line:   47,
								},
								File:   "units_miles_test.flux",
								Source: "value",
								Start: ast.Position{
									Column: 15,
									Line:   47,
								},
							},
						},
						Name: "value",
					},
					Value: nil,
				}},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   57,
					},
					File:   "units_miles_test.flux",
					Source: "t_stDistanceInMiles = (table=<-) =>\n  table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> map(fn: (r) => ({\n      r with _st_distance: limitFloat(value: geo.ST_Distance(region: refPoint, geometry: {lat: r.lat, lon: r.lon}))\n    }))\n    |> drop(columns: [\"_start\", \"_stop\"])",
					Start: ast.Position{
						Column: 1,
						Line:   50,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 20,
							Line:   50,
						},
						File:   "units_miles_test.flux",
						Source: "t_stDistanceInMiles",
						Start: ast.Position{
							Column: 1,
							Line:   50,
						},
					},
				},
				Name: "t_stDistanceInMiles",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   57,
						},
						File:   "units_miles_test.flux",
						Source: "(table=<-) =>\n  table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> map(fn: (r) => ({\n      r with _st_distance: limitFloat(value: geo.ST_Distance(region: refPoint, geometry: {lat: r.lat, lon: r.lon}))\n    }))\n    |> drop(columns: [\"_start\", \"_stop\"])",
						Start: ast.Position{
							Column: 23,
							Line:   50,
						},
					},
				},
				Body: &ast.PipeExpression{
					Argument: &ast.PipeExpression{
						Argument: &ast.PipeExpression{
							Argument: &ast.PipeExpression{
								Argument: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 8,
												Line:   51,
											},
											File:   "units_miles_test.flux",
											Source: "table",
											Start: ast.Position{
												Column: 3,
												Line:   51,
											},
										},
									},
									Name: "table",
								},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 42,
											Line:   52,
										},
										File:   "units_miles_test.flux",
										Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)",
										Start: ast.Position{
											Column: 3,
											Line:   51,
										},
									},
								},
								Call: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 41,
													Line:   52,
												},
												File:   "units_miles_test.flux",
												Source: "start: 2020-04-01T00:00:00Z",
												Start: ast.Position{
													Column: 14,
													Line:   52,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 41,
														Line:   52,
													},
													File:   "units_miles_test.flux",
													Source: "start: 2020-04-01T00:00:00Z",
													Start: ast.Position{
														Column: 14,
														Line:   52,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 19,
															Line:   52,
														},
														File:   "units_miles_test.flux",
														Source: "start",
														Start: ast.Position{
															Column: 14,
															Line:   52,
														},
													},
												},
												Name: "start",
											},
											Value: &ast.DateTimeLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 41,
															Line:   52,
														},
														File:   "units_miles_test.flux",
														Source: "2020-04-01T00:00:00Z",
														Start: ast.Position{
															Column: 21,
															Line:   52,
														},
													},
												},
												Value: parser.MustParseTime("2020-04-01T00:00:00Z"),
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 42,
												Line:   52,
											},
											File:   "units_miles_test.flux",
											Source: "range(start: 2020-04-01T00:00:00Z)",
											Start: ast.Position{
												Column: 8,
												Line:   52,
											},
										},
									},
									Callee: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 13,
													Line:   52,
												},
												File:   "units_miles_test.flux",
												Source: "range",
												Start: ast.Position{
													Column: 8,
													Line:   52,
												},
											},
										},
										Name: "range",
									},
								},
							},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 25,
										Line:   53,
									},
									File:   "units_miles_test.flux",
									Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()",
									Start: ast.Position{
										Column: 3,
										Line:   51,
									},
								},
							},
							Call: &ast.CallExpression{
								Arguments: nil,
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 25,
											Line:   53,
										},
										File:   "units_miles_test.flux",
										Source: "v1.fieldsAsCols()",
										Start: ast.Position{
											Column: 8,
											Line:   53,
										},
									},
								},
								Callee: &ast.MemberExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 23,
												Line:   53,
											},
											File:   "units_miles_test.flux",
											Source: "v1.fieldsAsCols",
											Start: ast.Position{
												Column: 8,
												Line:   53,
											},
										},
									},
									Object: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 10,
													Line:   53,
												},
												File:   "units_miles_test.flux",
												Source: "v1",
												Start: ast.Position{
													Column: 8,
													Line:   53,
												},
											},
										},
										Name: "v1",
									},
									Property: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 23,
													Line:   53,
												},
												File:   "units_miles_test.flux",
												Source: "fieldsAsCols",
												Start: ast.Position{
													Column: 11,
													Line:   53,
												},
											},
										},
										Name: "fieldsAsCols",
									},
								},
							},
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 8,
									Line:   56,
								},
								File:   "units_miles_test.flux",
								Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> map(fn: (r) => ({\n      r with _st_distance: limitFloat(value: geo.ST_Distance(region: refPoint, geometry: {lat: r.lat, lon: r.lon}))\n    }))",
								Start: ast.Position{
									Column: 3,
									Line:   51,
								},
							},
						},
						Call: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 7,
											Line:   56,
										},
										File:   "units_miles_test.flux",
										Source: "fn: (r) => ({\n      r with _st_distance: limitFloat(value: geo.ST_Distance(region: refPoint, geometry: {lat: r.lat, lon: r.lon}))\n    })",
										Start: ast.Position{
											Column: 12,
											Line:   54,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 7,
												Line:   56,
											},
											File:   "units_miles_test.flux",
											Source: "fn: (r) => ({\n      r with _st_distance: limitFloat(value: geo.ST_Distance(region: refPoint, geometry: {lat: r.lat, lon: r.lon}))\n    })",
											Start: ast.Position{
												Column: 12,
												Line:   54,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 14,
													Line:   54,
												},
												File:   "units_miles_test.flux",
												Source: "fn",
												Start: ast.Position{
													Column: 12,
													Line:   54,
												},
											},
										},
										Name: "fn",
									},
									Value: &ast.FunctionExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 7,
													Line:   56,
												},
												File:   "units_miles_test.flux",
												Source: "(r) => ({\n      r with _st_distance: limitFloat(value: geo.ST_Distance(region: refPoint, geometry: {lat: r.lat, lon: r.lon}))\n    })",
												Start: ast.Position{
													Column: 16,
													Line:   54,
												},
											},
										},
										Body: &ast.ParenExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 7,
														Line:   56,
													},
													File:   "units_miles_test.flux",
													Source: "({\n      r with _st_distance: limitFloat(value: geo.ST_Distance(region: refPoint, geometry: {lat: r.lat, lon: r.lon}))\n    })",
													Start: ast.Position{
														Column: 23,
														Line:   54,
													},
												},
											},
											Expression: &ast.ObjectExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 6,
															Line:   56,
														},
														File:   "units_miles_test.flux",
														Source: "{\n      r with _st_distance: limitFloat(value: geo.ST_Distance(region: refPoint, geometry: {lat: r.lat, lon: r.lon}))\n    }",
														Start: ast.Position{
															Column: 24,
															Line:   54,
														},
													},
												},
												Properties: []*ast.Property{&ast.Property{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 116,
																Line:   55,
															},
															File:   "units_miles_test.flux",
															Source: "_st_distance: limitFloat(value: geo.ST_Distance(region: refPoint, geometry: {lat: r.lat, lon: r.lon}))",
															Start: ast.Position{
																Column: 14,
																Line:   55,
															},
														},
													},
													Key: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 26,
																	Line:   55,
																},
																File:   "units_miles_test.flux",
																Source: "_st_distance",
																Start: ast.Position{
																	Column: 14,
																	Line:   55,
																},
															},
														},
														Name: "_st_distance",
													},
													Value: &ast.CallExpression{
														Arguments: []ast.Expression{&ast.ObjectExpression{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 115,
																		Line:   55,
																	},
																	File:   "units_miles_test.flux",
																	Source: "value: geo.ST_Distance(region: refPoint, geometry: {lat: r.lat, lon: r.lon})",
																	Start: ast.Position{
																		Column: 39,
																		Line:   55,
																	},
																},
															},
															Properties: []*ast.Property{&ast.Property{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 115,
																			Line:   55,
																		},
																		File:   "units_miles_test.flux",
																		Source: "value: geo.ST_Distance(region: refPoint, geometry: {lat: r.lat, lon: r.lon})",
																		Start: ast.Position{
																			Column: 39,
																			Line:   55,
																		},
																	},
																},
																Key: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 44,
																				Line:   55,
																			},
																			File:   "units_miles_test.flux",
																			Source: "value",
																			Start: ast.Position{
																				Column: 39,
																				Line:   55,
																			},
																		},
																	},
																	Name: "value",
																},
																Value: &ast.CallExpression{
																	Arguments: []ast.Expression{&ast.ObjectExpression{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 114,
																					Line:   55,
																				},
																				File:   "units_miles_test.flux",
																				Source: "region: refPoint, geometry: {lat: r.lat, lon: r.lon}",
																				Start: ast.Position{
																					Column: 62,
																					Line:   55,
																				},
																			},
																		},
																		Properties: []*ast.Property{&ast.Property{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 78,
																						Line:   55,
																					},
																					File:   "units_miles_test.flux",
																					Source: "region: refPoint",
																					Start: ast.Position{
																						Column: 62,
																						Line:   55,
																					},
																				},
																			},
																			Key: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 68,
																							Line:   55,
																						},
																						File:   "units_miles_test.flux",
																						Source: "region",
																						Start: ast.Position{
																							Column: 62,
																							Line:   55,
																						},
																					},
																				},
																				Name: "region",
																			},
																			Value: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 78,
																							Line:   55,
																						},
																						File:   "units_miles_test.flux",
																						Source: "refPoint",
																						Start: ast.Position{
																							Column: 70,
																							Line:   55,
																						},
																					},
																				},
																				Name: "refPoint",
																			},
																		}, &ast.Property{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 114,
																						Line:   55,
																					},
																					File:   "units_miles_test.flux",
																					Source: "geometry: {lat: r.lat, lon: r.lon}",
																					Start: ast.Position{
																						Column: 80,
																						Line:   55,
																					},
																				},
																			},
																			Key: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 88,
																							Line:   55,
																						},
																						File:   "units_miles_test.flux",
																						Source: "geometry",
																						Start: ast.Position{
																							Column: 80,
																							Line:   55,
																						},
																					},
																				},
																				Name: "geometry",
																			},
																			Value: &ast.ObjectExpression{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 114,
																							Line:   55,
																						},
																						File:   "units_miles_test.flux",
																						Source: "{lat: r.lat, lon: r.lon}",
																						Start: ast.Position{
																							Column: 90,
																							Line:   55,
																						},
																					},
																				},
																				Properties: []*ast.Property{&ast.Property{
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 101,
																								Line:   55,
																							},
																							File:   "units_miles_test.flux",
																							Source: "lat: r.lat",
																							Start: ast.Position{
																								Column: 91,
																								Line:   55,
																							},
																						},
																					},
																					Key: &ast.Identifier{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 94,
																									Line:   55,
																								},
																								File:   "units_miles_test.flux",
																								Source: "lat",
																								Start: ast.Position{
																									Column: 91,
																									Line:   55,
																								},
																							},
																						},
																						Name: "lat",
																					},
																					Value: &ast.MemberExpression{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 101,
																									Line:   55,
																								},
																								File:   "units_miles_test.flux",
																								Source: "r.lat",
																								Start: ast.Position{
																									Column: 96,
																									Line:   55,
																								},
																							},
																						},
																						Object: &ast.Identifier{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 97,
																										Line:   55,
																									},
																									File:   "units_miles_test.flux",
																									Source: "r",
																									Start: ast.Position{
																										Column: 96,
																										Line:   55,
																									},
																								},
																							},
																							Name: "r",
																						},
																						Property: &ast.Identifier{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 101,
																										Line:   55,
																									},
																									File:   "units_miles_test.flux",
																									Source: "lat",
																									Start: ast.Position{
																										Column: 98,
																										Line:   55,
																									},
																								},
																							},
																							Name: "lat",
																						},
																					},
																				}, &ast.Property{
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 113,
																								Line:   55,
																							},
																							File:   "units_miles_test.flux",
																							Source: "lon: r.lon",
																							Start: ast.Position{
																								Column: 103,
																								Line:   55,
																							},
																						},
																					},
																					Key: &ast.Identifier{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 106,
																									Line:   55,
																								},
																								File:   "units_miles_test.flux",
																								Source: "lon",
																								Start: ast.Position{
																									Column: 103,
																									Line:   55,
																								},
																							},
																						},
																						Name: "lon",
																					},
																					Value: &ast.MemberExpression{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 113,
																									Line:   55,
																								},
																								File:   "units_miles_test.flux",
																								Source: "r.lon",
																								Start: ast.Position{
																									Column: 108,
																									Line:   55,
																								},
																							},
																						},
																						Object: &ast.Identifier{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 109,
																										Line:   55,
																									},
																									File:   "units_miles_test.flux",
																									Source: "r",
																									Start: ast.Position{
																										Column: 108,
																										Line:   55,
																									},
																								},
																							},
																							Name: "r",
																						},
																						Property: &ast.Identifier{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 113,
																										Line:   55,
																									},
																									File:   "units_miles_test.flux",
																									Source: "lon",
																									Start: ast.Position{
																										Column: 110,
																										Line:   55,
																									},
																								},
																							},
																							Name: "lon",
																						},
																					},
																				}},
																				With: nil,
																			},
																		}},
																		With: nil,
																	}},
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 115,
																				Line:   55,
																			},
																			File:   "units_miles_test.flux",
																			Source: "geo.ST_Distance(region: refPoint, geometry: {lat: r.lat, lon: r.lon})",
																			Start: ast.Position{
																				Column: 46,
																				Line:   55,
																			},
																		},
																	},
																	Callee: &ast.MemberExpression{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 61,
																					Line:   55,
																				},
																				File:   "units_miles_test.flux",
																				Source: "geo.ST_Distance",
																				Start: ast.Position{
																					Column: 46,
																					Line:   55,
																				},
																			},
																		},
																		Object: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 49,
																						Line:   55,
																					},
																					File:   "units_miles_test.flux",
																					Source: "geo",
																					Start: ast.Position{
																						Column: 46,
																						Line:   55,
																					},
																				},
																			},
																			Name: "geo",
																		},
																		Property: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 61,
																						Line:   55,
																					},
																					File:   "units_miles_test.flux",
																					Source: "ST_Distance",
																					Start: ast.Position{
																						Column: 50,
																						Line:   55,
																					},
																				},
																			},
																			Name: "ST_Distance",
																		},
																	},
																},
															}},
															With: nil,
														}},
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 116,
																	Line:   55,
																},
																File:   "units_miles_test.flux",
																Source: "limitFloat(value: geo.ST_Distance(region: refPoint, geometry: {lat: r.lat, lon: r.lon}))",
																Start: ast.Position{
																	Column: 28,
																	Line:   55,
																},
															},
														},
														Callee: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 38,
																		Line:   55,
																	},
																	File:   "units_miles_test.flux",
																	Source: "limitFloat",
																	Start: ast.Position{
																		Column: 28,
																		Line:   55,
																	},
																},
															},
															Name: "limitFloat",
														},
													},
												}},
												With: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 8,
																Line:   55,
															},
															File:   "units_miles_test.flux",
															Source: "r",
															Start: ast.Position{
																Column: 7,
																Line:   55,
															},
														},
													},
													Name: "r",
												},
											},
										},
										Params: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   54,
													},
													File:   "units_miles_test.flux",
													Source: "r",
													Start: ast.Position{
														Column: 17,
														Line:   54,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 18,
															Line:   54,
														},
														File:   "units_miles_test.flux",
														Source: "r",
														Start: ast.Position{
															Column: 17,
															Line:   54,
														},
													},
												},
												Name: "r",
											},
											Value: nil,
										}},
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 8,
										Line:   56,
									},
									File:   "units_miles_test.flux",
									Source: "map(fn: (r) => ({\n      r with _st_distance: limitFloat(value: geo.ST_Distance(region: refPoint, geometry: {lat: r.lat, lon: r.lon}))\n    }))",
									Start: ast.Position{
										Column: 8,
										Line:   54,
									},
								},
							},
							Callee: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 11,
											Line:   54,
										},
										File:   "units_miles_test.flux",
										Source: "map",
										Start: ast.Position{
											Column: 8,
											Line:   54,
										},
									},
								},
								Name: "map",
							},
						},
					},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   57,
							},
							File:   "units_miles_test.flux",
							Source: "table\n    |> range(start: 2020-04-01T00:00:00Z)\n    |> v1.fieldsAsCols()\n    |> map(fn: (r) => ({\n      r with _st_distance: limitFloat(value: geo.ST_Distance(region: refPoint, geometry: {lat: r.lat, lon: r.lon}))\n    }))\n    |> drop(columns: [\"_start\", \"_stop\"])",
							Start: ast.Position{
								Column: 3,
								Line:   51,
							},
						},
					},
					Call: &ast.CallExpression{
						Arguments: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   57,
									},
									File:   "units_miles_test.flux",
									Source: "columns: [\"_start\", \"_stop\"]",
									Start: ast.Position{
										Column: 13,
										Line:   57,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 41,
											Line:   57,
										},
										File:   "units_miles_test.flux",
										Source: "columns: [\"_start\", \"_stop\"]",
										Start: ast.Position{
											Column: 13,
											Line:   57,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 20,
												Line:   57,
											},
											File:   "units_miles_test.flux",
											Source: "columns",
											Start: ast.Position{
												Column: 13,
												Line:   57,
											},
										},
									},
									Name: "columns",
								},
								Value: &ast.ArrayExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 41,
												Line:   57,
											},
											File:   "units_miles_test.flux",
											Source: "[\"_start\", \"_stop\"]",
											Start: ast.Position{
												Column: 22,
												Line:   57,
											},
										},
									},
									Elements: []ast.Expression{&ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 31,
													Line:   57,
												},
												File:   "units_miles_test.flux",
												Source: "\"_start\"",
												Start: ast.Position{
													Column: 23,
													Line:   57,
												},
											},
										},
										Value: "_start",
									}, &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 40,
													Line:   57,
												},
												File:   "units_miles_test.flux",
												Source: "\"_stop\"",
												Start: ast.Position{
													Column: 33,
													Line:   57,
												},
											},
										},
										Value: "_stop",
									}},
								},
							}},
							With: nil,
						}},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   57,
								},
								File:   "units_miles_test.flux",
								Source: "drop(columns: [\"_start\", \"_stop\"])",
								Start: ast.Position{
									Column: 8,
									Line:   57,
								},
							},
						},
						Callee: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 12,
										Line:   57,
									},
									File:   "units_miles_test.flux",
									Source: "drop",
									Start: ast.Position{
										Column: 8,
										Line:   57,
									},
								},
							},
							Name: "drop",
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 32,
								Line:   50,
							},
							File:   "units_miles_test.flux",
							Source: "table=<-",
							Start: ast.Position{
								Column: 24,
								Line:   50,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 29,
									Line:   50,
								},
								File:   "units_miles_test.flux",
								Source: "table",
								Start: ast.Position{
									Column: 24,
									Line:   50,
								},
							},
						},
						Name: "table",
					},
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 32,
								Line:   50,
							},
							File:   "units_miles_test.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 30,
								Line:   50,
							},
						},
					}},
				}},
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 107,
							Line:   59,
						},
						File:   "units_miles_test.flux",
						Source: "_stDistanceInMiles = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stDistanceInMiles})",
						Start: ast.Position{
							Column: 6,
							Line:   58,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 24,
								Line:   58,
							},
							File:   "units_miles_test.flux",
							Source: "_stDistanceInMiles",
							Start: ast.Position{
								Column: 6,
								Line:   58,
							},
						},
					},
					Name: "_stDistanceInMiles",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 107,
								Line:   59,
							},
							File:   "units_miles_test.flux",
							Source: "() =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stDistanceInMiles})",
							Start: ast.Position{
								Column: 27,
								Line:   58,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 107,
									Line:   59,
								},
								File:   "units_miles_test.flux",
								Source: "({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stDistanceInMiles})",
								Start: ast.Position{
									Column: 2,
									Line:   59,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 106,
										Line:   59,
									},
									File:   "units_miles_test.flux",
									Source: "{input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stDistanceInMiles}",
									Start: ast.Position{
										Column: 3,
										Line:   59,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 43,
											Line:   59,
										},
										File:   "units_miles_test.flux",
										Source: "input: testing.loadStorage(csv: inData)",
										Start: ast.Position{
											Column: 4,
											Line:   59,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 9,
												Line:   59,
											},
											File:   "units_miles_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 4,
												Line:   59,
											},
										},
									},
									Name: "input",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   59,
												},
												File:   "units_miles_test.flux",
												Source: "csv: inData",
												Start: ast.Position{
													Column: 31,
													Line:   59,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 42,
														Line:   59,
													},
													File:   "units_miles_test.flux",
													Source: "csv: inData",
													Start: ast.Position{
														Column: 31,
														Line:   59,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 34,
															Line:   59,
														},
														File:   "units_miles_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 31,
															Line:   59,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 42,
															Line:   59,
														},
														File:   "units_miles_test.flux",
														Source: "inData",
														Start: ast.Position{
															Column: 36,
															Line:   59,
														},
													},
												},
												Name: "inData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 43,
												Line:   59,
											},
											File:   "units_miles_test.flux",
											Source: "testing.loadStorage(csv: inData)",
											Start: ast.Position{
												Column: 11,
												Line:   59,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   59,
												},
												File:   "units_miles_test.flux",
												Source: "testing.loadStorage",
												Start: ast.Position{
													Column: 11,
													Line:   59,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   59,
													},
													File:   "units_miles_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 11,
														Line:   59,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 30,
														Line:   59,
													},
													File:   "units_miles_test.flux",
													Source: "loadStorage",
													Start: ast.Position{
														Column: 19,
														Line:   59,
													},
												},
											},
											Name: "loadStorage",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 80,
											Line:   59,
										},
										File:   "units_miles_test.flux",
										Source: "want: testing.loadMem(csv: outData)",
										Start: ast.Position{
											Column: 45,
											Line:   59,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 49,
												Line:   59,
											},
											File:   "units_miles_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 45,
												Line:   59,
											},
										},
									},
									Name: "want",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 79,
													Line:   59,
												},
												File:   "units_miles_test.flux",
												Source: "csv: outData",
												Start: ast.Position{
													Column: 67,
													Line:   59,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 79,
														Line:   59,
													},
													File:   "units_miles_test.flux",
													Source: "csv: outData",
													Start: ast.Position{
														Column: 67,
														Line:   59,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 70,
															Line:   59,
														},
														File:   "units_miles_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 67,
															Line:   59,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 79,
															Line:   59,
														},
														File:   "units_miles_test.flux",
														Source: "outData",
														Start: ast.Position{
															Column: 72,
															Line:   59,
														},
													},
												},
												Name: "outData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 80,
												Line:   59,
											},
											File:   "units_miles_test.flux",
											Source: "testing.loadMem(csv: outData)",
											Start: ast.Position{
												Column: 51,
												Line:   59,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   59,
												},
												File:   "units_miles_test.flux",
												Source: "testing.loadMem",
												Start: ast.Position{
													Column: 51,
													Line:   59,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 58,
														Line:   59,
													},
													File:   "units_miles_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 51,
														Line:   59,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 66,
														Line:   59,
													},
													File:   "units_miles_test.flux",
													Source: "loadMem",
													Start: ast.Position{
														Column: 59,
														Line:   59,
													},
												},
											},
											Name: "loadMem",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 105,
											Line:   59,
										},
										File:   "units_miles_test.flux",
										Source: "fn: t_stDistanceInMiles",
										Start: ast.Position{
											Column: 82,
											Line:   59,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 84,
												Line:   59,
											},
											File:   "units_miles_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 82,
												Line:   59,
											},
										},
									},
									Name: "fn",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 105,
												Line:   59,
											},
											File:   "units_miles_test.flux",
											Source: "t_stDistanceInMiles",
											Start: ast.Position{
												Column: 86,
												Line:   59,
											},
										},
									},
									Name: "t_stDistanceInMiles",
								},
							}},
							With: nil,
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 107,
						Line:   59,
					},
					File:   "units_miles_test.flux",
					Source: "test _stDistanceInMiles = () =>\n\t({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_stDistanceInMiles})",
					Start: ast.Position{
						Column: 1,
						Line:   58,
					},
				},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 26,
						Line:   3,
					},
					File:   "units_miles_test.flux",
					Source: "import \"experimental/geo\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 26,
							Line:   3,
						},
						File:   "units_miles_test.flux",
						Source: "\"experimental/geo\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "experimental/geo",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 32,
						Line:   4,
					},
					File:   "units_miles_test.flux",
					Source: "import \"influxdata/influxdb/v1\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 32,
							Line:   4,
						},
						File:   "units_miles_test.flux",
						Source: "\"influxdata/influxdb/v1\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "influxdata/influxdb/v1",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   5,
					},
					File:   "units_miles_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   5,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   5,
						},
						File:   "units_miles_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   5,
						},
					},
				},
				Value: "testing",
			},
		}},
		Metadata: "parser-type=rust",
		Name:     "units_miles_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   1,
					},
					File:   "units_miles_test.flux",
					Source: "package geo_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   1,
						},
						File:   "units_miles_test.flux",
						Source: "geo_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "geo_test",
			},
		},
	}},
	Package: "geo_test",
	Path:    "experimental/geo",
}}
