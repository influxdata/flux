// DO NOT EDIT: This file is autogenerated via the builtin command.

package oee

import (
	ast "github.com/influxdata/flux/ast"
	runtime "github.com/influxdata/flux/runtime"
)

func init() {
	runtime.RegisterPackage(pkgAST)
}

var pkgAST = &ast.Package{
	BaseNode: ast.BaseNode{
		Comments: nil,
		Errors:   nil,
		Loc:      nil,
	},
	Files: []*ast.File{&ast.File{
		BaseNode: ast.BaseNode{
			Comments: nil,
			Errors:   nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 2,
					Line:   66,
				},
				File:   "oee.flux",
				Source: "package oee\n\n\nimport \"contrib/tomhollingworth/events\"\nimport \"experimental\"\n\n// computeAPQ computes availability, performance, quality and overall equipment effectiveness (oee).\n// productionEvents - a stream of start/stop events for the production process. Each row contains\n//   a _time and state that indicates start and stop events.\n// partEvents - a stream of part counts. Each row contains cumulative counts where column partCount\n//   represents total number of produced parts and badCount number of parts that did not meet quality standards.\n// runningState - production event or state value that corresponds to equipment running state\n// plannedTime - total time that equipment is expected to produce\n// idealCycleTime - theoretical minimum time to produce one part\ncomputeAPQ = (productionEvents, partEvents, runningState, plannedTime, idealCycleTime) => {\n    availability = productionEvents\n        |> events.duration(unit: 1ns, columnName: \"runTime\")\n        |> filter(fn: (r) => r.state == runningState)\n        |> sum(column: \"runTime\")\n        |> map(fn: (r) => ({r with _time: r._stop, availability: float(v: r.runTime) / float(v: int(v: plannedTime))}))\n    totalCount = partEvents\n        |> difference(columns: [\"partCount\"], nonNegative: true)\n        |> sum(column: \"partCount\")\n        |> duplicate(column: \"_stop\", as: \"_time\")\n    badCount = partEvents\n        |> difference(columns: [\"badCount\"], nonNegative: true)\n        |> sum(column: \"badCount\")\n        |> duplicate(column: \"_stop\", as: \"_time\")\n    performance = experimental.join(\n        left: availability,\n        right: totalCount,\n        fn: (left, right) => ({left with\n            performance: float(v: right.partCount) * float(v: int(v: idealCycleTime)) / float(v: left.runTime),\n        }),\n    )\n    quality = experimental.join(\n        left: badCount,\n        right: totalCount,\n        fn: (left, right) => ({left with\n            quality: (float(v: right.partCount) - float(v: left.badCount)) / float(v: right.partCount),\n        }),\n    )\n\n    return experimental.join(\n        left: performance,\n        right: quality,\n        fn: (left, right) => ({left with\n            quality: right.quality,\n            oee: left.availability * left.performance * right.quality,\n        }),\n    )\n}\n\n// APQ computes availability, performance, quality and overall equipment effectiveness (oee).\n// Input tables are expected to have rows with _time, state, partCount and badCount columns, where\n//   state that indicates start and stop events, partCount represents total number\n//   of produced parts and badCount represents number of parts that did not meet quality standards.\n// plannedTime - total time that equipment is expected to produce\n// idealCycleTime - theoretical minimum time to produce one part\nAPQ = (tables=<-, runningState, plannedTime, idealCycleTime) => computeAPQ(\n    productionEvents: tables,\n    partEvents: tables,\n    runningState: runningState,\n    plannedTime: plannedTime,\n    idealCycleTime: idealCycleTime,\n)",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   52,
					},
					File:   "oee.flux",
					Source: "computeAPQ = (productionEvents, partEvents, runningState, plannedTime, idealCycleTime) => {\n    availability = productionEvents\n        |> events.duration(unit: 1ns, columnName: \"runTime\")\n        |> filter(fn: (r) => r.state == runningState)\n        |> sum(column: \"runTime\")\n        |> map(fn: (r) => ({r with _time: r._stop, availability: float(v: r.runTime) / float(v: int(v: plannedTime))}))\n    totalCount = partEvents\n        |> difference(columns: [\"partCount\"], nonNegative: true)\n        |> sum(column: \"partCount\")\n        |> duplicate(column: \"_stop\", as: \"_time\")\n    badCount = partEvents\n        |> difference(columns: [\"badCount\"], nonNegative: true)\n        |> sum(column: \"badCount\")\n        |> duplicate(column: \"_stop\", as: \"_time\")\n    performance = experimental.join(\n        left: availability,\n        right: totalCount,\n        fn: (left, right) => ({left with\n            performance: float(v: right.partCount) * float(v: int(v: idealCycleTime)) / float(v: left.runTime),\n        }),\n    )\n    quality = experimental.join(\n        left: badCount,\n        right: totalCount,\n        fn: (left, right) => ({left with\n            quality: (float(v: right.partCount) - float(v: left.badCount)) / float(v: right.partCount),\n        }),\n    )\n\n    return experimental.join(\n        left: performance,\n        right: quality,\n        fn: (left, right) => ({left with\n            quality: right.quality,\n            oee: left.availability * left.performance * right.quality,\n        }),\n    )\n}",
					Start: ast.Position{
						Column: 1,
						Line:   15,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: []ast.Comment{ast.Comment{Text: "// computeAPQ computes availability, performance, quality and overall equipment effectiveness (oee).\n"}, ast.Comment{Text: "// productionEvents - a stream of start/stop events for the production process. Each row contains\n"}, ast.Comment{Text: "//   a _time and state that indicates start and stop events.\n"}, ast.Comment{Text: "// partEvents - a stream of part counts. Each row contains cumulative counts where column partCount\n"}, ast.Comment{Text: "//   represents total number of produced parts and badCount number of parts that did not meet quality standards.\n"}, ast.Comment{Text: "// runningState - production event or state value that corresponds to equipment running state\n"}, ast.Comment{Text: "// plannedTime - total time that equipment is expected to produce\n"}, ast.Comment{Text: "// idealCycleTime - theoretical minimum time to produce one part\n"}},
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 11,
							Line:   15,
						},
						File:   "oee.flux",
						Source: "computeAPQ",
						Start: ast.Position{
							Column: 1,
							Line:   15,
						},
					},
				},
				Name: "computeAPQ",
			},
			Init: &ast.FunctionExpression{
				Arrow: nil,
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   52,
						},
						File:   "oee.flux",
						Source: "(productionEvents, partEvents, runningState, plannedTime, idealCycleTime) => {\n    availability = productionEvents\n        |> events.duration(unit: 1ns, columnName: \"runTime\")\n        |> filter(fn: (r) => r.state == runningState)\n        |> sum(column: \"runTime\")\n        |> map(fn: (r) => ({r with _time: r._stop, availability: float(v: r.runTime) / float(v: int(v: plannedTime))}))\n    totalCount = partEvents\n        |> difference(columns: [\"partCount\"], nonNegative: true)\n        |> sum(column: \"partCount\")\n        |> duplicate(column: \"_stop\", as: \"_time\")\n    badCount = partEvents\n        |> difference(columns: [\"badCount\"], nonNegative: true)\n        |> sum(column: \"badCount\")\n        |> duplicate(column: \"_stop\", as: \"_time\")\n    performance = experimental.join(\n        left: availability,\n        right: totalCount,\n        fn: (left, right) => ({left with\n            performance: float(v: right.partCount) * float(v: int(v: idealCycleTime)) / float(v: left.runTime),\n        }),\n    )\n    quality = experimental.join(\n        left: badCount,\n        right: totalCount,\n        fn: (left, right) => ({left with\n            quality: (float(v: right.partCount) - float(v: left.badCount)) / float(v: right.partCount),\n        }),\n    )\n\n    return experimental.join(\n        left: performance,\n        right: quality,\n        fn: (left, right) => ({left with\n            quality: right.quality,\n            oee: left.availability * left.performance * right.quality,\n        }),\n    )\n}",
						Start: ast.Position{
							Column: 14,
							Line:   15,
						},
					},
				},
				Body: &ast.Block{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 2,
								Line:   52,
							},
							File:   "oee.flux",
							Source: "{\n    availability = productionEvents\n        |> events.duration(unit: 1ns, columnName: \"runTime\")\n        |> filter(fn: (r) => r.state == runningState)\n        |> sum(column: \"runTime\")\n        |> map(fn: (r) => ({r with _time: r._stop, availability: float(v: r.runTime) / float(v: int(v: plannedTime))}))\n    totalCount = partEvents\n        |> difference(columns: [\"partCount\"], nonNegative: true)\n        |> sum(column: \"partCount\")\n        |> duplicate(column: \"_stop\", as: \"_time\")\n    badCount = partEvents\n        |> difference(columns: [\"badCount\"], nonNegative: true)\n        |> sum(column: \"badCount\")\n        |> duplicate(column: \"_stop\", as: \"_time\")\n    performance = experimental.join(\n        left: availability,\n        right: totalCount,\n        fn: (left, right) => ({left with\n            performance: float(v: right.partCount) * float(v: int(v: idealCycleTime)) / float(v: left.runTime),\n        }),\n    )\n    quality = experimental.join(\n        left: badCount,\n        right: totalCount,\n        fn: (left, right) => ({left with\n            quality: (float(v: right.partCount) - float(v: left.badCount)) / float(v: right.partCount),\n        }),\n    )\n\n    return experimental.join(\n        left: performance,\n        right: quality,\n        fn: (left, right) => ({left with\n            quality: right.quality,\n            oee: left.availability * left.performance * right.quality,\n        }),\n    )\n}",
							Start: ast.Position{
								Column: 91,
								Line:   15,
							},
						},
					},
					Body: []ast.Statement{&ast.VariableAssignment{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 120,
									Line:   20,
								},
								File:   "oee.flux",
								Source: "availability = productionEvents\n        |> events.duration(unit: 1ns, columnName: \"runTime\")\n        |> filter(fn: (r) => r.state == runningState)\n        |> sum(column: \"runTime\")\n        |> map(fn: (r) => ({r with _time: r._stop, availability: float(v: r.runTime) / float(v: int(v: plannedTime))}))",
								Start: ast.Position{
									Column: 5,
									Line:   16,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 17,
										Line:   16,
									},
									File:   "oee.flux",
									Source: "availability",
									Start: ast.Position{
										Column: 5,
										Line:   16,
									},
								},
							},
							Name: "availability",
						},
						Init: &ast.PipeExpression{
							Argument: &ast.PipeExpression{
								Argument: &ast.PipeExpression{
									Argument: &ast.PipeExpression{
										Argument: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 36,
														Line:   16,
													},
													File:   "oee.flux",
													Source: "productionEvents",
													Start: ast.Position{
														Column: 20,
														Line:   16,
													},
												},
											},
											Name: "productionEvents",
										},
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 61,
													Line:   17,
												},
												File:   "oee.flux",
												Source: "productionEvents\n        |> events.duration(unit: 1ns, columnName: \"runTime\")",
												Start: ast.Position{
													Column: 20,
													Line:   16,
												},
											},
										},
										Call: &ast.CallExpression{
											Arguments: []ast.Expression{&ast.ObjectExpression{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 60,
															Line:   17,
														},
														File:   "oee.flux",
														Source: "unit: 1ns, columnName: \"runTime\"",
														Start: ast.Position{
															Column: 28,
															Line:   17,
														},
													},
												},
												Lbrace: nil,
												Properties: []*ast.Property{&ast.Property{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 37,
																Line:   17,
															},
															File:   "oee.flux",
															Source: "unit: 1ns",
															Start: ast.Position{
																Column: 28,
																Line:   17,
															},
														},
													},
													Comma: nil,
													Key: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Comments: nil,
															Errors:   nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 32,
																	Line:   17,
																},
																File:   "oee.flux",
																Source: "unit",
																Start: ast.Position{
																	Column: 28,
																	Line:   17,
																},
															},
														},
														Name: "unit",
													},
													Separator: nil,
													Value: &ast.DurationLiteral{
														BaseNode: ast.BaseNode{
															Comments: nil,
															Errors:   nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 37,
																	Line:   17,
																},
																File:   "oee.flux",
																Source: "1ns",
																Start: ast.Position{
																	Column: 34,
																	Line:   17,
																},
															},
														},
														Values: []ast.Duration{ast.Duration{
															Magnitude: int64(1),
															Unit:      "ns",
														}},
													},
												}, &ast.Property{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 60,
																Line:   17,
															},
															File:   "oee.flux",
															Source: "columnName: \"runTime\"",
															Start: ast.Position{
																Column: 39,
																Line:   17,
															},
														},
													},
													Comma: nil,
													Key: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Comments: nil,
															Errors:   nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 49,
																	Line:   17,
																},
																File:   "oee.flux",
																Source: "columnName",
																Start: ast.Position{
																	Column: 39,
																	Line:   17,
																},
															},
														},
														Name: "columnName",
													},
													Separator: nil,
													Value: &ast.StringLiteral{
														BaseNode: ast.BaseNode{
															Comments: nil,
															Errors:   nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 60,
																	Line:   17,
																},
																File:   "oee.flux",
																Source: "\"runTime\"",
																Start: ast.Position{
																	Column: 51,
																	Line:   17,
																},
															},
														},
														Value: "runTime",
													},
												}},
												Rbrace: nil,
												With:   nil,
											}},
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 61,
														Line:   17,
													},
													File:   "oee.flux",
													Source: "events.duration(unit: 1ns, columnName: \"runTime\")",
													Start: ast.Position{
														Column: 12,
														Line:   17,
													},
												},
											},
											Callee: &ast.MemberExpression{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 27,
															Line:   17,
														},
														File:   "oee.flux",
														Source: "events.duration",
														Start: ast.Position{
															Column: 12,
															Line:   17,
														},
													},
												},
												Lbrack: nil,
												Object: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 18,
																Line:   17,
															},
															File:   "oee.flux",
															Source: "events",
															Start: ast.Position{
																Column: 12,
																Line:   17,
															},
														},
													},
													Name: "events",
												},
												Property: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 27,
																Line:   17,
															},
															File:   "oee.flux",
															Source: "duration",
															Start: ast.Position{
																Column: 19,
																Line:   17,
															},
														},
													},
													Name: "duration",
												},
												Rbrack: nil,
											},
											Lparen: nil,
											Rparen: nil,
										},
									},
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 54,
												Line:   18,
											},
											File:   "oee.flux",
											Source: "productionEvents\n        |> events.duration(unit: 1ns, columnName: \"runTime\")\n        |> filter(fn: (r) => r.state == runningState)",
											Start: ast.Position{
												Column: 20,
												Line:   16,
											},
										},
									},
									Call: &ast.CallExpression{
										Arguments: []ast.Expression{&ast.ObjectExpression{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 53,
														Line:   18,
													},
													File:   "oee.flux",
													Source: "fn: (r) => r.state == runningState",
													Start: ast.Position{
														Column: 19,
														Line:   18,
													},
												},
											},
											Lbrace: nil,
											Properties: []*ast.Property{&ast.Property{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 53,
															Line:   18,
														},
														File:   "oee.flux",
														Source: "fn: (r) => r.state == runningState",
														Start: ast.Position{
															Column: 19,
															Line:   18,
														},
													},
												},
												Comma: nil,
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 21,
																Line:   18,
															},
															File:   "oee.flux",
															Source: "fn",
															Start: ast.Position{
																Column: 19,
																Line:   18,
															},
														},
													},
													Name: "fn",
												},
												Separator: nil,
												Value: &ast.FunctionExpression{
													Arrow: nil,
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 53,
																Line:   18,
															},
															File:   "oee.flux",
															Source: "(r) => r.state == runningState",
															Start: ast.Position{
																Column: 23,
																Line:   18,
															},
														},
													},
													Body: &ast.BinaryExpression{
														BaseNode: ast.BaseNode{
															Comments: nil,
															Errors:   nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 53,
																	Line:   18,
																},
																File:   "oee.flux",
																Source: "r.state == runningState",
																Start: ast.Position{
																	Column: 30,
																	Line:   18,
																},
															},
														},
														Left: &ast.MemberExpression{
															BaseNode: ast.BaseNode{
																Comments: nil,
																Errors:   nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 37,
																		Line:   18,
																	},
																	File:   "oee.flux",
																	Source: "r.state",
																	Start: ast.Position{
																		Column: 30,
																		Line:   18,
																	},
																},
															},
															Lbrack: nil,
															Object: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Comments: nil,
																	Errors:   nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 31,
																			Line:   18,
																		},
																		File:   "oee.flux",
																		Source: "r",
																		Start: ast.Position{
																			Column: 30,
																			Line:   18,
																		},
																	},
																},
																Name: "r",
															},
															Property: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Comments: nil,
																	Errors:   nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 37,
																			Line:   18,
																		},
																		File:   "oee.flux",
																		Source: "state",
																		Start: ast.Position{
																			Column: 32,
																			Line:   18,
																		},
																	},
																},
																Name: "state",
															},
															Rbrack: nil,
														},
														Operator: 17,
														Right: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Comments: nil,
																Errors:   nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 53,
																		Line:   18,
																	},
																	File:   "oee.flux",
																	Source: "runningState",
																	Start: ast.Position{
																		Column: 41,
																		Line:   18,
																	},
																},
															},
															Name: "runningState",
														},
													},
													Lparen: nil,
													Params: []*ast.Property{&ast.Property{
														BaseNode: ast.BaseNode{
															Comments: nil,
															Errors:   nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 25,
																	Line:   18,
																},
																File:   "oee.flux",
																Source: "r",
																Start: ast.Position{
																	Column: 24,
																	Line:   18,
																},
															},
														},
														Comma: nil,
														Key: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Comments: nil,
																Errors:   nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 25,
																		Line:   18,
																	},
																	File:   "oee.flux",
																	Source: "r",
																	Start: ast.Position{
																		Column: 24,
																		Line:   18,
																	},
																},
															},
															Name: "r",
														},
														Separator: nil,
														Value:     nil,
													}},
													Rparan: nil,
												},
											}},
											Rbrace: nil,
											With:   nil,
										}},
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 54,
													Line:   18,
												},
												File:   "oee.flux",
												Source: "filter(fn: (r) => r.state == runningState)",
												Start: ast.Position{
													Column: 12,
													Line:   18,
												},
											},
										},
										Callee: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   18,
													},
													File:   "oee.flux",
													Source: "filter",
													Start: ast.Position{
														Column: 12,
														Line:   18,
													},
												},
											},
											Name: "filter",
										},
										Lparen: nil,
										Rparen: nil,
									},
								},
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 34,
											Line:   19,
										},
										File:   "oee.flux",
										Source: "productionEvents\n        |> events.duration(unit: 1ns, columnName: \"runTime\")\n        |> filter(fn: (r) => r.state == runningState)\n        |> sum(column: \"runTime\")",
										Start: ast.Position{
											Column: 20,
											Line:   16,
										},
									},
								},
								Call: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 33,
													Line:   19,
												},
												File:   "oee.flux",
												Source: "column: \"runTime\"",
												Start: ast.Position{
													Column: 16,
													Line:   19,
												},
											},
										},
										Lbrace: nil,
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 33,
														Line:   19,
													},
													File:   "oee.flux",
													Source: "column: \"runTime\"",
													Start: ast.Position{
														Column: 16,
														Line:   19,
													},
												},
											},
											Comma: nil,
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 22,
															Line:   19,
														},
														File:   "oee.flux",
														Source: "column",
														Start: ast.Position{
															Column: 16,
															Line:   19,
														},
													},
												},
												Name: "column",
											},
											Separator: nil,
											Value: &ast.StringLiteral{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 33,
															Line:   19,
														},
														File:   "oee.flux",
														Source: "\"runTime\"",
														Start: ast.Position{
															Column: 24,
															Line:   19,
														},
													},
												},
												Value: "runTime",
											},
										}},
										Rbrace: nil,
										With:   nil,
									}},
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 34,
												Line:   19,
											},
											File:   "oee.flux",
											Source: "sum(column: \"runTime\")",
											Start: ast.Position{
												Column: 12,
												Line:   19,
											},
										},
									},
									Callee: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 15,
													Line:   19,
												},
												File:   "oee.flux",
												Source: "sum",
												Start: ast.Position{
													Column: 12,
													Line:   19,
												},
											},
										},
										Name: "sum",
									},
									Lparen: nil,
									Rparen: nil,
								},
							},
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 120,
										Line:   20,
									},
									File:   "oee.flux",
									Source: "productionEvents\n        |> events.duration(unit: 1ns, columnName: \"runTime\")\n        |> filter(fn: (r) => r.state == runningState)\n        |> sum(column: \"runTime\")\n        |> map(fn: (r) => ({r with _time: r._stop, availability: float(v: r.runTime) / float(v: int(v: plannedTime))}))",
									Start: ast.Position{
										Column: 20,
										Line:   16,
									},
								},
							},
							Call: &ast.CallExpression{
								Arguments: []ast.Expression{&ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 119,
												Line:   20,
											},
											File:   "oee.flux",
											Source: "fn: (r) => ({r with _time: r._stop, availability: float(v: r.runTime) / float(v: int(v: plannedTime))})",
											Start: ast.Position{
												Column: 16,
												Line:   20,
											},
										},
									},
									Lbrace: nil,
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 119,
													Line:   20,
												},
												File:   "oee.flux",
												Source: "fn: (r) => ({r with _time: r._stop, availability: float(v: r.runTime) / float(v: int(v: plannedTime))})",
												Start: ast.Position{
													Column: 16,
													Line:   20,
												},
											},
										},
										Comma: nil,
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   20,
													},
													File:   "oee.flux",
													Source: "fn",
													Start: ast.Position{
														Column: 16,
														Line:   20,
													},
												},
											},
											Name: "fn",
										},
										Separator: nil,
										Value: &ast.FunctionExpression{
											Arrow: nil,
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 119,
														Line:   20,
													},
													File:   "oee.flux",
													Source: "(r) => ({r with _time: r._stop, availability: float(v: r.runTime) / float(v: int(v: plannedTime))})",
													Start: ast.Position{
														Column: 20,
														Line:   20,
													},
												},
											},
											Body: &ast.ParenExpression{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 119,
															Line:   20,
														},
														File:   "oee.flux",
														Source: "({r with _time: r._stop, availability: float(v: r.runTime) / float(v: int(v: plannedTime))})",
														Start: ast.Position{
															Column: 27,
															Line:   20,
														},
													},
												},
												Expression: &ast.ObjectExpression{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 118,
																Line:   20,
															},
															File:   "oee.flux",
															Source: "{r with _time: r._stop, availability: float(v: r.runTime) / float(v: int(v: plannedTime))}",
															Start: ast.Position{
																Column: 28,
																Line:   20,
															},
														},
													},
													Lbrace: nil,
													Properties: []*ast.Property{&ast.Property{
														BaseNode: ast.BaseNode{
															Comments: nil,
															Errors:   nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 50,
																	Line:   20,
																},
																File:   "oee.flux",
																Source: "_time: r._stop",
																Start: ast.Position{
																	Column: 36,
																	Line:   20,
																},
															},
														},
														Comma: nil,
														Key: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Comments: nil,
																Errors:   nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 41,
																		Line:   20,
																	},
																	File:   "oee.flux",
																	Source: "_time",
																	Start: ast.Position{
																		Column: 36,
																		Line:   20,
																	},
																},
															},
															Name: "_time",
														},
														Separator: nil,
														Value: &ast.MemberExpression{
															BaseNode: ast.BaseNode{
																Comments: nil,
																Errors:   nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 50,
																		Line:   20,
																	},
																	File:   "oee.flux",
																	Source: "r._stop",
																	Start: ast.Position{
																		Column: 43,
																		Line:   20,
																	},
																},
															},
															Lbrack: nil,
															Object: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Comments: nil,
																	Errors:   nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 44,
																			Line:   20,
																		},
																		File:   "oee.flux",
																		Source: "r",
																		Start: ast.Position{
																			Column: 43,
																			Line:   20,
																		},
																	},
																},
																Name: "r",
															},
															Property: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Comments: nil,
																	Errors:   nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 50,
																			Line:   20,
																		},
																		File:   "oee.flux",
																		Source: "_stop",
																		Start: ast.Position{
																			Column: 45,
																			Line:   20,
																		},
																	},
																},
																Name: "_stop",
															},
															Rbrack: nil,
														},
													}, &ast.Property{
														BaseNode: ast.BaseNode{
															Comments: nil,
															Errors:   nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 117,
																	Line:   20,
																},
																File:   "oee.flux",
																Source: "availability: float(v: r.runTime) / float(v: int(v: plannedTime))",
																Start: ast.Position{
																	Column: 52,
																	Line:   20,
																},
															},
														},
														Comma: nil,
														Key: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Comments: nil,
																Errors:   nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 64,
																		Line:   20,
																	},
																	File:   "oee.flux",
																	Source: "availability",
																	Start: ast.Position{
																		Column: 52,
																		Line:   20,
																	},
																},
															},
															Name: "availability",
														},
														Separator: nil,
														Value: &ast.BinaryExpression{
															BaseNode: ast.BaseNode{
																Comments: nil,
																Errors:   nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 117,
																		Line:   20,
																	},
																	File:   "oee.flux",
																	Source: "float(v: r.runTime) / float(v: int(v: plannedTime))",
																	Start: ast.Position{
																		Column: 66,
																		Line:   20,
																	},
																},
															},
															Left: &ast.CallExpression{
																Arguments: []ast.Expression{&ast.ObjectExpression{
																	BaseNode: ast.BaseNode{
																		Comments: nil,
																		Errors:   nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 84,
																				Line:   20,
																			},
																			File:   "oee.flux",
																			Source: "v: r.runTime",
																			Start: ast.Position{
																				Column: 72,
																				Line:   20,
																			},
																		},
																	},
																	Lbrace: nil,
																	Properties: []*ast.Property{&ast.Property{
																		BaseNode: ast.BaseNode{
																			Comments: nil,
																			Errors:   nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 84,
																					Line:   20,
																				},
																				File:   "oee.flux",
																				Source: "v: r.runTime",
																				Start: ast.Position{
																					Column: 72,
																					Line:   20,
																				},
																			},
																		},
																		Comma: nil,
																		Key: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Comments: nil,
																				Errors:   nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 73,
																						Line:   20,
																					},
																					File:   "oee.flux",
																					Source: "v",
																					Start: ast.Position{
																						Column: 72,
																						Line:   20,
																					},
																				},
																			},
																			Name: "v",
																		},
																		Separator: nil,
																		Value: &ast.MemberExpression{
																			BaseNode: ast.BaseNode{
																				Comments: nil,
																				Errors:   nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 84,
																						Line:   20,
																					},
																					File:   "oee.flux",
																					Source: "r.runTime",
																					Start: ast.Position{
																						Column: 75,
																						Line:   20,
																					},
																				},
																			},
																			Lbrack: nil,
																			Object: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Comments: nil,
																					Errors:   nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 76,
																							Line:   20,
																						},
																						File:   "oee.flux",
																						Source: "r",
																						Start: ast.Position{
																							Column: 75,
																							Line:   20,
																						},
																					},
																				},
																				Name: "r",
																			},
																			Property: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Comments: nil,
																					Errors:   nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 84,
																							Line:   20,
																						},
																						File:   "oee.flux",
																						Source: "runTime",
																						Start: ast.Position{
																							Column: 77,
																							Line:   20,
																						},
																					},
																				},
																				Name: "runTime",
																			},
																			Rbrack: nil,
																		},
																	}},
																	Rbrace: nil,
																	With:   nil,
																}},
																BaseNode: ast.BaseNode{
																	Comments: nil,
																	Errors:   nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 85,
																			Line:   20,
																		},
																		File:   "oee.flux",
																		Source: "float(v: r.runTime)",
																		Start: ast.Position{
																			Column: 66,
																			Line:   20,
																		},
																	},
																},
																Callee: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Comments: nil,
																		Errors:   nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 71,
																				Line:   20,
																			},
																			File:   "oee.flux",
																			Source: "float",
																			Start: ast.Position{
																				Column: 66,
																				Line:   20,
																			},
																		},
																	},
																	Name: "float",
																},
																Lparen: nil,
																Rparen: nil,
															},
															Operator: 2,
															Right: &ast.CallExpression{
																Arguments: []ast.Expression{&ast.ObjectExpression{
																	BaseNode: ast.BaseNode{
																		Comments: nil,
																		Errors:   nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 116,
																				Line:   20,
																			},
																			File:   "oee.flux",
																			Source: "v: int(v: plannedTime)",
																			Start: ast.Position{
																				Column: 94,
																				Line:   20,
																			},
																		},
																	},
																	Lbrace: nil,
																	Properties: []*ast.Property{&ast.Property{
																		BaseNode: ast.BaseNode{
																			Comments: nil,
																			Errors:   nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 116,
																					Line:   20,
																				},
																				File:   "oee.flux",
																				Source: "v: int(v: plannedTime)",
																				Start: ast.Position{
																					Column: 94,
																					Line:   20,
																				},
																			},
																		},
																		Comma: nil,
																		Key: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Comments: nil,
																				Errors:   nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 95,
																						Line:   20,
																					},
																					File:   "oee.flux",
																					Source: "v",
																					Start: ast.Position{
																						Column: 94,
																						Line:   20,
																					},
																				},
																			},
																			Name: "v",
																		},
																		Separator: nil,
																		Value: &ast.CallExpression{
																			Arguments: []ast.Expression{&ast.ObjectExpression{
																				BaseNode: ast.BaseNode{
																					Comments: nil,
																					Errors:   nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 115,
																							Line:   20,
																						},
																						File:   "oee.flux",
																						Source: "v: plannedTime",
																						Start: ast.Position{
																							Column: 101,
																							Line:   20,
																						},
																					},
																				},
																				Lbrace: nil,
																				Properties: []*ast.Property{&ast.Property{
																					BaseNode: ast.BaseNode{
																						Comments: nil,
																						Errors:   nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 115,
																								Line:   20,
																							},
																							File:   "oee.flux",
																							Source: "v: plannedTime",
																							Start: ast.Position{
																								Column: 101,
																								Line:   20,
																							},
																						},
																					},
																					Comma: nil,
																					Key: &ast.Identifier{
																						BaseNode: ast.BaseNode{
																							Comments: nil,
																							Errors:   nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 102,
																									Line:   20,
																								},
																								File:   "oee.flux",
																								Source: "v",
																								Start: ast.Position{
																									Column: 101,
																									Line:   20,
																								},
																							},
																						},
																						Name: "v",
																					},
																					Separator: nil,
																					Value: &ast.Identifier{
																						BaseNode: ast.BaseNode{
																							Comments: nil,
																							Errors:   nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 115,
																									Line:   20,
																								},
																								File:   "oee.flux",
																								Source: "plannedTime",
																								Start: ast.Position{
																									Column: 104,
																									Line:   20,
																								},
																							},
																						},
																						Name: "plannedTime",
																					},
																				}},
																				Rbrace: nil,
																				With:   nil,
																			}},
																			BaseNode: ast.BaseNode{
																				Comments: nil,
																				Errors:   nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 116,
																						Line:   20,
																					},
																					File:   "oee.flux",
																					Source: "int(v: plannedTime)",
																					Start: ast.Position{
																						Column: 97,
																						Line:   20,
																					},
																				},
																			},
																			Callee: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Comments: nil,
																					Errors:   nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 100,
																							Line:   20,
																						},
																						File:   "oee.flux",
																						Source: "int",
																						Start: ast.Position{
																							Column: 97,
																							Line:   20,
																						},
																					},
																				},
																				Name: "int",
																			},
																			Lparen: nil,
																			Rparen: nil,
																		},
																	}},
																	Rbrace: nil,
																	With:   nil,
																}},
																BaseNode: ast.BaseNode{
																	Comments: nil,
																	Errors:   nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 117,
																			Line:   20,
																		},
																		File:   "oee.flux",
																		Source: "float(v: int(v: plannedTime))",
																		Start: ast.Position{
																			Column: 88,
																			Line:   20,
																		},
																	},
																},
																Callee: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Comments: nil,
																		Errors:   nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 93,
																				Line:   20,
																			},
																			File:   "oee.flux",
																			Source: "float",
																			Start: ast.Position{
																				Column: 88,
																				Line:   20,
																			},
																		},
																	},
																	Name: "float",
																},
																Lparen: nil,
																Rparen: nil,
															},
														},
													}},
													Rbrace: nil,
													With: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Comments: nil,
															Errors:   nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 30,
																	Line:   20,
																},
																File:   "oee.flux",
																Source: "r",
																Start: ast.Position{
																	Column: 29,
																	Line:   20,
																},
															},
														},
														Name: "r",
													},
												},
												Lparen: nil,
												Rparen: nil,
											},
											Lparen: nil,
											Params: []*ast.Property{&ast.Property{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 22,
															Line:   20,
														},
														File:   "oee.flux",
														Source: "r",
														Start: ast.Position{
															Column: 21,
															Line:   20,
														},
													},
												},
												Comma: nil,
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 22,
																Line:   20,
															},
															File:   "oee.flux",
															Source: "r",
															Start: ast.Position{
																Column: 21,
																Line:   20,
															},
														},
													},
													Name: "r",
												},
												Separator: nil,
												Value:     nil,
											}},
											Rparan: nil,
										},
									}},
									Rbrace: nil,
									With:   nil,
								}},
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 120,
											Line:   20,
										},
										File:   "oee.flux",
										Source: "map(fn: (r) => ({r with _time: r._stop, availability: float(v: r.runTime) / float(v: int(v: plannedTime))}))",
										Start: ast.Position{
											Column: 12,
											Line:   20,
										},
									},
								},
								Callee: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 15,
												Line:   20,
											},
											File:   "oee.flux",
											Source: "map",
											Start: ast.Position{
												Column: 12,
												Line:   20,
											},
										},
									},
									Name: "map",
								},
								Lparen: nil,
								Rparen: nil,
							},
						},
					}, &ast.VariableAssignment{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 51,
									Line:   24,
								},
								File:   "oee.flux",
								Source: "totalCount = partEvents\n        |> difference(columns: [\"partCount\"], nonNegative: true)\n        |> sum(column: \"partCount\")\n        |> duplicate(column: \"_stop\", as: \"_time\")",
								Start: ast.Position{
									Column: 5,
									Line:   21,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 15,
										Line:   21,
									},
									File:   "oee.flux",
									Source: "totalCount",
									Start: ast.Position{
										Column: 5,
										Line:   21,
									},
								},
							},
							Name: "totalCount",
						},
						Init: &ast.PipeExpression{
							Argument: &ast.PipeExpression{
								Argument: &ast.PipeExpression{
									Argument: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 28,
													Line:   21,
												},
												File:   "oee.flux",
												Source: "partEvents",
												Start: ast.Position{
													Column: 18,
													Line:   21,
												},
											},
										},
										Name: "partEvents",
									},
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 65,
												Line:   22,
											},
											File:   "oee.flux",
											Source: "partEvents\n        |> difference(columns: [\"partCount\"], nonNegative: true)",
											Start: ast.Position{
												Column: 18,
												Line:   21,
											},
										},
									},
									Call: &ast.CallExpression{
										Arguments: []ast.Expression{&ast.ObjectExpression{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 64,
														Line:   22,
													},
													File:   "oee.flux",
													Source: "columns: [\"partCount\"], nonNegative: true",
													Start: ast.Position{
														Column: 23,
														Line:   22,
													},
												},
											},
											Lbrace: nil,
											Properties: []*ast.Property{&ast.Property{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 45,
															Line:   22,
														},
														File:   "oee.flux",
														Source: "columns: [\"partCount\"]",
														Start: ast.Position{
															Column: 23,
															Line:   22,
														},
													},
												},
												Comma: nil,
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 30,
																Line:   22,
															},
															File:   "oee.flux",
															Source: "columns",
															Start: ast.Position{
																Column: 23,
																Line:   22,
															},
														},
													},
													Name: "columns",
												},
												Separator: nil,
												Value: &ast.ArrayExpression{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 45,
																Line:   22,
															},
															File:   "oee.flux",
															Source: "[\"partCount\"]",
															Start: ast.Position{
																Column: 32,
																Line:   22,
															},
														},
													},
													Elements: []ast.Expression{&ast.StringLiteral{
														BaseNode: ast.BaseNode{
															Comments: nil,
															Errors:   nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 44,
																	Line:   22,
																},
																File:   "oee.flux",
																Source: "\"partCount\"",
																Start: ast.Position{
																	Column: 33,
																	Line:   22,
																},
															},
														},
														Value: "partCount",
													}},
													Lbrack: nil,
													Rbrack: nil,
												},
											}, &ast.Property{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 64,
															Line:   22,
														},
														File:   "oee.flux",
														Source: "nonNegative: true",
														Start: ast.Position{
															Column: 47,
															Line:   22,
														},
													},
												},
												Comma: nil,
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 58,
																Line:   22,
															},
															File:   "oee.flux",
															Source: "nonNegative",
															Start: ast.Position{
																Column: 47,
																Line:   22,
															},
														},
													},
													Name: "nonNegative",
												},
												Separator: nil,
												Value: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 64,
																Line:   22,
															},
															File:   "oee.flux",
															Source: "true",
															Start: ast.Position{
																Column: 60,
																Line:   22,
															},
														},
													},
													Name: "true",
												},
											}},
											Rbrace: nil,
											With:   nil,
										}},
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 65,
													Line:   22,
												},
												File:   "oee.flux",
												Source: "difference(columns: [\"partCount\"], nonNegative: true)",
												Start: ast.Position{
													Column: 12,
													Line:   22,
												},
											},
										},
										Callee: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 22,
														Line:   22,
													},
													File:   "oee.flux",
													Source: "difference",
													Start: ast.Position{
														Column: 12,
														Line:   22,
													},
												},
											},
											Name: "difference",
										},
										Lparen: nil,
										Rparen: nil,
									},
								},
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 36,
											Line:   23,
										},
										File:   "oee.flux",
										Source: "partEvents\n        |> difference(columns: [\"partCount\"], nonNegative: true)\n        |> sum(column: \"partCount\")",
										Start: ast.Position{
											Column: 18,
											Line:   21,
										},
									},
								},
								Call: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 35,
													Line:   23,
												},
												File:   "oee.flux",
												Source: "column: \"partCount\"",
												Start: ast.Position{
													Column: 16,
													Line:   23,
												},
											},
										},
										Lbrace: nil,
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 35,
														Line:   23,
													},
													File:   "oee.flux",
													Source: "column: \"partCount\"",
													Start: ast.Position{
														Column: 16,
														Line:   23,
													},
												},
											},
											Comma: nil,
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 22,
															Line:   23,
														},
														File:   "oee.flux",
														Source: "column",
														Start: ast.Position{
															Column: 16,
															Line:   23,
														},
													},
												},
												Name: "column",
											},
											Separator: nil,
											Value: &ast.StringLiteral{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 35,
															Line:   23,
														},
														File:   "oee.flux",
														Source: "\"partCount\"",
														Start: ast.Position{
															Column: 24,
															Line:   23,
														},
													},
												},
												Value: "partCount",
											},
										}},
										Rbrace: nil,
										With:   nil,
									}},
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 36,
												Line:   23,
											},
											File:   "oee.flux",
											Source: "sum(column: \"partCount\")",
											Start: ast.Position{
												Column: 12,
												Line:   23,
											},
										},
									},
									Callee: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 15,
													Line:   23,
												},
												File:   "oee.flux",
												Source: "sum",
												Start: ast.Position{
													Column: 12,
													Line:   23,
												},
											},
										},
										Name: "sum",
									},
									Lparen: nil,
									Rparen: nil,
								},
							},
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 51,
										Line:   24,
									},
									File:   "oee.flux",
									Source: "partEvents\n        |> difference(columns: [\"partCount\"], nonNegative: true)\n        |> sum(column: \"partCount\")\n        |> duplicate(column: \"_stop\", as: \"_time\")",
									Start: ast.Position{
										Column: 18,
										Line:   21,
									},
								},
							},
							Call: &ast.CallExpression{
								Arguments: []ast.Expression{&ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 50,
												Line:   24,
											},
											File:   "oee.flux",
											Source: "column: \"_stop\", as: \"_time\"",
											Start: ast.Position{
												Column: 22,
												Line:   24,
											},
										},
									},
									Lbrace: nil,
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 37,
													Line:   24,
												},
												File:   "oee.flux",
												Source: "column: \"_stop\"",
												Start: ast.Position{
													Column: 22,
													Line:   24,
												},
											},
										},
										Comma: nil,
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 28,
														Line:   24,
													},
													File:   "oee.flux",
													Source: "column",
													Start: ast.Position{
														Column: 22,
														Line:   24,
													},
												},
											},
											Name: "column",
										},
										Separator: nil,
										Value: &ast.StringLiteral{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 37,
														Line:   24,
													},
													File:   "oee.flux",
													Source: "\"_stop\"",
													Start: ast.Position{
														Column: 30,
														Line:   24,
													},
												},
											},
											Value: "_stop",
										},
									}, &ast.Property{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 50,
													Line:   24,
												},
												File:   "oee.flux",
												Source: "as: \"_time\"",
												Start: ast.Position{
													Column: 39,
													Line:   24,
												},
											},
										},
										Comma: nil,
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 41,
														Line:   24,
													},
													File:   "oee.flux",
													Source: "as",
													Start: ast.Position{
														Column: 39,
														Line:   24,
													},
												},
											},
											Name: "as",
										},
										Separator: nil,
										Value: &ast.StringLiteral{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 50,
														Line:   24,
													},
													File:   "oee.flux",
													Source: "\"_time\"",
													Start: ast.Position{
														Column: 43,
														Line:   24,
													},
												},
											},
											Value: "_time",
										},
									}},
									Rbrace: nil,
									With:   nil,
								}},
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 51,
											Line:   24,
										},
										File:   "oee.flux",
										Source: "duplicate(column: \"_stop\", as: \"_time\")",
										Start: ast.Position{
											Column: 12,
											Line:   24,
										},
									},
								},
								Callee: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 21,
												Line:   24,
											},
											File:   "oee.flux",
											Source: "duplicate",
											Start: ast.Position{
												Column: 12,
												Line:   24,
											},
										},
									},
									Name: "duplicate",
								},
								Lparen: nil,
								Rparen: nil,
							},
						},
					}, &ast.VariableAssignment{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 51,
									Line:   28,
								},
								File:   "oee.flux",
								Source: "badCount = partEvents\n        |> difference(columns: [\"badCount\"], nonNegative: true)\n        |> sum(column: \"badCount\")\n        |> duplicate(column: \"_stop\", as: \"_time\")",
								Start: ast.Position{
									Column: 5,
									Line:   25,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 13,
										Line:   25,
									},
									File:   "oee.flux",
									Source: "badCount",
									Start: ast.Position{
										Column: 5,
										Line:   25,
									},
								},
							},
							Name: "badCount",
						},
						Init: &ast.PipeExpression{
							Argument: &ast.PipeExpression{
								Argument: &ast.PipeExpression{
									Argument: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 26,
													Line:   25,
												},
												File:   "oee.flux",
												Source: "partEvents",
												Start: ast.Position{
													Column: 16,
													Line:   25,
												},
											},
										},
										Name: "partEvents",
									},
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 64,
												Line:   26,
											},
											File:   "oee.flux",
											Source: "partEvents\n        |> difference(columns: [\"badCount\"], nonNegative: true)",
											Start: ast.Position{
												Column: 16,
												Line:   25,
											},
										},
									},
									Call: &ast.CallExpression{
										Arguments: []ast.Expression{&ast.ObjectExpression{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 63,
														Line:   26,
													},
													File:   "oee.flux",
													Source: "columns: [\"badCount\"], nonNegative: true",
													Start: ast.Position{
														Column: 23,
														Line:   26,
													},
												},
											},
											Lbrace: nil,
											Properties: []*ast.Property{&ast.Property{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 44,
															Line:   26,
														},
														File:   "oee.flux",
														Source: "columns: [\"badCount\"]",
														Start: ast.Position{
															Column: 23,
															Line:   26,
														},
													},
												},
												Comma: nil,
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 30,
																Line:   26,
															},
															File:   "oee.flux",
															Source: "columns",
															Start: ast.Position{
																Column: 23,
																Line:   26,
															},
														},
													},
													Name: "columns",
												},
												Separator: nil,
												Value: &ast.ArrayExpression{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 44,
																Line:   26,
															},
															File:   "oee.flux",
															Source: "[\"badCount\"]",
															Start: ast.Position{
																Column: 32,
																Line:   26,
															},
														},
													},
													Elements: []ast.Expression{&ast.StringLiteral{
														BaseNode: ast.BaseNode{
															Comments: nil,
															Errors:   nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 43,
																	Line:   26,
																},
																File:   "oee.flux",
																Source: "\"badCount\"",
																Start: ast.Position{
																	Column: 33,
																	Line:   26,
																},
															},
														},
														Value: "badCount",
													}},
													Lbrack: nil,
													Rbrack: nil,
												},
											}, &ast.Property{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 63,
															Line:   26,
														},
														File:   "oee.flux",
														Source: "nonNegative: true",
														Start: ast.Position{
															Column: 46,
															Line:   26,
														},
													},
												},
												Comma: nil,
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 57,
																Line:   26,
															},
															File:   "oee.flux",
															Source: "nonNegative",
															Start: ast.Position{
																Column: 46,
																Line:   26,
															},
														},
													},
													Name: "nonNegative",
												},
												Separator: nil,
												Value: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 63,
																Line:   26,
															},
															File:   "oee.flux",
															Source: "true",
															Start: ast.Position{
																Column: 59,
																Line:   26,
															},
														},
													},
													Name: "true",
												},
											}},
											Rbrace: nil,
											With:   nil,
										}},
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 64,
													Line:   26,
												},
												File:   "oee.flux",
												Source: "difference(columns: [\"badCount\"], nonNegative: true)",
												Start: ast.Position{
													Column: 12,
													Line:   26,
												},
											},
										},
										Callee: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 22,
														Line:   26,
													},
													File:   "oee.flux",
													Source: "difference",
													Start: ast.Position{
														Column: 12,
														Line:   26,
													},
												},
											},
											Name: "difference",
										},
										Lparen: nil,
										Rparen: nil,
									},
								},
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 35,
											Line:   27,
										},
										File:   "oee.flux",
										Source: "partEvents\n        |> difference(columns: [\"badCount\"], nonNegative: true)\n        |> sum(column: \"badCount\")",
										Start: ast.Position{
											Column: 16,
											Line:   25,
										},
									},
								},
								Call: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 34,
													Line:   27,
												},
												File:   "oee.flux",
												Source: "column: \"badCount\"",
												Start: ast.Position{
													Column: 16,
													Line:   27,
												},
											},
										},
										Lbrace: nil,
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 34,
														Line:   27,
													},
													File:   "oee.flux",
													Source: "column: \"badCount\"",
													Start: ast.Position{
														Column: 16,
														Line:   27,
													},
												},
											},
											Comma: nil,
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 22,
															Line:   27,
														},
														File:   "oee.flux",
														Source: "column",
														Start: ast.Position{
															Column: 16,
															Line:   27,
														},
													},
												},
												Name: "column",
											},
											Separator: nil,
											Value: &ast.StringLiteral{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 34,
															Line:   27,
														},
														File:   "oee.flux",
														Source: "\"badCount\"",
														Start: ast.Position{
															Column: 24,
															Line:   27,
														},
													},
												},
												Value: "badCount",
											},
										}},
										Rbrace: nil,
										With:   nil,
									}},
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 35,
												Line:   27,
											},
											File:   "oee.flux",
											Source: "sum(column: \"badCount\")",
											Start: ast.Position{
												Column: 12,
												Line:   27,
											},
										},
									},
									Callee: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 15,
													Line:   27,
												},
												File:   "oee.flux",
												Source: "sum",
												Start: ast.Position{
													Column: 12,
													Line:   27,
												},
											},
										},
										Name: "sum",
									},
									Lparen: nil,
									Rparen: nil,
								},
							},
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 51,
										Line:   28,
									},
									File:   "oee.flux",
									Source: "partEvents\n        |> difference(columns: [\"badCount\"], nonNegative: true)\n        |> sum(column: \"badCount\")\n        |> duplicate(column: \"_stop\", as: \"_time\")",
									Start: ast.Position{
										Column: 16,
										Line:   25,
									},
								},
							},
							Call: &ast.CallExpression{
								Arguments: []ast.Expression{&ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 50,
												Line:   28,
											},
											File:   "oee.flux",
											Source: "column: \"_stop\", as: \"_time\"",
											Start: ast.Position{
												Column: 22,
												Line:   28,
											},
										},
									},
									Lbrace: nil,
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 37,
													Line:   28,
												},
												File:   "oee.flux",
												Source: "column: \"_stop\"",
												Start: ast.Position{
													Column: 22,
													Line:   28,
												},
											},
										},
										Comma: nil,
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 28,
														Line:   28,
													},
													File:   "oee.flux",
													Source: "column",
													Start: ast.Position{
														Column: 22,
														Line:   28,
													},
												},
											},
											Name: "column",
										},
										Separator: nil,
										Value: &ast.StringLiteral{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 37,
														Line:   28,
													},
													File:   "oee.flux",
													Source: "\"_stop\"",
													Start: ast.Position{
														Column: 30,
														Line:   28,
													},
												},
											},
											Value: "_stop",
										},
									}, &ast.Property{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 50,
													Line:   28,
												},
												File:   "oee.flux",
												Source: "as: \"_time\"",
												Start: ast.Position{
													Column: 39,
													Line:   28,
												},
											},
										},
										Comma: nil,
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 41,
														Line:   28,
													},
													File:   "oee.flux",
													Source: "as",
													Start: ast.Position{
														Column: 39,
														Line:   28,
													},
												},
											},
											Name: "as",
										},
										Separator: nil,
										Value: &ast.StringLiteral{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 50,
														Line:   28,
													},
													File:   "oee.flux",
													Source: "\"_time\"",
													Start: ast.Position{
														Column: 43,
														Line:   28,
													},
												},
											},
											Value: "_time",
										},
									}},
									Rbrace: nil,
									With:   nil,
								}},
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 51,
											Line:   28,
										},
										File:   "oee.flux",
										Source: "duplicate(column: \"_stop\", as: \"_time\")",
										Start: ast.Position{
											Column: 12,
											Line:   28,
										},
									},
								},
								Callee: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 21,
												Line:   28,
											},
											File:   "oee.flux",
											Source: "duplicate",
											Start: ast.Position{
												Column: 12,
												Line:   28,
											},
										},
									},
									Name: "duplicate",
								},
								Lparen: nil,
								Rparen: nil,
							},
						},
					}, &ast.VariableAssignment{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 6,
									Line:   35,
								},
								File:   "oee.flux",
								Source: "performance = experimental.join(\n        left: availability,\n        right: totalCount,\n        fn: (left, right) => ({left with\n            performance: float(v: right.partCount) * float(v: int(v: idealCycleTime)) / float(v: left.runTime),\n        }),\n    )",
								Start: ast.Position{
									Column: 5,
									Line:   29,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 16,
										Line:   29,
									},
									File:   "oee.flux",
									Source: "performance",
									Start: ast.Position{
										Column: 5,
										Line:   29,
									},
								},
							},
							Name: "performance",
						},
						Init: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 11,
											Line:   34,
										},
										File:   "oee.flux",
										Source: "left: availability,\n        right: totalCount,\n        fn: (left, right) => ({left with\n            performance: float(v: right.partCount) * float(v: int(v: idealCycleTime)) / float(v: left.runTime),\n        })",
										Start: ast.Position{
											Column: 9,
											Line:   30,
										},
									},
								},
								Lbrace: nil,
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 27,
												Line:   30,
											},
											File:   "oee.flux",
											Source: "left: availability",
											Start: ast.Position{
												Column: 9,
												Line:   30,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 13,
													Line:   30,
												},
												File:   "oee.flux",
												Source: "left",
												Start: ast.Position{
													Column: 9,
													Line:   30,
												},
											},
										},
										Name: "left",
									},
									Separator: nil,
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 27,
													Line:   30,
												},
												File:   "oee.flux",
												Source: "availability",
												Start: ast.Position{
													Column: 15,
													Line:   30,
												},
											},
										},
										Name: "availability",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 26,
												Line:   31,
											},
											File:   "oee.flux",
											Source: "right: totalCount",
											Start: ast.Position{
												Column: 9,
												Line:   31,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 14,
													Line:   31,
												},
												File:   "oee.flux",
												Source: "right",
												Start: ast.Position{
													Column: 9,
													Line:   31,
												},
											},
										},
										Name: "right",
									},
									Separator: nil,
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 26,
													Line:   31,
												},
												File:   "oee.flux",
												Source: "totalCount",
												Start: ast.Position{
													Column: 16,
													Line:   31,
												},
											},
										},
										Name: "totalCount",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 11,
												Line:   34,
											},
											File:   "oee.flux",
											Source: "fn: (left, right) => ({left with\n            performance: float(v: right.partCount) * float(v: int(v: idealCycleTime)) / float(v: left.runTime),\n        })",
											Start: ast.Position{
												Column: 9,
												Line:   32,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 11,
													Line:   32,
												},
												File:   "oee.flux",
												Source: "fn",
												Start: ast.Position{
													Column: 9,
													Line:   32,
												},
											},
										},
										Name: "fn",
									},
									Separator: nil,
									Value: &ast.FunctionExpression{
										Arrow: nil,
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 11,
													Line:   34,
												},
												File:   "oee.flux",
												Source: "(left, right) => ({left with\n            performance: float(v: right.partCount) * float(v: int(v: idealCycleTime)) / float(v: left.runTime),\n        })",
												Start: ast.Position{
													Column: 13,
													Line:   32,
												},
											},
										},
										Body: &ast.ParenExpression{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 11,
														Line:   34,
													},
													File:   "oee.flux",
													Source: "({left with\n            performance: float(v: right.partCount) * float(v: int(v: idealCycleTime)) / float(v: left.runTime),\n        })",
													Start: ast.Position{
														Column: 30,
														Line:   32,
													},
												},
											},
											Expression: &ast.ObjectExpression{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 10,
															Line:   34,
														},
														File:   "oee.flux",
														Source: "{left with\n            performance: float(v: right.partCount) * float(v: int(v: idealCycleTime)) / float(v: left.runTime),\n        }",
														Start: ast.Position{
															Column: 31,
															Line:   32,
														},
													},
												},
												Lbrace: nil,
												Properties: []*ast.Property{&ast.Property{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 111,
																Line:   33,
															},
															File:   "oee.flux",
															Source: "performance: float(v: right.partCount) * float(v: int(v: idealCycleTime)) / float(v: left.runTime)",
															Start: ast.Position{
																Column: 13,
																Line:   33,
															},
														},
													},
													Comma: nil,
													Key: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Comments: nil,
															Errors:   nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 24,
																	Line:   33,
																},
																File:   "oee.flux",
																Source: "performance",
																Start: ast.Position{
																	Column: 13,
																	Line:   33,
																},
															},
														},
														Name: "performance",
													},
													Separator: nil,
													Value: &ast.BinaryExpression{
														BaseNode: ast.BaseNode{
															Comments: nil,
															Errors:   nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 111,
																	Line:   33,
																},
																File:   "oee.flux",
																Source: "float(v: right.partCount) * float(v: int(v: idealCycleTime)) / float(v: left.runTime)",
																Start: ast.Position{
																	Column: 26,
																	Line:   33,
																},
															},
														},
														Left: &ast.BinaryExpression{
															BaseNode: ast.BaseNode{
																Comments: nil,
																Errors:   nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 86,
																		Line:   33,
																	},
																	File:   "oee.flux",
																	Source: "float(v: right.partCount) * float(v: int(v: idealCycleTime))",
																	Start: ast.Position{
																		Column: 26,
																		Line:   33,
																	},
																},
															},
															Left: &ast.CallExpression{
																Arguments: []ast.Expression{&ast.ObjectExpression{
																	BaseNode: ast.BaseNode{
																		Comments: nil,
																		Errors:   nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 50,
																				Line:   33,
																			},
																			File:   "oee.flux",
																			Source: "v: right.partCount",
																			Start: ast.Position{
																				Column: 32,
																				Line:   33,
																			},
																		},
																	},
																	Lbrace: nil,
																	Properties: []*ast.Property{&ast.Property{
																		BaseNode: ast.BaseNode{
																			Comments: nil,
																			Errors:   nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 50,
																					Line:   33,
																				},
																				File:   "oee.flux",
																				Source: "v: right.partCount",
																				Start: ast.Position{
																					Column: 32,
																					Line:   33,
																				},
																			},
																		},
																		Comma: nil,
																		Key: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Comments: nil,
																				Errors:   nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 33,
																						Line:   33,
																					},
																					File:   "oee.flux",
																					Source: "v",
																					Start: ast.Position{
																						Column: 32,
																						Line:   33,
																					},
																				},
																			},
																			Name: "v",
																		},
																		Separator: nil,
																		Value: &ast.MemberExpression{
																			BaseNode: ast.BaseNode{
																				Comments: nil,
																				Errors:   nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 50,
																						Line:   33,
																					},
																					File:   "oee.flux",
																					Source: "right.partCount",
																					Start: ast.Position{
																						Column: 35,
																						Line:   33,
																					},
																				},
																			},
																			Lbrack: nil,
																			Object: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Comments: nil,
																					Errors:   nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 40,
																							Line:   33,
																						},
																						File:   "oee.flux",
																						Source: "right",
																						Start: ast.Position{
																							Column: 35,
																							Line:   33,
																						},
																					},
																				},
																				Name: "right",
																			},
																			Property: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Comments: nil,
																					Errors:   nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 50,
																							Line:   33,
																						},
																						File:   "oee.flux",
																						Source: "partCount",
																						Start: ast.Position{
																							Column: 41,
																							Line:   33,
																						},
																					},
																				},
																				Name: "partCount",
																			},
																			Rbrack: nil,
																		},
																	}},
																	Rbrace: nil,
																	With:   nil,
																}},
																BaseNode: ast.BaseNode{
																	Comments: nil,
																	Errors:   nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 51,
																			Line:   33,
																		},
																		File:   "oee.flux",
																		Source: "float(v: right.partCount)",
																		Start: ast.Position{
																			Column: 26,
																			Line:   33,
																		},
																	},
																},
																Callee: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Comments: nil,
																		Errors:   nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 31,
																				Line:   33,
																			},
																			File:   "oee.flux",
																			Source: "float",
																			Start: ast.Position{
																				Column: 26,
																				Line:   33,
																			},
																		},
																	},
																	Name: "float",
																},
																Lparen: nil,
																Rparen: nil,
															},
															Operator: 1,
															Right: &ast.CallExpression{
																Arguments: []ast.Expression{&ast.ObjectExpression{
																	BaseNode: ast.BaseNode{
																		Comments: nil,
																		Errors:   nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 85,
																				Line:   33,
																			},
																			File:   "oee.flux",
																			Source: "v: int(v: idealCycleTime)",
																			Start: ast.Position{
																				Column: 60,
																				Line:   33,
																			},
																		},
																	},
																	Lbrace: nil,
																	Properties: []*ast.Property{&ast.Property{
																		BaseNode: ast.BaseNode{
																			Comments: nil,
																			Errors:   nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 85,
																					Line:   33,
																				},
																				File:   "oee.flux",
																				Source: "v: int(v: idealCycleTime)",
																				Start: ast.Position{
																					Column: 60,
																					Line:   33,
																				},
																			},
																		},
																		Comma: nil,
																		Key: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Comments: nil,
																				Errors:   nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 61,
																						Line:   33,
																					},
																					File:   "oee.flux",
																					Source: "v",
																					Start: ast.Position{
																						Column: 60,
																						Line:   33,
																					},
																				},
																			},
																			Name: "v",
																		},
																		Separator: nil,
																		Value: &ast.CallExpression{
																			Arguments: []ast.Expression{&ast.ObjectExpression{
																				BaseNode: ast.BaseNode{
																					Comments: nil,
																					Errors:   nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 84,
																							Line:   33,
																						},
																						File:   "oee.flux",
																						Source: "v: idealCycleTime",
																						Start: ast.Position{
																							Column: 67,
																							Line:   33,
																						},
																					},
																				},
																				Lbrace: nil,
																				Properties: []*ast.Property{&ast.Property{
																					BaseNode: ast.BaseNode{
																						Comments: nil,
																						Errors:   nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 84,
																								Line:   33,
																							},
																							File:   "oee.flux",
																							Source: "v: idealCycleTime",
																							Start: ast.Position{
																								Column: 67,
																								Line:   33,
																							},
																						},
																					},
																					Comma: nil,
																					Key: &ast.Identifier{
																						BaseNode: ast.BaseNode{
																							Comments: nil,
																							Errors:   nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 68,
																									Line:   33,
																								},
																								File:   "oee.flux",
																								Source: "v",
																								Start: ast.Position{
																									Column: 67,
																									Line:   33,
																								},
																							},
																						},
																						Name: "v",
																					},
																					Separator: nil,
																					Value: &ast.Identifier{
																						BaseNode: ast.BaseNode{
																							Comments: nil,
																							Errors:   nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 84,
																									Line:   33,
																								},
																								File:   "oee.flux",
																								Source: "idealCycleTime",
																								Start: ast.Position{
																									Column: 70,
																									Line:   33,
																								},
																							},
																						},
																						Name: "idealCycleTime",
																					},
																				}},
																				Rbrace: nil,
																				With:   nil,
																			}},
																			BaseNode: ast.BaseNode{
																				Comments: nil,
																				Errors:   nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 85,
																						Line:   33,
																					},
																					File:   "oee.flux",
																					Source: "int(v: idealCycleTime)",
																					Start: ast.Position{
																						Column: 63,
																						Line:   33,
																					},
																				},
																			},
																			Callee: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Comments: nil,
																					Errors:   nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 66,
																							Line:   33,
																						},
																						File:   "oee.flux",
																						Source: "int",
																						Start: ast.Position{
																							Column: 63,
																							Line:   33,
																						},
																					},
																				},
																				Name: "int",
																			},
																			Lparen: nil,
																			Rparen: nil,
																		},
																	}},
																	Rbrace: nil,
																	With:   nil,
																}},
																BaseNode: ast.BaseNode{
																	Comments: nil,
																	Errors:   nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 86,
																			Line:   33,
																		},
																		File:   "oee.flux",
																		Source: "float(v: int(v: idealCycleTime))",
																		Start: ast.Position{
																			Column: 54,
																			Line:   33,
																		},
																	},
																},
																Callee: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Comments: nil,
																		Errors:   nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 59,
																				Line:   33,
																			},
																			File:   "oee.flux",
																			Source: "float",
																			Start: ast.Position{
																				Column: 54,
																				Line:   33,
																			},
																		},
																	},
																	Name: "float",
																},
																Lparen: nil,
																Rparen: nil,
															},
														},
														Operator: 2,
														Right: &ast.CallExpression{
															Arguments: []ast.Expression{&ast.ObjectExpression{
																BaseNode: ast.BaseNode{
																	Comments: nil,
																	Errors:   nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 110,
																			Line:   33,
																		},
																		File:   "oee.flux",
																		Source: "v: left.runTime",
																		Start: ast.Position{
																			Column: 95,
																			Line:   33,
																		},
																	},
																},
																Lbrace: nil,
																Properties: []*ast.Property{&ast.Property{
																	BaseNode: ast.BaseNode{
																		Comments: nil,
																		Errors:   nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 110,
																				Line:   33,
																			},
																			File:   "oee.flux",
																			Source: "v: left.runTime",
																			Start: ast.Position{
																				Column: 95,
																				Line:   33,
																			},
																		},
																	},
																	Comma: nil,
																	Key: &ast.Identifier{
																		BaseNode: ast.BaseNode{
																			Comments: nil,
																			Errors:   nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 96,
																					Line:   33,
																				},
																				File:   "oee.flux",
																				Source: "v",
																				Start: ast.Position{
																					Column: 95,
																					Line:   33,
																				},
																			},
																		},
																		Name: "v",
																	},
																	Separator: nil,
																	Value: &ast.MemberExpression{
																		BaseNode: ast.BaseNode{
																			Comments: nil,
																			Errors:   nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 110,
																					Line:   33,
																				},
																				File:   "oee.flux",
																				Source: "left.runTime",
																				Start: ast.Position{
																					Column: 98,
																					Line:   33,
																				},
																			},
																		},
																		Lbrack: nil,
																		Object: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Comments: nil,
																				Errors:   nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 102,
																						Line:   33,
																					},
																					File:   "oee.flux",
																					Source: "left",
																					Start: ast.Position{
																						Column: 98,
																						Line:   33,
																					},
																				},
																			},
																			Name: "left",
																		},
																		Property: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Comments: nil,
																				Errors:   nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 110,
																						Line:   33,
																					},
																					File:   "oee.flux",
																					Source: "runTime",
																					Start: ast.Position{
																						Column: 103,
																						Line:   33,
																					},
																				},
																			},
																			Name: "runTime",
																		},
																		Rbrack: nil,
																	},
																}},
																Rbrace: nil,
																With:   nil,
															}},
															BaseNode: ast.BaseNode{
																Comments: nil,
																Errors:   nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 111,
																		Line:   33,
																	},
																	File:   "oee.flux",
																	Source: "float(v: left.runTime)",
																	Start: ast.Position{
																		Column: 89,
																		Line:   33,
																	},
																},
															},
															Callee: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Comments: nil,
																	Errors:   nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 94,
																			Line:   33,
																		},
																		File:   "oee.flux",
																		Source: "float",
																		Start: ast.Position{
																			Column: 89,
																			Line:   33,
																		},
																	},
																},
																Name: "float",
															},
															Lparen: nil,
															Rparen: nil,
														},
													},
												}},
												Rbrace: nil,
												With: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 36,
																Line:   32,
															},
															File:   "oee.flux",
															Source: "left",
															Start: ast.Position{
																Column: 32,
																Line:   32,
															},
														},
													},
													Name: "left",
												},
											},
											Lparen: nil,
											Rparen: nil,
										},
										Lparen: nil,
										Params: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   32,
													},
													File:   "oee.flux",
													Source: "left",
													Start: ast.Position{
														Column: 14,
														Line:   32,
													},
												},
											},
											Comma: nil,
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 18,
															Line:   32,
														},
														File:   "oee.flux",
														Source: "left",
														Start: ast.Position{
															Column: 14,
															Line:   32,
														},
													},
												},
												Name: "left",
											},
											Separator: nil,
											Value:     nil,
										}, &ast.Property{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 25,
														Line:   32,
													},
													File:   "oee.flux",
													Source: "right",
													Start: ast.Position{
														Column: 20,
														Line:   32,
													},
												},
											},
											Comma: nil,
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 25,
															Line:   32,
														},
														File:   "oee.flux",
														Source: "right",
														Start: ast.Position{
															Column: 20,
															Line:   32,
														},
													},
												},
												Name: "right",
											},
											Separator: nil,
											Value:     nil,
										}},
										Rparan: nil,
									},
								}},
								Rbrace: nil,
								With:   nil,
							}},
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 6,
										Line:   35,
									},
									File:   "oee.flux",
									Source: "experimental.join(\n        left: availability,\n        right: totalCount,\n        fn: (left, right) => ({left with\n            performance: float(v: right.partCount) * float(v: int(v: idealCycleTime)) / float(v: left.runTime),\n        }),\n    )",
									Start: ast.Position{
										Column: 19,
										Line:   29,
									},
								},
							},
							Callee: &ast.MemberExpression{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 36,
											Line:   29,
										},
										File:   "oee.flux",
										Source: "experimental.join",
										Start: ast.Position{
											Column: 19,
											Line:   29,
										},
									},
								},
								Lbrack: nil,
								Object: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 31,
												Line:   29,
											},
											File:   "oee.flux",
											Source: "experimental",
											Start: ast.Position{
												Column: 19,
												Line:   29,
											},
										},
									},
									Name: "experimental",
								},
								Property: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 36,
												Line:   29,
											},
											File:   "oee.flux",
											Source: "join",
											Start: ast.Position{
												Column: 32,
												Line:   29,
											},
										},
									},
									Name: "join",
								},
								Rbrack: nil,
							},
							Lparen: nil,
							Rparen: nil,
						},
					}, &ast.VariableAssignment{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 6,
									Line:   42,
								},
								File:   "oee.flux",
								Source: "quality = experimental.join(\n        left: badCount,\n        right: totalCount,\n        fn: (left, right) => ({left with\n            quality: (float(v: right.partCount) - float(v: left.badCount)) / float(v: right.partCount),\n        }),\n    )",
								Start: ast.Position{
									Column: 5,
									Line:   36,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 12,
										Line:   36,
									},
									File:   "oee.flux",
									Source: "quality",
									Start: ast.Position{
										Column: 5,
										Line:   36,
									},
								},
							},
							Name: "quality",
						},
						Init: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 11,
											Line:   41,
										},
										File:   "oee.flux",
										Source: "left: badCount,\n        right: totalCount,\n        fn: (left, right) => ({left with\n            quality: (float(v: right.partCount) - float(v: left.badCount)) / float(v: right.partCount),\n        })",
										Start: ast.Position{
											Column: 9,
											Line:   37,
										},
									},
								},
								Lbrace: nil,
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 23,
												Line:   37,
											},
											File:   "oee.flux",
											Source: "left: badCount",
											Start: ast.Position{
												Column: 9,
												Line:   37,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 13,
													Line:   37,
												},
												File:   "oee.flux",
												Source: "left",
												Start: ast.Position{
													Column: 9,
													Line:   37,
												},
											},
										},
										Name: "left",
									},
									Separator: nil,
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 23,
													Line:   37,
												},
												File:   "oee.flux",
												Source: "badCount",
												Start: ast.Position{
													Column: 15,
													Line:   37,
												},
											},
										},
										Name: "badCount",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 26,
												Line:   38,
											},
											File:   "oee.flux",
											Source: "right: totalCount",
											Start: ast.Position{
												Column: 9,
												Line:   38,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 14,
													Line:   38,
												},
												File:   "oee.flux",
												Source: "right",
												Start: ast.Position{
													Column: 9,
													Line:   38,
												},
											},
										},
										Name: "right",
									},
									Separator: nil,
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 26,
													Line:   38,
												},
												File:   "oee.flux",
												Source: "totalCount",
												Start: ast.Position{
													Column: 16,
													Line:   38,
												},
											},
										},
										Name: "totalCount",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 11,
												Line:   41,
											},
											File:   "oee.flux",
											Source: "fn: (left, right) => ({left with\n            quality: (float(v: right.partCount) - float(v: left.badCount)) / float(v: right.partCount),\n        })",
											Start: ast.Position{
												Column: 9,
												Line:   39,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 11,
													Line:   39,
												},
												File:   "oee.flux",
												Source: "fn",
												Start: ast.Position{
													Column: 9,
													Line:   39,
												},
											},
										},
										Name: "fn",
									},
									Separator: nil,
									Value: &ast.FunctionExpression{
										Arrow: nil,
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 11,
													Line:   41,
												},
												File:   "oee.flux",
												Source: "(left, right) => ({left with\n            quality: (float(v: right.partCount) - float(v: left.badCount)) / float(v: right.partCount),\n        })",
												Start: ast.Position{
													Column: 13,
													Line:   39,
												},
											},
										},
										Body: &ast.ParenExpression{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 11,
														Line:   41,
													},
													File:   "oee.flux",
													Source: "({left with\n            quality: (float(v: right.partCount) - float(v: left.badCount)) / float(v: right.partCount),\n        })",
													Start: ast.Position{
														Column: 30,
														Line:   39,
													},
												},
											},
											Expression: &ast.ObjectExpression{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 10,
															Line:   41,
														},
														File:   "oee.flux",
														Source: "{left with\n            quality: (float(v: right.partCount) - float(v: left.badCount)) / float(v: right.partCount),\n        }",
														Start: ast.Position{
															Column: 31,
															Line:   39,
														},
													},
												},
												Lbrace: nil,
												Properties: []*ast.Property{&ast.Property{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 103,
																Line:   40,
															},
															File:   "oee.flux",
															Source: "quality: (float(v: right.partCount) - float(v: left.badCount)) / float(v: right.partCount)",
															Start: ast.Position{
																Column: 13,
																Line:   40,
															},
														},
													},
													Comma: nil,
													Key: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Comments: nil,
															Errors:   nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 20,
																	Line:   40,
																},
																File:   "oee.flux",
																Source: "quality",
																Start: ast.Position{
																	Column: 13,
																	Line:   40,
																},
															},
														},
														Name: "quality",
													},
													Separator: nil,
													Value: &ast.BinaryExpression{
														BaseNode: ast.BaseNode{
															Comments: nil,
															Errors:   nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 103,
																	Line:   40,
																},
																File:   "oee.flux",
																Source: "(float(v: right.partCount) - float(v: left.badCount)) / float(v: right.partCount)",
																Start: ast.Position{
																	Column: 22,
																	Line:   40,
																},
															},
														},
														Left: &ast.ParenExpression{
															BaseNode: ast.BaseNode{
																Comments: nil,
																Errors:   nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 75,
																		Line:   40,
																	},
																	File:   "oee.flux",
																	Source: "(float(v: right.partCount) - float(v: left.badCount))",
																	Start: ast.Position{
																		Column: 22,
																		Line:   40,
																	},
																},
															},
															Expression: &ast.BinaryExpression{
																BaseNode: ast.BaseNode{
																	Comments: nil,
																	Errors:   nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 74,
																			Line:   40,
																		},
																		File:   "oee.flux",
																		Source: "float(v: right.partCount) - float(v: left.badCount)",
																		Start: ast.Position{
																			Column: 23,
																			Line:   40,
																		},
																	},
																},
																Left: &ast.CallExpression{
																	Arguments: []ast.Expression{&ast.ObjectExpression{
																		BaseNode: ast.BaseNode{
																			Comments: nil,
																			Errors:   nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 47,
																					Line:   40,
																				},
																				File:   "oee.flux",
																				Source: "v: right.partCount",
																				Start: ast.Position{
																					Column: 29,
																					Line:   40,
																				},
																			},
																		},
																		Lbrace: nil,
																		Properties: []*ast.Property{&ast.Property{
																			BaseNode: ast.BaseNode{
																				Comments: nil,
																				Errors:   nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 47,
																						Line:   40,
																					},
																					File:   "oee.flux",
																					Source: "v: right.partCount",
																					Start: ast.Position{
																						Column: 29,
																						Line:   40,
																					},
																				},
																			},
																			Comma: nil,
																			Key: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Comments: nil,
																					Errors:   nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 30,
																							Line:   40,
																						},
																						File:   "oee.flux",
																						Source: "v",
																						Start: ast.Position{
																							Column: 29,
																							Line:   40,
																						},
																					},
																				},
																				Name: "v",
																			},
																			Separator: nil,
																			Value: &ast.MemberExpression{
																				BaseNode: ast.BaseNode{
																					Comments: nil,
																					Errors:   nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 47,
																							Line:   40,
																						},
																						File:   "oee.flux",
																						Source: "right.partCount",
																						Start: ast.Position{
																							Column: 32,
																							Line:   40,
																						},
																					},
																				},
																				Lbrack: nil,
																				Object: &ast.Identifier{
																					BaseNode: ast.BaseNode{
																						Comments: nil,
																						Errors:   nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 37,
																								Line:   40,
																							},
																							File:   "oee.flux",
																							Source: "right",
																							Start: ast.Position{
																								Column: 32,
																								Line:   40,
																							},
																						},
																					},
																					Name: "right",
																				},
																				Property: &ast.Identifier{
																					BaseNode: ast.BaseNode{
																						Comments: nil,
																						Errors:   nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 47,
																								Line:   40,
																							},
																							File:   "oee.flux",
																							Source: "partCount",
																							Start: ast.Position{
																								Column: 38,
																								Line:   40,
																							},
																						},
																					},
																					Name: "partCount",
																				},
																				Rbrack: nil,
																			},
																		}},
																		Rbrace: nil,
																		With:   nil,
																	}},
																	BaseNode: ast.BaseNode{
																		Comments: nil,
																		Errors:   nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 48,
																				Line:   40,
																			},
																			File:   "oee.flux",
																			Source: "float(v: right.partCount)",
																			Start: ast.Position{
																				Column: 23,
																				Line:   40,
																			},
																		},
																	},
																	Callee: &ast.Identifier{
																		BaseNode: ast.BaseNode{
																			Comments: nil,
																			Errors:   nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 28,
																					Line:   40,
																				},
																				File:   "oee.flux",
																				Source: "float",
																				Start: ast.Position{
																					Column: 23,
																					Line:   40,
																				},
																			},
																		},
																		Name: "float",
																	},
																	Lparen: nil,
																	Rparen: nil,
																},
																Operator: 6,
																Right: &ast.CallExpression{
																	Arguments: []ast.Expression{&ast.ObjectExpression{
																		BaseNode: ast.BaseNode{
																			Comments: nil,
																			Errors:   nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 73,
																					Line:   40,
																				},
																				File:   "oee.flux",
																				Source: "v: left.badCount",
																				Start: ast.Position{
																					Column: 57,
																					Line:   40,
																				},
																			},
																		},
																		Lbrace: nil,
																		Properties: []*ast.Property{&ast.Property{
																			BaseNode: ast.BaseNode{
																				Comments: nil,
																				Errors:   nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 73,
																						Line:   40,
																					},
																					File:   "oee.flux",
																					Source: "v: left.badCount",
																					Start: ast.Position{
																						Column: 57,
																						Line:   40,
																					},
																				},
																			},
																			Comma: nil,
																			Key: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Comments: nil,
																					Errors:   nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 58,
																							Line:   40,
																						},
																						File:   "oee.flux",
																						Source: "v",
																						Start: ast.Position{
																							Column: 57,
																							Line:   40,
																						},
																					},
																				},
																				Name: "v",
																			},
																			Separator: nil,
																			Value: &ast.MemberExpression{
																				BaseNode: ast.BaseNode{
																					Comments: nil,
																					Errors:   nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 73,
																							Line:   40,
																						},
																						File:   "oee.flux",
																						Source: "left.badCount",
																						Start: ast.Position{
																							Column: 60,
																							Line:   40,
																						},
																					},
																				},
																				Lbrack: nil,
																				Object: &ast.Identifier{
																					BaseNode: ast.BaseNode{
																						Comments: nil,
																						Errors:   nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 64,
																								Line:   40,
																							},
																							File:   "oee.flux",
																							Source: "left",
																							Start: ast.Position{
																								Column: 60,
																								Line:   40,
																							},
																						},
																					},
																					Name: "left",
																				},
																				Property: &ast.Identifier{
																					BaseNode: ast.BaseNode{
																						Comments: nil,
																						Errors:   nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 73,
																								Line:   40,
																							},
																							File:   "oee.flux",
																							Source: "badCount",
																							Start: ast.Position{
																								Column: 65,
																								Line:   40,
																							},
																						},
																					},
																					Name: "badCount",
																				},
																				Rbrack: nil,
																			},
																		}},
																		Rbrace: nil,
																		With:   nil,
																	}},
																	BaseNode: ast.BaseNode{
																		Comments: nil,
																		Errors:   nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 74,
																				Line:   40,
																			},
																			File:   "oee.flux",
																			Source: "float(v: left.badCount)",
																			Start: ast.Position{
																				Column: 51,
																				Line:   40,
																			},
																		},
																	},
																	Callee: &ast.Identifier{
																		BaseNode: ast.BaseNode{
																			Comments: nil,
																			Errors:   nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 56,
																					Line:   40,
																				},
																				File:   "oee.flux",
																				Source: "float",
																				Start: ast.Position{
																					Column: 51,
																					Line:   40,
																				},
																			},
																		},
																		Name: "float",
																	},
																	Lparen: nil,
																	Rparen: nil,
																},
															},
															Lparen: nil,
															Rparen: nil,
														},
														Operator: 2,
														Right: &ast.CallExpression{
															Arguments: []ast.Expression{&ast.ObjectExpression{
																BaseNode: ast.BaseNode{
																	Comments: nil,
																	Errors:   nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 102,
																			Line:   40,
																		},
																		File:   "oee.flux",
																		Source: "v: right.partCount",
																		Start: ast.Position{
																			Column: 84,
																			Line:   40,
																		},
																	},
																},
																Lbrace: nil,
																Properties: []*ast.Property{&ast.Property{
																	BaseNode: ast.BaseNode{
																		Comments: nil,
																		Errors:   nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 102,
																				Line:   40,
																			},
																			File:   "oee.flux",
																			Source: "v: right.partCount",
																			Start: ast.Position{
																				Column: 84,
																				Line:   40,
																			},
																		},
																	},
																	Comma: nil,
																	Key: &ast.Identifier{
																		BaseNode: ast.BaseNode{
																			Comments: nil,
																			Errors:   nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 85,
																					Line:   40,
																				},
																				File:   "oee.flux",
																				Source: "v",
																				Start: ast.Position{
																					Column: 84,
																					Line:   40,
																				},
																			},
																		},
																		Name: "v",
																	},
																	Separator: nil,
																	Value: &ast.MemberExpression{
																		BaseNode: ast.BaseNode{
																			Comments: nil,
																			Errors:   nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 102,
																					Line:   40,
																				},
																				File:   "oee.flux",
																				Source: "right.partCount",
																				Start: ast.Position{
																					Column: 87,
																					Line:   40,
																				},
																			},
																		},
																		Lbrack: nil,
																		Object: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Comments: nil,
																				Errors:   nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 92,
																						Line:   40,
																					},
																					File:   "oee.flux",
																					Source: "right",
																					Start: ast.Position{
																						Column: 87,
																						Line:   40,
																					},
																				},
																			},
																			Name: "right",
																		},
																		Property: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Comments: nil,
																				Errors:   nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 102,
																						Line:   40,
																					},
																					File:   "oee.flux",
																					Source: "partCount",
																					Start: ast.Position{
																						Column: 93,
																						Line:   40,
																					},
																				},
																			},
																			Name: "partCount",
																		},
																		Rbrack: nil,
																	},
																}},
																Rbrace: nil,
																With:   nil,
															}},
															BaseNode: ast.BaseNode{
																Comments: nil,
																Errors:   nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 103,
																		Line:   40,
																	},
																	File:   "oee.flux",
																	Source: "float(v: right.partCount)",
																	Start: ast.Position{
																		Column: 78,
																		Line:   40,
																	},
																},
															},
															Callee: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Comments: nil,
																	Errors:   nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 83,
																			Line:   40,
																		},
																		File:   "oee.flux",
																		Source: "float",
																		Start: ast.Position{
																			Column: 78,
																			Line:   40,
																		},
																	},
																},
																Name: "float",
															},
															Lparen: nil,
															Rparen: nil,
														},
													},
												}},
												Rbrace: nil,
												With: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 36,
																Line:   39,
															},
															File:   "oee.flux",
															Source: "left",
															Start: ast.Position{
																Column: 32,
																Line:   39,
															},
														},
													},
													Name: "left",
												},
											},
											Lparen: nil,
											Rparen: nil,
										},
										Lparen: nil,
										Params: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   39,
													},
													File:   "oee.flux",
													Source: "left",
													Start: ast.Position{
														Column: 14,
														Line:   39,
													},
												},
											},
											Comma: nil,
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 18,
															Line:   39,
														},
														File:   "oee.flux",
														Source: "left",
														Start: ast.Position{
															Column: 14,
															Line:   39,
														},
													},
												},
												Name: "left",
											},
											Separator: nil,
											Value:     nil,
										}, &ast.Property{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 25,
														Line:   39,
													},
													File:   "oee.flux",
													Source: "right",
													Start: ast.Position{
														Column: 20,
														Line:   39,
													},
												},
											},
											Comma: nil,
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 25,
															Line:   39,
														},
														File:   "oee.flux",
														Source: "right",
														Start: ast.Position{
															Column: 20,
															Line:   39,
														},
													},
												},
												Name: "right",
											},
											Separator: nil,
											Value:     nil,
										}},
										Rparan: nil,
									},
								}},
								Rbrace: nil,
								With:   nil,
							}},
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 6,
										Line:   42,
									},
									File:   "oee.flux",
									Source: "experimental.join(\n        left: badCount,\n        right: totalCount,\n        fn: (left, right) => ({left with\n            quality: (float(v: right.partCount) - float(v: left.badCount)) / float(v: right.partCount),\n        }),\n    )",
									Start: ast.Position{
										Column: 15,
										Line:   36,
									},
								},
							},
							Callee: &ast.MemberExpression{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 32,
											Line:   36,
										},
										File:   "oee.flux",
										Source: "experimental.join",
										Start: ast.Position{
											Column: 15,
											Line:   36,
										},
									},
								},
								Lbrack: nil,
								Object: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 27,
												Line:   36,
											},
											File:   "oee.flux",
											Source: "experimental",
											Start: ast.Position{
												Column: 15,
												Line:   36,
											},
										},
									},
									Name: "experimental",
								},
								Property: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 32,
												Line:   36,
											},
											File:   "oee.flux",
											Source: "join",
											Start: ast.Position{
												Column: 28,
												Line:   36,
											},
										},
									},
									Name: "join",
								},
								Rbrack: nil,
							},
							Lparen: nil,
							Rparen: nil,
						},
					}, &ast.ReturnStatement{
						Argument: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 11,
											Line:   50,
										},
										File:   "oee.flux",
										Source: "left: performance,\n        right: quality,\n        fn: (left, right) => ({left with\n            quality: right.quality,\n            oee: left.availability * left.performance * right.quality,\n        })",
										Start: ast.Position{
											Column: 9,
											Line:   45,
										},
									},
								},
								Lbrace: nil,
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 26,
												Line:   45,
											},
											File:   "oee.flux",
											Source: "left: performance",
											Start: ast.Position{
												Column: 9,
												Line:   45,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 13,
													Line:   45,
												},
												File:   "oee.flux",
												Source: "left",
												Start: ast.Position{
													Column: 9,
													Line:   45,
												},
											},
										},
										Name: "left",
									},
									Separator: nil,
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 26,
													Line:   45,
												},
												File:   "oee.flux",
												Source: "performance",
												Start: ast.Position{
													Column: 15,
													Line:   45,
												},
											},
										},
										Name: "performance",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 23,
												Line:   46,
											},
											File:   "oee.flux",
											Source: "right: quality",
											Start: ast.Position{
												Column: 9,
												Line:   46,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 14,
													Line:   46,
												},
												File:   "oee.flux",
												Source: "right",
												Start: ast.Position{
													Column: 9,
													Line:   46,
												},
											},
										},
										Name: "right",
									},
									Separator: nil,
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 23,
													Line:   46,
												},
												File:   "oee.flux",
												Source: "quality",
												Start: ast.Position{
													Column: 16,
													Line:   46,
												},
											},
										},
										Name: "quality",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 11,
												Line:   50,
											},
											File:   "oee.flux",
											Source: "fn: (left, right) => ({left with\n            quality: right.quality,\n            oee: left.availability * left.performance * right.quality,\n        })",
											Start: ast.Position{
												Column: 9,
												Line:   47,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 11,
													Line:   47,
												},
												File:   "oee.flux",
												Source: "fn",
												Start: ast.Position{
													Column: 9,
													Line:   47,
												},
											},
										},
										Name: "fn",
									},
									Separator: nil,
									Value: &ast.FunctionExpression{
										Arrow: nil,
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 11,
													Line:   50,
												},
												File:   "oee.flux",
												Source: "(left, right) => ({left with\n            quality: right.quality,\n            oee: left.availability * left.performance * right.quality,\n        })",
												Start: ast.Position{
													Column: 13,
													Line:   47,
												},
											},
										},
										Body: &ast.ParenExpression{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 11,
														Line:   50,
													},
													File:   "oee.flux",
													Source: "({left with\n            quality: right.quality,\n            oee: left.availability * left.performance * right.quality,\n        })",
													Start: ast.Position{
														Column: 30,
														Line:   47,
													},
												},
											},
											Expression: &ast.ObjectExpression{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 10,
															Line:   50,
														},
														File:   "oee.flux",
														Source: "{left with\n            quality: right.quality,\n            oee: left.availability * left.performance * right.quality,\n        }",
														Start: ast.Position{
															Column: 31,
															Line:   47,
														},
													},
												},
												Lbrace: nil,
												Properties: []*ast.Property{&ast.Property{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 35,
																Line:   48,
															},
															File:   "oee.flux",
															Source: "quality: right.quality",
															Start: ast.Position{
																Column: 13,
																Line:   48,
															},
														},
													},
													Comma: nil,
													Key: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Comments: nil,
															Errors:   nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 20,
																	Line:   48,
																},
																File:   "oee.flux",
																Source: "quality",
																Start: ast.Position{
																	Column: 13,
																	Line:   48,
																},
															},
														},
														Name: "quality",
													},
													Separator: nil,
													Value: &ast.MemberExpression{
														BaseNode: ast.BaseNode{
															Comments: nil,
															Errors:   nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 35,
																	Line:   48,
																},
																File:   "oee.flux",
																Source: "right.quality",
																Start: ast.Position{
																	Column: 22,
																	Line:   48,
																},
															},
														},
														Lbrack: nil,
														Object: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Comments: nil,
																Errors:   nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 27,
																		Line:   48,
																	},
																	File:   "oee.flux",
																	Source: "right",
																	Start: ast.Position{
																		Column: 22,
																		Line:   48,
																	},
																},
															},
															Name: "right",
														},
														Property: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Comments: nil,
																Errors:   nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 35,
																		Line:   48,
																	},
																	File:   "oee.flux",
																	Source: "quality",
																	Start: ast.Position{
																		Column: 28,
																		Line:   48,
																	},
																},
															},
															Name: "quality",
														},
														Rbrack: nil,
													},
												}, &ast.Property{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 70,
																Line:   49,
															},
															File:   "oee.flux",
															Source: "oee: left.availability * left.performance * right.quality",
															Start: ast.Position{
																Column: 13,
																Line:   49,
															},
														},
													},
													Comma: nil,
													Key: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Comments: nil,
															Errors:   nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 16,
																	Line:   49,
																},
																File:   "oee.flux",
																Source: "oee",
																Start: ast.Position{
																	Column: 13,
																	Line:   49,
																},
															},
														},
														Name: "oee",
													},
													Separator: nil,
													Value: &ast.BinaryExpression{
														BaseNode: ast.BaseNode{
															Comments: nil,
															Errors:   nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 70,
																	Line:   49,
																},
																File:   "oee.flux",
																Source: "left.availability * left.performance * right.quality",
																Start: ast.Position{
																	Column: 18,
																	Line:   49,
																},
															},
														},
														Left: &ast.BinaryExpression{
															BaseNode: ast.BaseNode{
																Comments: nil,
																Errors:   nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 54,
																		Line:   49,
																	},
																	File:   "oee.flux",
																	Source: "left.availability * left.performance",
																	Start: ast.Position{
																		Column: 18,
																		Line:   49,
																	},
																},
															},
															Left: &ast.MemberExpression{
																BaseNode: ast.BaseNode{
																	Comments: nil,
																	Errors:   nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 35,
																			Line:   49,
																		},
																		File:   "oee.flux",
																		Source: "left.availability",
																		Start: ast.Position{
																			Column: 18,
																			Line:   49,
																		},
																	},
																},
																Lbrack: nil,
																Object: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Comments: nil,
																		Errors:   nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 22,
																				Line:   49,
																			},
																			File:   "oee.flux",
																			Source: "left",
																			Start: ast.Position{
																				Column: 18,
																				Line:   49,
																			},
																		},
																	},
																	Name: "left",
																},
																Property: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Comments: nil,
																		Errors:   nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 35,
																				Line:   49,
																			},
																			File:   "oee.flux",
																			Source: "availability",
																			Start: ast.Position{
																				Column: 23,
																				Line:   49,
																			},
																		},
																	},
																	Name: "availability",
																},
																Rbrack: nil,
															},
															Operator: 1,
															Right: &ast.MemberExpression{
																BaseNode: ast.BaseNode{
																	Comments: nil,
																	Errors:   nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 54,
																			Line:   49,
																		},
																		File:   "oee.flux",
																		Source: "left.performance",
																		Start: ast.Position{
																			Column: 38,
																			Line:   49,
																		},
																	},
																},
																Lbrack: nil,
																Object: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Comments: nil,
																		Errors:   nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 42,
																				Line:   49,
																			},
																			File:   "oee.flux",
																			Source: "left",
																			Start: ast.Position{
																				Column: 38,
																				Line:   49,
																			},
																		},
																	},
																	Name: "left",
																},
																Property: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Comments: nil,
																		Errors:   nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 54,
																				Line:   49,
																			},
																			File:   "oee.flux",
																			Source: "performance",
																			Start: ast.Position{
																				Column: 43,
																				Line:   49,
																			},
																		},
																	},
																	Name: "performance",
																},
																Rbrack: nil,
															},
														},
														Operator: 1,
														Right: &ast.MemberExpression{
															BaseNode: ast.BaseNode{
																Comments: nil,
																Errors:   nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 70,
																		Line:   49,
																	},
																	File:   "oee.flux",
																	Source: "right.quality",
																	Start: ast.Position{
																		Column: 57,
																		Line:   49,
																	},
																},
															},
															Lbrack: nil,
															Object: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Comments: nil,
																	Errors:   nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 62,
																			Line:   49,
																		},
																		File:   "oee.flux",
																		Source: "right",
																		Start: ast.Position{
																			Column: 57,
																			Line:   49,
																		},
																	},
																},
																Name: "right",
															},
															Property: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Comments: nil,
																	Errors:   nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 70,
																			Line:   49,
																		},
																		File:   "oee.flux",
																		Source: "quality",
																		Start: ast.Position{
																			Column: 63,
																			Line:   49,
																		},
																	},
																},
																Name: "quality",
															},
															Rbrack: nil,
														},
													},
												}},
												Rbrace: nil,
												With: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 36,
																Line:   47,
															},
															File:   "oee.flux",
															Source: "left",
															Start: ast.Position{
																Column: 32,
																Line:   47,
															},
														},
													},
													Name: "left",
												},
											},
											Lparen: nil,
											Rparen: nil,
										},
										Lparen: nil,
										Params: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   47,
													},
													File:   "oee.flux",
													Source: "left",
													Start: ast.Position{
														Column: 14,
														Line:   47,
													},
												},
											},
											Comma: nil,
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 18,
															Line:   47,
														},
														File:   "oee.flux",
														Source: "left",
														Start: ast.Position{
															Column: 14,
															Line:   47,
														},
													},
												},
												Name: "left",
											},
											Separator: nil,
											Value:     nil,
										}, &ast.Property{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 25,
														Line:   47,
													},
													File:   "oee.flux",
													Source: "right",
													Start: ast.Position{
														Column: 20,
														Line:   47,
													},
												},
											},
											Comma: nil,
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 25,
															Line:   47,
														},
														File:   "oee.flux",
														Source: "right",
														Start: ast.Position{
															Column: 20,
															Line:   47,
														},
													},
												},
												Name: "right",
											},
											Separator: nil,
											Value:     nil,
										}},
										Rparan: nil,
									},
								}},
								Rbrace: nil,
								With:   nil,
							}},
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 6,
										Line:   51,
									},
									File:   "oee.flux",
									Source: "experimental.join(\n        left: performance,\n        right: quality,\n        fn: (left, right) => ({left with\n            quality: right.quality,\n            oee: left.availability * left.performance * right.quality,\n        }),\n    )",
									Start: ast.Position{
										Column: 12,
										Line:   44,
									},
								},
							},
							Callee: &ast.MemberExpression{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 29,
											Line:   44,
										},
										File:   "oee.flux",
										Source: "experimental.join",
										Start: ast.Position{
											Column: 12,
											Line:   44,
										},
									},
								},
								Lbrack: nil,
								Object: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 24,
												Line:   44,
											},
											File:   "oee.flux",
											Source: "experimental",
											Start: ast.Position{
												Column: 12,
												Line:   44,
											},
										},
									},
									Name: "experimental",
								},
								Property: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 29,
												Line:   44,
											},
											File:   "oee.flux",
											Source: "join",
											Start: ast.Position{
												Column: 25,
												Line:   44,
											},
										},
									},
									Name: "join",
								},
								Rbrack: nil,
							},
							Lparen: nil,
							Rparen: nil,
						},
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 6,
									Line:   51,
								},
								File:   "oee.flux",
								Source: "return experimental.join(\n        left: performance,\n        right: quality,\n        fn: (left, right) => ({left with\n            quality: right.quality,\n            oee: left.availability * left.performance * right.quality,\n        }),\n    )",
								Start: ast.Position{
									Column: 5,
									Line:   44,
								},
							},
						},
					}},
					Lbrace: nil,
					Rbrace: nil,
				},
				Lparen: nil,
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 31,
								Line:   15,
							},
							File:   "oee.flux",
							Source: "productionEvents",
							Start: ast.Position{
								Column: 15,
								Line:   15,
							},
						},
					},
					Comma: nil,
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 31,
									Line:   15,
								},
								File:   "oee.flux",
								Source: "productionEvents",
								Start: ast.Position{
									Column: 15,
									Line:   15,
								},
							},
						},
						Name: "productionEvents",
					},
					Separator: nil,
					Value:     nil,
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 43,
								Line:   15,
							},
							File:   "oee.flux",
							Source: "partEvents",
							Start: ast.Position{
								Column: 33,
								Line:   15,
							},
						},
					},
					Comma: nil,
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 43,
									Line:   15,
								},
								File:   "oee.flux",
								Source: "partEvents",
								Start: ast.Position{
									Column: 33,
									Line:   15,
								},
							},
						},
						Name: "partEvents",
					},
					Separator: nil,
					Value:     nil,
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 57,
								Line:   15,
							},
							File:   "oee.flux",
							Source: "runningState",
							Start: ast.Position{
								Column: 45,
								Line:   15,
							},
						},
					},
					Comma: nil,
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 57,
									Line:   15,
								},
								File:   "oee.flux",
								Source: "runningState",
								Start: ast.Position{
									Column: 45,
									Line:   15,
								},
							},
						},
						Name: "runningState",
					},
					Separator: nil,
					Value:     nil,
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 70,
								Line:   15,
							},
							File:   "oee.flux",
							Source: "plannedTime",
							Start: ast.Position{
								Column: 59,
								Line:   15,
							},
						},
					},
					Comma: nil,
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 70,
									Line:   15,
								},
								File:   "oee.flux",
								Source: "plannedTime",
								Start: ast.Position{
									Column: 59,
									Line:   15,
								},
							},
						},
						Name: "plannedTime",
					},
					Separator: nil,
					Value:     nil,
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 86,
								Line:   15,
							},
							File:   "oee.flux",
							Source: "idealCycleTime",
							Start: ast.Position{
								Column: 72,
								Line:   15,
							},
						},
					},
					Comma: nil,
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 86,
									Line:   15,
								},
								File:   "oee.flux",
								Source: "idealCycleTime",
								Start: ast.Position{
									Column: 72,
									Line:   15,
								},
							},
						},
						Name: "idealCycleTime",
					},
					Separator: nil,
					Value:     nil,
				}},
				Rparan: nil,
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   66,
					},
					File:   "oee.flux",
					Source: "APQ = (tables=<-, runningState, plannedTime, idealCycleTime) => computeAPQ(\n    productionEvents: tables,\n    partEvents: tables,\n    runningState: runningState,\n    plannedTime: plannedTime,\n    idealCycleTime: idealCycleTime,\n)",
					Start: ast.Position{
						Column: 1,
						Line:   60,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: []ast.Comment{ast.Comment{Text: "// APQ computes availability, performance, quality and overall equipment effectiveness (oee).\n"}, ast.Comment{Text: "// Input tables are expected to have rows with _time, state, partCount and badCount columns, where\n"}, ast.Comment{Text: "//   state that indicates start and stop events, partCount represents total number\n"}, ast.Comment{Text: "//   of produced parts and badCount represents number of parts that did not meet quality standards.\n"}, ast.Comment{Text: "// plannedTime - total time that equipment is expected to produce\n"}, ast.Comment{Text: "// idealCycleTime - theoretical minimum time to produce one part\n"}},
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 4,
							Line:   60,
						},
						File:   "oee.flux",
						Source: "APQ",
						Start: ast.Position{
							Column: 1,
							Line:   60,
						},
					},
				},
				Name: "APQ",
			},
			Init: &ast.FunctionExpression{
				Arrow: nil,
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   66,
						},
						File:   "oee.flux",
						Source: "(tables=<-, runningState, plannedTime, idealCycleTime) => computeAPQ(\n    productionEvents: tables,\n    partEvents: tables,\n    runningState: runningState,\n    plannedTime: plannedTime,\n    idealCycleTime: idealCycleTime,\n)",
						Start: ast.Position{
							Column: 7,
							Line:   60,
						},
					},
				},
				Body: &ast.CallExpression{
					Arguments: []ast.Expression{&ast.ObjectExpression{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 35,
									Line:   65,
								},
								File:   "oee.flux",
								Source: "productionEvents: tables,\n    partEvents: tables,\n    runningState: runningState,\n    plannedTime: plannedTime,\n    idealCycleTime: idealCycleTime",
								Start: ast.Position{
									Column: 5,
									Line:   61,
								},
							},
						},
						Lbrace: nil,
						Properties: []*ast.Property{&ast.Property{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 29,
										Line:   61,
									},
									File:   "oee.flux",
									Source: "productionEvents: tables",
									Start: ast.Position{
										Column: 5,
										Line:   61,
									},
								},
							},
							Comma: nil,
							Key: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 21,
											Line:   61,
										},
										File:   "oee.flux",
										Source: "productionEvents",
										Start: ast.Position{
											Column: 5,
											Line:   61,
										},
									},
								},
								Name: "productionEvents",
							},
							Separator: nil,
							Value: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 29,
											Line:   61,
										},
										File:   "oee.flux",
										Source: "tables",
										Start: ast.Position{
											Column: 23,
											Line:   61,
										},
									},
								},
								Name: "tables",
							},
						}, &ast.Property{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 23,
										Line:   62,
									},
									File:   "oee.flux",
									Source: "partEvents: tables",
									Start: ast.Position{
										Column: 5,
										Line:   62,
									},
								},
							},
							Comma: nil,
							Key: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 15,
											Line:   62,
										},
										File:   "oee.flux",
										Source: "partEvents",
										Start: ast.Position{
											Column: 5,
											Line:   62,
										},
									},
								},
								Name: "partEvents",
							},
							Separator: nil,
							Value: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 23,
											Line:   62,
										},
										File:   "oee.flux",
										Source: "tables",
										Start: ast.Position{
											Column: 17,
											Line:   62,
										},
									},
								},
								Name: "tables",
							},
						}, &ast.Property{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 31,
										Line:   63,
									},
									File:   "oee.flux",
									Source: "runningState: runningState",
									Start: ast.Position{
										Column: 5,
										Line:   63,
									},
								},
							},
							Comma: nil,
							Key: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 17,
											Line:   63,
										},
										File:   "oee.flux",
										Source: "runningState",
										Start: ast.Position{
											Column: 5,
											Line:   63,
										},
									},
								},
								Name: "runningState",
							},
							Separator: nil,
							Value: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 31,
											Line:   63,
										},
										File:   "oee.flux",
										Source: "runningState",
										Start: ast.Position{
											Column: 19,
											Line:   63,
										},
									},
								},
								Name: "runningState",
							},
						}, &ast.Property{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 29,
										Line:   64,
									},
									File:   "oee.flux",
									Source: "plannedTime: plannedTime",
									Start: ast.Position{
										Column: 5,
										Line:   64,
									},
								},
							},
							Comma: nil,
							Key: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 16,
											Line:   64,
										},
										File:   "oee.flux",
										Source: "plannedTime",
										Start: ast.Position{
											Column: 5,
											Line:   64,
										},
									},
								},
								Name: "plannedTime",
							},
							Separator: nil,
							Value: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 29,
											Line:   64,
										},
										File:   "oee.flux",
										Source: "plannedTime",
										Start: ast.Position{
											Column: 18,
											Line:   64,
										},
									},
								},
								Name: "plannedTime",
							},
						}, &ast.Property{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 35,
										Line:   65,
									},
									File:   "oee.flux",
									Source: "idealCycleTime: idealCycleTime",
									Start: ast.Position{
										Column: 5,
										Line:   65,
									},
								},
							},
							Comma: nil,
							Key: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 19,
											Line:   65,
										},
										File:   "oee.flux",
										Source: "idealCycleTime",
										Start: ast.Position{
											Column: 5,
											Line:   65,
										},
									},
								},
								Name: "idealCycleTime",
							},
							Separator: nil,
							Value: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 35,
											Line:   65,
										},
										File:   "oee.flux",
										Source: "idealCycleTime",
										Start: ast.Position{
											Column: 21,
											Line:   65,
										},
									},
								},
								Name: "idealCycleTime",
							},
						}},
						Rbrace: nil,
						With:   nil,
					}},
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 2,
								Line:   66,
							},
							File:   "oee.flux",
							Source: "computeAPQ(\n    productionEvents: tables,\n    partEvents: tables,\n    runningState: runningState,\n    plannedTime: plannedTime,\n    idealCycleTime: idealCycleTime,\n)",
							Start: ast.Position{
								Column: 65,
								Line:   60,
							},
						},
					},
					Callee: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 75,
									Line:   60,
								},
								File:   "oee.flux",
								Source: "computeAPQ",
								Start: ast.Position{
									Column: 65,
									Line:   60,
								},
							},
						},
						Name: "computeAPQ",
					},
					Lparen: nil,
					Rparen: nil,
				},
				Lparen: nil,
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 17,
								Line:   60,
							},
							File:   "oee.flux",
							Source: "tables=<-",
							Start: ast.Position{
								Column: 8,
								Line:   60,
							},
						},
					},
					Comma: nil,
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 14,
									Line:   60,
								},
								File:   "oee.flux",
								Source: "tables",
								Start: ast.Position{
									Column: 8,
									Line:   60,
								},
							},
						},
						Name: "tables",
					},
					Separator: nil,
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 17,
								Line:   60,
							},
							File:   "oee.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 15,
								Line:   60,
							},
						},
					}},
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 31,
								Line:   60,
							},
							File:   "oee.flux",
							Source: "runningState",
							Start: ast.Position{
								Column: 19,
								Line:   60,
							},
						},
					},
					Comma: nil,
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 31,
									Line:   60,
								},
								File:   "oee.flux",
								Source: "runningState",
								Start: ast.Position{
									Column: 19,
									Line:   60,
								},
							},
						},
						Name: "runningState",
					},
					Separator: nil,
					Value:     nil,
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 44,
								Line:   60,
							},
							File:   "oee.flux",
							Source: "plannedTime",
							Start: ast.Position{
								Column: 33,
								Line:   60,
							},
						},
					},
					Comma: nil,
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 44,
									Line:   60,
								},
								File:   "oee.flux",
								Source: "plannedTime",
								Start: ast.Position{
									Column: 33,
									Line:   60,
								},
							},
						},
						Name: "plannedTime",
					},
					Separator: nil,
					Value:     nil,
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 60,
								Line:   60,
							},
							File:   "oee.flux",
							Source: "idealCycleTime",
							Start: ast.Position{
								Column: 46,
								Line:   60,
							},
						},
					},
					Comma: nil,
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 60,
									Line:   60,
								},
								File:   "oee.flux",
								Source: "idealCycleTime",
								Start: ast.Position{
									Column: 46,
									Line:   60,
								},
							},
						},
						Name: "idealCycleTime",
					},
					Separator: nil,
					Value:     nil,
				}},
				Rparan: nil,
			},
		}},
		Eof: nil,
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 40,
						Line:   4,
					},
					File:   "oee.flux",
					Source: "import \"contrib/tomhollingworth/events\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 40,
							Line:   4,
						},
						File:   "oee.flux",
						Source: "\"contrib/tomhollingworth/events\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "contrib/tomhollingworth/events",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 22,
						Line:   5,
					},
					File:   "oee.flux",
					Source: "import \"experimental\"",
					Start: ast.Position{
						Column: 1,
						Line:   5,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 22,
							Line:   5,
						},
						File:   "oee.flux",
						Source: "\"experimental\"",
						Start: ast.Position{
							Column: 8,
							Line:   5,
						},
					},
				},
				Value: "experimental",
			},
		}},
		Metadata: "parser-type=rust",
		Name:     "oee.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 12,
						Line:   1,
					},
					File:   "oee.flux",
					Source: "package oee",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 12,
							Line:   1,
						},
						File:   "oee.flux",
						Source: "oee",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "oee",
			},
		},
	}},
	Package: "oee",
	Path:    "experimental/oee",
}
