// DO NOT EDIT: This file is autogenerated via the builtin command.

package discord

import (
	ast "github.com/influxdata/flux/ast"
	runtime "github.com/influxdata/flux/runtime"
)

func init() {
	runtime.RegisterPackage(pkgAST)
}

var pkgAST = &ast.Package{
	BaseNode: ast.BaseNode{
		Errors: nil,
		Loc:    nil,
	},
	Files: []*ast.File{&ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 2,
					Line:   26,
				},
				File:   "discord.flux",
				Source: "package discord\n\nimport \"http\"\nimport \"json\"\n\n// `webhookToken` - string - the secure token of the webhook.\n// `webhookID` - string - the ID of the webhook.\n// `username` - string - username posting the message.\n// `content` - string - the text to display in discord.\n// `avatar_url` -  override the default avatar of the webhook.\n\nsend = (webhookToken, webhookID, username, content, avatar_url=\"\") => {\n  data = {\n      username: username,\n      content: content,\n      avatar_url: avatar_url\n    }\n\n  headers = {\n      \"Content-Type\": \"application/json\"\n    }\n  encode = json.encode(v:data)\n\n  discordURL = \"https://discordapp.com/api/webhooks/\"\n  return http.post(headers: headers, url: discordURL + webhookID + \"/\" + webhookToken, data: encode)\n}",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   26,
					},
					File:   "discord.flux",
					Source: "send = (webhookToken, webhookID, username, content, avatar_url=\"\") => {\n  data = {\n      username: username,\n      content: content,\n      avatar_url: avatar_url\n    }\n\n  headers = {\n      \"Content-Type\": \"application/json\"\n    }\n  encode = json.encode(v:data)\n\n  discordURL = \"https://discordapp.com/api/webhooks/\"\n  return http.post(headers: headers, url: discordURL + webhookID + \"/\" + webhookToken, data: encode)\n}",
					Start: ast.Position{
						Column: 1,
						Line:   12,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 5,
							Line:   12,
						},
						File:   "discord.flux",
						Source: "send",
						Start: ast.Position{
							Column: 1,
							Line:   12,
						},
					},
				},
				Name: "send",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   26,
						},
						File:   "discord.flux",
						Source: "(webhookToken, webhookID, username, content, avatar_url=\"\") => {\n  data = {\n      username: username,\n      content: content,\n      avatar_url: avatar_url\n    }\n\n  headers = {\n      \"Content-Type\": \"application/json\"\n    }\n  encode = json.encode(v:data)\n\n  discordURL = \"https://discordapp.com/api/webhooks/\"\n  return http.post(headers: headers, url: discordURL + webhookID + \"/\" + webhookToken, data: encode)\n}",
						Start: ast.Position{
							Column: 8,
							Line:   12,
						},
					},
				},
				Body: &ast.Block{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 2,
								Line:   26,
							},
							File:   "discord.flux",
							Source: "{\n  data = {\n      username: username,\n      content: content,\n      avatar_url: avatar_url\n    }\n\n  headers = {\n      \"Content-Type\": \"application/json\"\n    }\n  encode = json.encode(v:data)\n\n  discordURL = \"https://discordapp.com/api/webhooks/\"\n  return http.post(headers: headers, url: discordURL + webhookID + \"/\" + webhookToken, data: encode)\n}",
							Start: ast.Position{
								Column: 71,
								Line:   12,
							},
						},
					},
					Body: []ast.Statement{&ast.VariableAssignment{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 6,
									Line:   17,
								},
								File:   "discord.flux",
								Source: "data = {\n      username: username,\n      content: content,\n      avatar_url: avatar_url\n    }",
								Start: ast.Position{
									Column: 3,
									Line:   13,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 7,
										Line:   13,
									},
									File:   "discord.flux",
									Source: "data",
									Start: ast.Position{
										Column: 3,
										Line:   13,
									},
								},
							},
							Name: "data",
						},
						Init: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 6,
										Line:   17,
									},
									File:   "discord.flux",
									Source: "{\n      username: username,\n      content: content,\n      avatar_url: avatar_url\n    }",
									Start: ast.Position{
										Column: 10,
										Line:   13,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 25,
											Line:   14,
										},
										File:   "discord.flux",
										Source: "username: username",
										Start: ast.Position{
											Column: 7,
											Line:   14,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 15,
												Line:   14,
											},
											File:   "discord.flux",
											Source: "username",
											Start: ast.Position{
												Column: 7,
												Line:   14,
											},
										},
									},
									Name: "username",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 25,
												Line:   14,
											},
											File:   "discord.flux",
											Source: "username",
											Start: ast.Position{
												Column: 17,
												Line:   14,
											},
										},
									},
									Name: "username",
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 23,
											Line:   15,
										},
										File:   "discord.flux",
										Source: "content: content",
										Start: ast.Position{
											Column: 7,
											Line:   15,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 14,
												Line:   15,
											},
											File:   "discord.flux",
											Source: "content",
											Start: ast.Position{
												Column: 7,
												Line:   15,
											},
										},
									},
									Name: "content",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 23,
												Line:   15,
											},
											File:   "discord.flux",
											Source: "content",
											Start: ast.Position{
												Column: 16,
												Line:   15,
											},
										},
									},
									Name: "content",
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 29,
											Line:   16,
										},
										File:   "discord.flux",
										Source: "avatar_url: avatar_url",
										Start: ast.Position{
											Column: 7,
											Line:   16,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 17,
												Line:   16,
											},
											File:   "discord.flux",
											Source: "avatar_url",
											Start: ast.Position{
												Column: 7,
												Line:   16,
											},
										},
									},
									Name: "avatar_url",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 29,
												Line:   16,
											},
											File:   "discord.flux",
											Source: "avatar_url",
											Start: ast.Position{
												Column: 19,
												Line:   16,
											},
										},
									},
									Name: "avatar_url",
								},
							}},
							With: nil,
						},
					}, &ast.VariableAssignment{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 6,
									Line:   21,
								},
								File:   "discord.flux",
								Source: "headers = {\n      \"Content-Type\": \"application/json\"\n    }",
								Start: ast.Position{
									Column: 3,
									Line:   19,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 10,
										Line:   19,
									},
									File:   "discord.flux",
									Source: "headers",
									Start: ast.Position{
										Column: 3,
										Line:   19,
									},
								},
							},
							Name: "headers",
						},
						Init: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 6,
										Line:   21,
									},
									File:   "discord.flux",
									Source: "{\n      \"Content-Type\": \"application/json\"\n    }",
									Start: ast.Position{
										Column: 13,
										Line:   19,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 41,
											Line:   20,
										},
										File:   "discord.flux",
										Source: "\"Content-Type\": \"application/json\"",
										Start: ast.Position{
											Column: 7,
											Line:   20,
										},
									},
								},
								Key: &ast.StringLiteral{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 21,
												Line:   20,
											},
											File:   "discord.flux",
											Source: "\"Content-Type\"",
											Start: ast.Position{
												Column: 7,
												Line:   20,
											},
										},
									},
									Value: "Content-Type",
								},
								Value: &ast.StringLiteral{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 41,
												Line:   20,
											},
											File:   "discord.flux",
											Source: "\"application/json\"",
											Start: ast.Position{
												Column: 23,
												Line:   20,
											},
										},
									},
									Value: "application/json",
								},
							}},
							With: nil,
						},
					}, &ast.VariableAssignment{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 31,
									Line:   22,
								},
								File:   "discord.flux",
								Source: "encode = json.encode(v:data)",
								Start: ast.Position{
									Column: 3,
									Line:   22,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 9,
										Line:   22,
									},
									File:   "discord.flux",
									Source: "encode",
									Start: ast.Position{
										Column: 3,
										Line:   22,
									},
								},
							},
							Name: "encode",
						},
						Init: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 30,
											Line:   22,
										},
										File:   "discord.flux",
										Source: "v:data",
										Start: ast.Position{
											Column: 24,
											Line:   22,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 30,
												Line:   22,
											},
											File:   "discord.flux",
											Source: "v:data",
											Start: ast.Position{
												Column: 24,
												Line:   22,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 25,
													Line:   22,
												},
												File:   "discord.flux",
												Source: "v",
												Start: ast.Position{
													Column: 24,
													Line:   22,
												},
											},
										},
										Name: "v",
									},
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   22,
												},
												File:   "discord.flux",
												Source: "data",
												Start: ast.Position{
													Column: 26,
													Line:   22,
												},
											},
										},
										Name: "data",
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 31,
										Line:   22,
									},
									File:   "discord.flux",
									Source: "json.encode(v:data)",
									Start: ast.Position{
										Column: 12,
										Line:   22,
									},
								},
							},
							Callee: &ast.MemberExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 23,
											Line:   22,
										},
										File:   "discord.flux",
										Source: "json.encode",
										Start: ast.Position{
											Column: 12,
											Line:   22,
										},
									},
								},
								Object: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 16,
												Line:   22,
											},
											File:   "discord.flux",
											Source: "json",
											Start: ast.Position{
												Column: 12,
												Line:   22,
											},
										},
									},
									Name: "json",
								},
								Property: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 23,
												Line:   22,
											},
											File:   "discord.flux",
											Source: "encode",
											Start: ast.Position{
												Column: 17,
												Line:   22,
											},
										},
									},
									Name: "encode",
								},
							},
						},
					}, &ast.VariableAssignment{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 54,
									Line:   24,
								},
								File:   "discord.flux",
								Source: "discordURL = \"https://discordapp.com/api/webhooks/\"",
								Start: ast.Position{
									Column: 3,
									Line:   24,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 13,
										Line:   24,
									},
									File:   "discord.flux",
									Source: "discordURL",
									Start: ast.Position{
										Column: 3,
										Line:   24,
									},
								},
							},
							Name: "discordURL",
						},
						Init: &ast.StringLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 54,
										Line:   24,
									},
									File:   "discord.flux",
									Source: "\"https://discordapp.com/api/webhooks/\"",
									Start: ast.Position{
										Column: 16,
										Line:   24,
									},
								},
							},
							Value: "https://discordapp.com/api/webhooks/",
						},
					}, &ast.ReturnStatement{
						Argument: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 100,
											Line:   25,
										},
										File:   "discord.flux",
										Source: "headers: headers, url: discordURL + webhookID + \"/\" + webhookToken, data: encode",
										Start: ast.Position{
											Column: 20,
											Line:   25,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 36,
												Line:   25,
											},
											File:   "discord.flux",
											Source: "headers: headers",
											Start: ast.Position{
												Column: 20,
												Line:   25,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 27,
													Line:   25,
												},
												File:   "discord.flux",
												Source: "headers",
												Start: ast.Position{
													Column: 20,
													Line:   25,
												},
											},
										},
										Name: "headers",
									},
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 36,
													Line:   25,
												},
												File:   "discord.flux",
												Source: "headers",
												Start: ast.Position{
													Column: 29,
													Line:   25,
												},
											},
										},
										Name: "headers",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 86,
												Line:   25,
											},
											File:   "discord.flux",
											Source: "url: discordURL + webhookID + \"/\" + webhookToken",
											Start: ast.Position{
												Column: 38,
												Line:   25,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 41,
													Line:   25,
												},
												File:   "discord.flux",
												Source: "url",
												Start: ast.Position{
													Column: 38,
													Line:   25,
												},
											},
										},
										Name: "url",
									},
									Value: &ast.BinaryExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 86,
													Line:   25,
												},
												File:   "discord.flux",
												Source: "discordURL + webhookID + \"/\" + webhookToken",
												Start: ast.Position{
													Column: 43,
													Line:   25,
												},
											},
										},
										Left: &ast.BinaryExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 71,
														Line:   25,
													},
													File:   "discord.flux",
													Source: "discordURL + webhookID + \"/\"",
													Start: ast.Position{
														Column: 43,
														Line:   25,
													},
												},
											},
											Left: &ast.BinaryExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 65,
															Line:   25,
														},
														File:   "discord.flux",
														Source: "discordURL + webhookID",
														Start: ast.Position{
															Column: 43,
															Line:   25,
														},
													},
												},
												Left: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 53,
																Line:   25,
															},
															File:   "discord.flux",
															Source: "discordURL",
															Start: ast.Position{
																Column: 43,
																Line:   25,
															},
														},
													},
													Name: "discordURL",
												},
												Operator: 5,
												Right: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 65,
																Line:   25,
															},
															File:   "discord.flux",
															Source: "webhookID",
															Start: ast.Position{
																Column: 56,
																Line:   25,
															},
														},
													},
													Name: "webhookID",
												},
											},
											Operator: 5,
											Right: &ast.StringLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 71,
															Line:   25,
														},
														File:   "discord.flux",
														Source: "\"/\"",
														Start: ast.Position{
															Column: 68,
															Line:   25,
														},
													},
												},
												Value: "/",
											},
										},
										Operator: 5,
										Right: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 86,
														Line:   25,
													},
													File:   "discord.flux",
													Source: "webhookToken",
													Start: ast.Position{
														Column: 74,
														Line:   25,
													},
												},
											},
											Name: "webhookToken",
										},
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 100,
												Line:   25,
											},
											File:   "discord.flux",
											Source: "data: encode",
											Start: ast.Position{
												Column: 88,
												Line:   25,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 92,
													Line:   25,
												},
												File:   "discord.flux",
												Source: "data",
												Start: ast.Position{
													Column: 88,
													Line:   25,
												},
											},
										},
										Name: "data",
									},
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 100,
													Line:   25,
												},
												File:   "discord.flux",
												Source: "encode",
												Start: ast.Position{
													Column: 94,
													Line:   25,
												},
											},
										},
										Name: "encode",
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 101,
										Line:   25,
									},
									File:   "discord.flux",
									Source: "http.post(headers: headers, url: discordURL + webhookID + \"/\" + webhookToken, data: encode)",
									Start: ast.Position{
										Column: 10,
										Line:   25,
									},
								},
							},
							Callee: &ast.MemberExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 19,
											Line:   25,
										},
										File:   "discord.flux",
										Source: "http.post",
										Start: ast.Position{
											Column: 10,
											Line:   25,
										},
									},
								},
								Object: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 14,
												Line:   25,
											},
											File:   "discord.flux",
											Source: "http",
											Start: ast.Position{
												Column: 10,
												Line:   25,
											},
										},
									},
									Name: "http",
								},
								Property: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 19,
												Line:   25,
											},
											File:   "discord.flux",
											Source: "post",
											Start: ast.Position{
												Column: 15,
												Line:   25,
											},
										},
									},
									Name: "post",
								},
							},
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 101,
									Line:   25,
								},
								File:   "discord.flux",
								Source: "return http.post(headers: headers, url: discordURL + webhookID + \"/\" + webhookToken, data: encode)",
								Start: ast.Position{
									Column: 3,
									Line:   25,
								},
							},
						},
					}},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 21,
								Line:   12,
							},
							File:   "discord.flux",
							Source: "webhookToken",
							Start: ast.Position{
								Column: 9,
								Line:   12,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 21,
									Line:   12,
								},
								File:   "discord.flux",
								Source: "webhookToken",
								Start: ast.Position{
									Column: 9,
									Line:   12,
								},
							},
						},
						Name: "webhookToken",
					},
					Value: nil,
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 32,
								Line:   12,
							},
							File:   "discord.flux",
							Source: "webhookID",
							Start: ast.Position{
								Column: 23,
								Line:   12,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 32,
									Line:   12,
								},
								File:   "discord.flux",
								Source: "webhookID",
								Start: ast.Position{
									Column: 23,
									Line:   12,
								},
							},
						},
						Name: "webhookID",
					},
					Value: nil,
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   12,
							},
							File:   "discord.flux",
							Source: "username",
							Start: ast.Position{
								Column: 34,
								Line:   12,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   12,
								},
								File:   "discord.flux",
								Source: "username",
								Start: ast.Position{
									Column: 34,
									Line:   12,
								},
							},
						},
						Name: "username",
					},
					Value: nil,
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 51,
								Line:   12,
							},
							File:   "discord.flux",
							Source: "content",
							Start: ast.Position{
								Column: 44,
								Line:   12,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 51,
									Line:   12,
								},
								File:   "discord.flux",
								Source: "content",
								Start: ast.Position{
									Column: 44,
									Line:   12,
								},
							},
						},
						Name: "content",
					},
					Value: nil,
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 66,
								Line:   12,
							},
							File:   "discord.flux",
							Source: "avatar_url=\"\"",
							Start: ast.Position{
								Column: 53,
								Line:   12,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 63,
									Line:   12,
								},
								File:   "discord.flux",
								Source: "avatar_url",
								Start: ast.Position{
									Column: 53,
									Line:   12,
								},
							},
						},
						Name: "avatar_url",
					},
					Value: &ast.StringLiteral{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 66,
									Line:   12,
								},
								File:   "discord.flux",
								Source: "\"\"",
								Start: ast.Position{
									Column: 64,
									Line:   12,
								},
							},
						},
						Value: "",
					},
				}},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 14,
						Line:   3,
					},
					File:   "discord.flux",
					Source: "import \"http\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 14,
							Line:   3,
						},
						File:   "discord.flux",
						Source: "\"http\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "http",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 14,
						Line:   4,
					},
					File:   "discord.flux",
					Source: "import \"json\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 14,
							Line:   4,
						},
						File:   "discord.flux",
						Source: "\"json\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "json",
			},
		}},
		Metadata: "parser-type=rust",
		Name:     "discord.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 16,
						Line:   1,
					},
					File:   "discord.flux",
					Source: "package discord",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 16,
							Line:   1,
						},
						File:   "discord.flux",
						Source: "discord",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "discord",
			},
		},
	}},
	Package: "discord",
	Path:    "contrib/chobbs/discord",
}
