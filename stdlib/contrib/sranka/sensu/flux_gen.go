// DO NOT EDIT: This file is autogenerated via the builtin command.

package sensu

import (
	ast "github.com/influxdata/flux/ast"
	runtime "github.com/influxdata/flux/runtime"
)

func init() {
	runtime.RegisterPackage(pkgAST)
}

var pkgAST = &ast.Package{
	BaseNode: ast.BaseNode{
		Comments: nil,
		Errors:   nil,
		Loc:      nil,
	},
	Files: []*ast.File{&ast.File{
		BaseNode: ast.BaseNode{
			Comments: nil,
			Errors:   nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 6,
					Line:   92,
				},
				File:   "sensu.flux",
				Source: "package sensu\n\n\nimport \"http\"\nimport \"json\"\n\n// toSensuName translates a string value to a Sensu name.\n// Characters not being [a-zA-Z0-9_.\\-] are replaced by underscore.\nbuiltin toSensuName : (v: string) => string\n\n// `event` sends a single event to Sensu as described in https://docs.sensu.io/sensu-go/latest/api/events/#create-a-new-event API. \n// `url` - string - base URL of [Sensu API](https://docs.sensu.io/sensu-go/latest/migrate/#architecture) without a trailing slash, for example \"http://localhost:8080\" .\n// `apiKey` - string - Sensu [API Key](https://docs.sensu.io/sensu-go/latest/operations/control-access/).\n// `checkName` - string - Check name, it can contain [a-zA-Z0-9_.\\-] characters, other characters are replaced by underscore.\n// `text` - string - The event text (named output in a Sensu Event).\n// `handlers` - array<string> - Sensu handlers to execute, optional.\n// `status` - int - The event status, 0 (default) indicates \"OK\", 1 indicates \"WARNING\", 2 indicates \"CRITICAL\", any other value indicates an “UNKNOWN” or custom status.\n// `state` - string - The event state can be \"failing\", \"passing\" or \"flapping\". Defaults to \"passing\" for 0 status, \"failing\" otherwise. \n// `namespace` - string - The Sensu namespace. Defaults to \"default\".\n// `entityName` - string - Source of the event, it can contain [a-zA-Z0-9_.\\-] characters, other characters are replaced by underscore. Defaults to \"influxdb\".\nevent = (\n        url,\n        apiKey,\n        checkName,\n        text,\n        handlers=[],\n        status=0,\n        state=\"\",\n        namespace=\"default\",\n        entityName=\"influxdb\") => {\n    data = {\n        entity: {\n            entity_class: \"proxy\",\n            metadata: {\n                name: toSensuName(v: entityName),\n            },\n        },\n        check: {\n            output: text,\n            state: if state != \"\" then state else if status == 0 then \"passing\" else \"failing\",\n            status: status,\n            handlers: handlers,\n            // required\n            interval: 60,\n            metadata: {\n                name: toSensuName(v: checkName),\n            },\n        },\n    }\n    headers = {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        \"Authorization\": \"Key \" + apiKey,\n    }\n    enc = json.encode(v: data)\n\n    return http.post(headers: headers, url: url + \"/api/core/v2/namespaces/\" + namespace + \"/events\", data: enc)\n}\n\n// `endpoint` creates a factory function that creates a target function for pipeline `|>` to send event to Sensu for each table row.\n// `url` - string - base URL of [Sensu API](https://docs.sensu.io/sensu-go/latest/migrate/#architecture) without a trailing slash, for example \"http://localhost:8080\" .\n// `apiKey` - string - Sensu [API Key](https://docs.sensu.io/sensu-go/latest/operations/control-access/).\n// `handlers` - array<string> - Sensu handlers to execute.\n// `namespace` - string - The Sensu namespace. Defaults to \"default\".\n// `entityName` - string - Source of the event, it can contain [a-zA-Z0-9_.\\-] characters, other characters are replaced by underscore. Defaults to \"influxdb\".\n// The returned factory function accepts a `mapFn` parameter.\n// The `mapFn` must return an object with `checkName`, `text`, and `status`, as defined in the `event` function arguments.\nendpoint = (\n        url,\n        apiKey,\n        handlers=[],\n        namespace=\"default\",\n        entityName=\"influxdb\") => (mapFn) => (tables=<-) => tables\n    |> map(\n        fn: (r) => {\n            obj = mapFn(r: r)\n\n            return {r with\n                _sent: string(\n                    v: 2 == event(\n                        url: url,\n                        apiKey: apiKey,\n                        checkName: obj.checkName,\n                        text: obj.text,\n                        handlers: handlers,\n                        status: obj.status,\n                        namespace: namespace,\n                        entityName: entityName,\n                    ) / 100,\n                ),\n            }\n        },\n    )",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: []ast.Comment{ast.Comment{Text: "// toSensuName translates a string value to a Sensu name.\n"}, ast.Comment{Text: "// Characters not being [a-zA-Z0-9_.\\-] are replaced by underscore.\n"}},
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 20,
						Line:   9,
					},
					File:   "sensu.flux",
					Source: "builtin toSensuName",
					Start: ast.Position{
						Column: 1,
						Line:   9,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 20,
							Line:   9,
						},
						File:   "sensu.flux",
						Source: "toSensuName",
						Start: ast.Position{
							Column: 9,
							Line:   9,
						},
					},
				},
				Name: "toSensuName",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 44,
							Line:   9,
						},
						File:   "sensu.flux",
						Source: "(v: string) => string",
						Start: ast.Position{
							Column: 23,
							Line:   9,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 44,
								Line:   9,
							},
							File:   "sensu.flux",
							Source: "(v: string) => string",
							Start: ast.Position{
								Column: 23,
								Line:   9,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 33,
									Line:   9,
								},
								File:   "sensu.flux",
								Source: "v: string",
								Start: ast.Position{
									Column: 24,
									Line:   9,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 25,
										Line:   9,
									},
									File:   "sensu.flux",
									Source: "v",
									Start: ast.Position{
										Column: 24,
										Line:   9,
									},
								},
							},
							Name: "v",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 33,
										Line:   9,
									},
									File:   "sensu.flux",
									Source: "string",
									Start: ast.Position{
										Column: 27,
										Line:   9,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 33,
											Line:   9,
										},
										File:   "sensu.flux",
										Source: "string",
										Start: ast.Position{
											Column: 27,
											Line:   9,
										},
									},
								},
								Name: "string",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 44,
									Line:   9,
								},
								File:   "sensu.flux",
								Source: "string",
								Start: ast.Position{
									Column: 38,
									Line:   9,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 44,
										Line:   9,
									},
									File:   "sensu.flux",
									Source: "string",
									Start: ast.Position{
										Column: 38,
										Line:   9,
									},
								},
							},
							Name: "string",
						},
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   57,
					},
					File:   "sensu.flux",
					Source: "event = (\n        url,\n        apiKey,\n        checkName,\n        text,\n        handlers=[],\n        status=0,\n        state=\"\",\n        namespace=\"default\",\n        entityName=\"influxdb\") => {\n    data = {\n        entity: {\n            entity_class: \"proxy\",\n            metadata: {\n                name: toSensuName(v: entityName),\n            },\n        },\n        check: {\n            output: text,\n            state: if state != \"\" then state else if status == 0 then \"passing\" else \"failing\",\n            status: status,\n            handlers: handlers,\n            // required\n            interval: 60,\n            metadata: {\n                name: toSensuName(v: checkName),\n            },\n        },\n    }\n    headers = {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        \"Authorization\": \"Key \" + apiKey,\n    }\n    enc = json.encode(v: data)\n\n    return http.post(headers: headers, url: url + \"/api/core/v2/namespaces/\" + namespace + \"/events\", data: enc)\n}",
					Start: ast.Position{
						Column: 1,
						Line:   21,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: []ast.Comment{ast.Comment{Text: "// `event` sends a single event to Sensu as described in https://docs.sensu.io/sensu-go/latest/api/events/#create-a-new-event API. \n"}, ast.Comment{Text: "// `url` - string - base URL of [Sensu API](https://docs.sensu.io/sensu-go/latest/migrate/#architecture) without a trailing slash, for example \"http://localhost:8080\" .\n"}, ast.Comment{Text: "// `apiKey` - string - Sensu [API Key](https://docs.sensu.io/sensu-go/latest/operations/control-access/).\n"}, ast.Comment{Text: "// `checkName` - string - Check name, it can contain [a-zA-Z0-9_.\\-] characters, other characters are replaced by underscore.\n"}, ast.Comment{Text: "// `text` - string - The event text (named output in a Sensu Event).\n"}, ast.Comment{Text: "// `handlers` - array<string> - Sensu handlers to execute, optional.\n"}, ast.Comment{Text: "// `status` - int - The event status, 0 (default) indicates \"OK\", 1 indicates \"WARNING\", 2 indicates \"CRITICAL\", any other value indicates an “UNKNOWN” or custom status.\n"}, ast.Comment{Text: "// `state` - string - The event state can be \"failing\", \"passing\" or \"flapping\". Defaults to \"passing\" for 0 status, \"failing\" otherwise. \n"}, ast.Comment{Text: "// `namespace` - string - The Sensu namespace. Defaults to \"default\".\n"}, ast.Comment{Text: "// `entityName` - string - Source of the event, it can contain [a-zA-Z0-9_.\\-] characters, other characters are replaced by underscore. Defaults to \"influxdb\".\n"}},
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 6,
							Line:   21,
						},
						File:   "sensu.flux",
						Source: "event",
						Start: ast.Position{
							Column: 1,
							Line:   21,
						},
					},
				},
				Name: "event",
			},
			Init: &ast.FunctionExpression{
				Arrow: nil,
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   57,
						},
						File:   "sensu.flux",
						Source: "(\n        url,\n        apiKey,\n        checkName,\n        text,\n        handlers=[],\n        status=0,\n        state=\"\",\n        namespace=\"default\",\n        entityName=\"influxdb\") => {\n    data = {\n        entity: {\n            entity_class: \"proxy\",\n            metadata: {\n                name: toSensuName(v: entityName),\n            },\n        },\n        check: {\n            output: text,\n            state: if state != \"\" then state else if status == 0 then \"passing\" else \"failing\",\n            status: status,\n            handlers: handlers,\n            // required\n            interval: 60,\n            metadata: {\n                name: toSensuName(v: checkName),\n            },\n        },\n    }\n    headers = {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        \"Authorization\": \"Key \" + apiKey,\n    }\n    enc = json.encode(v: data)\n\n    return http.post(headers: headers, url: url + \"/api/core/v2/namespaces/\" + namespace + \"/events\", data: enc)\n}",
						Start: ast.Position{
							Column: 9,
							Line:   21,
						},
					},
				},
				Body: &ast.Block{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 2,
								Line:   57,
							},
							File:   "sensu.flux",
							Source: "{\n    data = {\n        entity: {\n            entity_class: \"proxy\",\n            metadata: {\n                name: toSensuName(v: entityName),\n            },\n        },\n        check: {\n            output: text,\n            state: if state != \"\" then state else if status == 0 then \"passing\" else \"failing\",\n            status: status,\n            handlers: handlers,\n            // required\n            interval: 60,\n            metadata: {\n                name: toSensuName(v: checkName),\n            },\n        },\n    }\n    headers = {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        \"Authorization\": \"Key \" + apiKey,\n    }\n    enc = json.encode(v: data)\n\n    return http.post(headers: headers, url: url + \"/api/core/v2/namespaces/\" + namespace + \"/events\", data: enc)\n}",
							Start: ast.Position{
								Column: 35,
								Line:   30,
							},
						},
					},
					Body: []ast.Statement{&ast.VariableAssignment{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 6,
									Line:   49,
								},
								File:   "sensu.flux",
								Source: "data = {\n        entity: {\n            entity_class: \"proxy\",\n            metadata: {\n                name: toSensuName(v: entityName),\n            },\n        },\n        check: {\n            output: text,\n            state: if state != \"\" then state else if status == 0 then \"passing\" else \"failing\",\n            status: status,\n            handlers: handlers,\n            // required\n            interval: 60,\n            metadata: {\n                name: toSensuName(v: checkName),\n            },\n        },\n    }",
								Start: ast.Position{
									Column: 5,
									Line:   31,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 9,
										Line:   31,
									},
									File:   "sensu.flux",
									Source: "data",
									Start: ast.Position{
										Column: 5,
										Line:   31,
									},
								},
							},
							Name: "data",
						},
						Init: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 6,
										Line:   49,
									},
									File:   "sensu.flux",
									Source: "{\n        entity: {\n            entity_class: \"proxy\",\n            metadata: {\n                name: toSensuName(v: entityName),\n            },\n        },\n        check: {\n            output: text,\n            state: if state != \"\" then state else if status == 0 then \"passing\" else \"failing\",\n            status: status,\n            handlers: handlers,\n            // required\n            interval: 60,\n            metadata: {\n                name: toSensuName(v: checkName),\n            },\n        },\n    }",
									Start: ast.Position{
										Column: 12,
										Line:   31,
									},
								},
							},
							Lbrace: nil,
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 10,
											Line:   37,
										},
										File:   "sensu.flux",
										Source: "entity: {\n            entity_class: \"proxy\",\n            metadata: {\n                name: toSensuName(v: entityName),\n            },\n        }",
										Start: ast.Position{
											Column: 9,
											Line:   32,
										},
									},
								},
								Comma: nil,
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 15,
												Line:   32,
											},
											File:   "sensu.flux",
											Source: "entity",
											Start: ast.Position{
												Column: 9,
												Line:   32,
											},
										},
									},
									Name: "entity",
								},
								Separator: nil,
								Value: &ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 10,
												Line:   37,
											},
											File:   "sensu.flux",
											Source: "{\n            entity_class: \"proxy\",\n            metadata: {\n                name: toSensuName(v: entityName),\n            },\n        }",
											Start: ast.Position{
												Column: 17,
												Line:   32,
											},
										},
									},
									Lbrace: nil,
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 34,
													Line:   33,
												},
												File:   "sensu.flux",
												Source: "entity_class: \"proxy\"",
												Start: ast.Position{
													Column: 13,
													Line:   33,
												},
											},
										},
										Comma: nil,
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 25,
														Line:   33,
													},
													File:   "sensu.flux",
													Source: "entity_class",
													Start: ast.Position{
														Column: 13,
														Line:   33,
													},
												},
											},
											Name: "entity_class",
										},
										Separator: nil,
										Value: &ast.StringLiteral{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 34,
														Line:   33,
													},
													File:   "sensu.flux",
													Source: "\"proxy\"",
													Start: ast.Position{
														Column: 27,
														Line:   33,
													},
												},
											},
											Value: "proxy",
										},
									}, &ast.Property{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 14,
													Line:   36,
												},
												File:   "sensu.flux",
												Source: "metadata: {\n                name: toSensuName(v: entityName),\n            }",
												Start: ast.Position{
													Column: 13,
													Line:   34,
												},
											},
										},
										Comma: nil,
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 21,
														Line:   34,
													},
													File:   "sensu.flux",
													Source: "metadata",
													Start: ast.Position{
														Column: 13,
														Line:   34,
													},
												},
											},
											Name: "metadata",
										},
										Separator: nil,
										Value: &ast.ObjectExpression{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 14,
														Line:   36,
													},
													File:   "sensu.flux",
													Source: "{\n                name: toSensuName(v: entityName),\n            }",
													Start: ast.Position{
														Column: 23,
														Line:   34,
													},
												},
											},
											Lbrace: nil,
											Properties: []*ast.Property{&ast.Property{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 49,
															Line:   35,
														},
														File:   "sensu.flux",
														Source: "name: toSensuName(v: entityName)",
														Start: ast.Position{
															Column: 17,
															Line:   35,
														},
													},
												},
												Comma: nil,
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 21,
																Line:   35,
															},
															File:   "sensu.flux",
															Source: "name",
															Start: ast.Position{
																Column: 17,
																Line:   35,
															},
														},
													},
													Name: "name",
												},
												Separator: nil,
												Value: &ast.CallExpression{
													Arguments: []ast.Expression{&ast.ObjectExpression{
														BaseNode: ast.BaseNode{
															Comments: nil,
															Errors:   nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 48,
																	Line:   35,
																},
																File:   "sensu.flux",
																Source: "v: entityName",
																Start: ast.Position{
																	Column: 35,
																	Line:   35,
																},
															},
														},
														Lbrace: nil,
														Properties: []*ast.Property{&ast.Property{
															BaseNode: ast.BaseNode{
																Comments: nil,
																Errors:   nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 48,
																		Line:   35,
																	},
																	File:   "sensu.flux",
																	Source: "v: entityName",
																	Start: ast.Position{
																		Column: 35,
																		Line:   35,
																	},
																},
															},
															Comma: nil,
															Key: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Comments: nil,
																	Errors:   nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 36,
																			Line:   35,
																		},
																		File:   "sensu.flux",
																		Source: "v",
																		Start: ast.Position{
																			Column: 35,
																			Line:   35,
																		},
																	},
																},
																Name: "v",
															},
															Separator: nil,
															Value: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Comments: nil,
																	Errors:   nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 48,
																			Line:   35,
																		},
																		File:   "sensu.flux",
																		Source: "entityName",
																		Start: ast.Position{
																			Column: 38,
																			Line:   35,
																		},
																	},
																},
																Name: "entityName",
															},
														}},
														Rbrace: nil,
														With:   nil,
													}},
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 49,
																Line:   35,
															},
															File:   "sensu.flux",
															Source: "toSensuName(v: entityName)",
															Start: ast.Position{
																Column: 23,
																Line:   35,
															},
														},
													},
													Callee: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Comments: nil,
															Errors:   nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 34,
																	Line:   35,
																},
																File:   "sensu.flux",
																Source: "toSensuName",
																Start: ast.Position{
																	Column: 23,
																	Line:   35,
																},
															},
														},
														Name: "toSensuName",
													},
													Lparen: nil,
													Rparen: nil,
												},
											}},
											Rbrace: nil,
											With:   nil,
										},
									}},
									Rbrace: nil,
									With:   nil,
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 10,
											Line:   48,
										},
										File:   "sensu.flux",
										Source: "check: {\n            output: text,\n            state: if state != \"\" then state else if status == 0 then \"passing\" else \"failing\",\n            status: status,\n            handlers: handlers,\n            // required\n            interval: 60,\n            metadata: {\n                name: toSensuName(v: checkName),\n            },\n        }",
										Start: ast.Position{
											Column: 9,
											Line:   38,
										},
									},
								},
								Comma: nil,
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 14,
												Line:   38,
											},
											File:   "sensu.flux",
											Source: "check",
											Start: ast.Position{
												Column: 9,
												Line:   38,
											},
										},
									},
									Name: "check",
								},
								Separator: nil,
								Value: &ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 10,
												Line:   48,
											},
											File:   "sensu.flux",
											Source: "{\n            output: text,\n            state: if state != \"\" then state else if status == 0 then \"passing\" else \"failing\",\n            status: status,\n            handlers: handlers,\n            // required\n            interval: 60,\n            metadata: {\n                name: toSensuName(v: checkName),\n            },\n        }",
											Start: ast.Position{
												Column: 16,
												Line:   38,
											},
										},
									},
									Lbrace: nil,
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 25,
													Line:   39,
												},
												File:   "sensu.flux",
												Source: "output: text",
												Start: ast.Position{
													Column: 13,
													Line:   39,
												},
											},
										},
										Comma: nil,
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 19,
														Line:   39,
													},
													File:   "sensu.flux",
													Source: "output",
													Start: ast.Position{
														Column: 13,
														Line:   39,
													},
												},
											},
											Name: "output",
										},
										Separator: nil,
										Value: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 25,
														Line:   39,
													},
													File:   "sensu.flux",
													Source: "text",
													Start: ast.Position{
														Column: 21,
														Line:   39,
													},
												},
											},
											Name: "text",
										},
									}, &ast.Property{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 95,
													Line:   40,
												},
												File:   "sensu.flux",
												Source: "state: if state != \"\" then state else if status == 0 then \"passing\" else \"failing\"",
												Start: ast.Position{
													Column: 13,
													Line:   40,
												},
											},
										},
										Comma: nil,
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   40,
													},
													File:   "sensu.flux",
													Source: "state",
													Start: ast.Position{
														Column: 13,
														Line:   40,
													},
												},
											},
											Name: "state",
										},
										Separator: nil,
										Value: &ast.ConditionalExpression{
											Alternate: &ast.ConditionalExpression{
												Alternate: &ast.StringLiteral{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 95,
																Line:   40,
															},
															File:   "sensu.flux",
															Source: "\"failing\"",
															Start: ast.Position{
																Column: 86,
																Line:   40,
															},
														},
													},
													Value: "failing",
												},
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 95,
															Line:   40,
														},
														File:   "sensu.flux",
														Source: "if status == 0 then \"passing\" else \"failing\"",
														Start: ast.Position{
															Column: 51,
															Line:   40,
														},
													},
												},
												Consequent: &ast.StringLiteral{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 80,
																Line:   40,
															},
															File:   "sensu.flux",
															Source: "\"passing\"",
															Start: ast.Position{
																Column: 71,
																Line:   40,
															},
														},
													},
													Value: "passing",
												},
												Test: &ast.BinaryExpression{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 65,
																Line:   40,
															},
															File:   "sensu.flux",
															Source: "status == 0",
															Start: ast.Position{
																Column: 54,
																Line:   40,
															},
														},
													},
													Left: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Comments: nil,
															Errors:   nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 60,
																	Line:   40,
																},
																File:   "sensu.flux",
																Source: "status",
																Start: ast.Position{
																	Column: 54,
																	Line:   40,
																},
															},
														},
														Name: "status",
													},
													Operator: 17,
													Right: &ast.IntegerLiteral{
														BaseNode: ast.BaseNode{
															Comments: nil,
															Errors:   nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 65,
																	Line:   40,
																},
																File:   "sensu.flux",
																Source: "0",
																Start: ast.Position{
																	Column: 64,
																	Line:   40,
																},
															},
														},
														Value: int64(0),
													},
												},
												Tk_else: nil,
												Tk_if:   nil,
												Tk_then: nil,
											},
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 95,
														Line:   40,
													},
													File:   "sensu.flux",
													Source: "if state != \"\" then state else if status == 0 then \"passing\" else \"failing\"",
													Start: ast.Position{
														Column: 20,
														Line:   40,
													},
												},
											},
											Consequent: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 45,
															Line:   40,
														},
														File:   "sensu.flux",
														Source: "state",
														Start: ast.Position{
															Column: 40,
															Line:   40,
														},
													},
												},
												Name: "state",
											},
											Test: &ast.BinaryExpression{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 34,
															Line:   40,
														},
														File:   "sensu.flux",
														Source: "state != \"\"",
														Start: ast.Position{
															Column: 23,
															Line:   40,
														},
													},
												},
												Left: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 28,
																Line:   40,
															},
															File:   "sensu.flux",
															Source: "state",
															Start: ast.Position{
																Column: 23,
																Line:   40,
															},
														},
													},
													Name: "state",
												},
												Operator: 18,
												Right: &ast.StringLiteral{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 34,
																Line:   40,
															},
															File:   "sensu.flux",
															Source: "\"\"",
															Start: ast.Position{
																Column: 32,
																Line:   40,
															},
														},
													},
													Value: "",
												},
											},
											Tk_else: nil,
											Tk_if:   nil,
											Tk_then: nil,
										},
									}, &ast.Property{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 27,
													Line:   41,
												},
												File:   "sensu.flux",
												Source: "status: status",
												Start: ast.Position{
													Column: 13,
													Line:   41,
												},
											},
										},
										Comma: nil,
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 19,
														Line:   41,
													},
													File:   "sensu.flux",
													Source: "status",
													Start: ast.Position{
														Column: 13,
														Line:   41,
													},
												},
											},
											Name: "status",
										},
										Separator: nil,
										Value: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 27,
														Line:   41,
													},
													File:   "sensu.flux",
													Source: "status",
													Start: ast.Position{
														Column: 21,
														Line:   41,
													},
												},
											},
											Name: "status",
										},
									}, &ast.Property{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 31,
													Line:   42,
												},
												File:   "sensu.flux",
												Source: "handlers: handlers",
												Start: ast.Position{
													Column: 13,
													Line:   42,
												},
											},
										},
										Comma: nil,
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 21,
														Line:   42,
													},
													File:   "sensu.flux",
													Source: "handlers",
													Start: ast.Position{
														Column: 13,
														Line:   42,
													},
												},
											},
											Name: "handlers",
										},
										Separator: nil,
										Value: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 31,
														Line:   42,
													},
													File:   "sensu.flux",
													Source: "handlers",
													Start: ast.Position{
														Column: 23,
														Line:   42,
													},
												},
											},
											Name: "handlers",
										},
									}, &ast.Property{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 25,
													Line:   44,
												},
												File:   "sensu.flux",
												Source: "interval: 60",
												Start: ast.Position{
													Column: 13,
													Line:   44,
												},
											},
										},
										Comma: nil,
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: []ast.Comment{ast.Comment{Text: "// required\n"}},
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 21,
														Line:   44,
													},
													File:   "sensu.flux",
													Source: "interval",
													Start: ast.Position{
														Column: 13,
														Line:   44,
													},
												},
											},
											Name: "interval",
										},
										Separator: nil,
										Value: &ast.IntegerLiteral{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 25,
														Line:   44,
													},
													File:   "sensu.flux",
													Source: "60",
													Start: ast.Position{
														Column: 23,
														Line:   44,
													},
												},
											},
											Value: int64(60),
										},
									}, &ast.Property{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 14,
													Line:   47,
												},
												File:   "sensu.flux",
												Source: "metadata: {\n                name: toSensuName(v: checkName),\n            }",
												Start: ast.Position{
													Column: 13,
													Line:   45,
												},
											},
										},
										Comma: nil,
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 21,
														Line:   45,
													},
													File:   "sensu.flux",
													Source: "metadata",
													Start: ast.Position{
														Column: 13,
														Line:   45,
													},
												},
											},
											Name: "metadata",
										},
										Separator: nil,
										Value: &ast.ObjectExpression{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 14,
														Line:   47,
													},
													File:   "sensu.flux",
													Source: "{\n                name: toSensuName(v: checkName),\n            }",
													Start: ast.Position{
														Column: 23,
														Line:   45,
													},
												},
											},
											Lbrace: nil,
											Properties: []*ast.Property{&ast.Property{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 48,
															Line:   46,
														},
														File:   "sensu.flux",
														Source: "name: toSensuName(v: checkName)",
														Start: ast.Position{
															Column: 17,
															Line:   46,
														},
													},
												},
												Comma: nil,
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 21,
																Line:   46,
															},
															File:   "sensu.flux",
															Source: "name",
															Start: ast.Position{
																Column: 17,
																Line:   46,
															},
														},
													},
													Name: "name",
												},
												Separator: nil,
												Value: &ast.CallExpression{
													Arguments: []ast.Expression{&ast.ObjectExpression{
														BaseNode: ast.BaseNode{
															Comments: nil,
															Errors:   nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 47,
																	Line:   46,
																},
																File:   "sensu.flux",
																Source: "v: checkName",
																Start: ast.Position{
																	Column: 35,
																	Line:   46,
																},
															},
														},
														Lbrace: nil,
														Properties: []*ast.Property{&ast.Property{
															BaseNode: ast.BaseNode{
																Comments: nil,
																Errors:   nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 47,
																		Line:   46,
																	},
																	File:   "sensu.flux",
																	Source: "v: checkName",
																	Start: ast.Position{
																		Column: 35,
																		Line:   46,
																	},
																},
															},
															Comma: nil,
															Key: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Comments: nil,
																	Errors:   nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 36,
																			Line:   46,
																		},
																		File:   "sensu.flux",
																		Source: "v",
																		Start: ast.Position{
																			Column: 35,
																			Line:   46,
																		},
																	},
																},
																Name: "v",
															},
															Separator: nil,
															Value: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Comments: nil,
																	Errors:   nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 47,
																			Line:   46,
																		},
																		File:   "sensu.flux",
																		Source: "checkName",
																		Start: ast.Position{
																			Column: 38,
																			Line:   46,
																		},
																	},
																},
																Name: "checkName",
															},
														}},
														Rbrace: nil,
														With:   nil,
													}},
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 48,
																Line:   46,
															},
															File:   "sensu.flux",
															Source: "toSensuName(v: checkName)",
															Start: ast.Position{
																Column: 23,
																Line:   46,
															},
														},
													},
													Callee: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Comments: nil,
															Errors:   nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 34,
																	Line:   46,
																},
																File:   "sensu.flux",
																Source: "toSensuName",
																Start: ast.Position{
																	Column: 23,
																	Line:   46,
																},
															},
														},
														Name: "toSensuName",
													},
													Lparen: nil,
													Rparen: nil,
												},
											}},
											Rbrace: nil,
											With:   nil,
										},
									}},
									Rbrace: nil,
									With:   nil,
								},
							}},
							Rbrace: nil,
							With:   nil,
						},
					}, &ast.VariableAssignment{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 6,
									Line:   53,
								},
								File:   "sensu.flux",
								Source: "headers = {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        \"Authorization\": \"Key \" + apiKey,\n    }",
								Start: ast.Position{
									Column: 5,
									Line:   50,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 12,
										Line:   50,
									},
									File:   "sensu.flux",
									Source: "headers",
									Start: ast.Position{
										Column: 5,
										Line:   50,
									},
								},
							},
							Name: "headers",
						},
						Init: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 6,
										Line:   53,
									},
									File:   "sensu.flux",
									Source: "{\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        \"Authorization\": \"Key \" + apiKey,\n    }",
									Start: ast.Position{
										Column: 15,
										Line:   50,
									},
								},
							},
							Lbrace: nil,
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 58,
											Line:   51,
										},
										File:   "sensu.flux",
										Source: "\"Content-Type\": \"application/json; charset=utf-8\"",
										Start: ast.Position{
											Column: 9,
											Line:   51,
										},
									},
								},
								Comma: nil,
								Key: &ast.StringLiteral{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 23,
												Line:   51,
											},
											File:   "sensu.flux",
											Source: "\"Content-Type\"",
											Start: ast.Position{
												Column: 9,
												Line:   51,
											},
										},
									},
									Value: "Content-Type",
								},
								Separator: nil,
								Value: &ast.StringLiteral{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 58,
												Line:   51,
											},
											File:   "sensu.flux",
											Source: "\"application/json; charset=utf-8\"",
											Start: ast.Position{
												Column: 25,
												Line:   51,
											},
										},
									},
									Value: "application/json; charset=utf-8",
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 41,
											Line:   52,
										},
										File:   "sensu.flux",
										Source: "\"Authorization\": \"Key \" + apiKey",
										Start: ast.Position{
											Column: 9,
											Line:   52,
										},
									},
								},
								Comma: nil,
								Key: &ast.StringLiteral{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 24,
												Line:   52,
											},
											File:   "sensu.flux",
											Source: "\"Authorization\"",
											Start: ast.Position{
												Column: 9,
												Line:   52,
											},
										},
									},
									Value: "Authorization",
								},
								Separator: nil,
								Value: &ast.BinaryExpression{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 41,
												Line:   52,
											},
											File:   "sensu.flux",
											Source: "\"Key \" + apiKey",
											Start: ast.Position{
												Column: 26,
												Line:   52,
											},
										},
									},
									Left: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 32,
													Line:   52,
												},
												File:   "sensu.flux",
												Source: "\"Key \"",
												Start: ast.Position{
													Column: 26,
													Line:   52,
												},
											},
										},
										Value: "Key ",
									},
									Operator: 5,
									Right: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 41,
													Line:   52,
												},
												File:   "sensu.flux",
												Source: "apiKey",
												Start: ast.Position{
													Column: 35,
													Line:   52,
												},
											},
										},
										Name: "apiKey",
									},
								},
							}},
							Rbrace: nil,
							With:   nil,
						},
					}, &ast.VariableAssignment{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 31,
									Line:   54,
								},
								File:   "sensu.flux",
								Source: "enc = json.encode(v: data)",
								Start: ast.Position{
									Column: 5,
									Line:   54,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 8,
										Line:   54,
									},
									File:   "sensu.flux",
									Source: "enc",
									Start: ast.Position{
										Column: 5,
										Line:   54,
									},
								},
							},
							Name: "enc",
						},
						Init: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 30,
											Line:   54,
										},
										File:   "sensu.flux",
										Source: "v: data",
										Start: ast.Position{
											Column: 23,
											Line:   54,
										},
									},
								},
								Lbrace: nil,
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 30,
												Line:   54,
											},
											File:   "sensu.flux",
											Source: "v: data",
											Start: ast.Position{
												Column: 23,
												Line:   54,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 24,
													Line:   54,
												},
												File:   "sensu.flux",
												Source: "v",
												Start: ast.Position{
													Column: 23,
													Line:   54,
												},
											},
										},
										Name: "v",
									},
									Separator: nil,
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   54,
												},
												File:   "sensu.flux",
												Source: "data",
												Start: ast.Position{
													Column: 26,
													Line:   54,
												},
											},
										},
										Name: "data",
									},
								}},
								Rbrace: nil,
								With:   nil,
							}},
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 31,
										Line:   54,
									},
									File:   "sensu.flux",
									Source: "json.encode(v: data)",
									Start: ast.Position{
										Column: 11,
										Line:   54,
									},
								},
							},
							Callee: &ast.MemberExpression{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 22,
											Line:   54,
										},
										File:   "sensu.flux",
										Source: "json.encode",
										Start: ast.Position{
											Column: 11,
											Line:   54,
										},
									},
								},
								Lbrack: nil,
								Object: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 15,
												Line:   54,
											},
											File:   "sensu.flux",
											Source: "json",
											Start: ast.Position{
												Column: 11,
												Line:   54,
											},
										},
									},
									Name: "json",
								},
								Property: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 22,
												Line:   54,
											},
											File:   "sensu.flux",
											Source: "encode",
											Start: ast.Position{
												Column: 16,
												Line:   54,
											},
										},
									},
									Name: "encode",
								},
								Rbrack: nil,
							},
							Lparen: nil,
							Rparen: nil,
						},
					}, &ast.ReturnStatement{
						Argument: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 112,
											Line:   56,
										},
										File:   "sensu.flux",
										Source: "headers: headers, url: url + \"/api/core/v2/namespaces/\" + namespace + \"/events\", data: enc",
										Start: ast.Position{
											Column: 22,
											Line:   56,
										},
									},
								},
								Lbrace: nil,
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 38,
												Line:   56,
											},
											File:   "sensu.flux",
											Source: "headers: headers",
											Start: ast.Position{
												Column: 22,
												Line:   56,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 29,
													Line:   56,
												},
												File:   "sensu.flux",
												Source: "headers",
												Start: ast.Position{
													Column: 22,
													Line:   56,
												},
											},
										},
										Name: "headers",
									},
									Separator: nil,
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 38,
													Line:   56,
												},
												File:   "sensu.flux",
												Source: "headers",
												Start: ast.Position{
													Column: 31,
													Line:   56,
												},
											},
										},
										Name: "headers",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 101,
												Line:   56,
											},
											File:   "sensu.flux",
											Source: "url: url + \"/api/core/v2/namespaces/\" + namespace + \"/events\"",
											Start: ast.Position{
												Column: 40,
												Line:   56,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 43,
													Line:   56,
												},
												File:   "sensu.flux",
												Source: "url",
												Start: ast.Position{
													Column: 40,
													Line:   56,
												},
											},
										},
										Name: "url",
									},
									Separator: nil,
									Value: &ast.BinaryExpression{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 101,
													Line:   56,
												},
												File:   "sensu.flux",
												Source: "url + \"/api/core/v2/namespaces/\" + namespace + \"/events\"",
												Start: ast.Position{
													Column: 45,
													Line:   56,
												},
											},
										},
										Left: &ast.BinaryExpression{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 89,
														Line:   56,
													},
													File:   "sensu.flux",
													Source: "url + \"/api/core/v2/namespaces/\" + namespace",
													Start: ast.Position{
														Column: 45,
														Line:   56,
													},
												},
											},
											Left: &ast.BinaryExpression{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 77,
															Line:   56,
														},
														File:   "sensu.flux",
														Source: "url + \"/api/core/v2/namespaces/\"",
														Start: ast.Position{
															Column: 45,
															Line:   56,
														},
													},
												},
												Left: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 48,
																Line:   56,
															},
															File:   "sensu.flux",
															Source: "url",
															Start: ast.Position{
																Column: 45,
																Line:   56,
															},
														},
													},
													Name: "url",
												},
												Operator: 5,
												Right: &ast.StringLiteral{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 77,
																Line:   56,
															},
															File:   "sensu.flux",
															Source: "\"/api/core/v2/namespaces/\"",
															Start: ast.Position{
																Column: 51,
																Line:   56,
															},
														},
													},
													Value: "/api/core/v2/namespaces/",
												},
											},
											Operator: 5,
											Right: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 89,
															Line:   56,
														},
														File:   "sensu.flux",
														Source: "namespace",
														Start: ast.Position{
															Column: 80,
															Line:   56,
														},
													},
												},
												Name: "namespace",
											},
										},
										Operator: 5,
										Right: &ast.StringLiteral{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 101,
														Line:   56,
													},
													File:   "sensu.flux",
													Source: "\"/events\"",
													Start: ast.Position{
														Column: 92,
														Line:   56,
													},
												},
											},
											Value: "/events",
										},
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 112,
												Line:   56,
											},
											File:   "sensu.flux",
											Source: "data: enc",
											Start: ast.Position{
												Column: 103,
												Line:   56,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 107,
													Line:   56,
												},
												File:   "sensu.flux",
												Source: "data",
												Start: ast.Position{
													Column: 103,
													Line:   56,
												},
											},
										},
										Name: "data",
									},
									Separator: nil,
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 112,
													Line:   56,
												},
												File:   "sensu.flux",
												Source: "enc",
												Start: ast.Position{
													Column: 109,
													Line:   56,
												},
											},
										},
										Name: "enc",
									},
								}},
								Rbrace: nil,
								With:   nil,
							}},
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 113,
										Line:   56,
									},
									File:   "sensu.flux",
									Source: "http.post(headers: headers, url: url + \"/api/core/v2/namespaces/\" + namespace + \"/events\", data: enc)",
									Start: ast.Position{
										Column: 12,
										Line:   56,
									},
								},
							},
							Callee: &ast.MemberExpression{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 21,
											Line:   56,
										},
										File:   "sensu.flux",
										Source: "http.post",
										Start: ast.Position{
											Column: 12,
											Line:   56,
										},
									},
								},
								Lbrack: nil,
								Object: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 16,
												Line:   56,
											},
											File:   "sensu.flux",
											Source: "http",
											Start: ast.Position{
												Column: 12,
												Line:   56,
											},
										},
									},
									Name: "http",
								},
								Property: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 21,
												Line:   56,
											},
											File:   "sensu.flux",
											Source: "post",
											Start: ast.Position{
												Column: 17,
												Line:   56,
											},
										},
									},
									Name: "post",
								},
								Rbrack: nil,
							},
							Lparen: nil,
							Rparen: nil,
						},
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 113,
									Line:   56,
								},
								File:   "sensu.flux",
								Source: "return http.post(headers: headers, url: url + \"/api/core/v2/namespaces/\" + namespace + \"/events\", data: enc)",
								Start: ast.Position{
									Column: 5,
									Line:   56,
								},
							},
						},
					}},
					Lbrace: nil,
					Rbrace: nil,
				},
				Lparen: nil,
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 12,
								Line:   22,
							},
							File:   "sensu.flux",
							Source: "url",
							Start: ast.Position{
								Column: 9,
								Line:   22,
							},
						},
					},
					Comma: nil,
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 12,
									Line:   22,
								},
								File:   "sensu.flux",
								Source: "url",
								Start: ast.Position{
									Column: 9,
									Line:   22,
								},
							},
						},
						Name: "url",
					},
					Separator: nil,
					Value:     nil,
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 15,
								Line:   23,
							},
							File:   "sensu.flux",
							Source: "apiKey",
							Start: ast.Position{
								Column: 9,
								Line:   23,
							},
						},
					},
					Comma: nil,
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 15,
									Line:   23,
								},
								File:   "sensu.flux",
								Source: "apiKey",
								Start: ast.Position{
									Column: 9,
									Line:   23,
								},
							},
						},
						Name: "apiKey",
					},
					Separator: nil,
					Value:     nil,
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 18,
								Line:   24,
							},
							File:   "sensu.flux",
							Source: "checkName",
							Start: ast.Position{
								Column: 9,
								Line:   24,
							},
						},
					},
					Comma: nil,
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 18,
									Line:   24,
								},
								File:   "sensu.flux",
								Source: "checkName",
								Start: ast.Position{
									Column: 9,
									Line:   24,
								},
							},
						},
						Name: "checkName",
					},
					Separator: nil,
					Value:     nil,
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 13,
								Line:   25,
							},
							File:   "sensu.flux",
							Source: "text",
							Start: ast.Position{
								Column: 9,
								Line:   25,
							},
						},
					},
					Comma: nil,
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 13,
									Line:   25,
								},
								File:   "sensu.flux",
								Source: "text",
								Start: ast.Position{
									Column: 9,
									Line:   25,
								},
							},
						},
						Name: "text",
					},
					Separator: nil,
					Value:     nil,
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 20,
								Line:   26,
							},
							File:   "sensu.flux",
							Source: "handlers=[]",
							Start: ast.Position{
								Column: 9,
								Line:   26,
							},
						},
					},
					Comma: nil,
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 17,
									Line:   26,
								},
								File:   "sensu.flux",
								Source: "handlers",
								Start: ast.Position{
									Column: 9,
									Line:   26,
								},
							},
						},
						Name: "handlers",
					},
					Separator: nil,
					Value: &ast.ArrayExpression{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 20,
									Line:   26,
								},
								File:   "sensu.flux",
								Source: "[]",
								Start: ast.Position{
									Column: 18,
									Line:   26,
								},
							},
						},
						Elements: []ast.Expression{},
						Lbrack:   nil,
						Rbrack:   nil,
					},
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 17,
								Line:   27,
							},
							File:   "sensu.flux",
							Source: "status=0",
							Start: ast.Position{
								Column: 9,
								Line:   27,
							},
						},
					},
					Comma: nil,
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 15,
									Line:   27,
								},
								File:   "sensu.flux",
								Source: "status",
								Start: ast.Position{
									Column: 9,
									Line:   27,
								},
							},
						},
						Name: "status",
					},
					Separator: nil,
					Value: &ast.IntegerLiteral{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 17,
									Line:   27,
								},
								File:   "sensu.flux",
								Source: "0",
								Start: ast.Position{
									Column: 16,
									Line:   27,
								},
							},
						},
						Value: int64(0),
					},
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 17,
								Line:   28,
							},
							File:   "sensu.flux",
							Source: "state=\"\"",
							Start: ast.Position{
								Column: 9,
								Line:   28,
							},
						},
					},
					Comma: nil,
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 14,
									Line:   28,
								},
								File:   "sensu.flux",
								Source: "state",
								Start: ast.Position{
									Column: 9,
									Line:   28,
								},
							},
						},
						Name: "state",
					},
					Separator: nil,
					Value: &ast.StringLiteral{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 17,
									Line:   28,
								},
								File:   "sensu.flux",
								Source: "\"\"",
								Start: ast.Position{
									Column: 15,
									Line:   28,
								},
							},
						},
						Value: "",
					},
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 28,
								Line:   29,
							},
							File:   "sensu.flux",
							Source: "namespace=\"default\"",
							Start: ast.Position{
								Column: 9,
								Line:   29,
							},
						},
					},
					Comma: nil,
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 18,
									Line:   29,
								},
								File:   "sensu.flux",
								Source: "namespace",
								Start: ast.Position{
									Column: 9,
									Line:   29,
								},
							},
						},
						Name: "namespace",
					},
					Separator: nil,
					Value: &ast.StringLiteral{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 28,
									Line:   29,
								},
								File:   "sensu.flux",
								Source: "\"default\"",
								Start: ast.Position{
									Column: 19,
									Line:   29,
								},
							},
						},
						Value: "default",
					},
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 30,
								Line:   30,
							},
							File:   "sensu.flux",
							Source: "entityName=\"influxdb\"",
							Start: ast.Position{
								Column: 9,
								Line:   30,
							},
						},
					},
					Comma: nil,
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 19,
									Line:   30,
								},
								File:   "sensu.flux",
								Source: "entityName",
								Start: ast.Position{
									Column: 9,
									Line:   30,
								},
							},
						},
						Name: "entityName",
					},
					Separator: nil,
					Value: &ast.StringLiteral{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 30,
									Line:   30,
								},
								File:   "sensu.flux",
								Source: "\"influxdb\"",
								Start: ast.Position{
									Column: 20,
									Line:   30,
								},
							},
						},
						Value: "influxdb",
					},
				}},
				Rparan: nil,
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 6,
						Line:   92,
					},
					File:   "sensu.flux",
					Source: "endpoint = (\n        url,\n        apiKey,\n        handlers=[],\n        namespace=\"default\",\n        entityName=\"influxdb\") => (mapFn) => (tables=<-) => tables\n    |> map(\n        fn: (r) => {\n            obj = mapFn(r: r)\n\n            return {r with\n                _sent: string(\n                    v: 2 == event(\n                        url: url,\n                        apiKey: apiKey,\n                        checkName: obj.checkName,\n                        text: obj.text,\n                        handlers: handlers,\n                        status: obj.status,\n                        namespace: namespace,\n                        entityName: entityName,\n                    ) / 100,\n                ),\n            }\n        },\n    )",
					Start: ast.Position{
						Column: 1,
						Line:   67,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: []ast.Comment{ast.Comment{Text: "// `endpoint` creates a factory function that creates a target function for pipeline `|>` to send event to Sensu for each table row.\n"}, ast.Comment{Text: "// `url` - string - base URL of [Sensu API](https://docs.sensu.io/sensu-go/latest/migrate/#architecture) without a trailing slash, for example \"http://localhost:8080\" .\n"}, ast.Comment{Text: "// `apiKey` - string - Sensu [API Key](https://docs.sensu.io/sensu-go/latest/operations/control-access/).\n"}, ast.Comment{Text: "// `handlers` - array<string> - Sensu handlers to execute.\n"}, ast.Comment{Text: "// `namespace` - string - The Sensu namespace. Defaults to \"default\".\n"}, ast.Comment{Text: "// `entityName` - string - Source of the event, it can contain [a-zA-Z0-9_.\\-] characters, other characters are replaced by underscore. Defaults to \"influxdb\".\n"}, ast.Comment{Text: "// The returned factory function accepts a `mapFn` parameter.\n"}, ast.Comment{Text: "// The `mapFn` must return an object with `checkName`, `text`, and `status`, as defined in the `event` function arguments.\n"}},
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 9,
							Line:   67,
						},
						File:   "sensu.flux",
						Source: "endpoint",
						Start: ast.Position{
							Column: 1,
							Line:   67,
						},
					},
				},
				Name: "endpoint",
			},
			Init: &ast.FunctionExpression{
				Arrow: nil,
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 6,
							Line:   92,
						},
						File:   "sensu.flux",
						Source: "(\n        url,\n        apiKey,\n        handlers=[],\n        namespace=\"default\",\n        entityName=\"influxdb\") => (mapFn) => (tables=<-) => tables\n    |> map(\n        fn: (r) => {\n            obj = mapFn(r: r)\n\n            return {r with\n                _sent: string(\n                    v: 2 == event(\n                        url: url,\n                        apiKey: apiKey,\n                        checkName: obj.checkName,\n                        text: obj.text,\n                        handlers: handlers,\n                        status: obj.status,\n                        namespace: namespace,\n                        entityName: entityName,\n                    ) / 100,\n                ),\n            }\n        },\n    )",
						Start: ast.Position{
							Column: 12,
							Line:   67,
						},
					},
				},
				Body: &ast.FunctionExpression{
					Arrow: nil,
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 6,
								Line:   92,
							},
							File:   "sensu.flux",
							Source: "(mapFn) => (tables=<-) => tables\n    |> map(\n        fn: (r) => {\n            obj = mapFn(r: r)\n\n            return {r with\n                _sent: string(\n                    v: 2 == event(\n                        url: url,\n                        apiKey: apiKey,\n                        checkName: obj.checkName,\n                        text: obj.text,\n                        handlers: handlers,\n                        status: obj.status,\n                        namespace: namespace,\n                        entityName: entityName,\n                    ) / 100,\n                ),\n            }\n        },\n    )",
							Start: ast.Position{
								Column: 35,
								Line:   72,
							},
						},
					},
					Body: &ast.FunctionExpression{
						Arrow: nil,
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 6,
									Line:   92,
								},
								File:   "sensu.flux",
								Source: "(tables=<-) => tables\n    |> map(\n        fn: (r) => {\n            obj = mapFn(r: r)\n\n            return {r with\n                _sent: string(\n                    v: 2 == event(\n                        url: url,\n                        apiKey: apiKey,\n                        checkName: obj.checkName,\n                        text: obj.text,\n                        handlers: handlers,\n                        status: obj.status,\n                        namespace: namespace,\n                        entityName: entityName,\n                    ) / 100,\n                ),\n            }\n        },\n    )",
								Start: ast.Position{
									Column: 46,
									Line:   72,
								},
							},
						},
						Body: &ast.PipeExpression{
							Argument: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 67,
											Line:   72,
										},
										File:   "sensu.flux",
										Source: "tables",
										Start: ast.Position{
											Column: 61,
											Line:   72,
										},
									},
								},
								Name: "tables",
							},
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 6,
										Line:   92,
									},
									File:   "sensu.flux",
									Source: "tables\n    |> map(\n        fn: (r) => {\n            obj = mapFn(r: r)\n\n            return {r with\n                _sent: string(\n                    v: 2 == event(\n                        url: url,\n                        apiKey: apiKey,\n                        checkName: obj.checkName,\n                        text: obj.text,\n                        handlers: handlers,\n                        status: obj.status,\n                        namespace: namespace,\n                        entityName: entityName,\n                    ) / 100,\n                ),\n            }\n        },\n    )",
									Start: ast.Position{
										Column: 61,
										Line:   72,
									},
								},
							},
							Call: &ast.CallExpression{
								Arguments: []ast.Expression{&ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 10,
												Line:   91,
											},
											File:   "sensu.flux",
											Source: "fn: (r) => {\n            obj = mapFn(r: r)\n\n            return {r with\n                _sent: string(\n                    v: 2 == event(\n                        url: url,\n                        apiKey: apiKey,\n                        checkName: obj.checkName,\n                        text: obj.text,\n                        handlers: handlers,\n                        status: obj.status,\n                        namespace: namespace,\n                        entityName: entityName,\n                    ) / 100,\n                ),\n            }\n        }",
											Start: ast.Position{
												Column: 9,
												Line:   74,
											},
										},
									},
									Lbrace: nil,
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 10,
													Line:   91,
												},
												File:   "sensu.flux",
												Source: "fn: (r) => {\n            obj = mapFn(r: r)\n\n            return {r with\n                _sent: string(\n                    v: 2 == event(\n                        url: url,\n                        apiKey: apiKey,\n                        checkName: obj.checkName,\n                        text: obj.text,\n                        handlers: handlers,\n                        status: obj.status,\n                        namespace: namespace,\n                        entityName: entityName,\n                    ) / 100,\n                ),\n            }\n        }",
												Start: ast.Position{
													Column: 9,
													Line:   74,
												},
											},
										},
										Comma: nil,
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 11,
														Line:   74,
													},
													File:   "sensu.flux",
													Source: "fn",
													Start: ast.Position{
														Column: 9,
														Line:   74,
													},
												},
											},
											Name: "fn",
										},
										Separator: nil,
										Value: &ast.FunctionExpression{
											Arrow: nil,
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 10,
														Line:   91,
													},
													File:   "sensu.flux",
													Source: "(r) => {\n            obj = mapFn(r: r)\n\n            return {r with\n                _sent: string(\n                    v: 2 == event(\n                        url: url,\n                        apiKey: apiKey,\n                        checkName: obj.checkName,\n                        text: obj.text,\n                        handlers: handlers,\n                        status: obj.status,\n                        namespace: namespace,\n                        entityName: entityName,\n                    ) / 100,\n                ),\n            }\n        }",
													Start: ast.Position{
														Column: 13,
														Line:   74,
													},
												},
											},
											Body: &ast.Block{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 10,
															Line:   91,
														},
														File:   "sensu.flux",
														Source: "{\n            obj = mapFn(r: r)\n\n            return {r with\n                _sent: string(\n                    v: 2 == event(\n                        url: url,\n                        apiKey: apiKey,\n                        checkName: obj.checkName,\n                        text: obj.text,\n                        handlers: handlers,\n                        status: obj.status,\n                        namespace: namespace,\n                        entityName: entityName,\n                    ) / 100,\n                ),\n            }\n        }",
														Start: ast.Position{
															Column: 20,
															Line:   74,
														},
													},
												},
												Body: []ast.Statement{&ast.VariableAssignment{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 30,
																Line:   75,
															},
															File:   "sensu.flux",
															Source: "obj = mapFn(r: r)",
															Start: ast.Position{
																Column: 13,
																Line:   75,
															},
														},
													},
													ID: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Comments: nil,
															Errors:   nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 16,
																	Line:   75,
																},
																File:   "sensu.flux",
																Source: "obj",
																Start: ast.Position{
																	Column: 13,
																	Line:   75,
																},
															},
														},
														Name: "obj",
													},
													Init: &ast.CallExpression{
														Arguments: []ast.Expression{&ast.ObjectExpression{
															BaseNode: ast.BaseNode{
																Comments: nil,
																Errors:   nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 29,
																		Line:   75,
																	},
																	File:   "sensu.flux",
																	Source: "r: r",
																	Start: ast.Position{
																		Column: 25,
																		Line:   75,
																	},
																},
															},
															Lbrace: nil,
															Properties: []*ast.Property{&ast.Property{
																BaseNode: ast.BaseNode{
																	Comments: nil,
																	Errors:   nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 29,
																			Line:   75,
																		},
																		File:   "sensu.flux",
																		Source: "r: r",
																		Start: ast.Position{
																			Column: 25,
																			Line:   75,
																		},
																	},
																},
																Comma: nil,
																Key: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Comments: nil,
																		Errors:   nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 26,
																				Line:   75,
																			},
																			File:   "sensu.flux",
																			Source: "r",
																			Start: ast.Position{
																				Column: 25,
																				Line:   75,
																			},
																		},
																	},
																	Name: "r",
																},
																Separator: nil,
																Value: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Comments: nil,
																		Errors:   nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 29,
																				Line:   75,
																			},
																			File:   "sensu.flux",
																			Source: "r",
																			Start: ast.Position{
																				Column: 28,
																				Line:   75,
																			},
																		},
																	},
																	Name: "r",
																},
															}},
															Rbrace: nil,
															With:   nil,
														}},
														BaseNode: ast.BaseNode{
															Comments: nil,
															Errors:   nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 30,
																	Line:   75,
																},
																File:   "sensu.flux",
																Source: "mapFn(r: r)",
																Start: ast.Position{
																	Column: 19,
																	Line:   75,
																},
															},
														},
														Callee: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Comments: nil,
																Errors:   nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 24,
																		Line:   75,
																	},
																	File:   "sensu.flux",
																	Source: "mapFn",
																	Start: ast.Position{
																		Column: 19,
																		Line:   75,
																	},
																},
															},
															Name: "mapFn",
														},
														Lparen: nil,
														Rparen: nil,
													},
												}, &ast.ReturnStatement{
													Argument: &ast.ObjectExpression{
														BaseNode: ast.BaseNode{
															Comments: nil,
															Errors:   nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 14,
																	Line:   90,
																},
																File:   "sensu.flux",
																Source: "{r with\n                _sent: string(\n                    v: 2 == event(\n                        url: url,\n                        apiKey: apiKey,\n                        checkName: obj.checkName,\n                        text: obj.text,\n                        handlers: handlers,\n                        status: obj.status,\n                        namespace: namespace,\n                        entityName: entityName,\n                    ) / 100,\n                ),\n            }",
																Start: ast.Position{
																	Column: 20,
																	Line:   77,
																},
															},
														},
														Lbrace: nil,
														Properties: []*ast.Property{&ast.Property{
															BaseNode: ast.BaseNode{
																Comments: nil,
																Errors:   nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 18,
																		Line:   89,
																	},
																	File:   "sensu.flux",
																	Source: "_sent: string(\n                    v: 2 == event(\n                        url: url,\n                        apiKey: apiKey,\n                        checkName: obj.checkName,\n                        text: obj.text,\n                        handlers: handlers,\n                        status: obj.status,\n                        namespace: namespace,\n                        entityName: entityName,\n                    ) / 100,\n                )",
																	Start: ast.Position{
																		Column: 17,
																		Line:   78,
																	},
																},
															},
															Comma: nil,
															Key: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Comments: nil,
																	Errors:   nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 22,
																			Line:   78,
																		},
																		File:   "sensu.flux",
																		Source: "_sent",
																		Start: ast.Position{
																			Column: 17,
																			Line:   78,
																		},
																	},
																},
																Name: "_sent",
															},
															Separator: nil,
															Value: &ast.CallExpression{
																Arguments: []ast.Expression{&ast.ObjectExpression{
																	BaseNode: ast.BaseNode{
																		Comments: nil,
																		Errors:   nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 28,
																				Line:   88,
																			},
																			File:   "sensu.flux",
																			Source: "v: 2 == event(\n                        url: url,\n                        apiKey: apiKey,\n                        checkName: obj.checkName,\n                        text: obj.text,\n                        handlers: handlers,\n                        status: obj.status,\n                        namespace: namespace,\n                        entityName: entityName,\n                    ) / 100",
																			Start: ast.Position{
																				Column: 21,
																				Line:   79,
																			},
																		},
																	},
																	Lbrace: nil,
																	Properties: []*ast.Property{&ast.Property{
																		BaseNode: ast.BaseNode{
																			Comments: nil,
																			Errors:   nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 28,
																					Line:   88,
																				},
																				File:   "sensu.flux",
																				Source: "v: 2 == event(\n                        url: url,\n                        apiKey: apiKey,\n                        checkName: obj.checkName,\n                        text: obj.text,\n                        handlers: handlers,\n                        status: obj.status,\n                        namespace: namespace,\n                        entityName: entityName,\n                    ) / 100",
																				Start: ast.Position{
																					Column: 21,
																					Line:   79,
																				},
																			},
																		},
																		Comma: nil,
																		Key: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Comments: nil,
																				Errors:   nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 22,
																						Line:   79,
																					},
																					File:   "sensu.flux",
																					Source: "v",
																					Start: ast.Position{
																						Column: 21,
																						Line:   79,
																					},
																				},
																			},
																			Name: "v",
																		},
																		Separator: nil,
																		Value: &ast.BinaryExpression{
																			BaseNode: ast.BaseNode{
																				Comments: nil,
																				Errors:   nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 28,
																						Line:   88,
																					},
																					File:   "sensu.flux",
																					Source: "2 == event(\n                        url: url,\n                        apiKey: apiKey,\n                        checkName: obj.checkName,\n                        text: obj.text,\n                        handlers: handlers,\n                        status: obj.status,\n                        namespace: namespace,\n                        entityName: entityName,\n                    ) / 100",
																					Start: ast.Position{
																						Column: 24,
																						Line:   79,
																					},
																				},
																			},
																			Left: &ast.IntegerLiteral{
																				BaseNode: ast.BaseNode{
																					Comments: nil,
																					Errors:   nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 25,
																							Line:   79,
																						},
																						File:   "sensu.flux",
																						Source: "2",
																						Start: ast.Position{
																							Column: 24,
																							Line:   79,
																						},
																					},
																				},
																				Value: int64(2),
																			},
																			Operator: 17,
																			Right: &ast.BinaryExpression{
																				BaseNode: ast.BaseNode{
																					Comments: nil,
																					Errors:   nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 28,
																							Line:   88,
																						},
																						File:   "sensu.flux",
																						Source: "event(\n                        url: url,\n                        apiKey: apiKey,\n                        checkName: obj.checkName,\n                        text: obj.text,\n                        handlers: handlers,\n                        status: obj.status,\n                        namespace: namespace,\n                        entityName: entityName,\n                    ) / 100",
																						Start: ast.Position{
																							Column: 29,
																							Line:   79,
																						},
																					},
																				},
																				Left: &ast.CallExpression{
																					Arguments: []ast.Expression{&ast.ObjectExpression{
																						BaseNode: ast.BaseNode{
																							Comments: nil,
																							Errors:   nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 47,
																									Line:   87,
																								},
																								File:   "sensu.flux",
																								Source: "url: url,\n                        apiKey: apiKey,\n                        checkName: obj.checkName,\n                        text: obj.text,\n                        handlers: handlers,\n                        status: obj.status,\n                        namespace: namespace,\n                        entityName: entityName",
																								Start: ast.Position{
																									Column: 25,
																									Line:   80,
																								},
																							},
																						},
																						Lbrace: nil,
																						Properties: []*ast.Property{&ast.Property{
																							BaseNode: ast.BaseNode{
																								Comments: nil,
																								Errors:   nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 33,
																										Line:   80,
																									},
																									File:   "sensu.flux",
																									Source: "url: url",
																									Start: ast.Position{
																										Column: 25,
																										Line:   80,
																									},
																								},
																							},
																							Comma: nil,
																							Key: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Comments: nil,
																									Errors:   nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 28,
																											Line:   80,
																										},
																										File:   "sensu.flux",
																										Source: "url",
																										Start: ast.Position{
																											Column: 25,
																											Line:   80,
																										},
																									},
																								},
																								Name: "url",
																							},
																							Separator: nil,
																							Value: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Comments: nil,
																									Errors:   nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 33,
																											Line:   80,
																										},
																										File:   "sensu.flux",
																										Source: "url",
																										Start: ast.Position{
																											Column: 30,
																											Line:   80,
																										},
																									},
																								},
																								Name: "url",
																							},
																						}, &ast.Property{
																							BaseNode: ast.BaseNode{
																								Comments: nil,
																								Errors:   nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 39,
																										Line:   81,
																									},
																									File:   "sensu.flux",
																									Source: "apiKey: apiKey",
																									Start: ast.Position{
																										Column: 25,
																										Line:   81,
																									},
																								},
																							},
																							Comma: nil,
																							Key: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Comments: nil,
																									Errors:   nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 31,
																											Line:   81,
																										},
																										File:   "sensu.flux",
																										Source: "apiKey",
																										Start: ast.Position{
																											Column: 25,
																											Line:   81,
																										},
																									},
																								},
																								Name: "apiKey",
																							},
																							Separator: nil,
																							Value: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Comments: nil,
																									Errors:   nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 39,
																											Line:   81,
																										},
																										File:   "sensu.flux",
																										Source: "apiKey",
																										Start: ast.Position{
																											Column: 33,
																											Line:   81,
																										},
																									},
																								},
																								Name: "apiKey",
																							},
																						}, &ast.Property{
																							BaseNode: ast.BaseNode{
																								Comments: nil,
																								Errors:   nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 49,
																										Line:   82,
																									},
																									File:   "sensu.flux",
																									Source: "checkName: obj.checkName",
																									Start: ast.Position{
																										Column: 25,
																										Line:   82,
																									},
																								},
																							},
																							Comma: nil,
																							Key: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Comments: nil,
																									Errors:   nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 34,
																											Line:   82,
																										},
																										File:   "sensu.flux",
																										Source: "checkName",
																										Start: ast.Position{
																											Column: 25,
																											Line:   82,
																										},
																									},
																								},
																								Name: "checkName",
																							},
																							Separator: nil,
																							Value: &ast.MemberExpression{
																								BaseNode: ast.BaseNode{
																									Comments: nil,
																									Errors:   nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 49,
																											Line:   82,
																										},
																										File:   "sensu.flux",
																										Source: "obj.checkName",
																										Start: ast.Position{
																											Column: 36,
																											Line:   82,
																										},
																									},
																								},
																								Lbrack: nil,
																								Object: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Comments: nil,
																										Errors:   nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 39,
																												Line:   82,
																											},
																											File:   "sensu.flux",
																											Source: "obj",
																											Start: ast.Position{
																												Column: 36,
																												Line:   82,
																											},
																										},
																									},
																									Name: "obj",
																								},
																								Property: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Comments: nil,
																										Errors:   nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 49,
																												Line:   82,
																											},
																											File:   "sensu.flux",
																											Source: "checkName",
																											Start: ast.Position{
																												Column: 40,
																												Line:   82,
																											},
																										},
																									},
																									Name: "checkName",
																								},
																								Rbrack: nil,
																							},
																						}, &ast.Property{
																							BaseNode: ast.BaseNode{
																								Comments: nil,
																								Errors:   nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 39,
																										Line:   83,
																									},
																									File:   "sensu.flux",
																									Source: "text: obj.text",
																									Start: ast.Position{
																										Column: 25,
																										Line:   83,
																									},
																								},
																							},
																							Comma: nil,
																							Key: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Comments: nil,
																									Errors:   nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 29,
																											Line:   83,
																										},
																										File:   "sensu.flux",
																										Source: "text",
																										Start: ast.Position{
																											Column: 25,
																											Line:   83,
																										},
																									},
																								},
																								Name: "text",
																							},
																							Separator: nil,
																							Value: &ast.MemberExpression{
																								BaseNode: ast.BaseNode{
																									Comments: nil,
																									Errors:   nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 39,
																											Line:   83,
																										},
																										File:   "sensu.flux",
																										Source: "obj.text",
																										Start: ast.Position{
																											Column: 31,
																											Line:   83,
																										},
																									},
																								},
																								Lbrack: nil,
																								Object: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Comments: nil,
																										Errors:   nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 34,
																												Line:   83,
																											},
																											File:   "sensu.flux",
																											Source: "obj",
																											Start: ast.Position{
																												Column: 31,
																												Line:   83,
																											},
																										},
																									},
																									Name: "obj",
																								},
																								Property: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Comments: nil,
																										Errors:   nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 39,
																												Line:   83,
																											},
																											File:   "sensu.flux",
																											Source: "text",
																											Start: ast.Position{
																												Column: 35,
																												Line:   83,
																											},
																										},
																									},
																									Name: "text",
																								},
																								Rbrack: nil,
																							},
																						}, &ast.Property{
																							BaseNode: ast.BaseNode{
																								Comments: nil,
																								Errors:   nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 43,
																										Line:   84,
																									},
																									File:   "sensu.flux",
																									Source: "handlers: handlers",
																									Start: ast.Position{
																										Column: 25,
																										Line:   84,
																									},
																								},
																							},
																							Comma: nil,
																							Key: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Comments: nil,
																									Errors:   nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 33,
																											Line:   84,
																										},
																										File:   "sensu.flux",
																										Source: "handlers",
																										Start: ast.Position{
																											Column: 25,
																											Line:   84,
																										},
																									},
																								},
																								Name: "handlers",
																							},
																							Separator: nil,
																							Value: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Comments: nil,
																									Errors:   nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 43,
																											Line:   84,
																										},
																										File:   "sensu.flux",
																										Source: "handlers",
																										Start: ast.Position{
																											Column: 35,
																											Line:   84,
																										},
																									},
																								},
																								Name: "handlers",
																							},
																						}, &ast.Property{
																							BaseNode: ast.BaseNode{
																								Comments: nil,
																								Errors:   nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 43,
																										Line:   85,
																									},
																									File:   "sensu.flux",
																									Source: "status: obj.status",
																									Start: ast.Position{
																										Column: 25,
																										Line:   85,
																									},
																								},
																							},
																							Comma: nil,
																							Key: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Comments: nil,
																									Errors:   nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 31,
																											Line:   85,
																										},
																										File:   "sensu.flux",
																										Source: "status",
																										Start: ast.Position{
																											Column: 25,
																											Line:   85,
																										},
																									},
																								},
																								Name: "status",
																							},
																							Separator: nil,
																							Value: &ast.MemberExpression{
																								BaseNode: ast.BaseNode{
																									Comments: nil,
																									Errors:   nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 43,
																											Line:   85,
																										},
																										File:   "sensu.flux",
																										Source: "obj.status",
																										Start: ast.Position{
																											Column: 33,
																											Line:   85,
																										},
																									},
																								},
																								Lbrack: nil,
																								Object: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Comments: nil,
																										Errors:   nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 36,
																												Line:   85,
																											},
																											File:   "sensu.flux",
																											Source: "obj",
																											Start: ast.Position{
																												Column: 33,
																												Line:   85,
																											},
																										},
																									},
																									Name: "obj",
																								},
																								Property: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Comments: nil,
																										Errors:   nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 43,
																												Line:   85,
																											},
																											File:   "sensu.flux",
																											Source: "status",
																											Start: ast.Position{
																												Column: 37,
																												Line:   85,
																											},
																										},
																									},
																									Name: "status",
																								},
																								Rbrack: nil,
																							},
																						}, &ast.Property{
																							BaseNode: ast.BaseNode{
																								Comments: nil,
																								Errors:   nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 45,
																										Line:   86,
																									},
																									File:   "sensu.flux",
																									Source: "namespace: namespace",
																									Start: ast.Position{
																										Column: 25,
																										Line:   86,
																									},
																								},
																							},
																							Comma: nil,
																							Key: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Comments: nil,
																									Errors:   nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 34,
																											Line:   86,
																										},
																										File:   "sensu.flux",
																										Source: "namespace",
																										Start: ast.Position{
																											Column: 25,
																											Line:   86,
																										},
																									},
																								},
																								Name: "namespace",
																							},
																							Separator: nil,
																							Value: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Comments: nil,
																									Errors:   nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 45,
																											Line:   86,
																										},
																										File:   "sensu.flux",
																										Source: "namespace",
																										Start: ast.Position{
																											Column: 36,
																											Line:   86,
																										},
																									},
																								},
																								Name: "namespace",
																							},
																						}, &ast.Property{
																							BaseNode: ast.BaseNode{
																								Comments: nil,
																								Errors:   nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 47,
																										Line:   87,
																									},
																									File:   "sensu.flux",
																									Source: "entityName: entityName",
																									Start: ast.Position{
																										Column: 25,
																										Line:   87,
																									},
																								},
																							},
																							Comma: nil,
																							Key: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Comments: nil,
																									Errors:   nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 35,
																											Line:   87,
																										},
																										File:   "sensu.flux",
																										Source: "entityName",
																										Start: ast.Position{
																											Column: 25,
																											Line:   87,
																										},
																									},
																								},
																								Name: "entityName",
																							},
																							Separator: nil,
																							Value: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Comments: nil,
																									Errors:   nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 47,
																											Line:   87,
																										},
																										File:   "sensu.flux",
																										Source: "entityName",
																										Start: ast.Position{
																											Column: 37,
																											Line:   87,
																										},
																									},
																								},
																								Name: "entityName",
																							},
																						}},
																						Rbrace: nil,
																						With:   nil,
																					}},
																					BaseNode: ast.BaseNode{
																						Comments: nil,
																						Errors:   nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 22,
																								Line:   88,
																							},
																							File:   "sensu.flux",
																							Source: "event(\n                        url: url,\n                        apiKey: apiKey,\n                        checkName: obj.checkName,\n                        text: obj.text,\n                        handlers: handlers,\n                        status: obj.status,\n                        namespace: namespace,\n                        entityName: entityName,\n                    )",
																							Start: ast.Position{
																								Column: 29,
																								Line:   79,
																							},
																						},
																					},
																					Callee: &ast.Identifier{
																						BaseNode: ast.BaseNode{
																							Comments: nil,
																							Errors:   nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 34,
																									Line:   79,
																								},
																								File:   "sensu.flux",
																								Source: "event",
																								Start: ast.Position{
																									Column: 29,
																									Line:   79,
																								},
																							},
																						},
																						Name: "event",
																					},
																					Lparen: nil,
																					Rparen: nil,
																				},
																				Operator: 2,
																				Right: &ast.IntegerLiteral{
																					BaseNode: ast.BaseNode{
																						Comments: nil,
																						Errors:   nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 28,
																								Line:   88,
																							},
																							File:   "sensu.flux",
																							Source: "100",
																							Start: ast.Position{
																								Column: 25,
																								Line:   88,
																							},
																						},
																					},
																					Value: int64(100),
																				},
																			},
																		},
																	}},
																	Rbrace: nil,
																	With:   nil,
																}},
																BaseNode: ast.BaseNode{
																	Comments: nil,
																	Errors:   nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 18,
																			Line:   89,
																		},
																		File:   "sensu.flux",
																		Source: "string(\n                    v: 2 == event(\n                        url: url,\n                        apiKey: apiKey,\n                        checkName: obj.checkName,\n                        text: obj.text,\n                        handlers: handlers,\n                        status: obj.status,\n                        namespace: namespace,\n                        entityName: entityName,\n                    ) / 100,\n                )",
																		Start: ast.Position{
																			Column: 24,
																			Line:   78,
																		},
																	},
																},
																Callee: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Comments: nil,
																		Errors:   nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 30,
																				Line:   78,
																			},
																			File:   "sensu.flux",
																			Source: "string",
																			Start: ast.Position{
																				Column: 24,
																				Line:   78,
																			},
																		},
																	},
																	Name: "string",
																},
																Lparen: nil,
																Rparen: nil,
															},
														}},
														Rbrace: nil,
														With: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Comments: nil,
																Errors:   nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 22,
																		Line:   77,
																	},
																	File:   "sensu.flux",
																	Source: "r",
																	Start: ast.Position{
																		Column: 21,
																		Line:   77,
																	},
																},
															},
															Name: "r",
														},
													},
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 14,
																Line:   90,
															},
															File:   "sensu.flux",
															Source: "return {r with\n                _sent: string(\n                    v: 2 == event(\n                        url: url,\n                        apiKey: apiKey,\n                        checkName: obj.checkName,\n                        text: obj.text,\n                        handlers: handlers,\n                        status: obj.status,\n                        namespace: namespace,\n                        entityName: entityName,\n                    ) / 100,\n                ),\n            }",
															Start: ast.Position{
																Column: 13,
																Line:   77,
															},
														},
													},
												}},
												Lbrace: nil,
												Rbrace: nil,
											},
											Lparen: nil,
											Params: []*ast.Property{&ast.Property{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 15,
															Line:   74,
														},
														File:   "sensu.flux",
														Source: "r",
														Start: ast.Position{
															Column: 14,
															Line:   74,
														},
													},
												},
												Comma: nil,
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Comments: nil,
														Errors:   nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 15,
																Line:   74,
															},
															File:   "sensu.flux",
															Source: "r",
															Start: ast.Position{
																Column: 14,
																Line:   74,
															},
														},
													},
													Name: "r",
												},
												Separator: nil,
												Value:     nil,
											}},
											Rparan: nil,
										},
									}},
									Rbrace: nil,
									With:   nil,
								}},
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 6,
											Line:   92,
										},
										File:   "sensu.flux",
										Source: "map(\n        fn: (r) => {\n            obj = mapFn(r: r)\n\n            return {r with\n                _sent: string(\n                    v: 2 == event(\n                        url: url,\n                        apiKey: apiKey,\n                        checkName: obj.checkName,\n                        text: obj.text,\n                        handlers: handlers,\n                        status: obj.status,\n                        namespace: namespace,\n                        entityName: entityName,\n                    ) / 100,\n                ),\n            }\n        },\n    )",
										Start: ast.Position{
											Column: 8,
											Line:   73,
										},
									},
								},
								Callee: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 11,
												Line:   73,
											},
											File:   "sensu.flux",
											Source: "map",
											Start: ast.Position{
												Column: 8,
												Line:   73,
											},
										},
									},
									Name: "map",
								},
								Lparen: nil,
								Rparen: nil,
							},
						},
						Lparen: nil,
						Params: []*ast.Property{&ast.Property{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 56,
										Line:   72,
									},
									File:   "sensu.flux",
									Source: "tables=<-",
									Start: ast.Position{
										Column: 47,
										Line:   72,
									},
								},
							},
							Comma: nil,
							Key: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 53,
											Line:   72,
										},
										File:   "sensu.flux",
										Source: "tables",
										Start: ast.Position{
											Column: 47,
											Line:   72,
										},
									},
								},
								Name: "tables",
							},
							Separator: nil,
							Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 56,
										Line:   72,
									},
									File:   "sensu.flux",
									Source: "<-",
									Start: ast.Position{
										Column: 54,
										Line:   72,
									},
								},
							}},
						}},
						Rparan: nil,
					},
					Lparen: nil,
					Params: []*ast.Property{&ast.Property{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 41,
									Line:   72,
								},
								File:   "sensu.flux",
								Source: "mapFn",
								Start: ast.Position{
									Column: 36,
									Line:   72,
								},
							},
						},
						Comma: nil,
						Key: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   72,
									},
									File:   "sensu.flux",
									Source: "mapFn",
									Start: ast.Position{
										Column: 36,
										Line:   72,
									},
								},
							},
							Name: "mapFn",
						},
						Separator: nil,
						Value:     nil,
					}},
					Rparan: nil,
				},
				Lparen: nil,
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 12,
								Line:   68,
							},
							File:   "sensu.flux",
							Source: "url",
							Start: ast.Position{
								Column: 9,
								Line:   68,
							},
						},
					},
					Comma: nil,
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 12,
									Line:   68,
								},
								File:   "sensu.flux",
								Source: "url",
								Start: ast.Position{
									Column: 9,
									Line:   68,
								},
							},
						},
						Name: "url",
					},
					Separator: nil,
					Value:     nil,
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 15,
								Line:   69,
							},
							File:   "sensu.flux",
							Source: "apiKey",
							Start: ast.Position{
								Column: 9,
								Line:   69,
							},
						},
					},
					Comma: nil,
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 15,
									Line:   69,
								},
								File:   "sensu.flux",
								Source: "apiKey",
								Start: ast.Position{
									Column: 9,
									Line:   69,
								},
							},
						},
						Name: "apiKey",
					},
					Separator: nil,
					Value:     nil,
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 20,
								Line:   70,
							},
							File:   "sensu.flux",
							Source: "handlers=[]",
							Start: ast.Position{
								Column: 9,
								Line:   70,
							},
						},
					},
					Comma: nil,
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 17,
									Line:   70,
								},
								File:   "sensu.flux",
								Source: "handlers",
								Start: ast.Position{
									Column: 9,
									Line:   70,
								},
							},
						},
						Name: "handlers",
					},
					Separator: nil,
					Value: &ast.ArrayExpression{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 20,
									Line:   70,
								},
								File:   "sensu.flux",
								Source: "[]",
								Start: ast.Position{
									Column: 18,
									Line:   70,
								},
							},
						},
						Elements: []ast.Expression{},
						Lbrack:   nil,
						Rbrack:   nil,
					},
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 28,
								Line:   71,
							},
							File:   "sensu.flux",
							Source: "namespace=\"default\"",
							Start: ast.Position{
								Column: 9,
								Line:   71,
							},
						},
					},
					Comma: nil,
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 18,
									Line:   71,
								},
								File:   "sensu.flux",
								Source: "namespace",
								Start: ast.Position{
									Column: 9,
									Line:   71,
								},
							},
						},
						Name: "namespace",
					},
					Separator: nil,
					Value: &ast.StringLiteral{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 28,
									Line:   71,
								},
								File:   "sensu.flux",
								Source: "\"default\"",
								Start: ast.Position{
									Column: 19,
									Line:   71,
								},
							},
						},
						Value: "default",
					},
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 30,
								Line:   72,
							},
							File:   "sensu.flux",
							Source: "entityName=\"influxdb\"",
							Start: ast.Position{
								Column: 9,
								Line:   72,
							},
						},
					},
					Comma: nil,
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 19,
									Line:   72,
								},
								File:   "sensu.flux",
								Source: "entityName",
								Start: ast.Position{
									Column: 9,
									Line:   72,
								},
							},
						},
						Name: "entityName",
					},
					Separator: nil,
					Value: &ast.StringLiteral{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 30,
									Line:   72,
								},
								File:   "sensu.flux",
								Source: "\"influxdb\"",
								Start: ast.Position{
									Column: 20,
									Line:   72,
								},
							},
						},
						Value: "influxdb",
					},
				}},
				Rparan: nil,
			},
		}},
		Eof: nil,
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 14,
						Line:   4,
					},
					File:   "sensu.flux",
					Source: "import \"http\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 14,
							Line:   4,
						},
						File:   "sensu.flux",
						Source: "\"http\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "http",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 14,
						Line:   5,
					},
					File:   "sensu.flux",
					Source: "import \"json\"",
					Start: ast.Position{
						Column: 1,
						Line:   5,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 14,
							Line:   5,
						},
						File:   "sensu.flux",
						Source: "\"json\"",
						Start: ast.Position{
							Column: 8,
							Line:   5,
						},
					},
				},
				Value: "json",
			},
		}},
		Metadata: "parser-type=rust",
		Name:     "sensu.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 14,
						Line:   1,
					},
					File:   "sensu.flux",
					Source: "package sensu",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 14,
							Line:   1,
						},
						File:   "sensu.flux",
						Source: "sensu",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "sensu",
			},
		},
	}},
	Package: "sensu",
	Path:    "contrib/sranka/sensu",
}
