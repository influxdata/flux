// DO NOT EDIT: This file is autogenerated via the builtin command.

package teams

import (
	ast "github.com/influxdata/flux/ast"
	runtime "github.com/influxdata/flux/runtime"
)

func init() {
	runtime.RegisterPackage(pkgAST)
}

var pkgAST = &ast.Package{
	BaseNode: ast.BaseNode{
		Errors: nil,
		Loc:    nil,
	},
	Files: []*ast.File{&ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 15,
					Line:   53,
				},
				File:   "teams.flux",
				Source: "package teams\n\nimport \"http\"\nimport \"json\"\nimport \"strings\"\n\n// `summaryCutoff` is used \noption summaryCutoff = 70\n\n// `message` sends a single message to Microsoft Teams [incoming web hook](https://docs.microsoft.com/en-us/microsoftteams/platform/webhooks-and-connectors/how-to/add-incoming-webhook),\n//  see https://docs.microsoft.com/en-us/microsoftteams/platform/webhooks-and-connectors/how-to/connectors-using#setting-up-a-custom-incoming-webhook\n// `url` - string - incoming web hook URL\n// `title` - string - Message card title.\n// `text` - string - Message card text.\n// `summary` - string - Message card summary, it can be an empty string to generate summary from text.\nmessage = (url, title, text, summary=\"\") => {\n    headers = {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n    }\n    // see https://docs.microsoft.com/en-us/outlook/actionable-messages/message-card-reference#card-fields\n    // using string body, object cannot be used because '@' is an illegal character in the object property key\n    summary2 = if summary == \"\" \n        then text \n        else summary\n    shortSummary = if strings.strlen(v: summary2) > summaryCutoff \n        then \"${strings.substring(v: summary2, start: 0, end: summaryCutoff)}...\"\n        else summary2\n    body = \"{\n\\\"@type\\\": \\\"MessageCard\\\",\n\\\"@context\\\": \\\"http://schema.org/extensions\\\",\n\\\"title\\\": ${string(v: json.encode(v:title))},\n\\\"text\\\": ${string(v: json.encode(v:text))},\n\\\"summary\\\": ${string(v:json.encode(v:shortSummary))}\n}\"\n    return http.post(headers: headers, url: url, data: bytes(v: body))\n}\n\n// `endpoint` creates the endpoint for the Microsoft Teams external service.\n// `url` - string - URL of the incoming web hook.\n// The returned factory function accepts a `mapFn` parameter.\n// The `mapFn` must return an object with `title`, `text`, and `summary`, as defined in the `message` function arguments.\nendpoint = (url) =>\n    (mapFn) =>\n        (tables=<-) => tables\n            |> map(fn: (r) => {\n                obj = mapFn(r: r)\n                return {r with _sent: string(v: 2 == message(\n                    url: url,\n                    title: obj.title,\n                    text: obj.text,\n                    summary: if exists obj.summary then obj.summary else \"\"\n                ) / 100)}\n            })",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 26,
							Line:   8,
						},
						File:   "teams.flux",
						Source: "summaryCutoff = 70",
						Start: ast.Position{
							Column: 8,
							Line:   8,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 21,
								Line:   8,
							},
							File:   "teams.flux",
							Source: "summaryCutoff",
							Start: ast.Position{
								Column: 8,
								Line:   8,
							},
						},
					},
					Name: "summaryCutoff",
				},
				Init: &ast.IntegerLiteral{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 26,
								Line:   8,
							},
							File:   "teams.flux",
							Source: "70",
							Start: ast.Position{
								Column: 24,
								Line:   8,
							},
						},
					},
					Value: int64(70),
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 26,
						Line:   8,
					},
					File:   "teams.flux",
					Source: "option summaryCutoff = 70",
					Start: ast.Position{
						Column: 1,
						Line:   8,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   36,
					},
					File:   "teams.flux",
					Source: "message = (url, title, text, summary=\"\") => {\n    headers = {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n    }\n    // see https://docs.microsoft.com/en-us/outlook/actionable-messages/message-card-reference#card-fields\n    // using string body, object cannot be used because '@' is an illegal character in the object property key\n    summary2 = if summary == \"\" \n        then text \n        else summary\n    shortSummary = if strings.strlen(v: summary2) > summaryCutoff \n        then \"${strings.substring(v: summary2, start: 0, end: summaryCutoff)}...\"\n        else summary2\n    body = \"{\n\\\"@type\\\": \\\"MessageCard\\\",\n\\\"@context\\\": \\\"http://schema.org/extensions\\\",\n\\\"title\\\": ${string(v: json.encode(v:title))},\n\\\"text\\\": ${string(v: json.encode(v:text))},\n\\\"summary\\\": ${string(v:json.encode(v:shortSummary))}\n}\"\n    return http.post(headers: headers, url: url, data: bytes(v: body))\n}",
					Start: ast.Position{
						Column: 1,
						Line:   16,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 8,
							Line:   16,
						},
						File:   "teams.flux",
						Source: "message",
						Start: ast.Position{
							Column: 1,
							Line:   16,
						},
					},
				},
				Name: "message",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   36,
						},
						File:   "teams.flux",
						Source: "(url, title, text, summary=\"\") => {\n    headers = {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n    }\n    // see https://docs.microsoft.com/en-us/outlook/actionable-messages/message-card-reference#card-fields\n    // using string body, object cannot be used because '@' is an illegal character in the object property key\n    summary2 = if summary == \"\" \n        then text \n        else summary\n    shortSummary = if strings.strlen(v: summary2) > summaryCutoff \n        then \"${strings.substring(v: summary2, start: 0, end: summaryCutoff)}...\"\n        else summary2\n    body = \"{\n\\\"@type\\\": \\\"MessageCard\\\",\n\\\"@context\\\": \\\"http://schema.org/extensions\\\",\n\\\"title\\\": ${string(v: json.encode(v:title))},\n\\\"text\\\": ${string(v: json.encode(v:text))},\n\\\"summary\\\": ${string(v:json.encode(v:shortSummary))}\n}\"\n    return http.post(headers: headers, url: url, data: bytes(v: body))\n}",
						Start: ast.Position{
							Column: 11,
							Line:   16,
						},
					},
				},
				Body: &ast.Block{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 2,
								Line:   36,
							},
							File:   "teams.flux",
							Source: "{\n    headers = {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n    }\n    // see https://docs.microsoft.com/en-us/outlook/actionable-messages/message-card-reference#card-fields\n    // using string body, object cannot be used because '@' is an illegal character in the object property key\n    summary2 = if summary == \"\" \n        then text \n        else summary\n    shortSummary = if strings.strlen(v: summary2) > summaryCutoff \n        then \"${strings.substring(v: summary2, start: 0, end: summaryCutoff)}...\"\n        else summary2\n    body = \"{\n\\\"@type\\\": \\\"MessageCard\\\",\n\\\"@context\\\": \\\"http://schema.org/extensions\\\",\n\\\"title\\\": ${string(v: json.encode(v:title))},\n\\\"text\\\": ${string(v: json.encode(v:text))},\n\\\"summary\\\": ${string(v:json.encode(v:shortSummary))}\n}\"\n    return http.post(headers: headers, url: url, data: bytes(v: body))\n}",
							Start: ast.Position{
								Column: 45,
								Line:   16,
							},
						},
					},
					Body: []ast.Statement{&ast.VariableAssignment{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 6,
									Line:   19,
								},
								File:   "teams.flux",
								Source: "headers = {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n    }",
								Start: ast.Position{
									Column: 5,
									Line:   17,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 12,
										Line:   17,
									},
									File:   "teams.flux",
									Source: "headers",
									Start: ast.Position{
										Column: 5,
										Line:   17,
									},
								},
							},
							Name: "headers",
						},
						Init: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 6,
										Line:   19,
									},
									File:   "teams.flux",
									Source: "{\n        \"Content-Type\": \"application/json; charset=utf-8\",\n    }",
									Start: ast.Position{
										Column: 15,
										Line:   17,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 58,
											Line:   18,
										},
										File:   "teams.flux",
										Source: "\"Content-Type\": \"application/json; charset=utf-8\"",
										Start: ast.Position{
											Column: 9,
											Line:   18,
										},
									},
								},
								Key: &ast.StringLiteral{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 23,
												Line:   18,
											},
											File:   "teams.flux",
											Source: "\"Content-Type\"",
											Start: ast.Position{
												Column: 9,
												Line:   18,
											},
										},
									},
									Value: "Content-Type",
								},
								Value: &ast.StringLiteral{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 58,
												Line:   18,
											},
											File:   "teams.flux",
											Source: "\"application/json; charset=utf-8\"",
											Start: ast.Position{
												Column: 25,
												Line:   18,
											},
										},
									},
									Value: "application/json; charset=utf-8",
								},
							}},
							With: nil,
						},
					}, &ast.VariableAssignment{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 21,
									Line:   24,
								},
								File:   "teams.flux",
								Source: "summary2 = if summary == \"\" \n        then text \n        else summary",
								Start: ast.Position{
									Column: 5,
									Line:   22,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 13,
										Line:   22,
									},
									File:   "teams.flux",
									Source: "summary2",
									Start: ast.Position{
										Column: 5,
										Line:   22,
									},
								},
							},
							Name: "summary2",
						},
						Init: &ast.ConditionalExpression{
							Alternate: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 21,
											Line:   24,
										},
										File:   "teams.flux",
										Source: "summary",
										Start: ast.Position{
											Column: 14,
											Line:   24,
										},
									},
								},
								Name: "summary",
							},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 21,
										Line:   24,
									},
									File:   "teams.flux",
									Source: "if summary == \"\" \n        then text \n        else summary",
									Start: ast.Position{
										Column: 16,
										Line:   22,
									},
								},
							},
							Consequent: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 18,
											Line:   23,
										},
										File:   "teams.flux",
										Source: "text",
										Start: ast.Position{
											Column: 14,
											Line:   23,
										},
									},
								},
								Name: "text",
							},
							Test: &ast.BinaryExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 32,
											Line:   22,
										},
										File:   "teams.flux",
										Source: "summary == \"\"",
										Start: ast.Position{
											Column: 19,
											Line:   22,
										},
									},
								},
								Left: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 26,
												Line:   22,
											},
											File:   "teams.flux",
											Source: "summary",
											Start: ast.Position{
												Column: 19,
												Line:   22,
											},
										},
									},
									Name: "summary",
								},
								Operator: 17,
								Right: &ast.StringLiteral{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 32,
												Line:   22,
											},
											File:   "teams.flux",
											Source: "\"\"",
											Start: ast.Position{
												Column: 30,
												Line:   22,
											},
										},
									},
									Value: "",
								},
							},
						},
					}, &ast.VariableAssignment{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 22,
									Line:   27,
								},
								File:   "teams.flux",
								Source: "shortSummary = if strings.strlen(v: summary2) > summaryCutoff \n        then \"${strings.substring(v: summary2, start: 0, end: summaryCutoff)}...\"\n        else summary2",
								Start: ast.Position{
									Column: 5,
									Line:   25,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 17,
										Line:   25,
									},
									File:   "teams.flux",
									Source: "shortSummary",
									Start: ast.Position{
										Column: 5,
										Line:   25,
									},
								},
							},
							Name: "shortSummary",
						},
						Init: &ast.ConditionalExpression{
							Alternate: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 22,
											Line:   27,
										},
										File:   "teams.flux",
										Source: "summary2",
										Start: ast.Position{
											Column: 14,
											Line:   27,
										},
									},
								},
								Name: "summary2",
							},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 22,
										Line:   27,
									},
									File:   "teams.flux",
									Source: "if strings.strlen(v: summary2) > summaryCutoff \n        then \"${strings.substring(v: summary2, start: 0, end: summaryCutoff)}...\"\n        else summary2",
									Start: ast.Position{
										Column: 20,
										Line:   25,
									},
								},
							},
							Consequent: &ast.StringExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 82,
											Line:   26,
										},
										File:   "teams.flux",
										Source: "\"${strings.substring(v: summary2, start: 0, end: summaryCutoff)}...\"",
										Start: ast.Position{
											Column: 14,
											Line:   26,
										},
									},
								},
								Parts: []ast.StringExpressionPart{&ast.InterpolatedPart{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 78,
												Line:   26,
											},
											File:   "teams.flux",
											Source: "${strings.substring(v: summary2, start: 0, end: summaryCutoff)}",
											Start: ast.Position{
												Column: 15,
												Line:   26,
											},
										},
									},
									Expression: &ast.CallExpression{
										Arguments: []ast.Expression{&ast.ObjectExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 76,
														Line:   26,
													},
													File:   "teams.flux",
													Source: "v: summary2, start: 0, end: summaryCutoff",
													Start: ast.Position{
														Column: 35,
														Line:   26,
													},
												},
											},
											Properties: []*ast.Property{&ast.Property{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 46,
															Line:   26,
														},
														File:   "teams.flux",
														Source: "v: summary2",
														Start: ast.Position{
															Column: 35,
															Line:   26,
														},
													},
												},
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 36,
																Line:   26,
															},
															File:   "teams.flux",
															Source: "v",
															Start: ast.Position{
																Column: 35,
																Line:   26,
															},
														},
													},
													Name: "v",
												},
												Value: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 46,
																Line:   26,
															},
															File:   "teams.flux",
															Source: "summary2",
															Start: ast.Position{
																Column: 38,
																Line:   26,
															},
														},
													},
													Name: "summary2",
												},
											}, &ast.Property{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 56,
															Line:   26,
														},
														File:   "teams.flux",
														Source: "start: 0",
														Start: ast.Position{
															Column: 48,
															Line:   26,
														},
													},
												},
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 53,
																Line:   26,
															},
															File:   "teams.flux",
															Source: "start",
															Start: ast.Position{
																Column: 48,
																Line:   26,
															},
														},
													},
													Name: "start",
												},
												Value: &ast.IntegerLiteral{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 56,
																Line:   26,
															},
															File:   "teams.flux",
															Source: "0",
															Start: ast.Position{
																Column: 55,
																Line:   26,
															},
														},
													},
													Value: int64(0),
												},
											}, &ast.Property{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 76,
															Line:   26,
														},
														File:   "teams.flux",
														Source: "end: summaryCutoff",
														Start: ast.Position{
															Column: 58,
															Line:   26,
														},
													},
												},
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 61,
																Line:   26,
															},
															File:   "teams.flux",
															Source: "end",
															Start: ast.Position{
																Column: 58,
																Line:   26,
															},
														},
													},
													Name: "end",
												},
												Value: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 76,
																Line:   26,
															},
															File:   "teams.flux",
															Source: "summaryCutoff",
															Start: ast.Position{
																Column: 63,
																Line:   26,
															},
														},
													},
													Name: "summaryCutoff",
												},
											}},
											With: nil,
										}},
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 77,
													Line:   26,
												},
												File:   "teams.flux",
												Source: "strings.substring(v: summary2, start: 0, end: summaryCutoff)",
												Start: ast.Position{
													Column: 17,
													Line:   26,
												},
											},
										},
										Callee: &ast.MemberExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 34,
														Line:   26,
													},
													File:   "teams.flux",
													Source: "strings.substring",
													Start: ast.Position{
														Column: 17,
														Line:   26,
													},
												},
											},
											Object: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 24,
															Line:   26,
														},
														File:   "teams.flux",
														Source: "strings",
														Start: ast.Position{
															Column: 17,
															Line:   26,
														},
													},
												},
												Name: "strings",
											},
											Property: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 34,
															Line:   26,
														},
														File:   "teams.flux",
														Source: "substring",
														Start: ast.Position{
															Column: 25,
															Line:   26,
														},
													},
												},
												Name: "substring",
											},
										},
									},
								}, &ast.TextPart{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 81,
												Line:   26,
											},
											File:   "teams.flux",
											Source: "...",
											Start: ast.Position{
												Column: 78,
												Line:   26,
											},
										},
									},
									Value: "...",
								}},
							},
							Test: &ast.BinaryExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 66,
											Line:   25,
										},
										File:   "teams.flux",
										Source: "strings.strlen(v: summary2) > summaryCutoff",
										Start: ast.Position{
											Column: 23,
											Line:   25,
										},
									},
								},
								Left: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 49,
													Line:   25,
												},
												File:   "teams.flux",
												Source: "v: summary2",
												Start: ast.Position{
													Column: 38,
													Line:   25,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 49,
														Line:   25,
													},
													File:   "teams.flux",
													Source: "v: summary2",
													Start: ast.Position{
														Column: 38,
														Line:   25,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 39,
															Line:   25,
														},
														File:   "teams.flux",
														Source: "v",
														Start: ast.Position{
															Column: 38,
															Line:   25,
														},
													},
												},
												Name: "v",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 49,
															Line:   25,
														},
														File:   "teams.flux",
														Source: "summary2",
														Start: ast.Position{
															Column: 41,
															Line:   25,
														},
													},
												},
												Name: "summary2",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 50,
												Line:   25,
											},
											File:   "teams.flux",
											Source: "strings.strlen(v: summary2)",
											Start: ast.Position{
												Column: 23,
												Line:   25,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 37,
													Line:   25,
												},
												File:   "teams.flux",
												Source: "strings.strlen",
												Start: ast.Position{
													Column: 23,
													Line:   25,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 30,
														Line:   25,
													},
													File:   "teams.flux",
													Source: "strings",
													Start: ast.Position{
														Column: 23,
														Line:   25,
													},
												},
											},
											Name: "strings",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 37,
														Line:   25,
													},
													File:   "teams.flux",
													Source: "strlen",
													Start: ast.Position{
														Column: 31,
														Line:   25,
													},
												},
											},
											Name: "strlen",
										},
									},
								},
								Operator: 10,
								Right: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 66,
												Line:   25,
											},
											File:   "teams.flux",
											Source: "summaryCutoff",
											Start: ast.Position{
												Column: 53,
												Line:   25,
											},
										},
									},
									Name: "summaryCutoff",
								},
							},
						},
					}, &ast.VariableAssignment{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 3,
									Line:   34,
								},
								File:   "teams.flux",
								Source: "body = \"{\n\\\"@type\\\": \\\"MessageCard\\\",\n\\\"@context\\\": \\\"http://schema.org/extensions\\\",\n\\\"title\\\": ${string(v: json.encode(v:title))},\n\\\"text\\\": ${string(v: json.encode(v:text))},\n\\\"summary\\\": ${string(v:json.encode(v:shortSummary))}\n}\"",
								Start: ast.Position{
									Column: 5,
									Line:   28,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 9,
										Line:   28,
									},
									File:   "teams.flux",
									Source: "body",
									Start: ast.Position{
										Column: 5,
										Line:   28,
									},
								},
							},
							Name: "body",
						},
						Init: &ast.StringExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 3,
										Line:   34,
									},
									File:   "teams.flux",
									Source: "\"{\n\\\"@type\\\": \\\"MessageCard\\\",\n\\\"@context\\\": \\\"http://schema.org/extensions\\\",\n\\\"title\\\": ${string(v: json.encode(v:title))},\n\\\"text\\\": ${string(v: json.encode(v:text))},\n\\\"summary\\\": ${string(v:json.encode(v:shortSummary))}\n}\"",
									Start: ast.Position{
										Column: 12,
										Line:   28,
									},
								},
							},
							Parts: []ast.StringExpressionPart{&ast.TextPart{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 12,
											Line:   31,
										},
										File:   "teams.flux",
										Source: "{\n\\\"@type\\\": \\\"MessageCard\\\",\n\\\"@context\\\": \\\"http://schema.org/extensions\\\",\n\\\"title\\\": ",
										Start: ast.Position{
											Column: 13,
											Line:   28,
										},
									},
								},
								Value: "{\n\"@type\": \"MessageCard\",\n\"@context\": \"http://schema.org/extensions\",\n\"title\": ",
							}, &ast.InterpolatedPart{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 46,
											Line:   31,
										},
										File:   "teams.flux",
										Source: "${string(v: json.encode(v:title))}",
										Start: ast.Position{
											Column: 12,
											Line:   31,
										},
									},
								},
								Expression: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 44,
													Line:   31,
												},
												File:   "teams.flux",
												Source: "v: json.encode(v:title)",
												Start: ast.Position{
													Column: 21,
													Line:   31,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 44,
														Line:   31,
													},
													File:   "teams.flux",
													Source: "v: json.encode(v:title)",
													Start: ast.Position{
														Column: 21,
														Line:   31,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 22,
															Line:   31,
														},
														File:   "teams.flux",
														Source: "v",
														Start: ast.Position{
															Column: 21,
															Line:   31,
														},
													},
												},
												Name: "v",
											},
											Value: &ast.CallExpression{
												Arguments: []ast.Expression{&ast.ObjectExpression{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 43,
																Line:   31,
															},
															File:   "teams.flux",
															Source: "v:title",
															Start: ast.Position{
																Column: 36,
																Line:   31,
															},
														},
													},
													Properties: []*ast.Property{&ast.Property{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 43,
																	Line:   31,
																},
																File:   "teams.flux",
																Source: "v:title",
																Start: ast.Position{
																	Column: 36,
																	Line:   31,
																},
															},
														},
														Key: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 37,
																		Line:   31,
																	},
																	File:   "teams.flux",
																	Source: "v",
																	Start: ast.Position{
																		Column: 36,
																		Line:   31,
																	},
																},
															},
															Name: "v",
														},
														Value: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 43,
																		Line:   31,
																	},
																	File:   "teams.flux",
																	Source: "title",
																	Start: ast.Position{
																		Column: 38,
																		Line:   31,
																	},
																},
															},
															Name: "title",
														},
													}},
													With: nil,
												}},
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 44,
															Line:   31,
														},
														File:   "teams.flux",
														Source: "json.encode(v:title)",
														Start: ast.Position{
															Column: 24,
															Line:   31,
														},
													},
												},
												Callee: &ast.MemberExpression{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 35,
																Line:   31,
															},
															File:   "teams.flux",
															Source: "json.encode",
															Start: ast.Position{
																Column: 24,
																Line:   31,
															},
														},
													},
													Object: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 28,
																	Line:   31,
																},
																File:   "teams.flux",
																Source: "json",
																Start: ast.Position{
																	Column: 24,
																	Line:   31,
																},
															},
														},
														Name: "json",
													},
													Property: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 35,
																	Line:   31,
																},
																File:   "teams.flux",
																Source: "encode",
																Start: ast.Position{
																	Column: 29,
																	Line:   31,
																},
															},
														},
														Name: "encode",
													},
												},
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 45,
												Line:   31,
											},
											File:   "teams.flux",
											Source: "string(v: json.encode(v:title))",
											Start: ast.Position{
												Column: 14,
												Line:   31,
											},
										},
									},
									Callee: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 20,
													Line:   31,
												},
												File:   "teams.flux",
												Source: "string",
												Start: ast.Position{
													Column: 14,
													Line:   31,
												},
											},
										},
										Name: "string",
									},
								},
							}, &ast.TextPart{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 11,
											Line:   32,
										},
										File:   "teams.flux",
										Source: ",\n\\\"text\\\": ",
										Start: ast.Position{
											Column: 46,
											Line:   31,
										},
									},
								},
								Value: ",\n\"text\": ",
							}, &ast.InterpolatedPart{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 44,
											Line:   32,
										},
										File:   "teams.flux",
										Source: "${string(v: json.encode(v:text))}",
										Start: ast.Position{
											Column: 11,
											Line:   32,
										},
									},
								},
								Expression: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   32,
												},
												File:   "teams.flux",
												Source: "v: json.encode(v:text)",
												Start: ast.Position{
													Column: 20,
													Line:   32,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 42,
														Line:   32,
													},
													File:   "teams.flux",
													Source: "v: json.encode(v:text)",
													Start: ast.Position{
														Column: 20,
														Line:   32,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 21,
															Line:   32,
														},
														File:   "teams.flux",
														Source: "v",
														Start: ast.Position{
															Column: 20,
															Line:   32,
														},
													},
												},
												Name: "v",
											},
											Value: &ast.CallExpression{
												Arguments: []ast.Expression{&ast.ObjectExpression{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 41,
																Line:   32,
															},
															File:   "teams.flux",
															Source: "v:text",
															Start: ast.Position{
																Column: 35,
																Line:   32,
															},
														},
													},
													Properties: []*ast.Property{&ast.Property{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 41,
																	Line:   32,
																},
																File:   "teams.flux",
																Source: "v:text",
																Start: ast.Position{
																	Column: 35,
																	Line:   32,
																},
															},
														},
														Key: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 36,
																		Line:   32,
																	},
																	File:   "teams.flux",
																	Source: "v",
																	Start: ast.Position{
																		Column: 35,
																		Line:   32,
																	},
																},
															},
															Name: "v",
														},
														Value: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 41,
																		Line:   32,
																	},
																	File:   "teams.flux",
																	Source: "text",
																	Start: ast.Position{
																		Column: 37,
																		Line:   32,
																	},
																},
															},
															Name: "text",
														},
													}},
													With: nil,
												}},
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 42,
															Line:   32,
														},
														File:   "teams.flux",
														Source: "json.encode(v:text)",
														Start: ast.Position{
															Column: 23,
															Line:   32,
														},
													},
												},
												Callee: &ast.MemberExpression{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 34,
																Line:   32,
															},
															File:   "teams.flux",
															Source: "json.encode",
															Start: ast.Position{
																Column: 23,
																Line:   32,
															},
														},
													},
													Object: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 27,
																	Line:   32,
																},
																File:   "teams.flux",
																Source: "json",
																Start: ast.Position{
																	Column: 23,
																	Line:   32,
																},
															},
														},
														Name: "json",
													},
													Property: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 34,
																	Line:   32,
																},
																File:   "teams.flux",
																Source: "encode",
																Start: ast.Position{
																	Column: 28,
																	Line:   32,
																},
															},
														},
														Name: "encode",
													},
												},
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 43,
												Line:   32,
											},
											File:   "teams.flux",
											Source: "string(v: json.encode(v:text))",
											Start: ast.Position{
												Column: 13,
												Line:   32,
											},
										},
									},
									Callee: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 19,
													Line:   32,
												},
												File:   "teams.flux",
												Source: "string",
												Start: ast.Position{
													Column: 13,
													Line:   32,
												},
											},
										},
										Name: "string",
									},
								},
							}, &ast.TextPart{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 14,
											Line:   33,
										},
										File:   "teams.flux",
										Source: ",\n\\\"summary\\\": ",
										Start: ast.Position{
											Column: 44,
											Line:   32,
										},
									},
								},
								Value: ",\n\"summary\": ",
							}, &ast.InterpolatedPart{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 54,
											Line:   33,
										},
										File:   "teams.flux",
										Source: "${string(v:json.encode(v:shortSummary))}",
										Start: ast.Position{
											Column: 14,
											Line:   33,
										},
									},
								},
								Expression: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 52,
													Line:   33,
												},
												File:   "teams.flux",
												Source: "v:json.encode(v:shortSummary)",
												Start: ast.Position{
													Column: 23,
													Line:   33,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 52,
														Line:   33,
													},
													File:   "teams.flux",
													Source: "v:json.encode(v:shortSummary)",
													Start: ast.Position{
														Column: 23,
														Line:   33,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 24,
															Line:   33,
														},
														File:   "teams.flux",
														Source: "v",
														Start: ast.Position{
															Column: 23,
															Line:   33,
														},
													},
												},
												Name: "v",
											},
											Value: &ast.CallExpression{
												Arguments: []ast.Expression{&ast.ObjectExpression{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 51,
																Line:   33,
															},
															File:   "teams.flux",
															Source: "v:shortSummary",
															Start: ast.Position{
																Column: 37,
																Line:   33,
															},
														},
													},
													Properties: []*ast.Property{&ast.Property{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 51,
																	Line:   33,
																},
																File:   "teams.flux",
																Source: "v:shortSummary",
																Start: ast.Position{
																	Column: 37,
																	Line:   33,
																},
															},
														},
														Key: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 38,
																		Line:   33,
																	},
																	File:   "teams.flux",
																	Source: "v",
																	Start: ast.Position{
																		Column: 37,
																		Line:   33,
																	},
																},
															},
															Name: "v",
														},
														Value: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 51,
																		Line:   33,
																	},
																	File:   "teams.flux",
																	Source: "shortSummary",
																	Start: ast.Position{
																		Column: 39,
																		Line:   33,
																	},
																},
															},
															Name: "shortSummary",
														},
													}},
													With: nil,
												}},
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 52,
															Line:   33,
														},
														File:   "teams.flux",
														Source: "json.encode(v:shortSummary)",
														Start: ast.Position{
															Column: 25,
															Line:   33,
														},
													},
												},
												Callee: &ast.MemberExpression{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 36,
																Line:   33,
															},
															File:   "teams.flux",
															Source: "json.encode",
															Start: ast.Position{
																Column: 25,
																Line:   33,
															},
														},
													},
													Object: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 29,
																	Line:   33,
																},
																File:   "teams.flux",
																Source: "json",
																Start: ast.Position{
																	Column: 25,
																	Line:   33,
																},
															},
														},
														Name: "json",
													},
													Property: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 36,
																	Line:   33,
																},
																File:   "teams.flux",
																Source: "encode",
																Start: ast.Position{
																	Column: 30,
																	Line:   33,
																},
															},
														},
														Name: "encode",
													},
												},
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 53,
												Line:   33,
											},
											File:   "teams.flux",
											Source: "string(v:json.encode(v:shortSummary))",
											Start: ast.Position{
												Column: 16,
												Line:   33,
											},
										},
									},
									Callee: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 22,
													Line:   33,
												},
												File:   "teams.flux",
												Source: "string",
												Start: ast.Position{
													Column: 16,
													Line:   33,
												},
											},
										},
										Name: "string",
									},
								},
							}, &ast.TextPart{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 2,
											Line:   34,
										},
										File:   "teams.flux",
										Source: "\n}",
										Start: ast.Position{
											Column: 54,
											Line:   33,
										},
									},
								},
								Value: "\n}",
							}},
						},
					}, &ast.ReturnStatement{
						Argument: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 70,
											Line:   35,
										},
										File:   "teams.flux",
										Source: "headers: headers, url: url, data: bytes(v: body)",
										Start: ast.Position{
											Column: 22,
											Line:   35,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 38,
												Line:   35,
											},
											File:   "teams.flux",
											Source: "headers: headers",
											Start: ast.Position{
												Column: 22,
												Line:   35,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 29,
													Line:   35,
												},
												File:   "teams.flux",
												Source: "headers",
												Start: ast.Position{
													Column: 22,
													Line:   35,
												},
											},
										},
										Name: "headers",
									},
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 38,
													Line:   35,
												},
												File:   "teams.flux",
												Source: "headers",
												Start: ast.Position{
													Column: 31,
													Line:   35,
												},
											},
										},
										Name: "headers",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 48,
												Line:   35,
											},
											File:   "teams.flux",
											Source: "url: url",
											Start: ast.Position{
												Column: 40,
												Line:   35,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 43,
													Line:   35,
												},
												File:   "teams.flux",
												Source: "url",
												Start: ast.Position{
													Column: 40,
													Line:   35,
												},
											},
										},
										Name: "url",
									},
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 48,
													Line:   35,
												},
												File:   "teams.flux",
												Source: "url",
												Start: ast.Position{
													Column: 45,
													Line:   35,
												},
											},
										},
										Name: "url",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 70,
												Line:   35,
											},
											File:   "teams.flux",
											Source: "data: bytes(v: body)",
											Start: ast.Position{
												Column: 50,
												Line:   35,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 54,
													Line:   35,
												},
												File:   "teams.flux",
												Source: "data",
												Start: ast.Position{
													Column: 50,
													Line:   35,
												},
											},
										},
										Name: "data",
									},
									Value: &ast.CallExpression{
										Arguments: []ast.Expression{&ast.ObjectExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 69,
														Line:   35,
													},
													File:   "teams.flux",
													Source: "v: body",
													Start: ast.Position{
														Column: 62,
														Line:   35,
													},
												},
											},
											Properties: []*ast.Property{&ast.Property{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 69,
															Line:   35,
														},
														File:   "teams.flux",
														Source: "v: body",
														Start: ast.Position{
															Column: 62,
															Line:   35,
														},
													},
												},
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 63,
																Line:   35,
															},
															File:   "teams.flux",
															Source: "v",
															Start: ast.Position{
																Column: 62,
																Line:   35,
															},
														},
													},
													Name: "v",
												},
												Value: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 69,
																Line:   35,
															},
															File:   "teams.flux",
															Source: "body",
															Start: ast.Position{
																Column: 65,
																Line:   35,
															},
														},
													},
													Name: "body",
												},
											}},
											With: nil,
										}},
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 70,
													Line:   35,
												},
												File:   "teams.flux",
												Source: "bytes(v: body)",
												Start: ast.Position{
													Column: 56,
													Line:   35,
												},
											},
										},
										Callee: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 61,
														Line:   35,
													},
													File:   "teams.flux",
													Source: "bytes",
													Start: ast.Position{
														Column: 56,
														Line:   35,
													},
												},
											},
											Name: "bytes",
										},
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 71,
										Line:   35,
									},
									File:   "teams.flux",
									Source: "http.post(headers: headers, url: url, data: bytes(v: body))",
									Start: ast.Position{
										Column: 12,
										Line:   35,
									},
								},
							},
							Callee: &ast.MemberExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 21,
											Line:   35,
										},
										File:   "teams.flux",
										Source: "http.post",
										Start: ast.Position{
											Column: 12,
											Line:   35,
										},
									},
								},
								Object: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 16,
												Line:   35,
											},
											File:   "teams.flux",
											Source: "http",
											Start: ast.Position{
												Column: 12,
												Line:   35,
											},
										},
									},
									Name: "http",
								},
								Property: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 21,
												Line:   35,
											},
											File:   "teams.flux",
											Source: "post",
											Start: ast.Position{
												Column: 17,
												Line:   35,
											},
										},
									},
									Name: "post",
								},
							},
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 71,
									Line:   35,
								},
								File:   "teams.flux",
								Source: "return http.post(headers: headers, url: url, data: bytes(v: body))",
								Start: ast.Position{
									Column: 5,
									Line:   35,
								},
							},
						},
					}},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 15,
								Line:   16,
							},
							File:   "teams.flux",
							Source: "url",
							Start: ast.Position{
								Column: 12,
								Line:   16,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 15,
									Line:   16,
								},
								File:   "teams.flux",
								Source: "url",
								Start: ast.Position{
									Column: 12,
									Line:   16,
								},
							},
						},
						Name: "url",
					},
					Value: nil,
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 22,
								Line:   16,
							},
							File:   "teams.flux",
							Source: "title",
							Start: ast.Position{
								Column: 17,
								Line:   16,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 22,
									Line:   16,
								},
								File:   "teams.flux",
								Source: "title",
								Start: ast.Position{
									Column: 17,
									Line:   16,
								},
							},
						},
						Name: "title",
					},
					Value: nil,
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 28,
								Line:   16,
							},
							File:   "teams.flux",
							Source: "text",
							Start: ast.Position{
								Column: 24,
								Line:   16,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 28,
									Line:   16,
								},
								File:   "teams.flux",
								Source: "text",
								Start: ast.Position{
									Column: 24,
									Line:   16,
								},
							},
						},
						Name: "text",
					},
					Value: nil,
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 40,
								Line:   16,
							},
							File:   "teams.flux",
							Source: "summary=\"\"",
							Start: ast.Position{
								Column: 30,
								Line:   16,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 37,
									Line:   16,
								},
								File:   "teams.flux",
								Source: "summary",
								Start: ast.Position{
									Column: 30,
									Line:   16,
								},
							},
						},
						Name: "summary",
					},
					Value: &ast.StringLiteral{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 40,
									Line:   16,
								},
								File:   "teams.flux",
								Source: "\"\"",
								Start: ast.Position{
									Column: 38,
									Line:   16,
								},
							},
						},
						Value: "",
					},
				}},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 15,
						Line:   53,
					},
					File:   "teams.flux",
					Source: "endpoint = (url) =>\n    (mapFn) =>\n        (tables=<-) => tables\n            |> map(fn: (r) => {\n                obj = mapFn(r: r)\n                return {r with _sent: string(v: 2 == message(\n                    url: url,\n                    title: obj.title,\n                    text: obj.text,\n                    summary: if exists obj.summary then obj.summary else \"\"\n                ) / 100)}\n            })",
					Start: ast.Position{
						Column: 1,
						Line:   42,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 9,
							Line:   42,
						},
						File:   "teams.flux",
						Source: "endpoint",
						Start: ast.Position{
							Column: 1,
							Line:   42,
						},
					},
				},
				Name: "endpoint",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 15,
							Line:   53,
						},
						File:   "teams.flux",
						Source: "(url) =>\n    (mapFn) =>\n        (tables=<-) => tables\n            |> map(fn: (r) => {\n                obj = mapFn(r: r)\n                return {r with _sent: string(v: 2 == message(\n                    url: url,\n                    title: obj.title,\n                    text: obj.text,\n                    summary: if exists obj.summary then obj.summary else \"\"\n                ) / 100)}\n            })",
						Start: ast.Position{
							Column: 12,
							Line:   42,
						},
					},
				},
				Body: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 15,
								Line:   53,
							},
							File:   "teams.flux",
							Source: "(mapFn) =>\n        (tables=<-) => tables\n            |> map(fn: (r) => {\n                obj = mapFn(r: r)\n                return {r with _sent: string(v: 2 == message(\n                    url: url,\n                    title: obj.title,\n                    text: obj.text,\n                    summary: if exists obj.summary then obj.summary else \"\"\n                ) / 100)}\n            })",
							Start: ast.Position{
								Column: 5,
								Line:   43,
							},
						},
					},
					Body: &ast.FunctionExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 15,
									Line:   53,
								},
								File:   "teams.flux",
								Source: "(tables=<-) => tables\n            |> map(fn: (r) => {\n                obj = mapFn(r: r)\n                return {r with _sent: string(v: 2 == message(\n                    url: url,\n                    title: obj.title,\n                    text: obj.text,\n                    summary: if exists obj.summary then obj.summary else \"\"\n                ) / 100)}\n            })",
								Start: ast.Position{
									Column: 9,
									Line:   44,
								},
							},
						},
						Body: &ast.PipeExpression{
							Argument: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 30,
											Line:   44,
										},
										File:   "teams.flux",
										Source: "tables",
										Start: ast.Position{
											Column: 24,
											Line:   44,
										},
									},
								},
								Name: "tables",
							},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 15,
										Line:   53,
									},
									File:   "teams.flux",
									Source: "tables\n            |> map(fn: (r) => {\n                obj = mapFn(r: r)\n                return {r with _sent: string(v: 2 == message(\n                    url: url,\n                    title: obj.title,\n                    text: obj.text,\n                    summary: if exists obj.summary then obj.summary else \"\"\n                ) / 100)}\n            })",
									Start: ast.Position{
										Column: 24,
										Line:   44,
									},
								},
							},
							Call: &ast.CallExpression{
								Arguments: []ast.Expression{&ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 14,
												Line:   53,
											},
											File:   "teams.flux",
											Source: "fn: (r) => {\n                obj = mapFn(r: r)\n                return {r with _sent: string(v: 2 == message(\n                    url: url,\n                    title: obj.title,\n                    text: obj.text,\n                    summary: if exists obj.summary then obj.summary else \"\"\n                ) / 100)}\n            }",
											Start: ast.Position{
												Column: 20,
												Line:   45,
											},
										},
									},
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 14,
													Line:   53,
												},
												File:   "teams.flux",
												Source: "fn: (r) => {\n                obj = mapFn(r: r)\n                return {r with _sent: string(v: 2 == message(\n                    url: url,\n                    title: obj.title,\n                    text: obj.text,\n                    summary: if exists obj.summary then obj.summary else \"\"\n                ) / 100)}\n            }",
												Start: ast.Position{
													Column: 20,
													Line:   45,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 22,
														Line:   45,
													},
													File:   "teams.flux",
													Source: "fn",
													Start: ast.Position{
														Column: 20,
														Line:   45,
													},
												},
											},
											Name: "fn",
										},
										Value: &ast.FunctionExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 14,
														Line:   53,
													},
													File:   "teams.flux",
													Source: "(r) => {\n                obj = mapFn(r: r)\n                return {r with _sent: string(v: 2 == message(\n                    url: url,\n                    title: obj.title,\n                    text: obj.text,\n                    summary: if exists obj.summary then obj.summary else \"\"\n                ) / 100)}\n            }",
													Start: ast.Position{
														Column: 24,
														Line:   45,
													},
												},
											},
											Body: &ast.Block{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 14,
															Line:   53,
														},
														File:   "teams.flux",
														Source: "{\n                obj = mapFn(r: r)\n                return {r with _sent: string(v: 2 == message(\n                    url: url,\n                    title: obj.title,\n                    text: obj.text,\n                    summary: if exists obj.summary then obj.summary else \"\"\n                ) / 100)}\n            }",
														Start: ast.Position{
															Column: 31,
															Line:   45,
														},
													},
												},
												Body: []ast.Statement{&ast.VariableAssignment{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 34,
																Line:   46,
															},
															File:   "teams.flux",
															Source: "obj = mapFn(r: r)",
															Start: ast.Position{
																Column: 17,
																Line:   46,
															},
														},
													},
													ID: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 20,
																	Line:   46,
																},
																File:   "teams.flux",
																Source: "obj",
																Start: ast.Position{
																	Column: 17,
																	Line:   46,
																},
															},
														},
														Name: "obj",
													},
													Init: &ast.CallExpression{
														Arguments: []ast.Expression{&ast.ObjectExpression{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 33,
																		Line:   46,
																	},
																	File:   "teams.flux",
																	Source: "r: r",
																	Start: ast.Position{
																		Column: 29,
																		Line:   46,
																	},
																},
															},
															Properties: []*ast.Property{&ast.Property{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 33,
																			Line:   46,
																		},
																		File:   "teams.flux",
																		Source: "r: r",
																		Start: ast.Position{
																			Column: 29,
																			Line:   46,
																		},
																	},
																},
																Key: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 30,
																				Line:   46,
																			},
																			File:   "teams.flux",
																			Source: "r",
																			Start: ast.Position{
																				Column: 29,
																				Line:   46,
																			},
																		},
																	},
																	Name: "r",
																},
																Value: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 33,
																				Line:   46,
																			},
																			File:   "teams.flux",
																			Source: "r",
																			Start: ast.Position{
																				Column: 32,
																				Line:   46,
																			},
																		},
																	},
																	Name: "r",
																},
															}},
															With: nil,
														}},
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 34,
																	Line:   46,
																},
																File:   "teams.flux",
																Source: "mapFn(r: r)",
																Start: ast.Position{
																	Column: 23,
																	Line:   46,
																},
															},
														},
														Callee: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 28,
																		Line:   46,
																	},
																	File:   "teams.flux",
																	Source: "mapFn",
																	Start: ast.Position{
																		Column: 23,
																		Line:   46,
																	},
																},
															},
															Name: "mapFn",
														},
													},
												}, &ast.ReturnStatement{
													Argument: &ast.ObjectExpression{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 26,
																	Line:   52,
																},
																File:   "teams.flux",
																Source: "{r with _sent: string(v: 2 == message(\n                    url: url,\n                    title: obj.title,\n                    text: obj.text,\n                    summary: if exists obj.summary then obj.summary else \"\"\n                ) / 100)}",
																Start: ast.Position{
																	Column: 24,
																	Line:   47,
																},
															},
														},
														Properties: []*ast.Property{&ast.Property{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 25,
																		Line:   52,
																	},
																	File:   "teams.flux",
																	Source: "_sent: string(v: 2 == message(\n                    url: url,\n                    title: obj.title,\n                    text: obj.text,\n                    summary: if exists obj.summary then obj.summary else \"\"\n                ) / 100)",
																	Start: ast.Position{
																		Column: 32,
																		Line:   47,
																	},
																},
															},
															Key: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 37,
																			Line:   47,
																		},
																		File:   "teams.flux",
																		Source: "_sent",
																		Start: ast.Position{
																			Column: 32,
																			Line:   47,
																		},
																	},
																},
																Name: "_sent",
															},
															Value: &ast.CallExpression{
																Arguments: []ast.Expression{&ast.ObjectExpression{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 24,
																				Line:   52,
																			},
																			File:   "teams.flux",
																			Source: "v: 2 == message(\n                    url: url,\n                    title: obj.title,\n                    text: obj.text,\n                    summary: if exists obj.summary then obj.summary else \"\"\n                ) / 100",
																			Start: ast.Position{
																				Column: 46,
																				Line:   47,
																			},
																		},
																	},
																	Properties: []*ast.Property{&ast.Property{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 24,
																					Line:   52,
																				},
																				File:   "teams.flux",
																				Source: "v: 2 == message(\n                    url: url,\n                    title: obj.title,\n                    text: obj.text,\n                    summary: if exists obj.summary then obj.summary else \"\"\n                ) / 100",
																				Start: ast.Position{
																					Column: 46,
																					Line:   47,
																				},
																			},
																		},
																		Key: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 47,
																						Line:   47,
																					},
																					File:   "teams.flux",
																					Source: "v",
																					Start: ast.Position{
																						Column: 46,
																						Line:   47,
																					},
																				},
																			},
																			Name: "v",
																		},
																		Value: &ast.BinaryExpression{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 24,
																						Line:   52,
																					},
																					File:   "teams.flux",
																					Source: "2 == message(\n                    url: url,\n                    title: obj.title,\n                    text: obj.text,\n                    summary: if exists obj.summary then obj.summary else \"\"\n                ) / 100",
																					Start: ast.Position{
																						Column: 49,
																						Line:   47,
																					},
																				},
																			},
																			Left: &ast.IntegerLiteral{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 50,
																							Line:   47,
																						},
																						File:   "teams.flux",
																						Source: "2",
																						Start: ast.Position{
																							Column: 49,
																							Line:   47,
																						},
																					},
																				},
																				Value: int64(2),
																			},
																			Operator: 17,
																			Right: &ast.BinaryExpression{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 24,
																							Line:   52,
																						},
																						File:   "teams.flux",
																						Source: "message(\n                    url: url,\n                    title: obj.title,\n                    text: obj.text,\n                    summary: if exists obj.summary then obj.summary else \"\"\n                ) / 100",
																						Start: ast.Position{
																							Column: 54,
																							Line:   47,
																						},
																					},
																				},
																				Left: &ast.CallExpression{
																					Arguments: []ast.Expression{&ast.ObjectExpression{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 76,
																									Line:   51,
																								},
																								File:   "teams.flux",
																								Source: "url: url,\n                    title: obj.title,\n                    text: obj.text,\n                    summary: if exists obj.summary then obj.summary else \"\"",
																								Start: ast.Position{
																									Column: 21,
																									Line:   48,
																								},
																							},
																						},
																						Properties: []*ast.Property{&ast.Property{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 29,
																										Line:   48,
																									},
																									File:   "teams.flux",
																									Source: "url: url",
																									Start: ast.Position{
																										Column: 21,
																										Line:   48,
																									},
																								},
																							},
																							Key: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 24,
																											Line:   48,
																										},
																										File:   "teams.flux",
																										Source: "url",
																										Start: ast.Position{
																											Column: 21,
																											Line:   48,
																										},
																									},
																								},
																								Name: "url",
																							},
																							Value: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 29,
																											Line:   48,
																										},
																										File:   "teams.flux",
																										Source: "url",
																										Start: ast.Position{
																											Column: 26,
																											Line:   48,
																										},
																									},
																								},
																								Name: "url",
																							},
																						}, &ast.Property{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 37,
																										Line:   49,
																									},
																									File:   "teams.flux",
																									Source: "title: obj.title",
																									Start: ast.Position{
																										Column: 21,
																										Line:   49,
																									},
																								},
																							},
																							Key: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 26,
																											Line:   49,
																										},
																										File:   "teams.flux",
																										Source: "title",
																										Start: ast.Position{
																											Column: 21,
																											Line:   49,
																										},
																									},
																								},
																								Name: "title",
																							},
																							Value: &ast.MemberExpression{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 37,
																											Line:   49,
																										},
																										File:   "teams.flux",
																										Source: "obj.title",
																										Start: ast.Position{
																											Column: 28,
																											Line:   49,
																										},
																									},
																								},
																								Object: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 31,
																												Line:   49,
																											},
																											File:   "teams.flux",
																											Source: "obj",
																											Start: ast.Position{
																												Column: 28,
																												Line:   49,
																											},
																										},
																									},
																									Name: "obj",
																								},
																								Property: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 37,
																												Line:   49,
																											},
																											File:   "teams.flux",
																											Source: "title",
																											Start: ast.Position{
																												Column: 32,
																												Line:   49,
																											},
																										},
																									},
																									Name: "title",
																								},
																							},
																						}, &ast.Property{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 35,
																										Line:   50,
																									},
																									File:   "teams.flux",
																									Source: "text: obj.text",
																									Start: ast.Position{
																										Column: 21,
																										Line:   50,
																									},
																								},
																							},
																							Key: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 25,
																											Line:   50,
																										},
																										File:   "teams.flux",
																										Source: "text",
																										Start: ast.Position{
																											Column: 21,
																											Line:   50,
																										},
																									},
																								},
																								Name: "text",
																							},
																							Value: &ast.MemberExpression{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 35,
																											Line:   50,
																										},
																										File:   "teams.flux",
																										Source: "obj.text",
																										Start: ast.Position{
																											Column: 27,
																											Line:   50,
																										},
																									},
																								},
																								Object: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 30,
																												Line:   50,
																											},
																											File:   "teams.flux",
																											Source: "obj",
																											Start: ast.Position{
																												Column: 27,
																												Line:   50,
																											},
																										},
																									},
																									Name: "obj",
																								},
																								Property: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 35,
																												Line:   50,
																											},
																											File:   "teams.flux",
																											Source: "text",
																											Start: ast.Position{
																												Column: 31,
																												Line:   50,
																											},
																										},
																									},
																									Name: "text",
																								},
																							},
																						}, &ast.Property{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 76,
																										Line:   51,
																									},
																									File:   "teams.flux",
																									Source: "summary: if exists obj.summary then obj.summary else \"\"",
																									Start: ast.Position{
																										Column: 21,
																										Line:   51,
																									},
																								},
																							},
																							Key: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 28,
																											Line:   51,
																										},
																										File:   "teams.flux",
																										Source: "summary",
																										Start: ast.Position{
																											Column: 21,
																											Line:   51,
																										},
																									},
																								},
																								Name: "summary",
																							},
																							Value: &ast.ConditionalExpression{
																								Alternate: &ast.StringLiteral{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 76,
																												Line:   51,
																											},
																											File:   "teams.flux",
																											Source: "\"\"",
																											Start: ast.Position{
																												Column: 74,
																												Line:   51,
																											},
																										},
																									},
																									Value: "",
																								},
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 76,
																											Line:   51,
																										},
																										File:   "teams.flux",
																										Source: "if exists obj.summary then obj.summary else \"\"",
																										Start: ast.Position{
																											Column: 30,
																											Line:   51,
																										},
																									},
																								},
																								Consequent: &ast.MemberExpression{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 68,
																												Line:   51,
																											},
																											File:   "teams.flux",
																											Source: "obj.summary",
																											Start: ast.Position{
																												Column: 57,
																												Line:   51,
																											},
																										},
																									},
																									Object: &ast.Identifier{
																										BaseNode: ast.BaseNode{
																											Errors: nil,
																											Loc: &ast.SourceLocation{
																												End: ast.Position{
																													Column: 60,
																													Line:   51,
																												},
																												File:   "teams.flux",
																												Source: "obj",
																												Start: ast.Position{
																													Column: 57,
																													Line:   51,
																												},
																											},
																										},
																										Name: "obj",
																									},
																									Property: &ast.Identifier{
																										BaseNode: ast.BaseNode{
																											Errors: nil,
																											Loc: &ast.SourceLocation{
																												End: ast.Position{
																													Column: 68,
																													Line:   51,
																												},
																												File:   "teams.flux",
																												Source: "summary",
																												Start: ast.Position{
																													Column: 61,
																													Line:   51,
																												},
																											},
																										},
																										Name: "summary",
																									},
																								},
																								Test: &ast.UnaryExpression{
																									Argument: &ast.MemberExpression{
																										BaseNode: ast.BaseNode{
																											Errors: nil,
																											Loc: &ast.SourceLocation{
																												End: ast.Position{
																													Column: 51,
																													Line:   51,
																												},
																												File:   "teams.flux",
																												Source: "obj.summary",
																												Start: ast.Position{
																													Column: 40,
																													Line:   51,
																												},
																											},
																										},
																										Object: &ast.Identifier{
																											BaseNode: ast.BaseNode{
																												Errors: nil,
																												Loc: &ast.SourceLocation{
																													End: ast.Position{
																														Column: 43,
																														Line:   51,
																													},
																													File:   "teams.flux",
																													Source: "obj",
																													Start: ast.Position{
																														Column: 40,
																														Line:   51,
																													},
																												},
																											},
																											Name: "obj",
																										},
																										Property: &ast.Identifier{
																											BaseNode: ast.BaseNode{
																												Errors: nil,
																												Loc: &ast.SourceLocation{
																													End: ast.Position{
																														Column: 51,
																														Line:   51,
																													},
																													File:   "teams.flux",
																													Source: "summary",
																													Start: ast.Position{
																														Column: 44,
																														Line:   51,
																													},
																												},
																											},
																											Name: "summary",
																										},
																									},
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 51,
																												Line:   51,
																											},
																											File:   "teams.flux",
																											Source: "exists obj.summary",
																											Start: ast.Position{
																												Column: 33,
																												Line:   51,
																											},
																										},
																									},
																									Operator: 14,
																								},
																							},
																						}},
																						With: nil,
																					}},
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 18,
																								Line:   52,
																							},
																							File:   "teams.flux",
																							Source: "message(\n                    url: url,\n                    title: obj.title,\n                    text: obj.text,\n                    summary: if exists obj.summary then obj.summary else \"\"\n                )",
																							Start: ast.Position{
																								Column: 54,
																								Line:   47,
																							},
																						},
																					},
																					Callee: &ast.Identifier{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 61,
																									Line:   47,
																								},
																								File:   "teams.flux",
																								Source: "message",
																								Start: ast.Position{
																									Column: 54,
																									Line:   47,
																								},
																							},
																						},
																						Name: "message",
																					},
																				},
																				Operator: 2,
																				Right: &ast.IntegerLiteral{
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 24,
																								Line:   52,
																							},
																							File:   "teams.flux",
																							Source: "100",
																							Start: ast.Position{
																								Column: 21,
																								Line:   52,
																							},
																						},
																					},
																					Value: int64(100),
																				},
																			},
																		},
																	}},
																	With: nil,
																}},
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 25,
																			Line:   52,
																		},
																		File:   "teams.flux",
																		Source: "string(v: 2 == message(\n                    url: url,\n                    title: obj.title,\n                    text: obj.text,\n                    summary: if exists obj.summary then obj.summary else \"\"\n                ) / 100)",
																		Start: ast.Position{
																			Column: 39,
																			Line:   47,
																		},
																	},
																},
																Callee: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 45,
																				Line:   47,
																			},
																			File:   "teams.flux",
																			Source: "string",
																			Start: ast.Position{
																				Column: 39,
																				Line:   47,
																			},
																		},
																	},
																	Name: "string",
																},
															},
														}},
														With: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 26,
																		Line:   47,
																	},
																	File:   "teams.flux",
																	Source: "r",
																	Start: ast.Position{
																		Column: 25,
																		Line:   47,
																	},
																},
															},
															Name: "r",
														},
													},
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 26,
																Line:   52,
															},
															File:   "teams.flux",
															Source: "return {r with _sent: string(v: 2 == message(\n                    url: url,\n                    title: obj.title,\n                    text: obj.text,\n                    summary: if exists obj.summary then obj.summary else \"\"\n                ) / 100)}",
															Start: ast.Position{
																Column: 17,
																Line:   47,
															},
														},
													},
												}},
											},
											Params: []*ast.Property{&ast.Property{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 26,
															Line:   45,
														},
														File:   "teams.flux",
														Source: "r",
														Start: ast.Position{
															Column: 25,
															Line:   45,
														},
													},
												},
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 26,
																Line:   45,
															},
															File:   "teams.flux",
															Source: "r",
															Start: ast.Position{
																Column: 25,
																Line:   45,
															},
														},
													},
													Name: "r",
												},
												Value: nil,
											}},
										},
									}},
									With: nil,
								}},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 15,
											Line:   53,
										},
										File:   "teams.flux",
										Source: "map(fn: (r) => {\n                obj = mapFn(r: r)\n                return {r with _sent: string(v: 2 == message(\n                    url: url,\n                    title: obj.title,\n                    text: obj.text,\n                    summary: if exists obj.summary then obj.summary else \"\"\n                ) / 100)}\n            })",
										Start: ast.Position{
											Column: 16,
											Line:   45,
										},
									},
								},
								Callee: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 19,
												Line:   45,
											},
											File:   "teams.flux",
											Source: "map",
											Start: ast.Position{
												Column: 16,
												Line:   45,
											},
										},
									},
									Name: "map",
								},
							},
						},
						Params: []*ast.Property{&ast.Property{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 19,
										Line:   44,
									},
									File:   "teams.flux",
									Source: "tables=<-",
									Start: ast.Position{
										Column: 10,
										Line:   44,
									},
								},
							},
							Key: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 16,
											Line:   44,
										},
										File:   "teams.flux",
										Source: "tables",
										Start: ast.Position{
											Column: 10,
											Line:   44,
										},
									},
								},
								Name: "tables",
							},
							Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 19,
										Line:   44,
									},
									File:   "teams.flux",
									Source: "<-",
									Start: ast.Position{
										Column: 17,
										Line:   44,
									},
								},
							}},
						}},
					},
					Params: []*ast.Property{&ast.Property{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 11,
									Line:   43,
								},
								File:   "teams.flux",
								Source: "mapFn",
								Start: ast.Position{
									Column: 6,
									Line:   43,
								},
							},
						},
						Key: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 11,
										Line:   43,
									},
									File:   "teams.flux",
									Source: "mapFn",
									Start: ast.Position{
										Column: 6,
										Line:   43,
									},
								},
							},
							Name: "mapFn",
						},
						Value: nil,
					}},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 16,
								Line:   42,
							},
							File:   "teams.flux",
							Source: "url",
							Start: ast.Position{
								Column: 13,
								Line:   42,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 16,
									Line:   42,
								},
								File:   "teams.flux",
								Source: "url",
								Start: ast.Position{
									Column: 13,
									Line:   42,
								},
							},
						},
						Name: "url",
					},
					Value: nil,
				}},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 14,
						Line:   3,
					},
					File:   "teams.flux",
					Source: "import \"http\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 14,
							Line:   3,
						},
						File:   "teams.flux",
						Source: "\"http\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "http",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 14,
						Line:   4,
					},
					File:   "teams.flux",
					Source: "import \"json\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 14,
							Line:   4,
						},
						File:   "teams.flux",
						Source: "\"json\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "json",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   5,
					},
					File:   "teams.flux",
					Source: "import \"strings\"",
					Start: ast.Position{
						Column: 1,
						Line:   5,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   5,
						},
						File:   "teams.flux",
						Source: "\"strings\"",
						Start: ast.Position{
							Column: 8,
							Line:   5,
						},
					},
				},
				Value: "strings",
			},
		}},
		Metadata: "parser-type=rust",
		Name:     "teams.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 14,
						Line:   1,
					},
					File:   "teams.flux",
					Source: "package teams",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 14,
							Line:   1,
						},
						File:   "teams.flux",
						Source: "teams",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "teams",
			},
		},
	}},
	Package: "teams",
	Path:    "contrib/sranka/teams",
}
