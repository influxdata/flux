// DO NOT EDIT: This file is autogenerated via the builtin command.

package sql

import (
	ast "github.com/influxdata/flux/ast"
	runtime "github.com/influxdata/flux/runtime"
)

func init() {
	runtime.RegisterPackage(pkgAST)
}

var pkgAST = &ast.Package{
	BaseNode: ast.BaseNode{
		Comments: nil,
		Errors:   nil,
		Loc:      nil,
	},
	Files: []*ast.File{&ast.File{
		BaseNode: ast.BaseNode{
			Comments: nil,
			Errors:   nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 11,
					Line:   5,
				},
				File:   "sql.flux",
				Source: "package sql\n\n\nbuiltin from : (driverName: string, dataSourceName: string, query: string) => [A]\nbuiltin to",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 13,
						Line:   4,
					},
					File:   "sql.flux",
					Source: "builtin from",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 13,
							Line:   4,
						},
						File:   "sql.flux",
						Source: "from",
						Start: ast.Position{
							Column: 9,
							Line:   4,
						},
					},
				},
				Name: "from",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 82,
							Line:   4,
						},
						File:   "sql.flux",
						Source: "(driverName: string, dataSourceName: string, query: string) => [A]",
						Start: ast.Position{
							Column: 16,
							Line:   4,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 82,
								Line:   4,
							},
							File:   "sql.flux",
							Source: "(driverName: string, dataSourceName: string, query: string) => [A]",
							Start: ast.Position{
								Column: 16,
								Line:   4,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 35,
									Line:   4,
								},
								File:   "sql.flux",
								Source: "driverName: string",
								Start: ast.Position{
									Column: 17,
									Line:   4,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 27,
										Line:   4,
									},
									File:   "sql.flux",
									Source: "driverName",
									Start: ast.Position{
										Column: 17,
										Line:   4,
									},
								},
							},
							Name: "driverName",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 35,
										Line:   4,
									},
									File:   "sql.flux",
									Source: "string",
									Start: ast.Position{
										Column: 29,
										Line:   4,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 35,
											Line:   4,
										},
										File:   "sql.flux",
										Source: "string",
										Start: ast.Position{
											Column: 29,
											Line:   4,
										},
									},
								},
								Name: "string",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 59,
									Line:   4,
								},
								File:   "sql.flux",
								Source: "dataSourceName: string",
								Start: ast.Position{
									Column: 37,
									Line:   4,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 51,
										Line:   4,
									},
									File:   "sql.flux",
									Source: "dataSourceName",
									Start: ast.Position{
										Column: 37,
										Line:   4,
									},
								},
							},
							Name: "dataSourceName",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 59,
										Line:   4,
									},
									File:   "sql.flux",
									Source: "string",
									Start: ast.Position{
										Column: 53,
										Line:   4,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 59,
											Line:   4,
										},
										File:   "sql.flux",
										Source: "string",
										Start: ast.Position{
											Column: 53,
											Line:   4,
										},
									},
								},
								Name: "string",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 74,
									Line:   4,
								},
								File:   "sql.flux",
								Source: "query: string",
								Start: ast.Position{
									Column: 61,
									Line:   4,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 66,
										Line:   4,
									},
									File:   "sql.flux",
									Source: "query",
									Start: ast.Position{
										Column: 61,
										Line:   4,
									},
								},
							},
							Name: "query",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 74,
										Line:   4,
									},
									File:   "sql.flux",
									Source: "string",
									Start: ast.Position{
										Column: 68,
										Line:   4,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 74,
											Line:   4,
										},
										File:   "sql.flux",
										Source: "string",
										Start: ast.Position{
											Column: 68,
											Line:   4,
										},
									},
								},
								Name: "string",
							},
						},
					}},
					Return: &ast.ArrayType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 82,
									Line:   4,
								},
								File:   "sql.flux",
								Source: "[A]",
								Start: ast.Position{
									Column: 79,
									Line:   4,
								},
							},
						},
						ElementType: &ast.TvarType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 81,
										Line:   4,
									},
									File:   "sql.flux",
									Source: "A",
									Start: ast.Position{
										Column: 80,
										Line:   4,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 81,
											Line:   4,
										},
										File:   "sql.flux",
										Source: "A",
										Start: ast.Position{
											Column: 80,
											Line:   4,
										},
									},
								},
								Name: "A",
							},
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 11,
						Line:   5,
					},
					File:   "sql.flux",
					Source: "builtin to",
					Start: ast.Position{
						Column: 1,
						Line:   5,
					},
				},
			},
			Colon: nil,
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 11,
							Line:   5,
						},
						File:   "sql.flux",
						Source: "to",
						Start: ast.Position{
							Column: 9,
							Line:   5,
						},
					},
				},
				Name: "to",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 9,
							Line:   11,
						},
						File:   "sql.flux",
						Source: "(\n    <-tables: [A],\n    driverName: string,\n    dataSourceName: string,\n    table: string,\n    ?batchSize: int,\n) => [A]",
						Start: ast.Position{
							Column: 14,
							Line:   5,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 9,
								Line:   11,
							},
							File:   "sql.flux",
							Source: "(\n    <-tables: [A],\n    driverName: string,\n    dataSourceName: string,\n    table: string,\n    ?batchSize: int,\n) => [A]",
							Start: ast.Position{
								Column: 14,
								Line:   5,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 18,
									Line:   6,
								},
								File:   "sql.flux",
								Source: "<-tables: [A]",
								Start: ast.Position{
									Column: 5,
									Line:   6,
								},
							},
						},
						Kind: "Pipe",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 13,
										Line:   6,
									},
									File:   "sql.flux",
									Source: "tables",
									Start: ast.Position{
										Column: 7,
										Line:   6,
									},
								},
							},
							Name: "tables",
						},
						Ty: &ast.ArrayType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 18,
										Line:   6,
									},
									File:   "sql.flux",
									Source: "[A]",
									Start: ast.Position{
										Column: 15,
										Line:   6,
									},
								},
							},
							ElementType: &ast.TvarType{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 17,
											Line:   6,
										},
										File:   "sql.flux",
										Source: "A",
										Start: ast.Position{
											Column: 16,
											Line:   6,
										},
									},
								},
								ID: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 17,
												Line:   6,
											},
											File:   "sql.flux",
											Source: "A",
											Start: ast.Position{
												Column: 16,
												Line:   6,
											},
										},
									},
									Name: "A",
								},
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 23,
									Line:   7,
								},
								File:   "sql.flux",
								Source: "driverName: string",
								Start: ast.Position{
									Column: 5,
									Line:   7,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 15,
										Line:   7,
									},
									File:   "sql.flux",
									Source: "driverName",
									Start: ast.Position{
										Column: 5,
										Line:   7,
									},
								},
							},
							Name: "driverName",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 23,
										Line:   7,
									},
									File:   "sql.flux",
									Source: "string",
									Start: ast.Position{
										Column: 17,
										Line:   7,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 23,
											Line:   7,
										},
										File:   "sql.flux",
										Source: "string",
										Start: ast.Position{
											Column: 17,
											Line:   7,
										},
									},
								},
								Name: "string",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 27,
									Line:   8,
								},
								File:   "sql.flux",
								Source: "dataSourceName: string",
								Start: ast.Position{
									Column: 5,
									Line:   8,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 19,
										Line:   8,
									},
									File:   "sql.flux",
									Source: "dataSourceName",
									Start: ast.Position{
										Column: 5,
										Line:   8,
									},
								},
							},
							Name: "dataSourceName",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 27,
										Line:   8,
									},
									File:   "sql.flux",
									Source: "string",
									Start: ast.Position{
										Column: 21,
										Line:   8,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 27,
											Line:   8,
										},
										File:   "sql.flux",
										Source: "string",
										Start: ast.Position{
											Column: 21,
											Line:   8,
										},
									},
								},
								Name: "string",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 18,
									Line:   9,
								},
								File:   "sql.flux",
								Source: "table: string",
								Start: ast.Position{
									Column: 5,
									Line:   9,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 10,
										Line:   9,
									},
									File:   "sql.flux",
									Source: "table",
									Start: ast.Position{
										Column: 5,
										Line:   9,
									},
								},
							},
							Name: "table",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 18,
										Line:   9,
									},
									File:   "sql.flux",
									Source: "string",
									Start: ast.Position{
										Column: 12,
										Line:   9,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 18,
											Line:   9,
										},
										File:   "sql.flux",
										Source: "string",
										Start: ast.Position{
											Column: 12,
											Line:   9,
										},
									},
								},
								Name: "string",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 20,
									Line:   10,
								},
								File:   "sql.flux",
								Source: "?batchSize: int",
								Start: ast.Position{
									Column: 5,
									Line:   10,
								},
							},
						},
						Kind: "Optional",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 15,
										Line:   10,
									},
									File:   "sql.flux",
									Source: "batchSize",
									Start: ast.Position{
										Column: 6,
										Line:   10,
									},
								},
							},
							Name: "batchSize",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 20,
										Line:   10,
									},
									File:   "sql.flux",
									Source: "int",
									Start: ast.Position{
										Column: 17,
										Line:   10,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 20,
											Line:   10,
										},
										File:   "sql.flux",
										Source: "int",
										Start: ast.Position{
											Column: 17,
											Line:   10,
										},
									},
								},
								Name: "int",
							},
						},
					}},
					Return: &ast.ArrayType{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 9,
									Line:   11,
								},
								File:   "sql.flux",
								Source: "[A]",
								Start: ast.Position{
									Column: 6,
									Line:   11,
								},
							},
						},
						ElementType: &ast.TvarType{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 8,
										Line:   11,
									},
									File:   "sql.flux",
									Source: "A",
									Start: ast.Position{
										Column: 7,
										Line:   11,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 8,
											Line:   11,
										},
										File:   "sql.flux",
										Source: "A",
										Start: ast.Position{
											Column: 7,
											Line:   11,
										},
									},
								},
								Name: "A",
							},
						},
					},
				},
			},
		}},
		Eof:      nil,
		Imports:  nil,
		Metadata: "parser-type=rust",
		Name:     "sql.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 12,
						Line:   1,
					},
					File:   "sql.flux",
					Source: "package sql",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 12,
							Line:   1,
						},
						File:   "sql.flux",
						Source: "sql",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "sql",
			},
		},
	}},
	Package: "sql",
	Path:    "sql",
}
