// DO NOT EDIT: This file is autogenerated via the builtin command.

package http

import (
	ast "github.com/influxdata/flux/ast"
	runtime "github.com/influxdata/flux/runtime"
)

func init() {
	runtime.RegisterPackage(pkgAST)
}

var pkgAST = &ast.Package{
	BaseNode: ast.BaseNode{
		Errors: nil,
		Loc:    nil,
	},
	Files: []*ast.File{&ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 72,
					Line:   27,
				},
				File:   "http.flux",
				Source: "package http\n\nimport \"experimental\"\n\n// Post submits an HTTP post request to the specified URL with headers and data.\n// The HTTP status code is returned.\nbuiltin post : (url: string, ?headers: A, ?data: bytes) => int where A: Record\n\n// basicAuth will take a username/password combination and return the authorization\n// header value.\nbuiltin basicAuth : (u: string, p: string) => string\n\n// PathEscape escapes the string so it can be safely placed inside a URL path segment\n// replacing special characters (including /) with %XX sequences as needed.\nbuiltin pathEscape : (inputString: string) => string\n\nendpoint = (url) =>\n    (mapFn) =>\n        (tables=<-) =>\n            tables\n                |> map(fn: (r) => {\n                    obj = mapFn(r: r)\n                    return {r with\n                        _sent: string(v: 200 == post(url: url, headers: obj.headers, data: obj.data))\n                    }\n                })\n                |> experimental.group(mode:\"extend\", columns:[\"_sent\"])",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 13,
						Line:   7,
					},
					File:   "http.flux",
					Source: "builtin post",
					Start: ast.Position{
						Column: 1,
						Line:   7,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 13,
							Line:   7,
						},
						File:   "http.flux",
						Source: "post",
						Start: ast.Position{
							Column: 9,
							Line:   7,
						},
					},
				},
				Name: "post",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 79,
							Line:   7,
						},
						File:   "http.flux",
						Source: "(url: string, ?headers: A, ?data: bytes) => int where A: Record",
						Start: ast.Position{
							Column: 16,
							Line:   7,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{&ast.TypeConstraint{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 79,
								Line:   7,
							},
							File:   "http.flux",
							Source: "A: Record",
							Start: ast.Position{
								Column: 70,
								Line:   7,
							},
						},
					},
					Kinds: []*ast.Identifier{&ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 79,
									Line:   7,
								},
								File:   "http.flux",
								Source: "Record",
								Start: ast.Position{
									Column: 73,
									Line:   7,
								},
							},
						},
						Name: "Record",
					}},
					Tvar: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 71,
									Line:   7,
								},
								File:   "http.flux",
								Source: "A",
								Start: ast.Position{
									Column: 70,
									Line:   7,
								},
							},
						},
						Name: "A",
					},
				}},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 63,
								Line:   7,
							},
							File:   "http.flux",
							Source: "(url: string, ?headers: A, ?data: bytes) => int",
							Start: ast.Position{
								Column: 16,
								Line:   7,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 28,
									Line:   7,
								},
								File:   "http.flux",
								Source: "url: string",
								Start: ast.Position{
									Column: 17,
									Line:   7,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 20,
										Line:   7,
									},
									File:   "http.flux",
									Source: "url",
									Start: ast.Position{
										Column: 17,
										Line:   7,
									},
								},
							},
							Name: "url",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 28,
										Line:   7,
									},
									File:   "http.flux",
									Source: "string",
									Start: ast.Position{
										Column: 22,
										Line:   7,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 28,
											Line:   7,
										},
										File:   "http.flux",
										Source: "string",
										Start: ast.Position{
											Column: 22,
											Line:   7,
										},
									},
								},
								Name: "string",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 41,
									Line:   7,
								},
								File:   "http.flux",
								Source: "?headers: A",
								Start: ast.Position{
									Column: 30,
									Line:   7,
								},
							},
						},
						Kind: "Optional",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 38,
										Line:   7,
									},
									File:   "http.flux",
									Source: "headers",
									Start: ast.Position{
										Column: 31,
										Line:   7,
									},
								},
							},
							Name: "headers",
						},
						Ty: &ast.TvarType{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   7,
									},
									File:   "http.flux",
									Source: "A",
									Start: ast.Position{
										Column: 40,
										Line:   7,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 41,
											Line:   7,
										},
										File:   "http.flux",
										Source: "A",
										Start: ast.Position{
											Column: 40,
											Line:   7,
										},
									},
								},
								Name: "A",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 55,
									Line:   7,
								},
								File:   "http.flux",
								Source: "?data: bytes",
								Start: ast.Position{
									Column: 43,
									Line:   7,
								},
							},
						},
						Kind: "Optional",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 48,
										Line:   7,
									},
									File:   "http.flux",
									Source: "data",
									Start: ast.Position{
										Column: 44,
										Line:   7,
									},
								},
							},
							Name: "data",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 55,
										Line:   7,
									},
									File:   "http.flux",
									Source: "bytes",
									Start: ast.Position{
										Column: 50,
										Line:   7,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 55,
											Line:   7,
										},
										File:   "http.flux",
										Source: "bytes",
										Start: ast.Position{
											Column: 50,
											Line:   7,
										},
									},
								},
								Name: "bytes",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 63,
									Line:   7,
								},
								File:   "http.flux",
								Source: "int",
								Start: ast.Position{
									Column: 60,
									Line:   7,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 63,
										Line:   7,
									},
									File:   "http.flux",
									Source: "int",
									Start: ast.Position{
										Column: 60,
										Line:   7,
									},
								},
							},
							Name: "int",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 18,
						Line:   11,
					},
					File:   "http.flux",
					Source: "builtin basicAuth",
					Start: ast.Position{
						Column: 1,
						Line:   11,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 18,
							Line:   11,
						},
						File:   "http.flux",
						Source: "basicAuth",
						Start: ast.Position{
							Column: 9,
							Line:   11,
						},
					},
				},
				Name: "basicAuth",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 53,
							Line:   11,
						},
						File:   "http.flux",
						Source: "(u: string, p: string) => string",
						Start: ast.Position{
							Column: 21,
							Line:   11,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 53,
								Line:   11,
							},
							File:   "http.flux",
							Source: "(u: string, p: string) => string",
							Start: ast.Position{
								Column: 21,
								Line:   11,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 31,
									Line:   11,
								},
								File:   "http.flux",
								Source: "u: string",
								Start: ast.Position{
									Column: 22,
									Line:   11,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 23,
										Line:   11,
									},
									File:   "http.flux",
									Source: "u",
									Start: ast.Position{
										Column: 22,
										Line:   11,
									},
								},
							},
							Name: "u",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 31,
										Line:   11,
									},
									File:   "http.flux",
									Source: "string",
									Start: ast.Position{
										Column: 25,
										Line:   11,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 31,
											Line:   11,
										},
										File:   "http.flux",
										Source: "string",
										Start: ast.Position{
											Column: 25,
											Line:   11,
										},
									},
								},
								Name: "string",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   11,
								},
								File:   "http.flux",
								Source: "p: string",
								Start: ast.Position{
									Column: 33,
									Line:   11,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 34,
										Line:   11,
									},
									File:   "http.flux",
									Source: "p",
									Start: ast.Position{
										Column: 33,
										Line:   11,
									},
								},
							},
							Name: "p",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 42,
										Line:   11,
									},
									File:   "http.flux",
									Source: "string",
									Start: ast.Position{
										Column: 36,
										Line:   11,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 42,
											Line:   11,
										},
										File:   "http.flux",
										Source: "string",
										Start: ast.Position{
											Column: 36,
											Line:   11,
										},
									},
								},
								Name: "string",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 53,
									Line:   11,
								},
								File:   "http.flux",
								Source: "string",
								Start: ast.Position{
									Column: 47,
									Line:   11,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 53,
										Line:   11,
									},
									File:   "http.flux",
									Source: "string",
									Start: ast.Position{
										Column: 47,
										Line:   11,
									},
								},
							},
							Name: "string",
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 19,
						Line:   15,
					},
					File:   "http.flux",
					Source: "builtin pathEscape",
					Start: ast.Position{
						Column: 1,
						Line:   15,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 19,
							Line:   15,
						},
						File:   "http.flux",
						Source: "pathEscape",
						Start: ast.Position{
							Column: 9,
							Line:   15,
						},
					},
				},
				Name: "pathEscape",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 53,
							Line:   15,
						},
						File:   "http.flux",
						Source: "(inputString: string) => string",
						Start: ast.Position{
							Column: 22,
							Line:   15,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 53,
								Line:   15,
							},
							File:   "http.flux",
							Source: "(inputString: string) => string",
							Start: ast.Position{
								Column: 22,
								Line:   15,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   15,
								},
								File:   "http.flux",
								Source: "inputString: string",
								Start: ast.Position{
									Column: 23,
									Line:   15,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 34,
										Line:   15,
									},
									File:   "http.flux",
									Source: "inputString",
									Start: ast.Position{
										Column: 23,
										Line:   15,
									},
								},
							},
							Name: "inputString",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 42,
										Line:   15,
									},
									File:   "http.flux",
									Source: "string",
									Start: ast.Position{
										Column: 36,
										Line:   15,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 42,
											Line:   15,
										},
										File:   "http.flux",
										Source: "string",
										Start: ast.Position{
											Column: 36,
											Line:   15,
										},
									},
								},
								Name: "string",
							},
						},
					}},
					Return: &ast.NamedType{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 53,
									Line:   15,
								},
								File:   "http.flux",
								Source: "string",
								Start: ast.Position{
									Column: 47,
									Line:   15,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 53,
										Line:   15,
									},
									File:   "http.flux",
									Source: "string",
									Start: ast.Position{
										Column: 47,
										Line:   15,
									},
								},
							},
							Name: "string",
						},
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 72,
						Line:   27,
					},
					File:   "http.flux",
					Source: "endpoint = (url) =>\n    (mapFn) =>\n        (tables=<-) =>\n            tables\n                |> map(fn: (r) => {\n                    obj = mapFn(r: r)\n                    return {r with\n                        _sent: string(v: 200 == post(url: url, headers: obj.headers, data: obj.data))\n                    }\n                })\n                |> experimental.group(mode:\"extend\", columns:[\"_sent\"])",
					Start: ast.Position{
						Column: 1,
						Line:   17,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 9,
							Line:   17,
						},
						File:   "http.flux",
						Source: "endpoint",
						Start: ast.Position{
							Column: 1,
							Line:   17,
						},
					},
				},
				Name: "endpoint",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 72,
							Line:   27,
						},
						File:   "http.flux",
						Source: "(url) =>\n    (mapFn) =>\n        (tables=<-) =>\n            tables\n                |> map(fn: (r) => {\n                    obj = mapFn(r: r)\n                    return {r with\n                        _sent: string(v: 200 == post(url: url, headers: obj.headers, data: obj.data))\n                    }\n                })\n                |> experimental.group(mode:\"extend\", columns:[\"_sent\"])",
						Start: ast.Position{
							Column: 12,
							Line:   17,
						},
					},
				},
				Body: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 72,
								Line:   27,
							},
							File:   "http.flux",
							Source: "(mapFn) =>\n        (tables=<-) =>\n            tables\n                |> map(fn: (r) => {\n                    obj = mapFn(r: r)\n                    return {r with\n                        _sent: string(v: 200 == post(url: url, headers: obj.headers, data: obj.data))\n                    }\n                })\n                |> experimental.group(mode:\"extend\", columns:[\"_sent\"])",
							Start: ast.Position{
								Column: 5,
								Line:   18,
							},
						},
					},
					Body: &ast.FunctionExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 72,
									Line:   27,
								},
								File:   "http.flux",
								Source: "(tables=<-) =>\n            tables\n                |> map(fn: (r) => {\n                    obj = mapFn(r: r)\n                    return {r with\n                        _sent: string(v: 200 == post(url: url, headers: obj.headers, data: obj.data))\n                    }\n                })\n                |> experimental.group(mode:\"extend\", columns:[\"_sent\"])",
								Start: ast.Position{
									Column: 9,
									Line:   19,
								},
							},
						},
						Body: &ast.PipeExpression{
							Argument: &ast.PipeExpression{
								Argument: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 19,
												Line:   20,
											},
											File:   "http.flux",
											Source: "tables",
											Start: ast.Position{
												Column: 13,
												Line:   20,
											},
										},
									},
									Name: "tables",
								},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 19,
											Line:   26,
										},
										File:   "http.flux",
										Source: "tables\n                |> map(fn: (r) => {\n                    obj = mapFn(r: r)\n                    return {r with\n                        _sent: string(v: 200 == post(url: url, headers: obj.headers, data: obj.data))\n                    }\n                })",
										Start: ast.Position{
											Column: 13,
											Line:   20,
										},
									},
								},
								Call: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 18,
													Line:   26,
												},
												File:   "http.flux",
												Source: "fn: (r) => {\n                    obj = mapFn(r: r)\n                    return {r with\n                        _sent: string(v: 200 == post(url: url, headers: obj.headers, data: obj.data))\n                    }\n                }",
												Start: ast.Position{
													Column: 24,
													Line:   21,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   26,
													},
													File:   "http.flux",
													Source: "fn: (r) => {\n                    obj = mapFn(r: r)\n                    return {r with\n                        _sent: string(v: 200 == post(url: url, headers: obj.headers, data: obj.data))\n                    }\n                }",
													Start: ast.Position{
														Column: 24,
														Line:   21,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 26,
															Line:   21,
														},
														File:   "http.flux",
														Source: "fn",
														Start: ast.Position{
															Column: 24,
															Line:   21,
														},
													},
												},
												Name: "fn",
											},
											Value: &ast.FunctionExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 18,
															Line:   26,
														},
														File:   "http.flux",
														Source: "(r) => {\n                    obj = mapFn(r: r)\n                    return {r with\n                        _sent: string(v: 200 == post(url: url, headers: obj.headers, data: obj.data))\n                    }\n                }",
														Start: ast.Position{
															Column: 28,
															Line:   21,
														},
													},
												},
												Body: &ast.Block{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 18,
																Line:   26,
															},
															File:   "http.flux",
															Source: "{\n                    obj = mapFn(r: r)\n                    return {r with\n                        _sent: string(v: 200 == post(url: url, headers: obj.headers, data: obj.data))\n                    }\n                }",
															Start: ast.Position{
																Column: 35,
																Line:   21,
															},
														},
													},
													Body: []ast.Statement{&ast.VariableAssignment{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 38,
																	Line:   22,
																},
																File:   "http.flux",
																Source: "obj = mapFn(r: r)",
																Start: ast.Position{
																	Column: 21,
																	Line:   22,
																},
															},
														},
														ID: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 24,
																		Line:   22,
																	},
																	File:   "http.flux",
																	Source: "obj",
																	Start: ast.Position{
																		Column: 21,
																		Line:   22,
																	},
																},
															},
															Name: "obj",
														},
														Init: &ast.CallExpression{
															Arguments: []ast.Expression{&ast.ObjectExpression{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 37,
																			Line:   22,
																		},
																		File:   "http.flux",
																		Source: "r: r",
																		Start: ast.Position{
																			Column: 33,
																			Line:   22,
																		},
																	},
																},
																Properties: []*ast.Property{&ast.Property{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 37,
																				Line:   22,
																			},
																			File:   "http.flux",
																			Source: "r: r",
																			Start: ast.Position{
																				Column: 33,
																				Line:   22,
																			},
																		},
																	},
																	Key: &ast.Identifier{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 34,
																					Line:   22,
																				},
																				File:   "http.flux",
																				Source: "r",
																				Start: ast.Position{
																					Column: 33,
																					Line:   22,
																				},
																			},
																		},
																		Name: "r",
																	},
																	Value: &ast.Identifier{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 37,
																					Line:   22,
																				},
																				File:   "http.flux",
																				Source: "r",
																				Start: ast.Position{
																					Column: 36,
																					Line:   22,
																				},
																			},
																		},
																		Name: "r",
																	},
																}},
																With: nil,
															}},
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 38,
																		Line:   22,
																	},
																	File:   "http.flux",
																	Source: "mapFn(r: r)",
																	Start: ast.Position{
																		Column: 27,
																		Line:   22,
																	},
																},
															},
															Callee: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 32,
																			Line:   22,
																		},
																		File:   "http.flux",
																		Source: "mapFn",
																		Start: ast.Position{
																			Column: 27,
																			Line:   22,
																		},
																	},
																},
																Name: "mapFn",
															},
														},
													}, &ast.ReturnStatement{
														Argument: &ast.ObjectExpression{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 22,
																		Line:   25,
																	},
																	File:   "http.flux",
																	Source: "{r with\n                        _sent: string(v: 200 == post(url: url, headers: obj.headers, data: obj.data))\n                    }",
																	Start: ast.Position{
																		Column: 28,
																		Line:   23,
																	},
																},
															},
															Properties: []*ast.Property{&ast.Property{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 102,
																			Line:   24,
																		},
																		File:   "http.flux",
																		Source: "_sent: string(v: 200 == post(url: url, headers: obj.headers, data: obj.data))",
																		Start: ast.Position{
																			Column: 25,
																			Line:   24,
																		},
																	},
																},
																Key: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 30,
																				Line:   24,
																			},
																			File:   "http.flux",
																			Source: "_sent",
																			Start: ast.Position{
																				Column: 25,
																				Line:   24,
																			},
																		},
																	},
																	Name: "_sent",
																},
																Value: &ast.CallExpression{
																	Arguments: []ast.Expression{&ast.ObjectExpression{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 101,
																					Line:   24,
																				},
																				File:   "http.flux",
																				Source: "v: 200 == post(url: url, headers: obj.headers, data: obj.data)",
																				Start: ast.Position{
																					Column: 39,
																					Line:   24,
																				},
																			},
																		},
																		Properties: []*ast.Property{&ast.Property{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 101,
																						Line:   24,
																					},
																					File:   "http.flux",
																					Source: "v: 200 == post(url: url, headers: obj.headers, data: obj.data)",
																					Start: ast.Position{
																						Column: 39,
																						Line:   24,
																					},
																				},
																			},
																			Key: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 40,
																							Line:   24,
																						},
																						File:   "http.flux",
																						Source: "v",
																						Start: ast.Position{
																							Column: 39,
																							Line:   24,
																						},
																					},
																				},
																				Name: "v",
																			},
																			Value: &ast.BinaryExpression{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 101,
																							Line:   24,
																						},
																						File:   "http.flux",
																						Source: "200 == post(url: url, headers: obj.headers, data: obj.data)",
																						Start: ast.Position{
																							Column: 42,
																							Line:   24,
																						},
																					},
																				},
																				Left: &ast.IntegerLiteral{
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 45,
																								Line:   24,
																							},
																							File:   "http.flux",
																							Source: "200",
																							Start: ast.Position{
																								Column: 42,
																								Line:   24,
																							},
																						},
																					},
																					Value: int64(200),
																				},
																				Operator: 17,
																				Right: &ast.CallExpression{
																					Arguments: []ast.Expression{&ast.ObjectExpression{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 100,
																									Line:   24,
																								},
																								File:   "http.flux",
																								Source: "url: url, headers: obj.headers, data: obj.data",
																								Start: ast.Position{
																									Column: 54,
																									Line:   24,
																								},
																							},
																						},
																						Properties: []*ast.Property{&ast.Property{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 62,
																										Line:   24,
																									},
																									File:   "http.flux",
																									Source: "url: url",
																									Start: ast.Position{
																										Column: 54,
																										Line:   24,
																									},
																								},
																							},
																							Key: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 57,
																											Line:   24,
																										},
																										File:   "http.flux",
																										Source: "url",
																										Start: ast.Position{
																											Column: 54,
																											Line:   24,
																										},
																									},
																								},
																								Name: "url",
																							},
																							Value: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 62,
																											Line:   24,
																										},
																										File:   "http.flux",
																										Source: "url",
																										Start: ast.Position{
																											Column: 59,
																											Line:   24,
																										},
																									},
																								},
																								Name: "url",
																							},
																						}, &ast.Property{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 84,
																										Line:   24,
																									},
																									File:   "http.flux",
																									Source: "headers: obj.headers",
																									Start: ast.Position{
																										Column: 64,
																										Line:   24,
																									},
																								},
																							},
																							Key: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 71,
																											Line:   24,
																										},
																										File:   "http.flux",
																										Source: "headers",
																										Start: ast.Position{
																											Column: 64,
																											Line:   24,
																										},
																									},
																								},
																								Name: "headers",
																							},
																							Value: &ast.MemberExpression{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 84,
																											Line:   24,
																										},
																										File:   "http.flux",
																										Source: "obj.headers",
																										Start: ast.Position{
																											Column: 73,
																											Line:   24,
																										},
																									},
																								},
																								Object: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 76,
																												Line:   24,
																											},
																											File:   "http.flux",
																											Source: "obj",
																											Start: ast.Position{
																												Column: 73,
																												Line:   24,
																											},
																										},
																									},
																									Name: "obj",
																								},
																								Property: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 84,
																												Line:   24,
																											},
																											File:   "http.flux",
																											Source: "headers",
																											Start: ast.Position{
																												Column: 77,
																												Line:   24,
																											},
																										},
																									},
																									Name: "headers",
																								},
																							},
																						}, &ast.Property{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 100,
																										Line:   24,
																									},
																									File:   "http.flux",
																									Source: "data: obj.data",
																									Start: ast.Position{
																										Column: 86,
																										Line:   24,
																									},
																								},
																							},
																							Key: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 90,
																											Line:   24,
																										},
																										File:   "http.flux",
																										Source: "data",
																										Start: ast.Position{
																											Column: 86,
																											Line:   24,
																										},
																									},
																								},
																								Name: "data",
																							},
																							Value: &ast.MemberExpression{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 100,
																											Line:   24,
																										},
																										File:   "http.flux",
																										Source: "obj.data",
																										Start: ast.Position{
																											Column: 92,
																											Line:   24,
																										},
																									},
																								},
																								Object: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 95,
																												Line:   24,
																											},
																											File:   "http.flux",
																											Source: "obj",
																											Start: ast.Position{
																												Column: 92,
																												Line:   24,
																											},
																										},
																									},
																									Name: "obj",
																								},
																								Property: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 100,
																												Line:   24,
																											},
																											File:   "http.flux",
																											Source: "data",
																											Start: ast.Position{
																												Column: 96,
																												Line:   24,
																											},
																										},
																									},
																									Name: "data",
																								},
																							},
																						}},
																						With: nil,
																					}},
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 101,
																								Line:   24,
																							},
																							File:   "http.flux",
																							Source: "post(url: url, headers: obj.headers, data: obj.data)",
																							Start: ast.Position{
																								Column: 49,
																								Line:   24,
																							},
																						},
																					},
																					Callee: &ast.Identifier{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 53,
																									Line:   24,
																								},
																								File:   "http.flux",
																								Source: "post",
																								Start: ast.Position{
																									Column: 49,
																									Line:   24,
																								},
																							},
																						},
																						Name: "post",
																					},
																				},
																			},
																		}},
																		With: nil,
																	}},
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 102,
																				Line:   24,
																			},
																			File:   "http.flux",
																			Source: "string(v: 200 == post(url: url, headers: obj.headers, data: obj.data))",
																			Start: ast.Position{
																				Column: 32,
																				Line:   24,
																			},
																		},
																	},
																	Callee: &ast.Identifier{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 38,
																					Line:   24,
																				},
																				File:   "http.flux",
																				Source: "string",
																				Start: ast.Position{
																					Column: 32,
																					Line:   24,
																				},
																			},
																		},
																		Name: "string",
																	},
																},
															}},
															With: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 30,
																			Line:   23,
																		},
																		File:   "http.flux",
																		Source: "r",
																		Start: ast.Position{
																			Column: 29,
																			Line:   23,
																		},
																	},
																},
																Name: "r",
															},
														},
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 22,
																	Line:   25,
																},
																File:   "http.flux",
																Source: "return {r with\n                        _sent: string(v: 200 == post(url: url, headers: obj.headers, data: obj.data))\n                    }",
																Start: ast.Position{
																	Column: 21,
																	Line:   23,
																},
															},
														},
													}},
												},
												Params: []*ast.Property{&ast.Property{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 30,
																Line:   21,
															},
															File:   "http.flux",
															Source: "r",
															Start: ast.Position{
																Column: 29,
																Line:   21,
															},
														},
													},
													Key: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 30,
																	Line:   21,
																},
																File:   "http.flux",
																Source: "r",
																Start: ast.Position{
																	Column: 29,
																	Line:   21,
																},
															},
														},
														Name: "r",
													},
													Value: nil,
												}},
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 19,
												Line:   26,
											},
											File:   "http.flux",
											Source: "map(fn: (r) => {\n                    obj = mapFn(r: r)\n                    return {r with\n                        _sent: string(v: 200 == post(url: url, headers: obj.headers, data: obj.data))\n                    }\n                })",
											Start: ast.Position{
												Column: 20,
												Line:   21,
											},
										},
									},
									Callee: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 23,
													Line:   21,
												},
												File:   "http.flux",
												Source: "map",
												Start: ast.Position{
													Column: 20,
													Line:   21,
												},
											},
										},
										Name: "map",
									},
								},
							},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 72,
										Line:   27,
									},
									File:   "http.flux",
									Source: "tables\n                |> map(fn: (r) => {\n                    obj = mapFn(r: r)\n                    return {r with\n                        _sent: string(v: 200 == post(url: url, headers: obj.headers, data: obj.data))\n                    }\n                })\n                |> experimental.group(mode:\"extend\", columns:[\"_sent\"])",
									Start: ast.Position{
										Column: 13,
										Line:   20,
									},
								},
							},
							Call: &ast.CallExpression{
								Arguments: []ast.Expression{&ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 71,
												Line:   27,
											},
											File:   "http.flux",
											Source: "mode:\"extend\", columns:[\"_sent\"]",
											Start: ast.Position{
												Column: 39,
												Line:   27,
											},
										},
									},
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 52,
													Line:   27,
												},
												File:   "http.flux",
												Source: "mode:\"extend\"",
												Start: ast.Position{
													Column: 39,
													Line:   27,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 43,
														Line:   27,
													},
													File:   "http.flux",
													Source: "mode",
													Start: ast.Position{
														Column: 39,
														Line:   27,
													},
												},
											},
											Name: "mode",
										},
										Value: &ast.StringLiteral{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 52,
														Line:   27,
													},
													File:   "http.flux",
													Source: "\"extend\"",
													Start: ast.Position{
														Column: 44,
														Line:   27,
													},
												},
											},
											Value: "extend",
										},
									}, &ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 71,
													Line:   27,
												},
												File:   "http.flux",
												Source: "columns:[\"_sent\"]",
												Start: ast.Position{
													Column: 54,
													Line:   27,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 61,
														Line:   27,
													},
													File:   "http.flux",
													Source: "columns",
													Start: ast.Position{
														Column: 54,
														Line:   27,
													},
												},
											},
											Name: "columns",
										},
										Value: &ast.ArrayExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 71,
														Line:   27,
													},
													File:   "http.flux",
													Source: "[\"_sent\"]",
													Start: ast.Position{
														Column: 62,
														Line:   27,
													},
												},
											},
											Elements: []ast.Expression{&ast.StringLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 70,
															Line:   27,
														},
														File:   "http.flux",
														Source: "\"_sent\"",
														Start: ast.Position{
															Column: 63,
															Line:   27,
														},
													},
												},
												Value: "_sent",
											}},
										},
									}},
									With: nil,
								}},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 72,
											Line:   27,
										},
										File:   "http.flux",
										Source: "experimental.group(mode:\"extend\", columns:[\"_sent\"])",
										Start: ast.Position{
											Column: 20,
											Line:   27,
										},
									},
								},
								Callee: &ast.MemberExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 38,
												Line:   27,
											},
											File:   "http.flux",
											Source: "experimental.group",
											Start: ast.Position{
												Column: 20,
												Line:   27,
											},
										},
									},
									Object: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 32,
													Line:   27,
												},
												File:   "http.flux",
												Source: "experimental",
												Start: ast.Position{
													Column: 20,
													Line:   27,
												},
											},
										},
										Name: "experimental",
									},
									Property: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 38,
													Line:   27,
												},
												File:   "http.flux",
												Source: "group",
												Start: ast.Position{
													Column: 33,
													Line:   27,
												},
											},
										},
										Name: "group",
									},
								},
							},
						},
						Params: []*ast.Property{&ast.Property{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 19,
										Line:   19,
									},
									File:   "http.flux",
									Source: "tables=<-",
									Start: ast.Position{
										Column: 10,
										Line:   19,
									},
								},
							},
							Key: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 16,
											Line:   19,
										},
										File:   "http.flux",
										Source: "tables",
										Start: ast.Position{
											Column: 10,
											Line:   19,
										},
									},
								},
								Name: "tables",
							},
							Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 19,
										Line:   19,
									},
									File:   "http.flux",
									Source: "<-",
									Start: ast.Position{
										Column: 17,
										Line:   19,
									},
								},
							}},
						}},
					},
					Params: []*ast.Property{&ast.Property{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 11,
									Line:   18,
								},
								File:   "http.flux",
								Source: "mapFn",
								Start: ast.Position{
									Column: 6,
									Line:   18,
								},
							},
						},
						Key: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 11,
										Line:   18,
									},
									File:   "http.flux",
									Source: "mapFn",
									Start: ast.Position{
										Column: 6,
										Line:   18,
									},
								},
							},
							Name: "mapFn",
						},
						Value: nil,
					}},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 16,
								Line:   17,
							},
							File:   "http.flux",
							Source: "url",
							Start: ast.Position{
								Column: 13,
								Line:   17,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 16,
									Line:   17,
								},
								File:   "http.flux",
								Source: "url",
								Start: ast.Position{
									Column: 13,
									Line:   17,
								},
							},
						},
						Name: "url",
					},
					Value: nil,
				}},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 22,
						Line:   3,
					},
					File:   "http.flux",
					Source: "import \"experimental\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 22,
							Line:   3,
						},
						File:   "http.flux",
						Source: "\"experimental\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "experimental",
			},
		}},
		Metadata: "parser-type=rust",
		Name:     "http.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 13,
						Line:   1,
					},
					File:   "http.flux",
					Source: "package http",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 13,
							Line:   1,
						},
						File:   "http.flux",
						Source: "http",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "http",
			},
		},
	}},
	Package: "http",
	Path:    "http",
}
