// DO NOT EDIT: This file is autogenerated via the builtin command.

package interpolate

import (
	ast "github.com/influxdata/flux/ast"
	runtime "github.com/influxdata/flux/runtime"
)

func init() {
	runtime.RegisterPackage(pkgAST)
}

var pkgAST = &ast.Package{
	BaseNode: ast.BaseNode{
		Errors: nil,
		Loc:    nil,
	},
	Files: []*ast.File{&ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 15,
					Line:   23,
				},
				File:   "interpolate.flux",
				Source: "package interpolate\n\n\n// Linear inserts rows at regular intervals using linear interpolation\n// to determine the value of any missing rows.\n//\n// Example\n//\n//    import \"interpolate\"\n//    import \"experimental/array\"\n//    \n//    array.from(\n//        rows: [\n//            {_time: 2021-01-01T00:00:00Z, _value: 10.0},\n//            {_time: 2021-01-02T00:00:00Z, _value: 20.0},\n//            {_time: 2021-01-04T00:00:00Z, _value: 40.0},\n//            {_time: 2021-01-05T00:00:00Z, _value: 50.0},\n//            {_time: 2021-01-08T00:00:00Z, _value: 80.0},\n//            {_time: 2021-01-09T00:00:00Z, _value: 90.0},\n//        ],\n//    )\n//        |> interpolate.linear(every: 1d)\nbuiltin linear",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 15,
						Line:   23,
					},
					File:   "interpolate.flux",
					Source: "builtin linear",
					Start: ast.Position{
						Column: 1,
						Line:   23,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 15,
							Line:   23,
						},
						File:   "interpolate.flux",
						Source: "linear",
						Start: ast.Position{
							Column: 9,
							Line:   23,
						},
					},
				},
				Name: "linear",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 3,
							Line:   32,
						},
						File:   "interpolate.flux",
						Source: "(\n    <-tables: [{T with\n        _time: time,\n        _value: float,\n    }],\n    every: duration,\n) => [{T with\n    _time: time,\n    _value: float,\n}]",
						Start: ast.Position{
							Column: 18,
							Line:   23,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 3,
								Line:   32,
							},
							File:   "interpolate.flux",
							Source: "(\n    <-tables: [{T with\n        _time: time,\n        _value: float,\n    }],\n    every: duration,\n) => [{T with\n    _time: time,\n    _value: float,\n}]",
							Start: ast.Position{
								Column: 18,
								Line:   23,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 7,
									Line:   27,
								},
								File:   "interpolate.flux",
								Source: "<-tables: [{T with\n        _time: time,\n        _value: float,\n    }]",
								Start: ast.Position{
									Column: 5,
									Line:   24,
								},
							},
						},
						Kind: "Pipe",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 13,
										Line:   24,
									},
									File:   "interpolate.flux",
									Source: "tables",
									Start: ast.Position{
										Column: 7,
										Line:   24,
									},
								},
							},
							Name: "tables",
						},
						Ty: &ast.ArrayType{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 7,
										Line:   27,
									},
									File:   "interpolate.flux",
									Source: "[{T with\n        _time: time,\n        _value: float,\n    }]",
									Start: ast.Position{
										Column: 15,
										Line:   24,
									},
								},
							},
							ElementType: &ast.RecordType{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 6,
											Line:   27,
										},
										File:   "interpolate.flux",
										Source: "{T with\n        _time: time,\n        _value: float,\n    }",
										Start: ast.Position{
											Column: 16,
											Line:   24,
										},
									},
								},
								Properties: []*ast.PropertyType{&ast.PropertyType{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 20,
												Line:   25,
											},
											File:   "interpolate.flux",
											Source: "_time: time",
											Start: ast.Position{
												Column: 9,
												Line:   25,
											},
										},
									},
									Name: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 14,
													Line:   25,
												},
												File:   "interpolate.flux",
												Source: "_time",
												Start: ast.Position{
													Column: 9,
													Line:   25,
												},
											},
										},
										Name: "_time",
									},
									Ty: &ast.NamedType{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 20,
													Line:   25,
												},
												File:   "interpolate.flux",
												Source: "time",
												Start: ast.Position{
													Column: 16,
													Line:   25,
												},
											},
										},
										ID: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 20,
														Line:   25,
													},
													File:   "interpolate.flux",
													Source: "time",
													Start: ast.Position{
														Column: 16,
														Line:   25,
													},
												},
											},
											Name: "time",
										},
									},
								}, &ast.PropertyType{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 22,
												Line:   26,
											},
											File:   "interpolate.flux",
											Source: "_value: float",
											Start: ast.Position{
												Column: 9,
												Line:   26,
											},
										},
									},
									Name: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 15,
													Line:   26,
												},
												File:   "interpolate.flux",
												Source: "_value",
												Start: ast.Position{
													Column: 9,
													Line:   26,
												},
											},
										},
										Name: "_value",
									},
									Ty: &ast.NamedType{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 22,
													Line:   26,
												},
												File:   "interpolate.flux",
												Source: "float",
												Start: ast.Position{
													Column: 17,
													Line:   26,
												},
											},
										},
										ID: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 22,
														Line:   26,
													},
													File:   "interpolate.flux",
													Source: "float",
													Start: ast.Position{
														Column: 17,
														Line:   26,
													},
												},
											},
											Name: "float",
										},
									},
								}},
								Tvar: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 18,
												Line:   24,
											},
											File:   "interpolate.flux",
											Source: "T",
											Start: ast.Position{
												Column: 17,
												Line:   24,
											},
										},
									},
									Name: "T",
								},
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 20,
									Line:   28,
								},
								File:   "interpolate.flux",
								Source: "every: duration",
								Start: ast.Position{
									Column: 5,
									Line:   28,
								},
							},
						},
						Kind: "Required",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 10,
										Line:   28,
									},
									File:   "interpolate.flux",
									Source: "every",
									Start: ast.Position{
										Column: 5,
										Line:   28,
									},
								},
							},
							Name: "every",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 20,
										Line:   28,
									},
									File:   "interpolate.flux",
									Source: "duration",
									Start: ast.Position{
										Column: 12,
										Line:   28,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 20,
											Line:   28,
										},
										File:   "interpolate.flux",
										Source: "duration",
										Start: ast.Position{
											Column: 12,
											Line:   28,
										},
									},
								},
								Name: "duration",
							},
						},
					}},
					Return: &ast.ArrayType{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 3,
									Line:   32,
								},
								File:   "interpolate.flux",
								Source: "[{T with\n    _time: time,\n    _value: float,\n}]",
								Start: ast.Position{
									Column: 6,
									Line:   29,
								},
							},
						},
						ElementType: &ast.RecordType{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 2,
										Line:   32,
									},
									File:   "interpolate.flux",
									Source: "{T with\n    _time: time,\n    _value: float,\n}",
									Start: ast.Position{
										Column: 7,
										Line:   29,
									},
								},
							},
							Properties: []*ast.PropertyType{&ast.PropertyType{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 16,
											Line:   30,
										},
										File:   "interpolate.flux",
										Source: "_time: time",
										Start: ast.Position{
											Column: 5,
											Line:   30,
										},
									},
								},
								Name: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 10,
												Line:   30,
											},
											File:   "interpolate.flux",
											Source: "_time",
											Start: ast.Position{
												Column: 5,
												Line:   30,
											},
										},
									},
									Name: "_time",
								},
								Ty: &ast.NamedType{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 16,
												Line:   30,
											},
											File:   "interpolate.flux",
											Source: "time",
											Start: ast.Position{
												Column: 12,
												Line:   30,
											},
										},
									},
									ID: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 16,
													Line:   30,
												},
												File:   "interpolate.flux",
												Source: "time",
												Start: ast.Position{
													Column: 12,
													Line:   30,
												},
											},
										},
										Name: "time",
									},
								},
							}, &ast.PropertyType{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 18,
											Line:   31,
										},
										File:   "interpolate.flux",
										Source: "_value: float",
										Start: ast.Position{
											Column: 5,
											Line:   31,
										},
									},
								},
								Name: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 11,
												Line:   31,
											},
											File:   "interpolate.flux",
											Source: "_value",
											Start: ast.Position{
												Column: 5,
												Line:   31,
											},
										},
									},
									Name: "_value",
								},
								Ty: &ast.NamedType{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 18,
												Line:   31,
											},
											File:   "interpolate.flux",
											Source: "float",
											Start: ast.Position{
												Column: 13,
												Line:   31,
											},
										},
									},
									ID: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 18,
													Line:   31,
												},
												File:   "interpolate.flux",
												Source: "float",
												Start: ast.Position{
													Column: 13,
													Line:   31,
												},
											},
										},
										Name: "float",
									},
								},
							}},
							Tvar: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 9,
											Line:   29,
										},
										File:   "interpolate.flux",
										Source: "T",
										Start: ast.Position{
											Column: 8,
											Line:   29,
										},
									},
								},
								Name: "T",
							},
						},
					},
				},
			},
		}},
		Imports:  nil,
		Metadata: "parser-type=rust",
		Name:     "interpolate.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 20,
						Line:   1,
					},
					File:   "interpolate.flux",
					Source: "package interpolate",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 20,
							Line:   1,
						},
						File:   "interpolate.flux",
						Source: "interpolate",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "interpolate",
			},
		},
	}},
	Package: "interpolate",
	Path:    "interpolate",
}
