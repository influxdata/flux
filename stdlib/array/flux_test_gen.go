// DO NOT EDIT: This file is autogenerated via the builtin command.

package array

import (
	ast "github.com/influxdata/flux/ast"
	parser "github.com/influxdata/flux/internal/parser"
)

var FluxTestPackages = []*ast.Package{&ast.Package{
	BaseNode: ast.BaseNode{
		Comments: nil,
		Errors:   nil,
		Loc:      nil,
	},
	Files: []*ast.File{&ast.File{
		BaseNode: ast.BaseNode{
			Comments: nil,
			Errors:   nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 79,
					Line:   73,
				},
				File:   "from_group_test.flux",
				Source: "package array_test\n\n\nimport \"testing\"\nimport \"array\"\n\noption now = () => 2018-12-19T22:14:30Z\n\ndata =\n    \"\n#datatype,string,long,string,string,string,dateTime:RFC3339,boolean\n#group,false,false,true,true,true,false,false\n#default,_result,,,,,,\n,result,table,_measurement,_field,t0,_time,_value\n,,0,m0,f0,tagvalue,2018-12-19T22:13:30Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:13:40Z,true\n,,0,m0,f0,tagvalue,2018-12-19T22:13:50Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:14:00Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:14:10Z,true\n,,0,m0,f0,tagvalue,2018-12-19T22:14:20Z,true\n\"\ninput =\n    array.from(\n        rows: [\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:13:30Z,\n                _value: false,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:13:40Z,\n                _value: true,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:13:50Z,\n                _value: false,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:14:00Z,\n                _value: false,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:14:10Z,\n                _value: true,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:14:20Z,\n                _value: true,\n            },\n        ],\n    )\npass = (tables=<-) =>\n    tables\n        |> group(columns: [\"_measurement\", \"_field\", \"t0\"])\n\ntest from = () => ({input: input, want: testing.loadMem(csv: data), fn: pass})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 40,
							Line:   7,
						},
						File:   "from_group_test.flux",
						Source: "now = () => 2018-12-19T22:14:30Z",
						Start: ast.Position{
							Column: 8,
							Line:   7,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   7,
							},
							File:   "from_group_test.flux",
							Source: "now",
							Start: ast.Position{
								Column: 8,
								Line:   7,
							},
						},
					},
					Name: "now",
				},
				Init: &ast.FunctionExpression{
					Arrow: nil,
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 40,
								Line:   7,
							},
							File:   "from_group_test.flux",
							Source: "() => 2018-12-19T22:14:30Z",
							Start: ast.Position{
								Column: 14,
								Line:   7,
							},
						},
					},
					Body: &ast.DateTimeLiteral{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 40,
									Line:   7,
								},
								File:   "from_group_test.flux",
								Source: "2018-12-19T22:14:30Z",
								Start: ast.Position{
									Column: 20,
									Line:   7,
								},
							},
						},
						Value: parser.MustParseTime("2018-12-19T22:14:30Z"),
					},
					Lparen: nil,
					Params: []*ast.Property{},
					Rparan: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 40,
						Line:   7,
					},
					File:   "from_group_test.flux",
					Source: "option now = () => 2018-12-19T22:14:30Z",
					Start: ast.Position{
						Column: 1,
						Line:   7,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   21,
					},
					File:   "from_group_test.flux",
					Source: "data =\n    \"\n#datatype,string,long,string,string,string,dateTime:RFC3339,boolean\n#group,false,false,true,true,true,false,false\n#default,_result,,,,,,\n,result,table,_measurement,_field,t0,_time,_value\n,,0,m0,f0,tagvalue,2018-12-19T22:13:30Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:13:40Z,true\n,,0,m0,f0,tagvalue,2018-12-19T22:13:50Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:14:00Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:14:10Z,true\n,,0,m0,f0,tagvalue,2018-12-19T22:14:20Z,true\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   9,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 5,
							Line:   9,
						},
						File:   "from_group_test.flux",
						Source: "data",
						Start: ast.Position{
							Column: 1,
							Line:   9,
						},
					},
				},
				Name: "data",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   21,
						},
						File:   "from_group_test.flux",
						Source: "\"\n#datatype,string,long,string,string,string,dateTime:RFC3339,boolean\n#group,false,false,true,true,true,false,false\n#default,_result,,,,,,\n,result,table,_measurement,_field,t0,_time,_value\n,,0,m0,f0,tagvalue,2018-12-19T22:13:30Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:13:40Z,true\n,,0,m0,f0,tagvalue,2018-12-19T22:13:50Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:14:00Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:14:10Z,true\n,,0,m0,f0,tagvalue,2018-12-19T22:14:20Z,true\n\"",
						Start: ast.Position{
							Column: 5,
							Line:   10,
						},
					},
				},
				Value: "\n#datatype,string,long,string,string,string,dateTime:RFC3339,boolean\n#group,false,false,true,true,true,false,false\n#default,_result,,,,,,\n,result,table,_measurement,_field,t0,_time,_value\n,,0,m0,f0,tagvalue,2018-12-19T22:13:30Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:13:40Z,true\n,,0,m0,f0,tagvalue,2018-12-19T22:13:50Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:14:00Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:14:10Z,true\n,,0,m0,f0,tagvalue,2018-12-19T22:14:20Z,true\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 6,
						Line:   68,
					},
					File:   "from_group_test.flux",
					Source: "input =\n    array.from(\n        rows: [\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:13:30Z,\n                _value: false,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:13:40Z,\n                _value: true,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:13:50Z,\n                _value: false,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:14:00Z,\n                _value: false,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:14:10Z,\n                _value: true,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:14:20Z,\n                _value: true,\n            },\n        ],\n    )",
					Start: ast.Position{
						Column: 1,
						Line:   22,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 6,
							Line:   22,
						},
						File:   "from_group_test.flux",
						Source: "input",
						Start: ast.Position{
							Column: 1,
							Line:   22,
						},
					},
				},
				Name: "input",
			},
			Init: &ast.CallExpression{
				Arguments: []ast.Expression{&ast.ObjectExpression{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 10,
								Line:   67,
							},
							File:   "from_group_test.flux",
							Source: "rows: [\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:13:30Z,\n                _value: false,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:13:40Z,\n                _value: true,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:13:50Z,\n                _value: false,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:14:00Z,\n                _value: false,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:14:10Z,\n                _value: true,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:14:20Z,\n                _value: true,\n            },\n        ]",
							Start: ast.Position{
								Column: 9,
								Line:   24,
							},
						},
					},
					Lbrace: nil,
					Properties: []*ast.Property{&ast.Property{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 10,
									Line:   67,
								},
								File:   "from_group_test.flux",
								Source: "rows: [\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:13:30Z,\n                _value: false,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:13:40Z,\n                _value: true,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:13:50Z,\n                _value: false,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:14:00Z,\n                _value: false,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:14:10Z,\n                _value: true,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:14:20Z,\n                _value: true,\n            },\n        ]",
								Start: ast.Position{
									Column: 9,
									Line:   24,
								},
							},
						},
						Comma: nil,
						Key: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 13,
										Line:   24,
									},
									File:   "from_group_test.flux",
									Source: "rows",
									Start: ast.Position{
										Column: 9,
										Line:   24,
									},
								},
							},
							Name: "rows",
						},
						Separator: nil,
						Value: &ast.ArrayExpression{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 10,
										Line:   67,
									},
									File:   "from_group_test.flux",
									Source: "[\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:13:30Z,\n                _value: false,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:13:40Z,\n                _value: true,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:13:50Z,\n                _value: false,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:14:00Z,\n                _value: false,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:14:10Z,\n                _value: true,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:14:20Z,\n                _value: true,\n            },\n        ]",
									Start: ast.Position{
										Column: 15,
										Line:   24,
									},
								},
							},
							Elements: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 14,
											Line:   31,
										},
										File:   "from_group_test.flux",
										Source: "{\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:13:30Z,\n                _value: false,\n            }",
										Start: ast.Position{
											Column: 13,
											Line:   25,
										},
									},
								},
								Lbrace: nil,
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 35,
												Line:   26,
											},
											File:   "from_group_test.flux",
											Source: "_measurement: \"m0\"",
											Start: ast.Position{
												Column: 17,
												Line:   26,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 29,
													Line:   26,
												},
												File:   "from_group_test.flux",
												Source: "_measurement",
												Start: ast.Position{
													Column: 17,
													Line:   26,
												},
											},
										},
										Name: "_measurement",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 35,
													Line:   26,
												},
												File:   "from_group_test.flux",
												Source: "\"m0\"",
												Start: ast.Position{
													Column: 31,
													Line:   26,
												},
											},
										},
										Value: "m0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 29,
												Line:   27,
											},
											File:   "from_group_test.flux",
											Source: "_field: \"f0\"",
											Start: ast.Position{
												Column: 17,
												Line:   27,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 23,
													Line:   27,
												},
												File:   "from_group_test.flux",
												Source: "_field",
												Start: ast.Position{
													Column: 17,
													Line:   27,
												},
											},
										},
										Name: "_field",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 29,
													Line:   27,
												},
												File:   "from_group_test.flux",
												Source: "\"f0\"",
												Start: ast.Position{
													Column: 25,
													Line:   27,
												},
											},
										},
										Value: "f0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 31,
												Line:   28,
											},
											File:   "from_group_test.flux",
											Source: "t0: \"tagvalue\"",
											Start: ast.Position{
												Column: 17,
												Line:   28,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 19,
													Line:   28,
												},
												File:   "from_group_test.flux",
												Source: "t0",
												Start: ast.Position{
													Column: 17,
													Line:   28,
												},
											},
										},
										Name: "t0",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 31,
													Line:   28,
												},
												File:   "from_group_test.flux",
												Source: "\"tagvalue\"",
												Start: ast.Position{
													Column: 21,
													Line:   28,
												},
											},
										},
										Value: "tagvalue",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 44,
												Line:   29,
											},
											File:   "from_group_test.flux",
											Source: "_time: 2018-12-19T22:13:30Z",
											Start: ast.Position{
												Column: 17,
												Line:   29,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 22,
													Line:   29,
												},
												File:   "from_group_test.flux",
												Source: "_time",
												Start: ast.Position{
													Column: 17,
													Line:   29,
												},
											},
										},
										Name: "_time",
									},
									Separator: nil,
									Value: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 44,
													Line:   29,
												},
												File:   "from_group_test.flux",
												Source: "2018-12-19T22:13:30Z",
												Start: ast.Position{
													Column: 24,
													Line:   29,
												},
											},
										},
										Value: parser.MustParseTime("2018-12-19T22:13:30Z"),
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 30,
												Line:   30,
											},
											File:   "from_group_test.flux",
											Source: "_value: false",
											Start: ast.Position{
												Column: 17,
												Line:   30,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 23,
													Line:   30,
												},
												File:   "from_group_test.flux",
												Source: "_value",
												Start: ast.Position{
													Column: 17,
													Line:   30,
												},
											},
										},
										Name: "_value",
									},
									Separator: nil,
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   30,
												},
												File:   "from_group_test.flux",
												Source: "false",
												Start: ast.Position{
													Column: 25,
													Line:   30,
												},
											},
										},
										Name: "false",
									},
								}},
								Rbrace: nil,
								With:   nil,
							}, &ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 14,
											Line:   38,
										},
										File:   "from_group_test.flux",
										Source: "{\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:13:40Z,\n                _value: true,\n            }",
										Start: ast.Position{
											Column: 13,
											Line:   32,
										},
									},
								},
								Lbrace: nil,
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 35,
												Line:   33,
											},
											File:   "from_group_test.flux",
											Source: "_measurement: \"m0\"",
											Start: ast.Position{
												Column: 17,
												Line:   33,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 29,
													Line:   33,
												},
												File:   "from_group_test.flux",
												Source: "_measurement",
												Start: ast.Position{
													Column: 17,
													Line:   33,
												},
											},
										},
										Name: "_measurement",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 35,
													Line:   33,
												},
												File:   "from_group_test.flux",
												Source: "\"m0\"",
												Start: ast.Position{
													Column: 31,
													Line:   33,
												},
											},
										},
										Value: "m0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 29,
												Line:   34,
											},
											File:   "from_group_test.flux",
											Source: "_field: \"f0\"",
											Start: ast.Position{
												Column: 17,
												Line:   34,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 23,
													Line:   34,
												},
												File:   "from_group_test.flux",
												Source: "_field",
												Start: ast.Position{
													Column: 17,
													Line:   34,
												},
											},
										},
										Name: "_field",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 29,
													Line:   34,
												},
												File:   "from_group_test.flux",
												Source: "\"f0\"",
												Start: ast.Position{
													Column: 25,
													Line:   34,
												},
											},
										},
										Value: "f0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 31,
												Line:   35,
											},
											File:   "from_group_test.flux",
											Source: "t0: \"tagvalue\"",
											Start: ast.Position{
												Column: 17,
												Line:   35,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 19,
													Line:   35,
												},
												File:   "from_group_test.flux",
												Source: "t0",
												Start: ast.Position{
													Column: 17,
													Line:   35,
												},
											},
										},
										Name: "t0",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 31,
													Line:   35,
												},
												File:   "from_group_test.flux",
												Source: "\"tagvalue\"",
												Start: ast.Position{
													Column: 21,
													Line:   35,
												},
											},
										},
										Value: "tagvalue",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 44,
												Line:   36,
											},
											File:   "from_group_test.flux",
											Source: "_time: 2018-12-19T22:13:40Z",
											Start: ast.Position{
												Column: 17,
												Line:   36,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 22,
													Line:   36,
												},
												File:   "from_group_test.flux",
												Source: "_time",
												Start: ast.Position{
													Column: 17,
													Line:   36,
												},
											},
										},
										Name: "_time",
									},
									Separator: nil,
									Value: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 44,
													Line:   36,
												},
												File:   "from_group_test.flux",
												Source: "2018-12-19T22:13:40Z",
												Start: ast.Position{
													Column: 24,
													Line:   36,
												},
											},
										},
										Value: parser.MustParseTime("2018-12-19T22:13:40Z"),
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 29,
												Line:   37,
											},
											File:   "from_group_test.flux",
											Source: "_value: true",
											Start: ast.Position{
												Column: 17,
												Line:   37,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 23,
													Line:   37,
												},
												File:   "from_group_test.flux",
												Source: "_value",
												Start: ast.Position{
													Column: 17,
													Line:   37,
												},
											},
										},
										Name: "_value",
									},
									Separator: nil,
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 29,
													Line:   37,
												},
												File:   "from_group_test.flux",
												Source: "true",
												Start: ast.Position{
													Column: 25,
													Line:   37,
												},
											},
										},
										Name: "true",
									},
								}},
								Rbrace: nil,
								With:   nil,
							}, &ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 14,
											Line:   45,
										},
										File:   "from_group_test.flux",
										Source: "{\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:13:50Z,\n                _value: false,\n            }",
										Start: ast.Position{
											Column: 13,
											Line:   39,
										},
									},
								},
								Lbrace: nil,
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 35,
												Line:   40,
											},
											File:   "from_group_test.flux",
											Source: "_measurement: \"m0\"",
											Start: ast.Position{
												Column: 17,
												Line:   40,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 29,
													Line:   40,
												},
												File:   "from_group_test.flux",
												Source: "_measurement",
												Start: ast.Position{
													Column: 17,
													Line:   40,
												},
											},
										},
										Name: "_measurement",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 35,
													Line:   40,
												},
												File:   "from_group_test.flux",
												Source: "\"m0\"",
												Start: ast.Position{
													Column: 31,
													Line:   40,
												},
											},
										},
										Value: "m0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 29,
												Line:   41,
											},
											File:   "from_group_test.flux",
											Source: "_field: \"f0\"",
											Start: ast.Position{
												Column: 17,
												Line:   41,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 23,
													Line:   41,
												},
												File:   "from_group_test.flux",
												Source: "_field",
												Start: ast.Position{
													Column: 17,
													Line:   41,
												},
											},
										},
										Name: "_field",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 29,
													Line:   41,
												},
												File:   "from_group_test.flux",
												Source: "\"f0\"",
												Start: ast.Position{
													Column: 25,
													Line:   41,
												},
											},
										},
										Value: "f0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 31,
												Line:   42,
											},
											File:   "from_group_test.flux",
											Source: "t0: \"tagvalue\"",
											Start: ast.Position{
												Column: 17,
												Line:   42,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 19,
													Line:   42,
												},
												File:   "from_group_test.flux",
												Source: "t0",
												Start: ast.Position{
													Column: 17,
													Line:   42,
												},
											},
										},
										Name: "t0",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 31,
													Line:   42,
												},
												File:   "from_group_test.flux",
												Source: "\"tagvalue\"",
												Start: ast.Position{
													Column: 21,
													Line:   42,
												},
											},
										},
										Value: "tagvalue",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 44,
												Line:   43,
											},
											File:   "from_group_test.flux",
											Source: "_time: 2018-12-19T22:13:50Z",
											Start: ast.Position{
												Column: 17,
												Line:   43,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 22,
													Line:   43,
												},
												File:   "from_group_test.flux",
												Source: "_time",
												Start: ast.Position{
													Column: 17,
													Line:   43,
												},
											},
										},
										Name: "_time",
									},
									Separator: nil,
									Value: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 44,
													Line:   43,
												},
												File:   "from_group_test.flux",
												Source: "2018-12-19T22:13:50Z",
												Start: ast.Position{
													Column: 24,
													Line:   43,
												},
											},
										},
										Value: parser.MustParseTime("2018-12-19T22:13:50Z"),
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 30,
												Line:   44,
											},
											File:   "from_group_test.flux",
											Source: "_value: false",
											Start: ast.Position{
												Column: 17,
												Line:   44,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 23,
													Line:   44,
												},
												File:   "from_group_test.flux",
												Source: "_value",
												Start: ast.Position{
													Column: 17,
													Line:   44,
												},
											},
										},
										Name: "_value",
									},
									Separator: nil,
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   44,
												},
												File:   "from_group_test.flux",
												Source: "false",
												Start: ast.Position{
													Column: 25,
													Line:   44,
												},
											},
										},
										Name: "false",
									},
								}},
								Rbrace: nil,
								With:   nil,
							}, &ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 14,
											Line:   52,
										},
										File:   "from_group_test.flux",
										Source: "{\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:14:00Z,\n                _value: false,\n            }",
										Start: ast.Position{
											Column: 13,
											Line:   46,
										},
									},
								},
								Lbrace: nil,
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 35,
												Line:   47,
											},
											File:   "from_group_test.flux",
											Source: "_measurement: \"m0\"",
											Start: ast.Position{
												Column: 17,
												Line:   47,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 29,
													Line:   47,
												},
												File:   "from_group_test.flux",
												Source: "_measurement",
												Start: ast.Position{
													Column: 17,
													Line:   47,
												},
											},
										},
										Name: "_measurement",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 35,
													Line:   47,
												},
												File:   "from_group_test.flux",
												Source: "\"m0\"",
												Start: ast.Position{
													Column: 31,
													Line:   47,
												},
											},
										},
										Value: "m0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 29,
												Line:   48,
											},
											File:   "from_group_test.flux",
											Source: "_field: \"f0\"",
											Start: ast.Position{
												Column: 17,
												Line:   48,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 23,
													Line:   48,
												},
												File:   "from_group_test.flux",
												Source: "_field",
												Start: ast.Position{
													Column: 17,
													Line:   48,
												},
											},
										},
										Name: "_field",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 29,
													Line:   48,
												},
												File:   "from_group_test.flux",
												Source: "\"f0\"",
												Start: ast.Position{
													Column: 25,
													Line:   48,
												},
											},
										},
										Value: "f0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 31,
												Line:   49,
											},
											File:   "from_group_test.flux",
											Source: "t0: \"tagvalue\"",
											Start: ast.Position{
												Column: 17,
												Line:   49,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 19,
													Line:   49,
												},
												File:   "from_group_test.flux",
												Source: "t0",
												Start: ast.Position{
													Column: 17,
													Line:   49,
												},
											},
										},
										Name: "t0",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 31,
													Line:   49,
												},
												File:   "from_group_test.flux",
												Source: "\"tagvalue\"",
												Start: ast.Position{
													Column: 21,
													Line:   49,
												},
											},
										},
										Value: "tagvalue",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 44,
												Line:   50,
											},
											File:   "from_group_test.flux",
											Source: "_time: 2018-12-19T22:14:00Z",
											Start: ast.Position{
												Column: 17,
												Line:   50,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 22,
													Line:   50,
												},
												File:   "from_group_test.flux",
												Source: "_time",
												Start: ast.Position{
													Column: 17,
													Line:   50,
												},
											},
										},
										Name: "_time",
									},
									Separator: nil,
									Value: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 44,
													Line:   50,
												},
												File:   "from_group_test.flux",
												Source: "2018-12-19T22:14:00Z",
												Start: ast.Position{
													Column: 24,
													Line:   50,
												},
											},
										},
										Value: parser.MustParseTime("2018-12-19T22:14:00Z"),
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 30,
												Line:   51,
											},
											File:   "from_group_test.flux",
											Source: "_value: false",
											Start: ast.Position{
												Column: 17,
												Line:   51,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 23,
													Line:   51,
												},
												File:   "from_group_test.flux",
												Source: "_value",
												Start: ast.Position{
													Column: 17,
													Line:   51,
												},
											},
										},
										Name: "_value",
									},
									Separator: nil,
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   51,
												},
												File:   "from_group_test.flux",
												Source: "false",
												Start: ast.Position{
													Column: 25,
													Line:   51,
												},
											},
										},
										Name: "false",
									},
								}},
								Rbrace: nil,
								With:   nil,
							}, &ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 14,
											Line:   59,
										},
										File:   "from_group_test.flux",
										Source: "{\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:14:10Z,\n                _value: true,\n            }",
										Start: ast.Position{
											Column: 13,
											Line:   53,
										},
									},
								},
								Lbrace: nil,
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 35,
												Line:   54,
											},
											File:   "from_group_test.flux",
											Source: "_measurement: \"m0\"",
											Start: ast.Position{
												Column: 17,
												Line:   54,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 29,
													Line:   54,
												},
												File:   "from_group_test.flux",
												Source: "_measurement",
												Start: ast.Position{
													Column: 17,
													Line:   54,
												},
											},
										},
										Name: "_measurement",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 35,
													Line:   54,
												},
												File:   "from_group_test.flux",
												Source: "\"m0\"",
												Start: ast.Position{
													Column: 31,
													Line:   54,
												},
											},
										},
										Value: "m0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 29,
												Line:   55,
											},
											File:   "from_group_test.flux",
											Source: "_field: \"f0\"",
											Start: ast.Position{
												Column: 17,
												Line:   55,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 23,
													Line:   55,
												},
												File:   "from_group_test.flux",
												Source: "_field",
												Start: ast.Position{
													Column: 17,
													Line:   55,
												},
											},
										},
										Name: "_field",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 29,
													Line:   55,
												},
												File:   "from_group_test.flux",
												Source: "\"f0\"",
												Start: ast.Position{
													Column: 25,
													Line:   55,
												},
											},
										},
										Value: "f0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 31,
												Line:   56,
											},
											File:   "from_group_test.flux",
											Source: "t0: \"tagvalue\"",
											Start: ast.Position{
												Column: 17,
												Line:   56,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 19,
													Line:   56,
												},
												File:   "from_group_test.flux",
												Source: "t0",
												Start: ast.Position{
													Column: 17,
													Line:   56,
												},
											},
										},
										Name: "t0",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 31,
													Line:   56,
												},
												File:   "from_group_test.flux",
												Source: "\"tagvalue\"",
												Start: ast.Position{
													Column: 21,
													Line:   56,
												},
											},
										},
										Value: "tagvalue",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 44,
												Line:   57,
											},
											File:   "from_group_test.flux",
											Source: "_time: 2018-12-19T22:14:10Z",
											Start: ast.Position{
												Column: 17,
												Line:   57,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 22,
													Line:   57,
												},
												File:   "from_group_test.flux",
												Source: "_time",
												Start: ast.Position{
													Column: 17,
													Line:   57,
												},
											},
										},
										Name: "_time",
									},
									Separator: nil,
									Value: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 44,
													Line:   57,
												},
												File:   "from_group_test.flux",
												Source: "2018-12-19T22:14:10Z",
												Start: ast.Position{
													Column: 24,
													Line:   57,
												},
											},
										},
										Value: parser.MustParseTime("2018-12-19T22:14:10Z"),
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 29,
												Line:   58,
											},
											File:   "from_group_test.flux",
											Source: "_value: true",
											Start: ast.Position{
												Column: 17,
												Line:   58,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 23,
													Line:   58,
												},
												File:   "from_group_test.flux",
												Source: "_value",
												Start: ast.Position{
													Column: 17,
													Line:   58,
												},
											},
										},
										Name: "_value",
									},
									Separator: nil,
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 29,
													Line:   58,
												},
												File:   "from_group_test.flux",
												Source: "true",
												Start: ast.Position{
													Column: 25,
													Line:   58,
												},
											},
										},
										Name: "true",
									},
								}},
								Rbrace: nil,
								With:   nil,
							}, &ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 14,
											Line:   66,
										},
										File:   "from_group_test.flux",
										Source: "{\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:14:20Z,\n                _value: true,\n            }",
										Start: ast.Position{
											Column: 13,
											Line:   60,
										},
									},
								},
								Lbrace: nil,
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 35,
												Line:   61,
											},
											File:   "from_group_test.flux",
											Source: "_measurement: \"m0\"",
											Start: ast.Position{
												Column: 17,
												Line:   61,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 29,
													Line:   61,
												},
												File:   "from_group_test.flux",
												Source: "_measurement",
												Start: ast.Position{
													Column: 17,
													Line:   61,
												},
											},
										},
										Name: "_measurement",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 35,
													Line:   61,
												},
												File:   "from_group_test.flux",
												Source: "\"m0\"",
												Start: ast.Position{
													Column: 31,
													Line:   61,
												},
											},
										},
										Value: "m0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 29,
												Line:   62,
											},
											File:   "from_group_test.flux",
											Source: "_field: \"f0\"",
											Start: ast.Position{
												Column: 17,
												Line:   62,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 23,
													Line:   62,
												},
												File:   "from_group_test.flux",
												Source: "_field",
												Start: ast.Position{
													Column: 17,
													Line:   62,
												},
											},
										},
										Name: "_field",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 29,
													Line:   62,
												},
												File:   "from_group_test.flux",
												Source: "\"f0\"",
												Start: ast.Position{
													Column: 25,
													Line:   62,
												},
											},
										},
										Value: "f0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 31,
												Line:   63,
											},
											File:   "from_group_test.flux",
											Source: "t0: \"tagvalue\"",
											Start: ast.Position{
												Column: 17,
												Line:   63,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 19,
													Line:   63,
												},
												File:   "from_group_test.flux",
												Source: "t0",
												Start: ast.Position{
													Column: 17,
													Line:   63,
												},
											},
										},
										Name: "t0",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 31,
													Line:   63,
												},
												File:   "from_group_test.flux",
												Source: "\"tagvalue\"",
												Start: ast.Position{
													Column: 21,
													Line:   63,
												},
											},
										},
										Value: "tagvalue",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 44,
												Line:   64,
											},
											File:   "from_group_test.flux",
											Source: "_time: 2018-12-19T22:14:20Z",
											Start: ast.Position{
												Column: 17,
												Line:   64,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 22,
													Line:   64,
												},
												File:   "from_group_test.flux",
												Source: "_time",
												Start: ast.Position{
													Column: 17,
													Line:   64,
												},
											},
										},
										Name: "_time",
									},
									Separator: nil,
									Value: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 44,
													Line:   64,
												},
												File:   "from_group_test.flux",
												Source: "2018-12-19T22:14:20Z",
												Start: ast.Position{
													Column: 24,
													Line:   64,
												},
											},
										},
										Value: parser.MustParseTime("2018-12-19T22:14:20Z"),
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 29,
												Line:   65,
											},
											File:   "from_group_test.flux",
											Source: "_value: true",
											Start: ast.Position{
												Column: 17,
												Line:   65,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 23,
													Line:   65,
												},
												File:   "from_group_test.flux",
												Source: "_value",
												Start: ast.Position{
													Column: 17,
													Line:   65,
												},
											},
										},
										Name: "_value",
									},
									Separator: nil,
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 29,
													Line:   65,
												},
												File:   "from_group_test.flux",
												Source: "true",
												Start: ast.Position{
													Column: 25,
													Line:   65,
												},
											},
										},
										Name: "true",
									},
								}},
								Rbrace: nil,
								With:   nil,
							}},
							Lbrack: nil,
							Rbrack: nil,
						},
					}},
					Rbrace: nil,
					With:   nil,
				}},
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 6,
							Line:   68,
						},
						File:   "from_group_test.flux",
						Source: "array.from(\n        rows: [\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:13:30Z,\n                _value: false,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:13:40Z,\n                _value: true,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:13:50Z,\n                _value: false,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:14:00Z,\n                _value: false,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:14:10Z,\n                _value: true,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:14:20Z,\n                _value: true,\n            },\n        ],\n    )",
						Start: ast.Position{
							Column: 5,
							Line:   23,
						},
					},
				},
				Callee: &ast.MemberExpression{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 15,
								Line:   23,
							},
							File:   "from_group_test.flux",
							Source: "array.from",
							Start: ast.Position{
								Column: 5,
								Line:   23,
							},
						},
					},
					Lbrack: nil,
					Object: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 10,
									Line:   23,
								},
								File:   "from_group_test.flux",
								Source: "array",
								Start: ast.Position{
									Column: 5,
									Line:   23,
								},
							},
						},
						Name: "array",
					},
					Property: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 15,
									Line:   23,
								},
								File:   "from_group_test.flux",
								Source: "from",
								Start: ast.Position{
									Column: 11,
									Line:   23,
								},
							},
						},
						Name: "from",
					},
					Rbrack: nil,
				},
				Lparen: nil,
				Rparen: nil,
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 60,
						Line:   71,
					},
					File:   "from_group_test.flux",
					Source: "pass = (tables=<-) =>\n    tables\n        |> group(columns: [\"_measurement\", \"_field\", \"t0\"])",
					Start: ast.Position{
						Column: 1,
						Line:   69,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 5,
							Line:   69,
						},
						File:   "from_group_test.flux",
						Source: "pass",
						Start: ast.Position{
							Column: 1,
							Line:   69,
						},
					},
				},
				Name: "pass",
			},
			Init: &ast.FunctionExpression{
				Arrow: nil,
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 60,
							Line:   71,
						},
						File:   "from_group_test.flux",
						Source: "(tables=<-) =>\n    tables\n        |> group(columns: [\"_measurement\", \"_field\", \"t0\"])",
						Start: ast.Position{
							Column: 8,
							Line:   69,
						},
					},
				},
				Body: &ast.PipeExpression{
					Argument: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 11,
									Line:   70,
								},
								File:   "from_group_test.flux",
								Source: "tables",
								Start: ast.Position{
									Column: 5,
									Line:   70,
								},
							},
						},
						Name: "tables",
					},
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 60,
								Line:   71,
							},
							File:   "from_group_test.flux",
							Source: "tables\n        |> group(columns: [\"_measurement\", \"_field\", \"t0\"])",
							Start: ast.Position{
								Column: 5,
								Line:   70,
							},
						},
					},
					Call: &ast.CallExpression{
						Arguments: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 59,
										Line:   71,
									},
									File:   "from_group_test.flux",
									Source: "columns: [\"_measurement\", \"_field\", \"t0\"]",
									Start: ast.Position{
										Column: 18,
										Line:   71,
									},
								},
							},
							Lbrace: nil,
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 59,
											Line:   71,
										},
										File:   "from_group_test.flux",
										Source: "columns: [\"_measurement\", \"_field\", \"t0\"]",
										Start: ast.Position{
											Column: 18,
											Line:   71,
										},
									},
								},
								Comma: nil,
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 25,
												Line:   71,
											},
											File:   "from_group_test.flux",
											Source: "columns",
											Start: ast.Position{
												Column: 18,
												Line:   71,
											},
										},
									},
									Name: "columns",
								},
								Separator: nil,
								Value: &ast.ArrayExpression{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 59,
												Line:   71,
											},
											File:   "from_group_test.flux",
											Source: "[\"_measurement\", \"_field\", \"t0\"]",
											Start: ast.Position{
												Column: 27,
												Line:   71,
											},
										},
									},
									Elements: []ast.Expression{&ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   71,
												},
												File:   "from_group_test.flux",
												Source: "\"_measurement\"",
												Start: ast.Position{
													Column: 28,
													Line:   71,
												},
											},
										},
										Value: "_measurement",
									}, &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 52,
													Line:   71,
												},
												File:   "from_group_test.flux",
												Source: "\"_field\"",
												Start: ast.Position{
													Column: 44,
													Line:   71,
												},
											},
										},
										Value: "_field",
									}, &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 58,
													Line:   71,
												},
												File:   "from_group_test.flux",
												Source: "\"t0\"",
												Start: ast.Position{
													Column: 54,
													Line:   71,
												},
											},
										},
										Value: "t0",
									}},
									Lbrack: nil,
									Rbrack: nil,
								},
							}},
							Rbrace: nil,
							With:   nil,
						}},
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 60,
									Line:   71,
								},
								File:   "from_group_test.flux",
								Source: "group(columns: [\"_measurement\", \"_field\", \"t0\"])",
								Start: ast.Position{
									Column: 12,
									Line:   71,
								},
							},
						},
						Callee: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 17,
										Line:   71,
									},
									File:   "from_group_test.flux",
									Source: "group",
									Start: ast.Position{
										Column: 12,
										Line:   71,
									},
								},
							},
							Name: "group",
						},
						Lparen: nil,
						Rparen: nil,
					},
				},
				Lparen: nil,
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 18,
								Line:   69,
							},
							File:   "from_group_test.flux",
							Source: "tables=<-",
							Start: ast.Position{
								Column: 9,
								Line:   69,
							},
						},
					},
					Comma: nil,
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 15,
									Line:   69,
								},
								File:   "from_group_test.flux",
								Source: "tables",
								Start: ast.Position{
									Column: 9,
									Line:   69,
								},
							},
						},
						Name: "tables",
					},
					Separator: nil,
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 18,
								Line:   69,
							},
							File:   "from_group_test.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 16,
								Line:   69,
							},
						},
					}},
				}},
				Rparan: nil,
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 79,
							Line:   73,
						},
						File:   "from_group_test.flux",
						Source: "from = () => ({input: input, want: testing.loadMem(csv: data), fn: pass})",
						Start: ast.Position{
							Column: 6,
							Line:   73,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 10,
								Line:   73,
							},
							File:   "from_group_test.flux",
							Source: "from",
							Start: ast.Position{
								Column: 6,
								Line:   73,
							},
						},
					},
					Name: "from",
				},
				Init: &ast.FunctionExpression{
					Arrow: nil,
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 79,
								Line:   73,
							},
							File:   "from_group_test.flux",
							Source: "() => ({input: input, want: testing.loadMem(csv: data), fn: pass})",
							Start: ast.Position{
								Column: 13,
								Line:   73,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 79,
									Line:   73,
								},
								File:   "from_group_test.flux",
								Source: "({input: input, want: testing.loadMem(csv: data), fn: pass})",
								Start: ast.Position{
									Column: 19,
									Line:   73,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 78,
										Line:   73,
									},
									File:   "from_group_test.flux",
									Source: "{input: input, want: testing.loadMem(csv: data), fn: pass}",
									Start: ast.Position{
										Column: 20,
										Line:   73,
									},
								},
							},
							Lbrace: nil,
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 33,
											Line:   73,
										},
										File:   "from_group_test.flux",
										Source: "input: input",
										Start: ast.Position{
											Column: 21,
											Line:   73,
										},
									},
								},
								Comma: nil,
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 26,
												Line:   73,
											},
											File:   "from_group_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 21,
												Line:   73,
											},
										},
									},
									Name: "input",
								},
								Separator: nil,
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 33,
												Line:   73,
											},
											File:   "from_group_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 28,
												Line:   73,
											},
										},
									},
									Name: "input",
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 67,
											Line:   73,
										},
										File:   "from_group_test.flux",
										Source: "want: testing.loadMem(csv: data)",
										Start: ast.Position{
											Column: 35,
											Line:   73,
										},
									},
								},
								Comma: nil,
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 39,
												Line:   73,
											},
											File:   "from_group_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 35,
												Line:   73,
											},
										},
									},
									Name: "want",
								},
								Separator: nil,
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   73,
												},
												File:   "from_group_test.flux",
												Source: "csv: data",
												Start: ast.Position{
													Column: 57,
													Line:   73,
												},
											},
										},
										Lbrace: nil,
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 66,
														Line:   73,
													},
													File:   "from_group_test.flux",
													Source: "csv: data",
													Start: ast.Position{
														Column: 57,
														Line:   73,
													},
												},
											},
											Comma: nil,
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 60,
															Line:   73,
														},
														File:   "from_group_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 57,
															Line:   73,
														},
													},
												},
												Name: "csv",
											},
											Separator: nil,
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 66,
															Line:   73,
														},
														File:   "from_group_test.flux",
														Source: "data",
														Start: ast.Position{
															Column: 62,
															Line:   73,
														},
													},
												},
												Name: "data",
											},
										}},
										Rbrace: nil,
										With:   nil,
									}},
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 67,
												Line:   73,
											},
											File:   "from_group_test.flux",
											Source: "testing.loadMem(csv: data)",
											Start: ast.Position{
												Column: 41,
												Line:   73,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 56,
													Line:   73,
												},
												File:   "from_group_test.flux",
												Source: "testing.loadMem",
												Start: ast.Position{
													Column: 41,
													Line:   73,
												},
											},
										},
										Lbrack: nil,
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 48,
														Line:   73,
													},
													File:   "from_group_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 41,
														Line:   73,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 56,
														Line:   73,
													},
													File:   "from_group_test.flux",
													Source: "loadMem",
													Start: ast.Position{
														Column: 49,
														Line:   73,
													},
												},
											},
											Name: "loadMem",
										},
										Rbrack: nil,
									},
									Lparen: nil,
									Rparen: nil,
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 77,
											Line:   73,
										},
										File:   "from_group_test.flux",
										Source: "fn: pass",
										Start: ast.Position{
											Column: 69,
											Line:   73,
										},
									},
								},
								Comma: nil,
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 71,
												Line:   73,
											},
											File:   "from_group_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 69,
												Line:   73,
											},
										},
									},
									Name: "fn",
								},
								Separator: nil,
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 77,
												Line:   73,
											},
											File:   "from_group_test.flux",
											Source: "pass",
											Start: ast.Position{
												Column: 73,
												Line:   73,
											},
										},
									},
									Name: "pass",
								},
							}},
							Rbrace: nil,
							With:   nil,
						},
						Lparen: nil,
						Rparen: nil,
					},
					Lparen: nil,
					Params: []*ast.Property{},
					Rparan: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 79,
						Line:   73,
					},
					File:   "from_group_test.flux",
					Source: "test from = () => ({input: input, want: testing.loadMem(csv: data), fn: pass})",
					Start: ast.Position{
						Column: 1,
						Line:   73,
					},
				},
			},
		}},
		Eof: nil,
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   4,
					},
					File:   "from_group_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   4,
						},
						File:   "from_group_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "testing",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 15,
						Line:   5,
					},
					File:   "from_group_test.flux",
					Source: "import \"array\"",
					Start: ast.Position{
						Column: 1,
						Line:   5,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 15,
							Line:   5,
						},
						File:   "from_group_test.flux",
						Source: "\"array\"",
						Start: ast.Position{
							Column: 8,
							Line:   5,
						},
					},
				},
				Value: "array",
			},
		}},
		Metadata: "parser-type=rust",
		Name:     "from_group_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 19,
						Line:   1,
					},
					File:   "from_group_test.flux",
					Source: "package array_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 19,
							Line:   1,
						},
						File:   "from_group_test.flux",
						Source: "array_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "array_test",
			},
		},
	}, &ast.File{
		BaseNode: ast.BaseNode{
			Comments: nil,
			Errors:   nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 79,
					Line:   71,
				},
				File:   "from_test.flux",
				Source: "package array_test\n\n\nimport \"testing\"\nimport \"array\"\n\noption now = () => 2018-12-19T22:14:30Z\n\ndata =\n    \"\n#datatype,string,long,string,string,string,dateTime:RFC3339,boolean\n#group,false,false,false,false,false,false,false\n#default,_result,,,,,,\n,result,table,_measurement,_field,t0,_time,_value\n,,0,m0,f0,tagvalue,2018-12-19T22:13:30Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:13:40Z,true\n,,0,m0,f0,tagvalue,2018-12-19T22:13:50Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:14:00Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:14:10Z,true\n,,0,m0,f0,tagvalue,2018-12-19T22:14:20Z,true\n\"\ninput =\n    array.from(\n        rows: [\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:13:30Z,\n                _value: false,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:13:40Z,\n                _value: true,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:13:50Z,\n                _value: false,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:14:00Z,\n                _value: false,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:14:10Z,\n                _value: true,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:14:20Z,\n                _value: true,\n            },\n        ],\n    )\npass = (tables=<-) => tables\n\ntest from = () => ({input: input, want: testing.loadMem(csv: data), fn: pass})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 40,
							Line:   7,
						},
						File:   "from_test.flux",
						Source: "now = () => 2018-12-19T22:14:30Z",
						Start: ast.Position{
							Column: 8,
							Line:   7,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   7,
							},
							File:   "from_test.flux",
							Source: "now",
							Start: ast.Position{
								Column: 8,
								Line:   7,
							},
						},
					},
					Name: "now",
				},
				Init: &ast.FunctionExpression{
					Arrow: nil,
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 40,
								Line:   7,
							},
							File:   "from_test.flux",
							Source: "() => 2018-12-19T22:14:30Z",
							Start: ast.Position{
								Column: 14,
								Line:   7,
							},
						},
					},
					Body: &ast.DateTimeLiteral{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 40,
									Line:   7,
								},
								File:   "from_test.flux",
								Source: "2018-12-19T22:14:30Z",
								Start: ast.Position{
									Column: 20,
									Line:   7,
								},
							},
						},
						Value: parser.MustParseTime("2018-12-19T22:14:30Z"),
					},
					Lparen: nil,
					Params: []*ast.Property{},
					Rparan: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 40,
						Line:   7,
					},
					File:   "from_test.flux",
					Source: "option now = () => 2018-12-19T22:14:30Z",
					Start: ast.Position{
						Column: 1,
						Line:   7,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   21,
					},
					File:   "from_test.flux",
					Source: "data =\n    \"\n#datatype,string,long,string,string,string,dateTime:RFC3339,boolean\n#group,false,false,false,false,false,false,false\n#default,_result,,,,,,\n,result,table,_measurement,_field,t0,_time,_value\n,,0,m0,f0,tagvalue,2018-12-19T22:13:30Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:13:40Z,true\n,,0,m0,f0,tagvalue,2018-12-19T22:13:50Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:14:00Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:14:10Z,true\n,,0,m0,f0,tagvalue,2018-12-19T22:14:20Z,true\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   9,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 5,
							Line:   9,
						},
						File:   "from_test.flux",
						Source: "data",
						Start: ast.Position{
							Column: 1,
							Line:   9,
						},
					},
				},
				Name: "data",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   21,
						},
						File:   "from_test.flux",
						Source: "\"\n#datatype,string,long,string,string,string,dateTime:RFC3339,boolean\n#group,false,false,false,false,false,false,false\n#default,_result,,,,,,\n,result,table,_measurement,_field,t0,_time,_value\n,,0,m0,f0,tagvalue,2018-12-19T22:13:30Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:13:40Z,true\n,,0,m0,f0,tagvalue,2018-12-19T22:13:50Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:14:00Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:14:10Z,true\n,,0,m0,f0,tagvalue,2018-12-19T22:14:20Z,true\n\"",
						Start: ast.Position{
							Column: 5,
							Line:   10,
						},
					},
				},
				Value: "\n#datatype,string,long,string,string,string,dateTime:RFC3339,boolean\n#group,false,false,false,false,false,false,false\n#default,_result,,,,,,\n,result,table,_measurement,_field,t0,_time,_value\n,,0,m0,f0,tagvalue,2018-12-19T22:13:30Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:13:40Z,true\n,,0,m0,f0,tagvalue,2018-12-19T22:13:50Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:14:00Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:14:10Z,true\n,,0,m0,f0,tagvalue,2018-12-19T22:14:20Z,true\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 6,
						Line:   68,
					},
					File:   "from_test.flux",
					Source: "input =\n    array.from(\n        rows: [\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:13:30Z,\n                _value: false,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:13:40Z,\n                _value: true,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:13:50Z,\n                _value: false,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:14:00Z,\n                _value: false,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:14:10Z,\n                _value: true,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:14:20Z,\n                _value: true,\n            },\n        ],\n    )",
					Start: ast.Position{
						Column: 1,
						Line:   22,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 6,
							Line:   22,
						},
						File:   "from_test.flux",
						Source: "input",
						Start: ast.Position{
							Column: 1,
							Line:   22,
						},
					},
				},
				Name: "input",
			},
			Init: &ast.CallExpression{
				Arguments: []ast.Expression{&ast.ObjectExpression{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 10,
								Line:   67,
							},
							File:   "from_test.flux",
							Source: "rows: [\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:13:30Z,\n                _value: false,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:13:40Z,\n                _value: true,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:13:50Z,\n                _value: false,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:14:00Z,\n                _value: false,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:14:10Z,\n                _value: true,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:14:20Z,\n                _value: true,\n            },\n        ]",
							Start: ast.Position{
								Column: 9,
								Line:   24,
							},
						},
					},
					Lbrace: nil,
					Properties: []*ast.Property{&ast.Property{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 10,
									Line:   67,
								},
								File:   "from_test.flux",
								Source: "rows: [\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:13:30Z,\n                _value: false,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:13:40Z,\n                _value: true,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:13:50Z,\n                _value: false,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:14:00Z,\n                _value: false,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:14:10Z,\n                _value: true,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:14:20Z,\n                _value: true,\n            },\n        ]",
								Start: ast.Position{
									Column: 9,
									Line:   24,
								},
							},
						},
						Comma: nil,
						Key: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 13,
										Line:   24,
									},
									File:   "from_test.flux",
									Source: "rows",
									Start: ast.Position{
										Column: 9,
										Line:   24,
									},
								},
							},
							Name: "rows",
						},
						Separator: nil,
						Value: &ast.ArrayExpression{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 10,
										Line:   67,
									},
									File:   "from_test.flux",
									Source: "[\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:13:30Z,\n                _value: false,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:13:40Z,\n                _value: true,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:13:50Z,\n                _value: false,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:14:00Z,\n                _value: false,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:14:10Z,\n                _value: true,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:14:20Z,\n                _value: true,\n            },\n        ]",
									Start: ast.Position{
										Column: 15,
										Line:   24,
									},
								},
							},
							Elements: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 14,
											Line:   31,
										},
										File:   "from_test.flux",
										Source: "{\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:13:30Z,\n                _value: false,\n            }",
										Start: ast.Position{
											Column: 13,
											Line:   25,
										},
									},
								},
								Lbrace: nil,
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 35,
												Line:   26,
											},
											File:   "from_test.flux",
											Source: "_measurement: \"m0\"",
											Start: ast.Position{
												Column: 17,
												Line:   26,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 29,
													Line:   26,
												},
												File:   "from_test.flux",
												Source: "_measurement",
												Start: ast.Position{
													Column: 17,
													Line:   26,
												},
											},
										},
										Name: "_measurement",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 35,
													Line:   26,
												},
												File:   "from_test.flux",
												Source: "\"m0\"",
												Start: ast.Position{
													Column: 31,
													Line:   26,
												},
											},
										},
										Value: "m0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 29,
												Line:   27,
											},
											File:   "from_test.flux",
											Source: "_field: \"f0\"",
											Start: ast.Position{
												Column: 17,
												Line:   27,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 23,
													Line:   27,
												},
												File:   "from_test.flux",
												Source: "_field",
												Start: ast.Position{
													Column: 17,
													Line:   27,
												},
											},
										},
										Name: "_field",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 29,
													Line:   27,
												},
												File:   "from_test.flux",
												Source: "\"f0\"",
												Start: ast.Position{
													Column: 25,
													Line:   27,
												},
											},
										},
										Value: "f0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 31,
												Line:   28,
											},
											File:   "from_test.flux",
											Source: "t0: \"tagvalue\"",
											Start: ast.Position{
												Column: 17,
												Line:   28,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 19,
													Line:   28,
												},
												File:   "from_test.flux",
												Source: "t0",
												Start: ast.Position{
													Column: 17,
													Line:   28,
												},
											},
										},
										Name: "t0",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 31,
													Line:   28,
												},
												File:   "from_test.flux",
												Source: "\"tagvalue\"",
												Start: ast.Position{
													Column: 21,
													Line:   28,
												},
											},
										},
										Value: "tagvalue",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 44,
												Line:   29,
											},
											File:   "from_test.flux",
											Source: "_time: 2018-12-19T22:13:30Z",
											Start: ast.Position{
												Column: 17,
												Line:   29,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 22,
													Line:   29,
												},
												File:   "from_test.flux",
												Source: "_time",
												Start: ast.Position{
													Column: 17,
													Line:   29,
												},
											},
										},
										Name: "_time",
									},
									Separator: nil,
									Value: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 44,
													Line:   29,
												},
												File:   "from_test.flux",
												Source: "2018-12-19T22:13:30Z",
												Start: ast.Position{
													Column: 24,
													Line:   29,
												},
											},
										},
										Value: parser.MustParseTime("2018-12-19T22:13:30Z"),
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 30,
												Line:   30,
											},
											File:   "from_test.flux",
											Source: "_value: false",
											Start: ast.Position{
												Column: 17,
												Line:   30,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 23,
													Line:   30,
												},
												File:   "from_test.flux",
												Source: "_value",
												Start: ast.Position{
													Column: 17,
													Line:   30,
												},
											},
										},
										Name: "_value",
									},
									Separator: nil,
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   30,
												},
												File:   "from_test.flux",
												Source: "false",
												Start: ast.Position{
													Column: 25,
													Line:   30,
												},
											},
										},
										Name: "false",
									},
								}},
								Rbrace: nil,
								With:   nil,
							}, &ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 14,
											Line:   38,
										},
										File:   "from_test.flux",
										Source: "{\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:13:40Z,\n                _value: true,\n            }",
										Start: ast.Position{
											Column: 13,
											Line:   32,
										},
									},
								},
								Lbrace: nil,
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 35,
												Line:   33,
											},
											File:   "from_test.flux",
											Source: "_measurement: \"m0\"",
											Start: ast.Position{
												Column: 17,
												Line:   33,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 29,
													Line:   33,
												},
												File:   "from_test.flux",
												Source: "_measurement",
												Start: ast.Position{
													Column: 17,
													Line:   33,
												},
											},
										},
										Name: "_measurement",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 35,
													Line:   33,
												},
												File:   "from_test.flux",
												Source: "\"m0\"",
												Start: ast.Position{
													Column: 31,
													Line:   33,
												},
											},
										},
										Value: "m0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 29,
												Line:   34,
											},
											File:   "from_test.flux",
											Source: "_field: \"f0\"",
											Start: ast.Position{
												Column: 17,
												Line:   34,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 23,
													Line:   34,
												},
												File:   "from_test.flux",
												Source: "_field",
												Start: ast.Position{
													Column: 17,
													Line:   34,
												},
											},
										},
										Name: "_field",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 29,
													Line:   34,
												},
												File:   "from_test.flux",
												Source: "\"f0\"",
												Start: ast.Position{
													Column: 25,
													Line:   34,
												},
											},
										},
										Value: "f0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 31,
												Line:   35,
											},
											File:   "from_test.flux",
											Source: "t0: \"tagvalue\"",
											Start: ast.Position{
												Column: 17,
												Line:   35,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 19,
													Line:   35,
												},
												File:   "from_test.flux",
												Source: "t0",
												Start: ast.Position{
													Column: 17,
													Line:   35,
												},
											},
										},
										Name: "t0",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 31,
													Line:   35,
												},
												File:   "from_test.flux",
												Source: "\"tagvalue\"",
												Start: ast.Position{
													Column: 21,
													Line:   35,
												},
											},
										},
										Value: "tagvalue",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 44,
												Line:   36,
											},
											File:   "from_test.flux",
											Source: "_time: 2018-12-19T22:13:40Z",
											Start: ast.Position{
												Column: 17,
												Line:   36,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 22,
													Line:   36,
												},
												File:   "from_test.flux",
												Source: "_time",
												Start: ast.Position{
													Column: 17,
													Line:   36,
												},
											},
										},
										Name: "_time",
									},
									Separator: nil,
									Value: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 44,
													Line:   36,
												},
												File:   "from_test.flux",
												Source: "2018-12-19T22:13:40Z",
												Start: ast.Position{
													Column: 24,
													Line:   36,
												},
											},
										},
										Value: parser.MustParseTime("2018-12-19T22:13:40Z"),
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 29,
												Line:   37,
											},
											File:   "from_test.flux",
											Source: "_value: true",
											Start: ast.Position{
												Column: 17,
												Line:   37,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 23,
													Line:   37,
												},
												File:   "from_test.flux",
												Source: "_value",
												Start: ast.Position{
													Column: 17,
													Line:   37,
												},
											},
										},
										Name: "_value",
									},
									Separator: nil,
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 29,
													Line:   37,
												},
												File:   "from_test.flux",
												Source: "true",
												Start: ast.Position{
													Column: 25,
													Line:   37,
												},
											},
										},
										Name: "true",
									},
								}},
								Rbrace: nil,
								With:   nil,
							}, &ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 14,
											Line:   45,
										},
										File:   "from_test.flux",
										Source: "{\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:13:50Z,\n                _value: false,\n            }",
										Start: ast.Position{
											Column: 13,
											Line:   39,
										},
									},
								},
								Lbrace: nil,
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 35,
												Line:   40,
											},
											File:   "from_test.flux",
											Source: "_measurement: \"m0\"",
											Start: ast.Position{
												Column: 17,
												Line:   40,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 29,
													Line:   40,
												},
												File:   "from_test.flux",
												Source: "_measurement",
												Start: ast.Position{
													Column: 17,
													Line:   40,
												},
											},
										},
										Name: "_measurement",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 35,
													Line:   40,
												},
												File:   "from_test.flux",
												Source: "\"m0\"",
												Start: ast.Position{
													Column: 31,
													Line:   40,
												},
											},
										},
										Value: "m0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 29,
												Line:   41,
											},
											File:   "from_test.flux",
											Source: "_field: \"f0\"",
											Start: ast.Position{
												Column: 17,
												Line:   41,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 23,
													Line:   41,
												},
												File:   "from_test.flux",
												Source: "_field",
												Start: ast.Position{
													Column: 17,
													Line:   41,
												},
											},
										},
										Name: "_field",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 29,
													Line:   41,
												},
												File:   "from_test.flux",
												Source: "\"f0\"",
												Start: ast.Position{
													Column: 25,
													Line:   41,
												},
											},
										},
										Value: "f0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 31,
												Line:   42,
											},
											File:   "from_test.flux",
											Source: "t0: \"tagvalue\"",
											Start: ast.Position{
												Column: 17,
												Line:   42,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 19,
													Line:   42,
												},
												File:   "from_test.flux",
												Source: "t0",
												Start: ast.Position{
													Column: 17,
													Line:   42,
												},
											},
										},
										Name: "t0",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 31,
													Line:   42,
												},
												File:   "from_test.flux",
												Source: "\"tagvalue\"",
												Start: ast.Position{
													Column: 21,
													Line:   42,
												},
											},
										},
										Value: "tagvalue",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 44,
												Line:   43,
											},
											File:   "from_test.flux",
											Source: "_time: 2018-12-19T22:13:50Z",
											Start: ast.Position{
												Column: 17,
												Line:   43,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 22,
													Line:   43,
												},
												File:   "from_test.flux",
												Source: "_time",
												Start: ast.Position{
													Column: 17,
													Line:   43,
												},
											},
										},
										Name: "_time",
									},
									Separator: nil,
									Value: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 44,
													Line:   43,
												},
												File:   "from_test.flux",
												Source: "2018-12-19T22:13:50Z",
												Start: ast.Position{
													Column: 24,
													Line:   43,
												},
											},
										},
										Value: parser.MustParseTime("2018-12-19T22:13:50Z"),
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 30,
												Line:   44,
											},
											File:   "from_test.flux",
											Source: "_value: false",
											Start: ast.Position{
												Column: 17,
												Line:   44,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 23,
													Line:   44,
												},
												File:   "from_test.flux",
												Source: "_value",
												Start: ast.Position{
													Column: 17,
													Line:   44,
												},
											},
										},
										Name: "_value",
									},
									Separator: nil,
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   44,
												},
												File:   "from_test.flux",
												Source: "false",
												Start: ast.Position{
													Column: 25,
													Line:   44,
												},
											},
										},
										Name: "false",
									},
								}},
								Rbrace: nil,
								With:   nil,
							}, &ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 14,
											Line:   52,
										},
										File:   "from_test.flux",
										Source: "{\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:14:00Z,\n                _value: false,\n            }",
										Start: ast.Position{
											Column: 13,
											Line:   46,
										},
									},
								},
								Lbrace: nil,
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 35,
												Line:   47,
											},
											File:   "from_test.flux",
											Source: "_measurement: \"m0\"",
											Start: ast.Position{
												Column: 17,
												Line:   47,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 29,
													Line:   47,
												},
												File:   "from_test.flux",
												Source: "_measurement",
												Start: ast.Position{
													Column: 17,
													Line:   47,
												},
											},
										},
										Name: "_measurement",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 35,
													Line:   47,
												},
												File:   "from_test.flux",
												Source: "\"m0\"",
												Start: ast.Position{
													Column: 31,
													Line:   47,
												},
											},
										},
										Value: "m0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 29,
												Line:   48,
											},
											File:   "from_test.flux",
											Source: "_field: \"f0\"",
											Start: ast.Position{
												Column: 17,
												Line:   48,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 23,
													Line:   48,
												},
												File:   "from_test.flux",
												Source: "_field",
												Start: ast.Position{
													Column: 17,
													Line:   48,
												},
											},
										},
										Name: "_field",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 29,
													Line:   48,
												},
												File:   "from_test.flux",
												Source: "\"f0\"",
												Start: ast.Position{
													Column: 25,
													Line:   48,
												},
											},
										},
										Value: "f0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 31,
												Line:   49,
											},
											File:   "from_test.flux",
											Source: "t0: \"tagvalue\"",
											Start: ast.Position{
												Column: 17,
												Line:   49,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 19,
													Line:   49,
												},
												File:   "from_test.flux",
												Source: "t0",
												Start: ast.Position{
													Column: 17,
													Line:   49,
												},
											},
										},
										Name: "t0",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 31,
													Line:   49,
												},
												File:   "from_test.flux",
												Source: "\"tagvalue\"",
												Start: ast.Position{
													Column: 21,
													Line:   49,
												},
											},
										},
										Value: "tagvalue",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 44,
												Line:   50,
											},
											File:   "from_test.flux",
											Source: "_time: 2018-12-19T22:14:00Z",
											Start: ast.Position{
												Column: 17,
												Line:   50,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 22,
													Line:   50,
												},
												File:   "from_test.flux",
												Source: "_time",
												Start: ast.Position{
													Column: 17,
													Line:   50,
												},
											},
										},
										Name: "_time",
									},
									Separator: nil,
									Value: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 44,
													Line:   50,
												},
												File:   "from_test.flux",
												Source: "2018-12-19T22:14:00Z",
												Start: ast.Position{
													Column: 24,
													Line:   50,
												},
											},
										},
										Value: parser.MustParseTime("2018-12-19T22:14:00Z"),
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 30,
												Line:   51,
											},
											File:   "from_test.flux",
											Source: "_value: false",
											Start: ast.Position{
												Column: 17,
												Line:   51,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 23,
													Line:   51,
												},
												File:   "from_test.flux",
												Source: "_value",
												Start: ast.Position{
													Column: 17,
													Line:   51,
												},
											},
										},
										Name: "_value",
									},
									Separator: nil,
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   51,
												},
												File:   "from_test.flux",
												Source: "false",
												Start: ast.Position{
													Column: 25,
													Line:   51,
												},
											},
										},
										Name: "false",
									},
								}},
								Rbrace: nil,
								With:   nil,
							}, &ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 14,
											Line:   59,
										},
										File:   "from_test.flux",
										Source: "{\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:14:10Z,\n                _value: true,\n            }",
										Start: ast.Position{
											Column: 13,
											Line:   53,
										},
									},
								},
								Lbrace: nil,
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 35,
												Line:   54,
											},
											File:   "from_test.flux",
											Source: "_measurement: \"m0\"",
											Start: ast.Position{
												Column: 17,
												Line:   54,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 29,
													Line:   54,
												},
												File:   "from_test.flux",
												Source: "_measurement",
												Start: ast.Position{
													Column: 17,
													Line:   54,
												},
											},
										},
										Name: "_measurement",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 35,
													Line:   54,
												},
												File:   "from_test.flux",
												Source: "\"m0\"",
												Start: ast.Position{
													Column: 31,
													Line:   54,
												},
											},
										},
										Value: "m0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 29,
												Line:   55,
											},
											File:   "from_test.flux",
											Source: "_field: \"f0\"",
											Start: ast.Position{
												Column: 17,
												Line:   55,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 23,
													Line:   55,
												},
												File:   "from_test.flux",
												Source: "_field",
												Start: ast.Position{
													Column: 17,
													Line:   55,
												},
											},
										},
										Name: "_field",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 29,
													Line:   55,
												},
												File:   "from_test.flux",
												Source: "\"f0\"",
												Start: ast.Position{
													Column: 25,
													Line:   55,
												},
											},
										},
										Value: "f0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 31,
												Line:   56,
											},
											File:   "from_test.flux",
											Source: "t0: \"tagvalue\"",
											Start: ast.Position{
												Column: 17,
												Line:   56,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 19,
													Line:   56,
												},
												File:   "from_test.flux",
												Source: "t0",
												Start: ast.Position{
													Column: 17,
													Line:   56,
												},
											},
										},
										Name: "t0",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 31,
													Line:   56,
												},
												File:   "from_test.flux",
												Source: "\"tagvalue\"",
												Start: ast.Position{
													Column: 21,
													Line:   56,
												},
											},
										},
										Value: "tagvalue",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 44,
												Line:   57,
											},
											File:   "from_test.flux",
											Source: "_time: 2018-12-19T22:14:10Z",
											Start: ast.Position{
												Column: 17,
												Line:   57,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 22,
													Line:   57,
												},
												File:   "from_test.flux",
												Source: "_time",
												Start: ast.Position{
													Column: 17,
													Line:   57,
												},
											},
										},
										Name: "_time",
									},
									Separator: nil,
									Value: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 44,
													Line:   57,
												},
												File:   "from_test.flux",
												Source: "2018-12-19T22:14:10Z",
												Start: ast.Position{
													Column: 24,
													Line:   57,
												},
											},
										},
										Value: parser.MustParseTime("2018-12-19T22:14:10Z"),
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 29,
												Line:   58,
											},
											File:   "from_test.flux",
											Source: "_value: true",
											Start: ast.Position{
												Column: 17,
												Line:   58,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 23,
													Line:   58,
												},
												File:   "from_test.flux",
												Source: "_value",
												Start: ast.Position{
													Column: 17,
													Line:   58,
												},
											},
										},
										Name: "_value",
									},
									Separator: nil,
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 29,
													Line:   58,
												},
												File:   "from_test.flux",
												Source: "true",
												Start: ast.Position{
													Column: 25,
													Line:   58,
												},
											},
										},
										Name: "true",
									},
								}},
								Rbrace: nil,
								With:   nil,
							}, &ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 14,
											Line:   66,
										},
										File:   "from_test.flux",
										Source: "{\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:14:20Z,\n                _value: true,\n            }",
										Start: ast.Position{
											Column: 13,
											Line:   60,
										},
									},
								},
								Lbrace: nil,
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 35,
												Line:   61,
											},
											File:   "from_test.flux",
											Source: "_measurement: \"m0\"",
											Start: ast.Position{
												Column: 17,
												Line:   61,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 29,
													Line:   61,
												},
												File:   "from_test.flux",
												Source: "_measurement",
												Start: ast.Position{
													Column: 17,
													Line:   61,
												},
											},
										},
										Name: "_measurement",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 35,
													Line:   61,
												},
												File:   "from_test.flux",
												Source: "\"m0\"",
												Start: ast.Position{
													Column: 31,
													Line:   61,
												},
											},
										},
										Value: "m0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 29,
												Line:   62,
											},
											File:   "from_test.flux",
											Source: "_field: \"f0\"",
											Start: ast.Position{
												Column: 17,
												Line:   62,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 23,
													Line:   62,
												},
												File:   "from_test.flux",
												Source: "_field",
												Start: ast.Position{
													Column: 17,
													Line:   62,
												},
											},
										},
										Name: "_field",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 29,
													Line:   62,
												},
												File:   "from_test.flux",
												Source: "\"f0\"",
												Start: ast.Position{
													Column: 25,
													Line:   62,
												},
											},
										},
										Value: "f0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 31,
												Line:   63,
											},
											File:   "from_test.flux",
											Source: "t0: \"tagvalue\"",
											Start: ast.Position{
												Column: 17,
												Line:   63,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 19,
													Line:   63,
												},
												File:   "from_test.flux",
												Source: "t0",
												Start: ast.Position{
													Column: 17,
													Line:   63,
												},
											},
										},
										Name: "t0",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 31,
													Line:   63,
												},
												File:   "from_test.flux",
												Source: "\"tagvalue\"",
												Start: ast.Position{
													Column: 21,
													Line:   63,
												},
											},
										},
										Value: "tagvalue",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 44,
												Line:   64,
											},
											File:   "from_test.flux",
											Source: "_time: 2018-12-19T22:14:20Z",
											Start: ast.Position{
												Column: 17,
												Line:   64,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 22,
													Line:   64,
												},
												File:   "from_test.flux",
												Source: "_time",
												Start: ast.Position{
													Column: 17,
													Line:   64,
												},
											},
										},
										Name: "_time",
									},
									Separator: nil,
									Value: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 44,
													Line:   64,
												},
												File:   "from_test.flux",
												Source: "2018-12-19T22:14:20Z",
												Start: ast.Position{
													Column: 24,
													Line:   64,
												},
											},
										},
										Value: parser.MustParseTime("2018-12-19T22:14:20Z"),
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 29,
												Line:   65,
											},
											File:   "from_test.flux",
											Source: "_value: true",
											Start: ast.Position{
												Column: 17,
												Line:   65,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 23,
													Line:   65,
												},
												File:   "from_test.flux",
												Source: "_value",
												Start: ast.Position{
													Column: 17,
													Line:   65,
												},
											},
										},
										Name: "_value",
									},
									Separator: nil,
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 29,
													Line:   65,
												},
												File:   "from_test.flux",
												Source: "true",
												Start: ast.Position{
													Column: 25,
													Line:   65,
												},
											},
										},
										Name: "true",
									},
								}},
								Rbrace: nil,
								With:   nil,
							}},
							Lbrack: nil,
							Rbrack: nil,
						},
					}},
					Rbrace: nil,
					With:   nil,
				}},
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 6,
							Line:   68,
						},
						File:   "from_test.flux",
						Source: "array.from(\n        rows: [\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:13:30Z,\n                _value: false,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:13:40Z,\n                _value: true,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:13:50Z,\n                _value: false,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:14:00Z,\n                _value: false,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:14:10Z,\n                _value: true,\n            },\n            {\n                _measurement: \"m0\",\n                _field: \"f0\",\n                t0: \"tagvalue\",\n                _time: 2018-12-19T22:14:20Z,\n                _value: true,\n            },\n        ],\n    )",
						Start: ast.Position{
							Column: 5,
							Line:   23,
						},
					},
				},
				Callee: &ast.MemberExpression{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 15,
								Line:   23,
							},
							File:   "from_test.flux",
							Source: "array.from",
							Start: ast.Position{
								Column: 5,
								Line:   23,
							},
						},
					},
					Lbrack: nil,
					Object: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 10,
									Line:   23,
								},
								File:   "from_test.flux",
								Source: "array",
								Start: ast.Position{
									Column: 5,
									Line:   23,
								},
							},
						},
						Name: "array",
					},
					Property: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 15,
									Line:   23,
								},
								File:   "from_test.flux",
								Source: "from",
								Start: ast.Position{
									Column: 11,
									Line:   23,
								},
							},
						},
						Name: "from",
					},
					Rbrack: nil,
				},
				Lparen: nil,
				Rparen: nil,
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 29,
						Line:   69,
					},
					File:   "from_test.flux",
					Source: "pass = (tables=<-) => tables",
					Start: ast.Position{
						Column: 1,
						Line:   69,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 5,
							Line:   69,
						},
						File:   "from_test.flux",
						Source: "pass",
						Start: ast.Position{
							Column: 1,
							Line:   69,
						},
					},
				},
				Name: "pass",
			},
			Init: &ast.FunctionExpression{
				Arrow: nil,
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 29,
							Line:   69,
						},
						File:   "from_test.flux",
						Source: "(tables=<-) => tables",
						Start: ast.Position{
							Column: 8,
							Line:   69,
						},
					},
				},
				Body: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 29,
								Line:   69,
							},
							File:   "from_test.flux",
							Source: "tables",
							Start: ast.Position{
								Column: 23,
								Line:   69,
							},
						},
					},
					Name: "tables",
				},
				Lparen: nil,
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 18,
								Line:   69,
							},
							File:   "from_test.flux",
							Source: "tables=<-",
							Start: ast.Position{
								Column: 9,
								Line:   69,
							},
						},
					},
					Comma: nil,
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 15,
									Line:   69,
								},
								File:   "from_test.flux",
								Source: "tables",
								Start: ast.Position{
									Column: 9,
									Line:   69,
								},
							},
						},
						Name: "tables",
					},
					Separator: nil,
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 18,
								Line:   69,
							},
							File:   "from_test.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 16,
								Line:   69,
							},
						},
					}},
				}},
				Rparan: nil,
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 79,
							Line:   71,
						},
						File:   "from_test.flux",
						Source: "from = () => ({input: input, want: testing.loadMem(csv: data), fn: pass})",
						Start: ast.Position{
							Column: 6,
							Line:   71,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 10,
								Line:   71,
							},
							File:   "from_test.flux",
							Source: "from",
							Start: ast.Position{
								Column: 6,
								Line:   71,
							},
						},
					},
					Name: "from",
				},
				Init: &ast.FunctionExpression{
					Arrow: nil,
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 79,
								Line:   71,
							},
							File:   "from_test.flux",
							Source: "() => ({input: input, want: testing.loadMem(csv: data), fn: pass})",
							Start: ast.Position{
								Column: 13,
								Line:   71,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 79,
									Line:   71,
								},
								File:   "from_test.flux",
								Source: "({input: input, want: testing.loadMem(csv: data), fn: pass})",
								Start: ast.Position{
									Column: 19,
									Line:   71,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 78,
										Line:   71,
									},
									File:   "from_test.flux",
									Source: "{input: input, want: testing.loadMem(csv: data), fn: pass}",
									Start: ast.Position{
										Column: 20,
										Line:   71,
									},
								},
							},
							Lbrace: nil,
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 33,
											Line:   71,
										},
										File:   "from_test.flux",
										Source: "input: input",
										Start: ast.Position{
											Column: 21,
											Line:   71,
										},
									},
								},
								Comma: nil,
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 26,
												Line:   71,
											},
											File:   "from_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 21,
												Line:   71,
											},
										},
									},
									Name: "input",
								},
								Separator: nil,
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 33,
												Line:   71,
											},
											File:   "from_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 28,
												Line:   71,
											},
										},
									},
									Name: "input",
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 67,
											Line:   71,
										},
										File:   "from_test.flux",
										Source: "want: testing.loadMem(csv: data)",
										Start: ast.Position{
											Column: 35,
											Line:   71,
										},
									},
								},
								Comma: nil,
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 39,
												Line:   71,
											},
											File:   "from_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 35,
												Line:   71,
											},
										},
									},
									Name: "want",
								},
								Separator: nil,
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   71,
												},
												File:   "from_test.flux",
												Source: "csv: data",
												Start: ast.Position{
													Column: 57,
													Line:   71,
												},
											},
										},
										Lbrace: nil,
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 66,
														Line:   71,
													},
													File:   "from_test.flux",
													Source: "csv: data",
													Start: ast.Position{
														Column: 57,
														Line:   71,
													},
												},
											},
											Comma: nil,
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 60,
															Line:   71,
														},
														File:   "from_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 57,
															Line:   71,
														},
													},
												},
												Name: "csv",
											},
											Separator: nil,
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 66,
															Line:   71,
														},
														File:   "from_test.flux",
														Source: "data",
														Start: ast.Position{
															Column: 62,
															Line:   71,
														},
													},
												},
												Name: "data",
											},
										}},
										Rbrace: nil,
										With:   nil,
									}},
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 67,
												Line:   71,
											},
											File:   "from_test.flux",
											Source: "testing.loadMem(csv: data)",
											Start: ast.Position{
												Column: 41,
												Line:   71,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 56,
													Line:   71,
												},
												File:   "from_test.flux",
												Source: "testing.loadMem",
												Start: ast.Position{
													Column: 41,
													Line:   71,
												},
											},
										},
										Lbrack: nil,
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 48,
														Line:   71,
													},
													File:   "from_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 41,
														Line:   71,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 56,
														Line:   71,
													},
													File:   "from_test.flux",
													Source: "loadMem",
													Start: ast.Position{
														Column: 49,
														Line:   71,
													},
												},
											},
											Name: "loadMem",
										},
										Rbrack: nil,
									},
									Lparen: nil,
									Rparen: nil,
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 77,
											Line:   71,
										},
										File:   "from_test.flux",
										Source: "fn: pass",
										Start: ast.Position{
											Column: 69,
											Line:   71,
										},
									},
								},
								Comma: nil,
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 71,
												Line:   71,
											},
											File:   "from_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 69,
												Line:   71,
											},
										},
									},
									Name: "fn",
								},
								Separator: nil,
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 77,
												Line:   71,
											},
											File:   "from_test.flux",
											Source: "pass",
											Start: ast.Position{
												Column: 73,
												Line:   71,
											},
										},
									},
									Name: "pass",
								},
							}},
							Rbrace: nil,
							With:   nil,
						},
						Lparen: nil,
						Rparen: nil,
					},
					Lparen: nil,
					Params: []*ast.Property{},
					Rparan: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 79,
						Line:   71,
					},
					File:   "from_test.flux",
					Source: "test from = () => ({input: input, want: testing.loadMem(csv: data), fn: pass})",
					Start: ast.Position{
						Column: 1,
						Line:   71,
					},
				},
			},
		}},
		Eof: nil,
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   4,
					},
					File:   "from_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   4,
						},
						File:   "from_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "testing",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 15,
						Line:   5,
					},
					File:   "from_test.flux",
					Source: "import \"array\"",
					Start: ast.Position{
						Column: 1,
						Line:   5,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 15,
							Line:   5,
						},
						File:   "from_test.flux",
						Source: "\"array\"",
						Start: ast.Position{
							Column: 8,
							Line:   5,
						},
					},
				},
				Value: "array",
			},
		}},
		Metadata: "parser-type=rust",
		Name:     "from_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 19,
						Line:   1,
					},
					File:   "from_test.flux",
					Source: "package array_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 19,
							Line:   1,
						},
						File:   "from_test.flux",
						Source: "array_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "array_test",
			},
		},
	}},
	Package: "array_test",
	Path:    "array",
}}
