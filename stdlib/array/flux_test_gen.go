// DO NOT EDIT: This file is autogenerated via the builtin command.

package array

import (
	ast "github.com/influxdata/flux/ast"
	parser "github.com/influxdata/flux/internal/parser"
)

var FluxTestPackages = []*ast.Package{&ast.Package{
	BaseNode: ast.BaseNode{
		Comments: nil,
		Errors:   nil,
		Loc:      nil,
	},
	Files: []*ast.File{&ast.File{
		BaseNode: ast.BaseNode{
			Comments: nil,
			Errors:   nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 3,
					Line:   38,
				},
				File:   "from_group_test.flux",
				Source: "package array_test\n\n\nimport \"testing\"\nimport \"array\"\n\noption now = () => 2018-12-19T22:14:30Z\n\ndata = \"\n#datatype,string,long,string,string,string,dateTime:RFC3339,boolean\n#group,false,false,true,true,true,false,false\n#default,_result,,,,,,\n,result,table,_measurement,_field,t0,_time,_value\n,,0,m0,f0,tagvalue,2018-12-19T22:13:30Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:13:40Z,true\n,,0,m0,f0,tagvalue,2018-12-19T22:13:50Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:14:00Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:14:10Z,true\n,,0,m0,f0,tagvalue,2018-12-19T22:14:20Z,true\n\"\ninput = array.from(\n    rows: [\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:13:30Z, _value: false},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:13:40Z, _value: true},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:13:50Z, _value: false},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:14:00Z, _value: false},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:14:10Z, _value: true},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:14:20Z, _value: true},\n    ],\n)\npass = (tables=<-) => tables\n    |> group(columns: [\"_measurement\", \"_field\", \"t0\"])\n\ntest from = () => ({\n    input: input,\n    want: testing.loadMem(csv: data),\n    fn: pass,\n})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 40,
							Line:   7,
						},
						File:   "from_group_test.flux",
						Source: "now = () => 2018-12-19T22:14:30Z",
						Start: ast.Position{
							Column: 8,
							Line:   7,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   7,
							},
							File:   "from_group_test.flux",
							Source: "now",
							Start: ast.Position{
								Column: 8,
								Line:   7,
							},
						},
					},
					Name: "now",
				},
				Init: &ast.FunctionExpression{
					Arrow: nil,
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 40,
								Line:   7,
							},
							File:   "from_group_test.flux",
							Source: "() => 2018-12-19T22:14:30Z",
							Start: ast.Position{
								Column: 14,
								Line:   7,
							},
						},
					},
					Body: &ast.DateTimeLiteral{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 40,
									Line:   7,
								},
								File:   "from_group_test.flux",
								Source: "2018-12-19T22:14:30Z",
								Start: ast.Position{
									Column: 20,
									Line:   7,
								},
							},
						},
						Value: parser.MustParseTime("2018-12-19T22:14:30Z"),
					},
					Lparen: nil,
					Params: []*ast.Property{},
					Rparan: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 40,
						Line:   7,
					},
					File:   "from_group_test.flux",
					Source: "option now = () => 2018-12-19T22:14:30Z",
					Start: ast.Position{
						Column: 1,
						Line:   7,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   20,
					},
					File:   "from_group_test.flux",
					Source: "data = \"\n#datatype,string,long,string,string,string,dateTime:RFC3339,boolean\n#group,false,false,true,true,true,false,false\n#default,_result,,,,,,\n,result,table,_measurement,_field,t0,_time,_value\n,,0,m0,f0,tagvalue,2018-12-19T22:13:30Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:13:40Z,true\n,,0,m0,f0,tagvalue,2018-12-19T22:13:50Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:14:00Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:14:10Z,true\n,,0,m0,f0,tagvalue,2018-12-19T22:14:20Z,true\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   9,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 5,
							Line:   9,
						},
						File:   "from_group_test.flux",
						Source: "data",
						Start: ast.Position{
							Column: 1,
							Line:   9,
						},
					},
				},
				Name: "data",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   20,
						},
						File:   "from_group_test.flux",
						Source: "\"\n#datatype,string,long,string,string,string,dateTime:RFC3339,boolean\n#group,false,false,true,true,true,false,false\n#default,_result,,,,,,\n,result,table,_measurement,_field,t0,_time,_value\n,,0,m0,f0,tagvalue,2018-12-19T22:13:30Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:13:40Z,true\n,,0,m0,f0,tagvalue,2018-12-19T22:13:50Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:14:00Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:14:10Z,true\n,,0,m0,f0,tagvalue,2018-12-19T22:14:20Z,true\n\"",
						Start: ast.Position{
							Column: 8,
							Line:   9,
						},
					},
				},
				Value: "\n#datatype,string,long,string,string,string,dateTime:RFC3339,boolean\n#group,false,false,true,true,true,false,false\n#default,_result,,,,,,\n,result,table,_measurement,_field,t0,_time,_value\n,,0,m0,f0,tagvalue,2018-12-19T22:13:30Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:13:40Z,true\n,,0,m0,f0,tagvalue,2018-12-19T22:13:50Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:14:00Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:14:10Z,true\n,,0,m0,f0,tagvalue,2018-12-19T22:14:20Z,true\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   30,
					},
					File:   "from_group_test.flux",
					Source: "input = array.from(\n    rows: [\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:13:30Z, _value: false},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:13:40Z, _value: true},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:13:50Z, _value: false},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:14:00Z, _value: false},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:14:10Z, _value: true},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:14:20Z, _value: true},\n    ],\n)",
					Start: ast.Position{
						Column: 1,
						Line:   21,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 6,
							Line:   21,
						},
						File:   "from_group_test.flux",
						Source: "input",
						Start: ast.Position{
							Column: 1,
							Line:   21,
						},
					},
				},
				Name: "input",
			},
			Init: &ast.CallExpression{
				Arguments: []ast.Expression{&ast.ObjectExpression{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 6,
								Line:   29,
							},
							File:   "from_group_test.flux",
							Source: "rows: [\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:13:30Z, _value: false},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:13:40Z, _value: true},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:13:50Z, _value: false},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:14:00Z, _value: false},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:14:10Z, _value: true},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:14:20Z, _value: true},\n    ]",
							Start: ast.Position{
								Column: 5,
								Line:   22,
							},
						},
					},
					Lbrace: nil,
					Properties: []*ast.Property{&ast.Property{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 6,
									Line:   29,
								},
								File:   "from_group_test.flux",
								Source: "rows: [\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:13:30Z, _value: false},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:13:40Z, _value: true},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:13:50Z, _value: false},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:14:00Z, _value: false},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:14:10Z, _value: true},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:14:20Z, _value: true},\n    ]",
								Start: ast.Position{
									Column: 5,
									Line:   22,
								},
							},
						},
						Comma: nil,
						Key: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 9,
										Line:   22,
									},
									File:   "from_group_test.flux",
									Source: "rows",
									Start: ast.Position{
										Column: 5,
										Line:   22,
									},
								},
							},
							Name: "rows",
						},
						Separator: nil,
						Value: &ast.ArrayExpression{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 6,
										Line:   29,
									},
									File:   "from_group_test.flux",
									Source: "[\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:13:30Z, _value: false},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:13:40Z, _value: true},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:13:50Z, _value: false},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:14:00Z, _value: false},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:14:10Z, _value: true},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:14:20Z, _value: true},\n    ]",
									Start: ast.Position{
										Column: 11,
										Line:   22,
									},
								},
							},
							Elements: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 103,
											Line:   23,
										},
										File:   "from_group_test.flux",
										Source: "{_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:13:30Z, _value: false}",
										Start: ast.Position{
											Column: 9,
											Line:   23,
										},
									},
								},
								Lbrace: nil,
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 28,
												Line:   23,
											},
											File:   "from_group_test.flux",
											Source: "_measurement: \"m0\"",
											Start: ast.Position{
												Column: 10,
												Line:   23,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 22,
													Line:   23,
												},
												File:   "from_group_test.flux",
												Source: "_measurement",
												Start: ast.Position{
													Column: 10,
													Line:   23,
												},
											},
										},
										Name: "_measurement",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 28,
													Line:   23,
												},
												File:   "from_group_test.flux",
												Source: "\"m0\"",
												Start: ast.Position{
													Column: 24,
													Line:   23,
												},
											},
										},
										Value: "m0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 42,
												Line:   23,
											},
											File:   "from_group_test.flux",
											Source: "_field: \"f0\"",
											Start: ast.Position{
												Column: 30,
												Line:   23,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 36,
													Line:   23,
												},
												File:   "from_group_test.flux",
												Source: "_field",
												Start: ast.Position{
													Column: 30,
													Line:   23,
												},
											},
										},
										Name: "_field",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   23,
												},
												File:   "from_group_test.flux",
												Source: "\"f0\"",
												Start: ast.Position{
													Column: 38,
													Line:   23,
												},
											},
										},
										Value: "f0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 58,
												Line:   23,
											},
											File:   "from_group_test.flux",
											Source: "t0: \"tagvalue\"",
											Start: ast.Position{
												Column: 44,
												Line:   23,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 46,
													Line:   23,
												},
												File:   "from_group_test.flux",
												Source: "t0",
												Start: ast.Position{
													Column: 44,
													Line:   23,
												},
											},
										},
										Name: "t0",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 58,
													Line:   23,
												},
												File:   "from_group_test.flux",
												Source: "\"tagvalue\"",
												Start: ast.Position{
													Column: 48,
													Line:   23,
												},
											},
										},
										Value: "tagvalue",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 87,
												Line:   23,
											},
											File:   "from_group_test.flux",
											Source: "_time: 2018-12-19T22:13:30Z",
											Start: ast.Position{
												Column: 60,
												Line:   23,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 65,
													Line:   23,
												},
												File:   "from_group_test.flux",
												Source: "_time",
												Start: ast.Position{
													Column: 60,
													Line:   23,
												},
											},
										},
										Name: "_time",
									},
									Separator: nil,
									Value: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 87,
													Line:   23,
												},
												File:   "from_group_test.flux",
												Source: "2018-12-19T22:13:30Z",
												Start: ast.Position{
													Column: 67,
													Line:   23,
												},
											},
										},
										Value: parser.MustParseTime("2018-12-19T22:13:30Z"),
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 102,
												Line:   23,
											},
											File:   "from_group_test.flux",
											Source: "_value: false",
											Start: ast.Position{
												Column: 89,
												Line:   23,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 95,
													Line:   23,
												},
												File:   "from_group_test.flux",
												Source: "_value",
												Start: ast.Position{
													Column: 89,
													Line:   23,
												},
											},
										},
										Name: "_value",
									},
									Separator: nil,
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 102,
													Line:   23,
												},
												File:   "from_group_test.flux",
												Source: "false",
												Start: ast.Position{
													Column: 97,
													Line:   23,
												},
											},
										},
										Name: "false",
									},
								}},
								Rbrace: nil,
								With:   nil,
							}, &ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 102,
											Line:   24,
										},
										File:   "from_group_test.flux",
										Source: "{_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:13:40Z, _value: true}",
										Start: ast.Position{
											Column: 9,
											Line:   24,
										},
									},
								},
								Lbrace: nil,
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 28,
												Line:   24,
											},
											File:   "from_group_test.flux",
											Source: "_measurement: \"m0\"",
											Start: ast.Position{
												Column: 10,
												Line:   24,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 22,
													Line:   24,
												},
												File:   "from_group_test.flux",
												Source: "_measurement",
												Start: ast.Position{
													Column: 10,
													Line:   24,
												},
											},
										},
										Name: "_measurement",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 28,
													Line:   24,
												},
												File:   "from_group_test.flux",
												Source: "\"m0\"",
												Start: ast.Position{
													Column: 24,
													Line:   24,
												},
											},
										},
										Value: "m0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 42,
												Line:   24,
											},
											File:   "from_group_test.flux",
											Source: "_field: \"f0\"",
											Start: ast.Position{
												Column: 30,
												Line:   24,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 36,
													Line:   24,
												},
												File:   "from_group_test.flux",
												Source: "_field",
												Start: ast.Position{
													Column: 30,
													Line:   24,
												},
											},
										},
										Name: "_field",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   24,
												},
												File:   "from_group_test.flux",
												Source: "\"f0\"",
												Start: ast.Position{
													Column: 38,
													Line:   24,
												},
											},
										},
										Value: "f0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 58,
												Line:   24,
											},
											File:   "from_group_test.flux",
											Source: "t0: \"tagvalue\"",
											Start: ast.Position{
												Column: 44,
												Line:   24,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 46,
													Line:   24,
												},
												File:   "from_group_test.flux",
												Source: "t0",
												Start: ast.Position{
													Column: 44,
													Line:   24,
												},
											},
										},
										Name: "t0",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 58,
													Line:   24,
												},
												File:   "from_group_test.flux",
												Source: "\"tagvalue\"",
												Start: ast.Position{
													Column: 48,
													Line:   24,
												},
											},
										},
										Value: "tagvalue",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 87,
												Line:   24,
											},
											File:   "from_group_test.flux",
											Source: "_time: 2018-12-19T22:13:40Z",
											Start: ast.Position{
												Column: 60,
												Line:   24,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 65,
													Line:   24,
												},
												File:   "from_group_test.flux",
												Source: "_time",
												Start: ast.Position{
													Column: 60,
													Line:   24,
												},
											},
										},
										Name: "_time",
									},
									Separator: nil,
									Value: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 87,
													Line:   24,
												},
												File:   "from_group_test.flux",
												Source: "2018-12-19T22:13:40Z",
												Start: ast.Position{
													Column: 67,
													Line:   24,
												},
											},
										},
										Value: parser.MustParseTime("2018-12-19T22:13:40Z"),
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 101,
												Line:   24,
											},
											File:   "from_group_test.flux",
											Source: "_value: true",
											Start: ast.Position{
												Column: 89,
												Line:   24,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 95,
													Line:   24,
												},
												File:   "from_group_test.flux",
												Source: "_value",
												Start: ast.Position{
													Column: 89,
													Line:   24,
												},
											},
										},
										Name: "_value",
									},
									Separator: nil,
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 101,
													Line:   24,
												},
												File:   "from_group_test.flux",
												Source: "true",
												Start: ast.Position{
													Column: 97,
													Line:   24,
												},
											},
										},
										Name: "true",
									},
								}},
								Rbrace: nil,
								With:   nil,
							}, &ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 103,
											Line:   25,
										},
										File:   "from_group_test.flux",
										Source: "{_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:13:50Z, _value: false}",
										Start: ast.Position{
											Column: 9,
											Line:   25,
										},
									},
								},
								Lbrace: nil,
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 28,
												Line:   25,
											},
											File:   "from_group_test.flux",
											Source: "_measurement: \"m0\"",
											Start: ast.Position{
												Column: 10,
												Line:   25,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 22,
													Line:   25,
												},
												File:   "from_group_test.flux",
												Source: "_measurement",
												Start: ast.Position{
													Column: 10,
													Line:   25,
												},
											},
										},
										Name: "_measurement",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 28,
													Line:   25,
												},
												File:   "from_group_test.flux",
												Source: "\"m0\"",
												Start: ast.Position{
													Column: 24,
													Line:   25,
												},
											},
										},
										Value: "m0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 42,
												Line:   25,
											},
											File:   "from_group_test.flux",
											Source: "_field: \"f0\"",
											Start: ast.Position{
												Column: 30,
												Line:   25,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 36,
													Line:   25,
												},
												File:   "from_group_test.flux",
												Source: "_field",
												Start: ast.Position{
													Column: 30,
													Line:   25,
												},
											},
										},
										Name: "_field",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   25,
												},
												File:   "from_group_test.flux",
												Source: "\"f0\"",
												Start: ast.Position{
													Column: 38,
													Line:   25,
												},
											},
										},
										Value: "f0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 58,
												Line:   25,
											},
											File:   "from_group_test.flux",
											Source: "t0: \"tagvalue\"",
											Start: ast.Position{
												Column: 44,
												Line:   25,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 46,
													Line:   25,
												},
												File:   "from_group_test.flux",
												Source: "t0",
												Start: ast.Position{
													Column: 44,
													Line:   25,
												},
											},
										},
										Name: "t0",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 58,
													Line:   25,
												},
												File:   "from_group_test.flux",
												Source: "\"tagvalue\"",
												Start: ast.Position{
													Column: 48,
													Line:   25,
												},
											},
										},
										Value: "tagvalue",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 87,
												Line:   25,
											},
											File:   "from_group_test.flux",
											Source: "_time: 2018-12-19T22:13:50Z",
											Start: ast.Position{
												Column: 60,
												Line:   25,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 65,
													Line:   25,
												},
												File:   "from_group_test.flux",
												Source: "_time",
												Start: ast.Position{
													Column: 60,
													Line:   25,
												},
											},
										},
										Name: "_time",
									},
									Separator: nil,
									Value: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 87,
													Line:   25,
												},
												File:   "from_group_test.flux",
												Source: "2018-12-19T22:13:50Z",
												Start: ast.Position{
													Column: 67,
													Line:   25,
												},
											},
										},
										Value: parser.MustParseTime("2018-12-19T22:13:50Z"),
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 102,
												Line:   25,
											},
											File:   "from_group_test.flux",
											Source: "_value: false",
											Start: ast.Position{
												Column: 89,
												Line:   25,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 95,
													Line:   25,
												},
												File:   "from_group_test.flux",
												Source: "_value",
												Start: ast.Position{
													Column: 89,
													Line:   25,
												},
											},
										},
										Name: "_value",
									},
									Separator: nil,
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 102,
													Line:   25,
												},
												File:   "from_group_test.flux",
												Source: "false",
												Start: ast.Position{
													Column: 97,
													Line:   25,
												},
											},
										},
										Name: "false",
									},
								}},
								Rbrace: nil,
								With:   nil,
							}, &ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 103,
											Line:   26,
										},
										File:   "from_group_test.flux",
										Source: "{_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:14:00Z, _value: false}",
										Start: ast.Position{
											Column: 9,
											Line:   26,
										},
									},
								},
								Lbrace: nil,
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 28,
												Line:   26,
											},
											File:   "from_group_test.flux",
											Source: "_measurement: \"m0\"",
											Start: ast.Position{
												Column: 10,
												Line:   26,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 22,
													Line:   26,
												},
												File:   "from_group_test.flux",
												Source: "_measurement",
												Start: ast.Position{
													Column: 10,
													Line:   26,
												},
											},
										},
										Name: "_measurement",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 28,
													Line:   26,
												},
												File:   "from_group_test.flux",
												Source: "\"m0\"",
												Start: ast.Position{
													Column: 24,
													Line:   26,
												},
											},
										},
										Value: "m0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 42,
												Line:   26,
											},
											File:   "from_group_test.flux",
											Source: "_field: \"f0\"",
											Start: ast.Position{
												Column: 30,
												Line:   26,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 36,
													Line:   26,
												},
												File:   "from_group_test.flux",
												Source: "_field",
												Start: ast.Position{
													Column: 30,
													Line:   26,
												},
											},
										},
										Name: "_field",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   26,
												},
												File:   "from_group_test.flux",
												Source: "\"f0\"",
												Start: ast.Position{
													Column: 38,
													Line:   26,
												},
											},
										},
										Value: "f0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 58,
												Line:   26,
											},
											File:   "from_group_test.flux",
											Source: "t0: \"tagvalue\"",
											Start: ast.Position{
												Column: 44,
												Line:   26,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 46,
													Line:   26,
												},
												File:   "from_group_test.flux",
												Source: "t0",
												Start: ast.Position{
													Column: 44,
													Line:   26,
												},
											},
										},
										Name: "t0",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 58,
													Line:   26,
												},
												File:   "from_group_test.flux",
												Source: "\"tagvalue\"",
												Start: ast.Position{
													Column: 48,
													Line:   26,
												},
											},
										},
										Value: "tagvalue",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 87,
												Line:   26,
											},
											File:   "from_group_test.flux",
											Source: "_time: 2018-12-19T22:14:00Z",
											Start: ast.Position{
												Column: 60,
												Line:   26,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 65,
													Line:   26,
												},
												File:   "from_group_test.flux",
												Source: "_time",
												Start: ast.Position{
													Column: 60,
													Line:   26,
												},
											},
										},
										Name: "_time",
									},
									Separator: nil,
									Value: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 87,
													Line:   26,
												},
												File:   "from_group_test.flux",
												Source: "2018-12-19T22:14:00Z",
												Start: ast.Position{
													Column: 67,
													Line:   26,
												},
											},
										},
										Value: parser.MustParseTime("2018-12-19T22:14:00Z"),
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 102,
												Line:   26,
											},
											File:   "from_group_test.flux",
											Source: "_value: false",
											Start: ast.Position{
												Column: 89,
												Line:   26,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 95,
													Line:   26,
												},
												File:   "from_group_test.flux",
												Source: "_value",
												Start: ast.Position{
													Column: 89,
													Line:   26,
												},
											},
										},
										Name: "_value",
									},
									Separator: nil,
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 102,
													Line:   26,
												},
												File:   "from_group_test.flux",
												Source: "false",
												Start: ast.Position{
													Column: 97,
													Line:   26,
												},
											},
										},
										Name: "false",
									},
								}},
								Rbrace: nil,
								With:   nil,
							}, &ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 102,
											Line:   27,
										},
										File:   "from_group_test.flux",
										Source: "{_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:14:10Z, _value: true}",
										Start: ast.Position{
											Column: 9,
											Line:   27,
										},
									},
								},
								Lbrace: nil,
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 28,
												Line:   27,
											},
											File:   "from_group_test.flux",
											Source: "_measurement: \"m0\"",
											Start: ast.Position{
												Column: 10,
												Line:   27,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 22,
													Line:   27,
												},
												File:   "from_group_test.flux",
												Source: "_measurement",
												Start: ast.Position{
													Column: 10,
													Line:   27,
												},
											},
										},
										Name: "_measurement",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 28,
													Line:   27,
												},
												File:   "from_group_test.flux",
												Source: "\"m0\"",
												Start: ast.Position{
													Column: 24,
													Line:   27,
												},
											},
										},
										Value: "m0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 42,
												Line:   27,
											},
											File:   "from_group_test.flux",
											Source: "_field: \"f0\"",
											Start: ast.Position{
												Column: 30,
												Line:   27,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 36,
													Line:   27,
												},
												File:   "from_group_test.flux",
												Source: "_field",
												Start: ast.Position{
													Column: 30,
													Line:   27,
												},
											},
										},
										Name: "_field",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   27,
												},
												File:   "from_group_test.flux",
												Source: "\"f0\"",
												Start: ast.Position{
													Column: 38,
													Line:   27,
												},
											},
										},
										Value: "f0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 58,
												Line:   27,
											},
											File:   "from_group_test.flux",
											Source: "t0: \"tagvalue\"",
											Start: ast.Position{
												Column: 44,
												Line:   27,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 46,
													Line:   27,
												},
												File:   "from_group_test.flux",
												Source: "t0",
												Start: ast.Position{
													Column: 44,
													Line:   27,
												},
											},
										},
										Name: "t0",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 58,
													Line:   27,
												},
												File:   "from_group_test.flux",
												Source: "\"tagvalue\"",
												Start: ast.Position{
													Column: 48,
													Line:   27,
												},
											},
										},
										Value: "tagvalue",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 87,
												Line:   27,
											},
											File:   "from_group_test.flux",
											Source: "_time: 2018-12-19T22:14:10Z",
											Start: ast.Position{
												Column: 60,
												Line:   27,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 65,
													Line:   27,
												},
												File:   "from_group_test.flux",
												Source: "_time",
												Start: ast.Position{
													Column: 60,
													Line:   27,
												},
											},
										},
										Name: "_time",
									},
									Separator: nil,
									Value: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 87,
													Line:   27,
												},
												File:   "from_group_test.flux",
												Source: "2018-12-19T22:14:10Z",
												Start: ast.Position{
													Column: 67,
													Line:   27,
												},
											},
										},
										Value: parser.MustParseTime("2018-12-19T22:14:10Z"),
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 101,
												Line:   27,
											},
											File:   "from_group_test.flux",
											Source: "_value: true",
											Start: ast.Position{
												Column: 89,
												Line:   27,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 95,
													Line:   27,
												},
												File:   "from_group_test.flux",
												Source: "_value",
												Start: ast.Position{
													Column: 89,
													Line:   27,
												},
											},
										},
										Name: "_value",
									},
									Separator: nil,
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 101,
													Line:   27,
												},
												File:   "from_group_test.flux",
												Source: "true",
												Start: ast.Position{
													Column: 97,
													Line:   27,
												},
											},
										},
										Name: "true",
									},
								}},
								Rbrace: nil,
								With:   nil,
							}, &ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 102,
											Line:   28,
										},
										File:   "from_group_test.flux",
										Source: "{_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:14:20Z, _value: true}",
										Start: ast.Position{
											Column: 9,
											Line:   28,
										},
									},
								},
								Lbrace: nil,
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 28,
												Line:   28,
											},
											File:   "from_group_test.flux",
											Source: "_measurement: \"m0\"",
											Start: ast.Position{
												Column: 10,
												Line:   28,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 22,
													Line:   28,
												},
												File:   "from_group_test.flux",
												Source: "_measurement",
												Start: ast.Position{
													Column: 10,
													Line:   28,
												},
											},
										},
										Name: "_measurement",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 28,
													Line:   28,
												},
												File:   "from_group_test.flux",
												Source: "\"m0\"",
												Start: ast.Position{
													Column: 24,
													Line:   28,
												},
											},
										},
										Value: "m0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 42,
												Line:   28,
											},
											File:   "from_group_test.flux",
											Source: "_field: \"f0\"",
											Start: ast.Position{
												Column: 30,
												Line:   28,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 36,
													Line:   28,
												},
												File:   "from_group_test.flux",
												Source: "_field",
												Start: ast.Position{
													Column: 30,
													Line:   28,
												},
											},
										},
										Name: "_field",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   28,
												},
												File:   "from_group_test.flux",
												Source: "\"f0\"",
												Start: ast.Position{
													Column: 38,
													Line:   28,
												},
											},
										},
										Value: "f0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 58,
												Line:   28,
											},
											File:   "from_group_test.flux",
											Source: "t0: \"tagvalue\"",
											Start: ast.Position{
												Column: 44,
												Line:   28,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 46,
													Line:   28,
												},
												File:   "from_group_test.flux",
												Source: "t0",
												Start: ast.Position{
													Column: 44,
													Line:   28,
												},
											},
										},
										Name: "t0",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 58,
													Line:   28,
												},
												File:   "from_group_test.flux",
												Source: "\"tagvalue\"",
												Start: ast.Position{
													Column: 48,
													Line:   28,
												},
											},
										},
										Value: "tagvalue",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 87,
												Line:   28,
											},
											File:   "from_group_test.flux",
											Source: "_time: 2018-12-19T22:14:20Z",
											Start: ast.Position{
												Column: 60,
												Line:   28,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 65,
													Line:   28,
												},
												File:   "from_group_test.flux",
												Source: "_time",
												Start: ast.Position{
													Column: 60,
													Line:   28,
												},
											},
										},
										Name: "_time",
									},
									Separator: nil,
									Value: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 87,
													Line:   28,
												},
												File:   "from_group_test.flux",
												Source: "2018-12-19T22:14:20Z",
												Start: ast.Position{
													Column: 67,
													Line:   28,
												},
											},
										},
										Value: parser.MustParseTime("2018-12-19T22:14:20Z"),
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 101,
												Line:   28,
											},
											File:   "from_group_test.flux",
											Source: "_value: true",
											Start: ast.Position{
												Column: 89,
												Line:   28,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 95,
													Line:   28,
												},
												File:   "from_group_test.flux",
												Source: "_value",
												Start: ast.Position{
													Column: 89,
													Line:   28,
												},
											},
										},
										Name: "_value",
									},
									Separator: nil,
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 101,
													Line:   28,
												},
												File:   "from_group_test.flux",
												Source: "true",
												Start: ast.Position{
													Column: 97,
													Line:   28,
												},
											},
										},
										Name: "true",
									},
								}},
								Rbrace: nil,
								With:   nil,
							}},
							Lbrack: nil,
							Rbrack: nil,
						},
					}},
					Rbrace: nil,
					With:   nil,
				}},
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   30,
						},
						File:   "from_group_test.flux",
						Source: "array.from(\n    rows: [\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:13:30Z, _value: false},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:13:40Z, _value: true},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:13:50Z, _value: false},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:14:00Z, _value: false},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:14:10Z, _value: true},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:14:20Z, _value: true},\n    ],\n)",
						Start: ast.Position{
							Column: 9,
							Line:   21,
						},
					},
				},
				Callee: &ast.MemberExpression{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 19,
								Line:   21,
							},
							File:   "from_group_test.flux",
							Source: "array.from",
							Start: ast.Position{
								Column: 9,
								Line:   21,
							},
						},
					},
					Lbrack: nil,
					Object: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 14,
									Line:   21,
								},
								File:   "from_group_test.flux",
								Source: "array",
								Start: ast.Position{
									Column: 9,
									Line:   21,
								},
							},
						},
						Name: "array",
					},
					Property: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 19,
									Line:   21,
								},
								File:   "from_group_test.flux",
								Source: "from",
								Start: ast.Position{
									Column: 15,
									Line:   21,
								},
							},
						},
						Name: "from",
					},
					Rbrack: nil,
				},
				Lparen: nil,
				Rparen: nil,
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 56,
						Line:   32,
					},
					File:   "from_group_test.flux",
					Source: "pass = (tables=<-) => tables\n    |> group(columns: [\"_measurement\", \"_field\", \"t0\"])",
					Start: ast.Position{
						Column: 1,
						Line:   31,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 5,
							Line:   31,
						},
						File:   "from_group_test.flux",
						Source: "pass",
						Start: ast.Position{
							Column: 1,
							Line:   31,
						},
					},
				},
				Name: "pass",
			},
			Init: &ast.FunctionExpression{
				Arrow: nil,
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 56,
							Line:   32,
						},
						File:   "from_group_test.flux",
						Source: "(tables=<-) => tables\n    |> group(columns: [\"_measurement\", \"_field\", \"t0\"])",
						Start: ast.Position{
							Column: 8,
							Line:   31,
						},
					},
				},
				Body: &ast.PipeExpression{
					Argument: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 29,
									Line:   31,
								},
								File:   "from_group_test.flux",
								Source: "tables",
								Start: ast.Position{
									Column: 23,
									Line:   31,
								},
							},
						},
						Name: "tables",
					},
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 56,
								Line:   32,
							},
							File:   "from_group_test.flux",
							Source: "tables\n    |> group(columns: [\"_measurement\", \"_field\", \"t0\"])",
							Start: ast.Position{
								Column: 23,
								Line:   31,
							},
						},
					},
					Call: &ast.CallExpression{
						Arguments: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 55,
										Line:   32,
									},
									File:   "from_group_test.flux",
									Source: "columns: [\"_measurement\", \"_field\", \"t0\"]",
									Start: ast.Position{
										Column: 14,
										Line:   32,
									},
								},
							},
							Lbrace: nil,
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 55,
											Line:   32,
										},
										File:   "from_group_test.flux",
										Source: "columns: [\"_measurement\", \"_field\", \"t0\"]",
										Start: ast.Position{
											Column: 14,
											Line:   32,
										},
									},
								},
								Comma: nil,
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 21,
												Line:   32,
											},
											File:   "from_group_test.flux",
											Source: "columns",
											Start: ast.Position{
												Column: 14,
												Line:   32,
											},
										},
									},
									Name: "columns",
								},
								Separator: nil,
								Value: &ast.ArrayExpression{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 55,
												Line:   32,
											},
											File:   "from_group_test.flux",
											Source: "[\"_measurement\", \"_field\", \"t0\"]",
											Start: ast.Position{
												Column: 23,
												Line:   32,
											},
										},
									},
									Elements: []ast.Expression{&ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 38,
													Line:   32,
												},
												File:   "from_group_test.flux",
												Source: "\"_measurement\"",
												Start: ast.Position{
													Column: 24,
													Line:   32,
												},
											},
										},
										Value: "_measurement",
									}, &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 48,
													Line:   32,
												},
												File:   "from_group_test.flux",
												Source: "\"_field\"",
												Start: ast.Position{
													Column: 40,
													Line:   32,
												},
											},
										},
										Value: "_field",
									}, &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 54,
													Line:   32,
												},
												File:   "from_group_test.flux",
												Source: "\"t0\"",
												Start: ast.Position{
													Column: 50,
													Line:   32,
												},
											},
										},
										Value: "t0",
									}},
									Lbrack: nil,
									Rbrack: nil,
								},
							}},
							Rbrace: nil,
							With:   nil,
						}},
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 56,
									Line:   32,
								},
								File:   "from_group_test.flux",
								Source: "group(columns: [\"_measurement\", \"_field\", \"t0\"])",
								Start: ast.Position{
									Column: 8,
									Line:   32,
								},
							},
						},
						Callee: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 13,
										Line:   32,
									},
									File:   "from_group_test.flux",
									Source: "group",
									Start: ast.Position{
										Column: 8,
										Line:   32,
									},
								},
							},
							Name: "group",
						},
						Lparen: nil,
						Rparen: nil,
					},
				},
				Lparen: nil,
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 18,
								Line:   31,
							},
							File:   "from_group_test.flux",
							Source: "tables=<-",
							Start: ast.Position{
								Column: 9,
								Line:   31,
							},
						},
					},
					Comma: nil,
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 15,
									Line:   31,
								},
								File:   "from_group_test.flux",
								Source: "tables",
								Start: ast.Position{
									Column: 9,
									Line:   31,
								},
							},
						},
						Name: "tables",
					},
					Separator: nil,
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 18,
								Line:   31,
							},
							File:   "from_group_test.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 16,
								Line:   31,
							},
						},
					}},
				}},
				Rparan: nil,
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 3,
							Line:   38,
						},
						File:   "from_group_test.flux",
						Source: "from = () => ({\n    input: input,\n    want: testing.loadMem(csv: data),\n    fn: pass,\n})",
						Start: ast.Position{
							Column: 6,
							Line:   34,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 10,
								Line:   34,
							},
							File:   "from_group_test.flux",
							Source: "from",
							Start: ast.Position{
								Column: 6,
								Line:   34,
							},
						},
					},
					Name: "from",
				},
				Init: &ast.FunctionExpression{
					Arrow: nil,
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 3,
								Line:   38,
							},
							File:   "from_group_test.flux",
							Source: "() => ({\n    input: input,\n    want: testing.loadMem(csv: data),\n    fn: pass,\n})",
							Start: ast.Position{
								Column: 13,
								Line:   34,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 3,
									Line:   38,
								},
								File:   "from_group_test.flux",
								Source: "({\n    input: input,\n    want: testing.loadMem(csv: data),\n    fn: pass,\n})",
								Start: ast.Position{
									Column: 19,
									Line:   34,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 2,
										Line:   38,
									},
									File:   "from_group_test.flux",
									Source: "{\n    input: input,\n    want: testing.loadMem(csv: data),\n    fn: pass,\n}",
									Start: ast.Position{
										Column: 20,
										Line:   34,
									},
								},
							},
							Lbrace: nil,
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 17,
											Line:   35,
										},
										File:   "from_group_test.flux",
										Source: "input: input",
										Start: ast.Position{
											Column: 5,
											Line:   35,
										},
									},
								},
								Comma: nil,
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 10,
												Line:   35,
											},
											File:   "from_group_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 5,
												Line:   35,
											},
										},
									},
									Name: "input",
								},
								Separator: nil,
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 17,
												Line:   35,
											},
											File:   "from_group_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 12,
												Line:   35,
											},
										},
									},
									Name: "input",
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 37,
											Line:   36,
										},
										File:   "from_group_test.flux",
										Source: "want: testing.loadMem(csv: data)",
										Start: ast.Position{
											Column: 5,
											Line:   36,
										},
									},
								},
								Comma: nil,
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 9,
												Line:   36,
											},
											File:   "from_group_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 5,
												Line:   36,
											},
										},
									},
									Name: "want",
								},
								Separator: nil,
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 36,
													Line:   36,
												},
												File:   "from_group_test.flux",
												Source: "csv: data",
												Start: ast.Position{
													Column: 27,
													Line:   36,
												},
											},
										},
										Lbrace: nil,
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 36,
														Line:   36,
													},
													File:   "from_group_test.flux",
													Source: "csv: data",
													Start: ast.Position{
														Column: 27,
														Line:   36,
													},
												},
											},
											Comma: nil,
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 30,
															Line:   36,
														},
														File:   "from_group_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 27,
															Line:   36,
														},
													},
												},
												Name: "csv",
											},
											Separator: nil,
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 36,
															Line:   36,
														},
														File:   "from_group_test.flux",
														Source: "data",
														Start: ast.Position{
															Column: 32,
															Line:   36,
														},
													},
												},
												Name: "data",
											},
										}},
										Rbrace: nil,
										With:   nil,
									}},
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 37,
												Line:   36,
											},
											File:   "from_group_test.flux",
											Source: "testing.loadMem(csv: data)",
											Start: ast.Position{
												Column: 11,
												Line:   36,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 26,
													Line:   36,
												},
												File:   "from_group_test.flux",
												Source: "testing.loadMem",
												Start: ast.Position{
													Column: 11,
													Line:   36,
												},
											},
										},
										Lbrack: nil,
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   36,
													},
													File:   "from_group_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 11,
														Line:   36,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 26,
														Line:   36,
													},
													File:   "from_group_test.flux",
													Source: "loadMem",
													Start: ast.Position{
														Column: 19,
														Line:   36,
													},
												},
											},
											Name: "loadMem",
										},
										Rbrack: nil,
									},
									Lparen: nil,
									Rparen: nil,
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 13,
											Line:   37,
										},
										File:   "from_group_test.flux",
										Source: "fn: pass",
										Start: ast.Position{
											Column: 5,
											Line:   37,
										},
									},
								},
								Comma: nil,
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 7,
												Line:   37,
											},
											File:   "from_group_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 5,
												Line:   37,
											},
										},
									},
									Name: "fn",
								},
								Separator: nil,
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 13,
												Line:   37,
											},
											File:   "from_group_test.flux",
											Source: "pass",
											Start: ast.Position{
												Column: 9,
												Line:   37,
											},
										},
									},
									Name: "pass",
								},
							}},
							Rbrace: nil,
							With:   nil,
						},
						Lparen: nil,
						Rparen: nil,
					},
					Lparen: nil,
					Params: []*ast.Property{},
					Rparan: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 3,
						Line:   38,
					},
					File:   "from_group_test.flux",
					Source: "test from = () => ({\n    input: input,\n    want: testing.loadMem(csv: data),\n    fn: pass,\n})",
					Start: ast.Position{
						Column: 1,
						Line:   34,
					},
				},
			},
		}},
		Eof: nil,
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   4,
					},
					File:   "from_group_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   4,
						},
						File:   "from_group_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "testing",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 15,
						Line:   5,
					},
					File:   "from_group_test.flux",
					Source: "import \"array\"",
					Start: ast.Position{
						Column: 1,
						Line:   5,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 15,
							Line:   5,
						},
						File:   "from_group_test.flux",
						Source: "\"array\"",
						Start: ast.Position{
							Column: 8,
							Line:   5,
						},
					},
				},
				Value: "array",
			},
		}},
		Metadata: "parser-type=rust",
		Name:     "from_group_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 19,
						Line:   1,
					},
					File:   "from_group_test.flux",
					Source: "package array_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 19,
							Line:   1,
						},
						File:   "from_group_test.flux",
						Source: "array_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "array_test",
			},
		},
	}, &ast.File{
		BaseNode: ast.BaseNode{
			Comments: nil,
			Errors:   nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 3,
					Line:   37,
				},
				File:   "from_test.flux",
				Source: "package array_test\n\n\nimport \"testing\"\nimport \"array\"\n\noption now = () => 2018-12-19T22:14:30Z\n\ndata = \"\n#datatype,string,long,string,string,string,dateTime:RFC3339,boolean\n#group,false,false,false,false,false,false,false\n#default,_result,,,,,,\n,result,table,_measurement,_field,t0,_time,_value\n,,0,m0,f0,tagvalue,2018-12-19T22:13:30Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:13:40Z,true\n,,0,m0,f0,tagvalue,2018-12-19T22:13:50Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:14:00Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:14:10Z,true\n,,0,m0,f0,tagvalue,2018-12-19T22:14:20Z,true\n\"\ninput = array.from(\n    rows: [\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:13:30Z, _value: false},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:13:40Z, _value: true},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:13:50Z, _value: false},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:14:00Z, _value: false},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:14:10Z, _value: true},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:14:20Z, _value: true},\n    ],\n)\npass = (tables=<-) => tables\n\ntest from = () => ({\n    input: input,\n    want: testing.loadMem(csv: data),\n    fn: pass,\n})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 40,
							Line:   7,
						},
						File:   "from_test.flux",
						Source: "now = () => 2018-12-19T22:14:30Z",
						Start: ast.Position{
							Column: 8,
							Line:   7,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   7,
							},
							File:   "from_test.flux",
							Source: "now",
							Start: ast.Position{
								Column: 8,
								Line:   7,
							},
						},
					},
					Name: "now",
				},
				Init: &ast.FunctionExpression{
					Arrow: nil,
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 40,
								Line:   7,
							},
							File:   "from_test.flux",
							Source: "() => 2018-12-19T22:14:30Z",
							Start: ast.Position{
								Column: 14,
								Line:   7,
							},
						},
					},
					Body: &ast.DateTimeLiteral{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 40,
									Line:   7,
								},
								File:   "from_test.flux",
								Source: "2018-12-19T22:14:30Z",
								Start: ast.Position{
									Column: 20,
									Line:   7,
								},
							},
						},
						Value: parser.MustParseTime("2018-12-19T22:14:30Z"),
					},
					Lparen: nil,
					Params: []*ast.Property{},
					Rparan: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 40,
						Line:   7,
					},
					File:   "from_test.flux",
					Source: "option now = () => 2018-12-19T22:14:30Z",
					Start: ast.Position{
						Column: 1,
						Line:   7,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   20,
					},
					File:   "from_test.flux",
					Source: "data = \"\n#datatype,string,long,string,string,string,dateTime:RFC3339,boolean\n#group,false,false,false,false,false,false,false\n#default,_result,,,,,,\n,result,table,_measurement,_field,t0,_time,_value\n,,0,m0,f0,tagvalue,2018-12-19T22:13:30Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:13:40Z,true\n,,0,m0,f0,tagvalue,2018-12-19T22:13:50Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:14:00Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:14:10Z,true\n,,0,m0,f0,tagvalue,2018-12-19T22:14:20Z,true\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   9,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 5,
							Line:   9,
						},
						File:   "from_test.flux",
						Source: "data",
						Start: ast.Position{
							Column: 1,
							Line:   9,
						},
					},
				},
				Name: "data",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   20,
						},
						File:   "from_test.flux",
						Source: "\"\n#datatype,string,long,string,string,string,dateTime:RFC3339,boolean\n#group,false,false,false,false,false,false,false\n#default,_result,,,,,,\n,result,table,_measurement,_field,t0,_time,_value\n,,0,m0,f0,tagvalue,2018-12-19T22:13:30Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:13:40Z,true\n,,0,m0,f0,tagvalue,2018-12-19T22:13:50Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:14:00Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:14:10Z,true\n,,0,m0,f0,tagvalue,2018-12-19T22:14:20Z,true\n\"",
						Start: ast.Position{
							Column: 8,
							Line:   9,
						},
					},
				},
				Value: "\n#datatype,string,long,string,string,string,dateTime:RFC3339,boolean\n#group,false,false,false,false,false,false,false\n#default,_result,,,,,,\n,result,table,_measurement,_field,t0,_time,_value\n,,0,m0,f0,tagvalue,2018-12-19T22:13:30Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:13:40Z,true\n,,0,m0,f0,tagvalue,2018-12-19T22:13:50Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:14:00Z,false\n,,0,m0,f0,tagvalue,2018-12-19T22:14:10Z,true\n,,0,m0,f0,tagvalue,2018-12-19T22:14:20Z,true\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   30,
					},
					File:   "from_test.flux",
					Source: "input = array.from(\n    rows: [\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:13:30Z, _value: false},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:13:40Z, _value: true},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:13:50Z, _value: false},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:14:00Z, _value: false},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:14:10Z, _value: true},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:14:20Z, _value: true},\n    ],\n)",
					Start: ast.Position{
						Column: 1,
						Line:   21,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 6,
							Line:   21,
						},
						File:   "from_test.flux",
						Source: "input",
						Start: ast.Position{
							Column: 1,
							Line:   21,
						},
					},
				},
				Name: "input",
			},
			Init: &ast.CallExpression{
				Arguments: []ast.Expression{&ast.ObjectExpression{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 6,
								Line:   29,
							},
							File:   "from_test.flux",
							Source: "rows: [\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:13:30Z, _value: false},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:13:40Z, _value: true},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:13:50Z, _value: false},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:14:00Z, _value: false},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:14:10Z, _value: true},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:14:20Z, _value: true},\n    ]",
							Start: ast.Position{
								Column: 5,
								Line:   22,
							},
						},
					},
					Lbrace: nil,
					Properties: []*ast.Property{&ast.Property{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 6,
									Line:   29,
								},
								File:   "from_test.flux",
								Source: "rows: [\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:13:30Z, _value: false},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:13:40Z, _value: true},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:13:50Z, _value: false},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:14:00Z, _value: false},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:14:10Z, _value: true},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:14:20Z, _value: true},\n    ]",
								Start: ast.Position{
									Column: 5,
									Line:   22,
								},
							},
						},
						Comma: nil,
						Key: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 9,
										Line:   22,
									},
									File:   "from_test.flux",
									Source: "rows",
									Start: ast.Position{
										Column: 5,
										Line:   22,
									},
								},
							},
							Name: "rows",
						},
						Separator: nil,
						Value: &ast.ArrayExpression{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 6,
										Line:   29,
									},
									File:   "from_test.flux",
									Source: "[\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:13:30Z, _value: false},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:13:40Z, _value: true},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:13:50Z, _value: false},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:14:00Z, _value: false},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:14:10Z, _value: true},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:14:20Z, _value: true},\n    ]",
									Start: ast.Position{
										Column: 11,
										Line:   22,
									},
								},
							},
							Elements: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 103,
											Line:   23,
										},
										File:   "from_test.flux",
										Source: "{_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:13:30Z, _value: false}",
										Start: ast.Position{
											Column: 9,
											Line:   23,
										},
									},
								},
								Lbrace: nil,
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 28,
												Line:   23,
											},
											File:   "from_test.flux",
											Source: "_measurement: \"m0\"",
											Start: ast.Position{
												Column: 10,
												Line:   23,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 22,
													Line:   23,
												},
												File:   "from_test.flux",
												Source: "_measurement",
												Start: ast.Position{
													Column: 10,
													Line:   23,
												},
											},
										},
										Name: "_measurement",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 28,
													Line:   23,
												},
												File:   "from_test.flux",
												Source: "\"m0\"",
												Start: ast.Position{
													Column: 24,
													Line:   23,
												},
											},
										},
										Value: "m0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 42,
												Line:   23,
											},
											File:   "from_test.flux",
											Source: "_field: \"f0\"",
											Start: ast.Position{
												Column: 30,
												Line:   23,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 36,
													Line:   23,
												},
												File:   "from_test.flux",
												Source: "_field",
												Start: ast.Position{
													Column: 30,
													Line:   23,
												},
											},
										},
										Name: "_field",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   23,
												},
												File:   "from_test.flux",
												Source: "\"f0\"",
												Start: ast.Position{
													Column: 38,
													Line:   23,
												},
											},
										},
										Value: "f0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 58,
												Line:   23,
											},
											File:   "from_test.flux",
											Source: "t0: \"tagvalue\"",
											Start: ast.Position{
												Column: 44,
												Line:   23,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 46,
													Line:   23,
												},
												File:   "from_test.flux",
												Source: "t0",
												Start: ast.Position{
													Column: 44,
													Line:   23,
												},
											},
										},
										Name: "t0",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 58,
													Line:   23,
												},
												File:   "from_test.flux",
												Source: "\"tagvalue\"",
												Start: ast.Position{
													Column: 48,
													Line:   23,
												},
											},
										},
										Value: "tagvalue",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 87,
												Line:   23,
											},
											File:   "from_test.flux",
											Source: "_time: 2018-12-19T22:13:30Z",
											Start: ast.Position{
												Column: 60,
												Line:   23,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 65,
													Line:   23,
												},
												File:   "from_test.flux",
												Source: "_time",
												Start: ast.Position{
													Column: 60,
													Line:   23,
												},
											},
										},
										Name: "_time",
									},
									Separator: nil,
									Value: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 87,
													Line:   23,
												},
												File:   "from_test.flux",
												Source: "2018-12-19T22:13:30Z",
												Start: ast.Position{
													Column: 67,
													Line:   23,
												},
											},
										},
										Value: parser.MustParseTime("2018-12-19T22:13:30Z"),
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 102,
												Line:   23,
											},
											File:   "from_test.flux",
											Source: "_value: false",
											Start: ast.Position{
												Column: 89,
												Line:   23,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 95,
													Line:   23,
												},
												File:   "from_test.flux",
												Source: "_value",
												Start: ast.Position{
													Column: 89,
													Line:   23,
												},
											},
										},
										Name: "_value",
									},
									Separator: nil,
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 102,
													Line:   23,
												},
												File:   "from_test.flux",
												Source: "false",
												Start: ast.Position{
													Column: 97,
													Line:   23,
												},
											},
										},
										Name: "false",
									},
								}},
								Rbrace: nil,
								With:   nil,
							}, &ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 102,
											Line:   24,
										},
										File:   "from_test.flux",
										Source: "{_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:13:40Z, _value: true}",
										Start: ast.Position{
											Column: 9,
											Line:   24,
										},
									},
								},
								Lbrace: nil,
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 28,
												Line:   24,
											},
											File:   "from_test.flux",
											Source: "_measurement: \"m0\"",
											Start: ast.Position{
												Column: 10,
												Line:   24,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 22,
													Line:   24,
												},
												File:   "from_test.flux",
												Source: "_measurement",
												Start: ast.Position{
													Column: 10,
													Line:   24,
												},
											},
										},
										Name: "_measurement",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 28,
													Line:   24,
												},
												File:   "from_test.flux",
												Source: "\"m0\"",
												Start: ast.Position{
													Column: 24,
													Line:   24,
												},
											},
										},
										Value: "m0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 42,
												Line:   24,
											},
											File:   "from_test.flux",
											Source: "_field: \"f0\"",
											Start: ast.Position{
												Column: 30,
												Line:   24,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 36,
													Line:   24,
												},
												File:   "from_test.flux",
												Source: "_field",
												Start: ast.Position{
													Column: 30,
													Line:   24,
												},
											},
										},
										Name: "_field",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   24,
												},
												File:   "from_test.flux",
												Source: "\"f0\"",
												Start: ast.Position{
													Column: 38,
													Line:   24,
												},
											},
										},
										Value: "f0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 58,
												Line:   24,
											},
											File:   "from_test.flux",
											Source: "t0: \"tagvalue\"",
											Start: ast.Position{
												Column: 44,
												Line:   24,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 46,
													Line:   24,
												},
												File:   "from_test.flux",
												Source: "t0",
												Start: ast.Position{
													Column: 44,
													Line:   24,
												},
											},
										},
										Name: "t0",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 58,
													Line:   24,
												},
												File:   "from_test.flux",
												Source: "\"tagvalue\"",
												Start: ast.Position{
													Column: 48,
													Line:   24,
												},
											},
										},
										Value: "tagvalue",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 87,
												Line:   24,
											},
											File:   "from_test.flux",
											Source: "_time: 2018-12-19T22:13:40Z",
											Start: ast.Position{
												Column: 60,
												Line:   24,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 65,
													Line:   24,
												},
												File:   "from_test.flux",
												Source: "_time",
												Start: ast.Position{
													Column: 60,
													Line:   24,
												},
											},
										},
										Name: "_time",
									},
									Separator: nil,
									Value: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 87,
													Line:   24,
												},
												File:   "from_test.flux",
												Source: "2018-12-19T22:13:40Z",
												Start: ast.Position{
													Column: 67,
													Line:   24,
												},
											},
										},
										Value: parser.MustParseTime("2018-12-19T22:13:40Z"),
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 101,
												Line:   24,
											},
											File:   "from_test.flux",
											Source: "_value: true",
											Start: ast.Position{
												Column: 89,
												Line:   24,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 95,
													Line:   24,
												},
												File:   "from_test.flux",
												Source: "_value",
												Start: ast.Position{
													Column: 89,
													Line:   24,
												},
											},
										},
										Name: "_value",
									},
									Separator: nil,
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 101,
													Line:   24,
												},
												File:   "from_test.flux",
												Source: "true",
												Start: ast.Position{
													Column: 97,
													Line:   24,
												},
											},
										},
										Name: "true",
									},
								}},
								Rbrace: nil,
								With:   nil,
							}, &ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 103,
											Line:   25,
										},
										File:   "from_test.flux",
										Source: "{_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:13:50Z, _value: false}",
										Start: ast.Position{
											Column: 9,
											Line:   25,
										},
									},
								},
								Lbrace: nil,
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 28,
												Line:   25,
											},
											File:   "from_test.flux",
											Source: "_measurement: \"m0\"",
											Start: ast.Position{
												Column: 10,
												Line:   25,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 22,
													Line:   25,
												},
												File:   "from_test.flux",
												Source: "_measurement",
												Start: ast.Position{
													Column: 10,
													Line:   25,
												},
											},
										},
										Name: "_measurement",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 28,
													Line:   25,
												},
												File:   "from_test.flux",
												Source: "\"m0\"",
												Start: ast.Position{
													Column: 24,
													Line:   25,
												},
											},
										},
										Value: "m0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 42,
												Line:   25,
											},
											File:   "from_test.flux",
											Source: "_field: \"f0\"",
											Start: ast.Position{
												Column: 30,
												Line:   25,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 36,
													Line:   25,
												},
												File:   "from_test.flux",
												Source: "_field",
												Start: ast.Position{
													Column: 30,
													Line:   25,
												},
											},
										},
										Name: "_field",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   25,
												},
												File:   "from_test.flux",
												Source: "\"f0\"",
												Start: ast.Position{
													Column: 38,
													Line:   25,
												},
											},
										},
										Value: "f0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 58,
												Line:   25,
											},
											File:   "from_test.flux",
											Source: "t0: \"tagvalue\"",
											Start: ast.Position{
												Column: 44,
												Line:   25,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 46,
													Line:   25,
												},
												File:   "from_test.flux",
												Source: "t0",
												Start: ast.Position{
													Column: 44,
													Line:   25,
												},
											},
										},
										Name: "t0",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 58,
													Line:   25,
												},
												File:   "from_test.flux",
												Source: "\"tagvalue\"",
												Start: ast.Position{
													Column: 48,
													Line:   25,
												},
											},
										},
										Value: "tagvalue",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 87,
												Line:   25,
											},
											File:   "from_test.flux",
											Source: "_time: 2018-12-19T22:13:50Z",
											Start: ast.Position{
												Column: 60,
												Line:   25,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 65,
													Line:   25,
												},
												File:   "from_test.flux",
												Source: "_time",
												Start: ast.Position{
													Column: 60,
													Line:   25,
												},
											},
										},
										Name: "_time",
									},
									Separator: nil,
									Value: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 87,
													Line:   25,
												},
												File:   "from_test.flux",
												Source: "2018-12-19T22:13:50Z",
												Start: ast.Position{
													Column: 67,
													Line:   25,
												},
											},
										},
										Value: parser.MustParseTime("2018-12-19T22:13:50Z"),
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 102,
												Line:   25,
											},
											File:   "from_test.flux",
											Source: "_value: false",
											Start: ast.Position{
												Column: 89,
												Line:   25,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 95,
													Line:   25,
												},
												File:   "from_test.flux",
												Source: "_value",
												Start: ast.Position{
													Column: 89,
													Line:   25,
												},
											},
										},
										Name: "_value",
									},
									Separator: nil,
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 102,
													Line:   25,
												},
												File:   "from_test.flux",
												Source: "false",
												Start: ast.Position{
													Column: 97,
													Line:   25,
												},
											},
										},
										Name: "false",
									},
								}},
								Rbrace: nil,
								With:   nil,
							}, &ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 103,
											Line:   26,
										},
										File:   "from_test.flux",
										Source: "{_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:14:00Z, _value: false}",
										Start: ast.Position{
											Column: 9,
											Line:   26,
										},
									},
								},
								Lbrace: nil,
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 28,
												Line:   26,
											},
											File:   "from_test.flux",
											Source: "_measurement: \"m0\"",
											Start: ast.Position{
												Column: 10,
												Line:   26,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 22,
													Line:   26,
												},
												File:   "from_test.flux",
												Source: "_measurement",
												Start: ast.Position{
													Column: 10,
													Line:   26,
												},
											},
										},
										Name: "_measurement",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 28,
													Line:   26,
												},
												File:   "from_test.flux",
												Source: "\"m0\"",
												Start: ast.Position{
													Column: 24,
													Line:   26,
												},
											},
										},
										Value: "m0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 42,
												Line:   26,
											},
											File:   "from_test.flux",
											Source: "_field: \"f0\"",
											Start: ast.Position{
												Column: 30,
												Line:   26,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 36,
													Line:   26,
												},
												File:   "from_test.flux",
												Source: "_field",
												Start: ast.Position{
													Column: 30,
													Line:   26,
												},
											},
										},
										Name: "_field",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   26,
												},
												File:   "from_test.flux",
												Source: "\"f0\"",
												Start: ast.Position{
													Column: 38,
													Line:   26,
												},
											},
										},
										Value: "f0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 58,
												Line:   26,
											},
											File:   "from_test.flux",
											Source: "t0: \"tagvalue\"",
											Start: ast.Position{
												Column: 44,
												Line:   26,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 46,
													Line:   26,
												},
												File:   "from_test.flux",
												Source: "t0",
												Start: ast.Position{
													Column: 44,
													Line:   26,
												},
											},
										},
										Name: "t0",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 58,
													Line:   26,
												},
												File:   "from_test.flux",
												Source: "\"tagvalue\"",
												Start: ast.Position{
													Column: 48,
													Line:   26,
												},
											},
										},
										Value: "tagvalue",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 87,
												Line:   26,
											},
											File:   "from_test.flux",
											Source: "_time: 2018-12-19T22:14:00Z",
											Start: ast.Position{
												Column: 60,
												Line:   26,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 65,
													Line:   26,
												},
												File:   "from_test.flux",
												Source: "_time",
												Start: ast.Position{
													Column: 60,
													Line:   26,
												},
											},
										},
										Name: "_time",
									},
									Separator: nil,
									Value: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 87,
													Line:   26,
												},
												File:   "from_test.flux",
												Source: "2018-12-19T22:14:00Z",
												Start: ast.Position{
													Column: 67,
													Line:   26,
												},
											},
										},
										Value: parser.MustParseTime("2018-12-19T22:14:00Z"),
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 102,
												Line:   26,
											},
											File:   "from_test.flux",
											Source: "_value: false",
											Start: ast.Position{
												Column: 89,
												Line:   26,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 95,
													Line:   26,
												},
												File:   "from_test.flux",
												Source: "_value",
												Start: ast.Position{
													Column: 89,
													Line:   26,
												},
											},
										},
										Name: "_value",
									},
									Separator: nil,
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 102,
													Line:   26,
												},
												File:   "from_test.flux",
												Source: "false",
												Start: ast.Position{
													Column: 97,
													Line:   26,
												},
											},
										},
										Name: "false",
									},
								}},
								Rbrace: nil,
								With:   nil,
							}, &ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 102,
											Line:   27,
										},
										File:   "from_test.flux",
										Source: "{_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:14:10Z, _value: true}",
										Start: ast.Position{
											Column: 9,
											Line:   27,
										},
									},
								},
								Lbrace: nil,
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 28,
												Line:   27,
											},
											File:   "from_test.flux",
											Source: "_measurement: \"m0\"",
											Start: ast.Position{
												Column: 10,
												Line:   27,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 22,
													Line:   27,
												},
												File:   "from_test.flux",
												Source: "_measurement",
												Start: ast.Position{
													Column: 10,
													Line:   27,
												},
											},
										},
										Name: "_measurement",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 28,
													Line:   27,
												},
												File:   "from_test.flux",
												Source: "\"m0\"",
												Start: ast.Position{
													Column: 24,
													Line:   27,
												},
											},
										},
										Value: "m0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 42,
												Line:   27,
											},
											File:   "from_test.flux",
											Source: "_field: \"f0\"",
											Start: ast.Position{
												Column: 30,
												Line:   27,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 36,
													Line:   27,
												},
												File:   "from_test.flux",
												Source: "_field",
												Start: ast.Position{
													Column: 30,
													Line:   27,
												},
											},
										},
										Name: "_field",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   27,
												},
												File:   "from_test.flux",
												Source: "\"f0\"",
												Start: ast.Position{
													Column: 38,
													Line:   27,
												},
											},
										},
										Value: "f0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 58,
												Line:   27,
											},
											File:   "from_test.flux",
											Source: "t0: \"tagvalue\"",
											Start: ast.Position{
												Column: 44,
												Line:   27,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 46,
													Line:   27,
												},
												File:   "from_test.flux",
												Source: "t0",
												Start: ast.Position{
													Column: 44,
													Line:   27,
												},
											},
										},
										Name: "t0",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 58,
													Line:   27,
												},
												File:   "from_test.flux",
												Source: "\"tagvalue\"",
												Start: ast.Position{
													Column: 48,
													Line:   27,
												},
											},
										},
										Value: "tagvalue",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 87,
												Line:   27,
											},
											File:   "from_test.flux",
											Source: "_time: 2018-12-19T22:14:10Z",
											Start: ast.Position{
												Column: 60,
												Line:   27,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 65,
													Line:   27,
												},
												File:   "from_test.flux",
												Source: "_time",
												Start: ast.Position{
													Column: 60,
													Line:   27,
												},
											},
										},
										Name: "_time",
									},
									Separator: nil,
									Value: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 87,
													Line:   27,
												},
												File:   "from_test.flux",
												Source: "2018-12-19T22:14:10Z",
												Start: ast.Position{
													Column: 67,
													Line:   27,
												},
											},
										},
										Value: parser.MustParseTime("2018-12-19T22:14:10Z"),
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 101,
												Line:   27,
											},
											File:   "from_test.flux",
											Source: "_value: true",
											Start: ast.Position{
												Column: 89,
												Line:   27,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 95,
													Line:   27,
												},
												File:   "from_test.flux",
												Source: "_value",
												Start: ast.Position{
													Column: 89,
													Line:   27,
												},
											},
										},
										Name: "_value",
									},
									Separator: nil,
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 101,
													Line:   27,
												},
												File:   "from_test.flux",
												Source: "true",
												Start: ast.Position{
													Column: 97,
													Line:   27,
												},
											},
										},
										Name: "true",
									},
								}},
								Rbrace: nil,
								With:   nil,
							}, &ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 102,
											Line:   28,
										},
										File:   "from_test.flux",
										Source: "{_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:14:20Z, _value: true}",
										Start: ast.Position{
											Column: 9,
											Line:   28,
										},
									},
								},
								Lbrace: nil,
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 28,
												Line:   28,
											},
											File:   "from_test.flux",
											Source: "_measurement: \"m0\"",
											Start: ast.Position{
												Column: 10,
												Line:   28,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 22,
													Line:   28,
												},
												File:   "from_test.flux",
												Source: "_measurement",
												Start: ast.Position{
													Column: 10,
													Line:   28,
												},
											},
										},
										Name: "_measurement",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 28,
													Line:   28,
												},
												File:   "from_test.flux",
												Source: "\"m0\"",
												Start: ast.Position{
													Column: 24,
													Line:   28,
												},
											},
										},
										Value: "m0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 42,
												Line:   28,
											},
											File:   "from_test.flux",
											Source: "_field: \"f0\"",
											Start: ast.Position{
												Column: 30,
												Line:   28,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 36,
													Line:   28,
												},
												File:   "from_test.flux",
												Source: "_field",
												Start: ast.Position{
													Column: 30,
													Line:   28,
												},
											},
										},
										Name: "_field",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 42,
													Line:   28,
												},
												File:   "from_test.flux",
												Source: "\"f0\"",
												Start: ast.Position{
													Column: 38,
													Line:   28,
												},
											},
										},
										Value: "f0",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 58,
												Line:   28,
											},
											File:   "from_test.flux",
											Source: "t0: \"tagvalue\"",
											Start: ast.Position{
												Column: 44,
												Line:   28,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 46,
													Line:   28,
												},
												File:   "from_test.flux",
												Source: "t0",
												Start: ast.Position{
													Column: 44,
													Line:   28,
												},
											},
										},
										Name: "t0",
									},
									Separator: nil,
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 58,
													Line:   28,
												},
												File:   "from_test.flux",
												Source: "\"tagvalue\"",
												Start: ast.Position{
													Column: 48,
													Line:   28,
												},
											},
										},
										Value: "tagvalue",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 87,
												Line:   28,
											},
											File:   "from_test.flux",
											Source: "_time: 2018-12-19T22:14:20Z",
											Start: ast.Position{
												Column: 60,
												Line:   28,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 65,
													Line:   28,
												},
												File:   "from_test.flux",
												Source: "_time",
												Start: ast.Position{
													Column: 60,
													Line:   28,
												},
											},
										},
										Name: "_time",
									},
									Separator: nil,
									Value: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 87,
													Line:   28,
												},
												File:   "from_test.flux",
												Source: "2018-12-19T22:14:20Z",
												Start: ast.Position{
													Column: 67,
													Line:   28,
												},
											},
										},
										Value: parser.MustParseTime("2018-12-19T22:14:20Z"),
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 101,
												Line:   28,
											},
											File:   "from_test.flux",
											Source: "_value: true",
											Start: ast.Position{
												Column: 89,
												Line:   28,
											},
										},
									},
									Comma: nil,
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 95,
													Line:   28,
												},
												File:   "from_test.flux",
												Source: "_value",
												Start: ast.Position{
													Column: 89,
													Line:   28,
												},
											},
										},
										Name: "_value",
									},
									Separator: nil,
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 101,
													Line:   28,
												},
												File:   "from_test.flux",
												Source: "true",
												Start: ast.Position{
													Column: 97,
													Line:   28,
												},
											},
										},
										Name: "true",
									},
								}},
								Rbrace: nil,
								With:   nil,
							}},
							Lbrack: nil,
							Rbrack: nil,
						},
					}},
					Rbrace: nil,
					With:   nil,
				}},
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   30,
						},
						File:   "from_test.flux",
						Source: "array.from(\n    rows: [\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:13:30Z, _value: false},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:13:40Z, _value: true},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:13:50Z, _value: false},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:14:00Z, _value: false},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:14:10Z, _value: true},\n        {_measurement: \"m0\", _field: \"f0\", t0: \"tagvalue\", _time: 2018-12-19T22:14:20Z, _value: true},\n    ],\n)",
						Start: ast.Position{
							Column: 9,
							Line:   21,
						},
					},
				},
				Callee: &ast.MemberExpression{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 19,
								Line:   21,
							},
							File:   "from_test.flux",
							Source: "array.from",
							Start: ast.Position{
								Column: 9,
								Line:   21,
							},
						},
					},
					Lbrack: nil,
					Object: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 14,
									Line:   21,
								},
								File:   "from_test.flux",
								Source: "array",
								Start: ast.Position{
									Column: 9,
									Line:   21,
								},
							},
						},
						Name: "array",
					},
					Property: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 19,
									Line:   21,
								},
								File:   "from_test.flux",
								Source: "from",
								Start: ast.Position{
									Column: 15,
									Line:   21,
								},
							},
						},
						Name: "from",
					},
					Rbrack: nil,
				},
				Lparen: nil,
				Rparen: nil,
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 29,
						Line:   31,
					},
					File:   "from_test.flux",
					Source: "pass = (tables=<-) => tables",
					Start: ast.Position{
						Column: 1,
						Line:   31,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 5,
							Line:   31,
						},
						File:   "from_test.flux",
						Source: "pass",
						Start: ast.Position{
							Column: 1,
							Line:   31,
						},
					},
				},
				Name: "pass",
			},
			Init: &ast.FunctionExpression{
				Arrow: nil,
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 29,
							Line:   31,
						},
						File:   "from_test.flux",
						Source: "(tables=<-) => tables",
						Start: ast.Position{
							Column: 8,
							Line:   31,
						},
					},
				},
				Body: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 29,
								Line:   31,
							},
							File:   "from_test.flux",
							Source: "tables",
							Start: ast.Position{
								Column: 23,
								Line:   31,
							},
						},
					},
					Name: "tables",
				},
				Lparen: nil,
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 18,
								Line:   31,
							},
							File:   "from_test.flux",
							Source: "tables=<-",
							Start: ast.Position{
								Column: 9,
								Line:   31,
							},
						},
					},
					Comma: nil,
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 15,
									Line:   31,
								},
								File:   "from_test.flux",
								Source: "tables",
								Start: ast.Position{
									Column: 9,
									Line:   31,
								},
							},
						},
						Name: "tables",
					},
					Separator: nil,
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 18,
								Line:   31,
							},
							File:   "from_test.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 16,
								Line:   31,
							},
						},
					}},
				}},
				Rparan: nil,
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 3,
							Line:   37,
						},
						File:   "from_test.flux",
						Source: "from = () => ({\n    input: input,\n    want: testing.loadMem(csv: data),\n    fn: pass,\n})",
						Start: ast.Position{
							Column: 6,
							Line:   33,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 10,
								Line:   33,
							},
							File:   "from_test.flux",
							Source: "from",
							Start: ast.Position{
								Column: 6,
								Line:   33,
							},
						},
					},
					Name: "from",
				},
				Init: &ast.FunctionExpression{
					Arrow: nil,
					BaseNode: ast.BaseNode{
						Comments: nil,
						Errors:   nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 3,
								Line:   37,
							},
							File:   "from_test.flux",
							Source: "() => ({\n    input: input,\n    want: testing.loadMem(csv: data),\n    fn: pass,\n})",
							Start: ast.Position{
								Column: 13,
								Line:   33,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Comments: nil,
							Errors:   nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 3,
									Line:   37,
								},
								File:   "from_test.flux",
								Source: "({\n    input: input,\n    want: testing.loadMem(csv: data),\n    fn: pass,\n})",
								Start: ast.Position{
									Column: 19,
									Line:   33,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Comments: nil,
								Errors:   nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 2,
										Line:   37,
									},
									File:   "from_test.flux",
									Source: "{\n    input: input,\n    want: testing.loadMem(csv: data),\n    fn: pass,\n}",
									Start: ast.Position{
										Column: 20,
										Line:   33,
									},
								},
							},
							Lbrace: nil,
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 17,
											Line:   34,
										},
										File:   "from_test.flux",
										Source: "input: input",
										Start: ast.Position{
											Column: 5,
											Line:   34,
										},
									},
								},
								Comma: nil,
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 10,
												Line:   34,
											},
											File:   "from_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 5,
												Line:   34,
											},
										},
									},
									Name: "input",
								},
								Separator: nil,
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 17,
												Line:   34,
											},
											File:   "from_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 12,
												Line:   34,
											},
										},
									},
									Name: "input",
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 37,
											Line:   35,
										},
										File:   "from_test.flux",
										Source: "want: testing.loadMem(csv: data)",
										Start: ast.Position{
											Column: 5,
											Line:   35,
										},
									},
								},
								Comma: nil,
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 9,
												Line:   35,
											},
											File:   "from_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 5,
												Line:   35,
											},
										},
									},
									Name: "want",
								},
								Separator: nil,
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 36,
													Line:   35,
												},
												File:   "from_test.flux",
												Source: "csv: data",
												Start: ast.Position{
													Column: 27,
													Line:   35,
												},
											},
										},
										Lbrace: nil,
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 36,
														Line:   35,
													},
													File:   "from_test.flux",
													Source: "csv: data",
													Start: ast.Position{
														Column: 27,
														Line:   35,
													},
												},
											},
											Comma: nil,
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 30,
															Line:   35,
														},
														File:   "from_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 27,
															Line:   35,
														},
													},
												},
												Name: "csv",
											},
											Separator: nil,
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Comments: nil,
													Errors:   nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 36,
															Line:   35,
														},
														File:   "from_test.flux",
														Source: "data",
														Start: ast.Position{
															Column: 32,
															Line:   35,
														},
													},
												},
												Name: "data",
											},
										}},
										Rbrace: nil,
										With:   nil,
									}},
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 37,
												Line:   35,
											},
											File:   "from_test.flux",
											Source: "testing.loadMem(csv: data)",
											Start: ast.Position{
												Column: 11,
												Line:   35,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Comments: nil,
											Errors:   nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 26,
													Line:   35,
												},
												File:   "from_test.flux",
												Source: "testing.loadMem",
												Start: ast.Position{
													Column: 11,
													Line:   35,
												},
											},
										},
										Lbrack: nil,
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   35,
													},
													File:   "from_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 11,
														Line:   35,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Comments: nil,
												Errors:   nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 26,
														Line:   35,
													},
													File:   "from_test.flux",
													Source: "loadMem",
													Start: ast.Position{
														Column: 19,
														Line:   35,
													},
												},
											},
											Name: "loadMem",
										},
										Rbrack: nil,
									},
									Lparen: nil,
									Rparen: nil,
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Comments: nil,
									Errors:   nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 13,
											Line:   36,
										},
										File:   "from_test.flux",
										Source: "fn: pass",
										Start: ast.Position{
											Column: 5,
											Line:   36,
										},
									},
								},
								Comma: nil,
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 7,
												Line:   36,
											},
											File:   "from_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 5,
												Line:   36,
											},
										},
									},
									Name: "fn",
								},
								Separator: nil,
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Comments: nil,
										Errors:   nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 13,
												Line:   36,
											},
											File:   "from_test.flux",
											Source: "pass",
											Start: ast.Position{
												Column: 9,
												Line:   36,
											},
										},
									},
									Name: "pass",
								},
							}},
							Rbrace: nil,
							With:   nil,
						},
						Lparen: nil,
						Rparen: nil,
					},
					Lparen: nil,
					Params: []*ast.Property{},
					Rparan: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 3,
						Line:   37,
					},
					File:   "from_test.flux",
					Source: "test from = () => ({\n    input: input,\n    want: testing.loadMem(csv: data),\n    fn: pass,\n})",
					Start: ast.Position{
						Column: 1,
						Line:   33,
					},
				},
			},
		}},
		Eof: nil,
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   4,
					},
					File:   "from_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   4,
						},
						File:   "from_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "testing",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 15,
						Line:   5,
					},
					File:   "from_test.flux",
					Source: "import \"array\"",
					Start: ast.Position{
						Column: 1,
						Line:   5,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 15,
							Line:   5,
						},
						File:   "from_test.flux",
						Source: "\"array\"",
						Start: ast.Position{
							Column: 8,
							Line:   5,
						},
					},
				},
				Value: "array",
			},
		}},
		Metadata: "parser-type=rust",
		Name:     "from_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Comments: nil,
				Errors:   nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 19,
						Line:   1,
					},
					File:   "from_test.flux",
					Source: "package array_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Comments: nil,
					Errors:   nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 19,
							Line:   1,
						},
						File:   "from_test.flux",
						Source: "array_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "array_test",
			},
		},
	}},
	Package: "array_test",
	Path:    "array",
}}
