// DO NOT EDIT: This file is autogenerated via the builtin command.

package universe

import (
	ast "github.com/influxdata/flux/ast"
	parser "github.com/influxdata/flux/internal/parser"
)

var FluxTestPackages = []*ast.Package{&ast.Package{
	BaseNode: ast.BaseNode{
		Errors: nil,
		Loc:    nil,
	},
	Files: []*ast.File{&ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 112,
					Line:   61,
				},
				File:   "join_missing_on_col_test.flux",
				Source: "package universe_test\n\nimport \"testing\"\n\noption now = () => (2030-01-01T00:00:00Z)\n\ninData = \"\n#datatype,string,long,dateTime:RFC3339,long,string,string,long\n#group,false,false,false,false,true,true,true\n#default,_result,,,,,,\n,result,table,_time,_value,_field,_measurement,status\n,_result,0,2019-09-12T20:00:00Z,510,resp_bytes,http_request,400\n\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,long\n#group,false,false,false,false,true,true,true,true\n#default,_result,,,,,,,\n,result,table,_time,_value,_field,_measurement,org_id,status\n,_result,1,2019-09-12T20:00:00Z,180654,resp_bytes,http_request,03b60149f6fb9000,200\n,_result,2,2019-09-12T20:00:00Z,144,resp_bytes,http_request,03b60149f6fb9000,500\n,_result,3,2019-09-12T20:00:00Z,152,resp_bytes,http_request,10603619cf2e665b,500\n\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,long\n#group,false,false,false,false,true,true,true,true\n#default,_result,,,,,,,\n,result,table,_time,_value,_field,_measurement,org_id,status\n,_result,0,2019-09-12T20:00:00Z,9654177,req_bytes,http_request,039e9eb802d3f000,204\n,_result,1,2019-09-12T20:00:00Z,33784154,req_bytes,http_request,03a2c4456f0f5000,204\n,_result,2,2019-09-12T20:00:00Z,870346480,req_bytes,http_request,03b60149f6fb9000,204\n,_result,3,2019-09-12T20:00:00Z,48275,req_bytes,http_request,03c68af671227000,204\n\"\n\noutData = \"\n#datatype,string,long,long,long,string\n#group,false,false,false,false,true\n#default,_result,,,,\n,result,table,datain,dataout,org_id\n,_result,0,9654177,,039e9eb802d3f000\n,_result,1,33784154,,03a2c4456f0f5000\n,_result,2,870346480,180798,03b60149f6fb9000\n,_result,3,48275,,03c68af671227000\n,_result,4,,152,10603619cf2e665b\n\"\n\nt_join_missing_on_col = (tables=<-) => {\n    lhs = tables\n        |> range(start: 2019-01-01T00:00:00Z)\n        |> filter(fn: (r) => r._field == \"resp_bytes\")\n        |> keep(columns: [\"_time\", \"org_id\", \"_value\"])\n        |> sum()\n        |> rename(columns: {_value: \"dataout\"})\n    rhs = tables\n        |> range(start: 2019-01-01T00:00:00Z)\n        |> filter(fn: (r) => r._field == \"req_bytes\")\n        |> keep(columns: [\"_time\", \"org_id\", \"_value\"])\n        |> sum()\n        |> rename(columns: {_value: \"datain\"})\n    return join(tables: {lhs: lhs, rhs: rhs}, on: [\"org_id\"])\n}\n\ntest _join_missing_on_col = () =>\n    ({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_join_missing_on_col})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 42,
							Line:   5,
						},
						File:   "join_missing_on_col_test.flux",
						Source: "now = () => (2030-01-01T00:00:00Z)",
						Start: ast.Position{
							Column: 8,
							Line:   5,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   5,
							},
							File:   "join_missing_on_col_test.flux",
							Source: "now",
							Start: ast.Position{
								Column: 8,
								Line:   5,
							},
						},
					},
					Name: "now",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 42,
								Line:   5,
							},
							File:   "join_missing_on_col_test.flux",
							Source: "() => (2030-01-01T00:00:00Z)",
							Start: ast.Position{
								Column: 14,
								Line:   5,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   5,
								},
								File:   "join_missing_on_col_test.flux",
								Source: "(2030-01-01T00:00:00Z)",
								Start: ast.Position{
									Column: 20,
									Line:   5,
								},
							},
						},
						Expression: &ast.DateTimeLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 41,
										Line:   5,
									},
									File:   "join_missing_on_col_test.flux",
									Source: "2030-01-01T00:00:00Z",
									Start: ast.Position{
										Column: 21,
										Line:   5,
									},
								},
							},
							Value: parser.MustParseTime("2030-01-01T00:00:00Z"),
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 42,
						Line:   5,
					},
					File:   "join_missing_on_col_test.flux",
					Source: "option now = () => (2030-01-01T00:00:00Z)",
					Start: ast.Position{
						Column: 1,
						Line:   5,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   30,
					},
					File:   "join_missing_on_col_test.flux",
					Source: "inData = \"\n#datatype,string,long,dateTime:RFC3339,long,string,string,long\n#group,false,false,false,false,true,true,true\n#default,_result,,,,,,\n,result,table,_time,_value,_field,_measurement,status\n,_result,0,2019-09-12T20:00:00Z,510,resp_bytes,http_request,400\n\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,long\n#group,false,false,false,false,true,true,true,true\n#default,_result,,,,,,,\n,result,table,_time,_value,_field,_measurement,org_id,status\n,_result,1,2019-09-12T20:00:00Z,180654,resp_bytes,http_request,03b60149f6fb9000,200\n,_result,2,2019-09-12T20:00:00Z,144,resp_bytes,http_request,03b60149f6fb9000,500\n,_result,3,2019-09-12T20:00:00Z,152,resp_bytes,http_request,10603619cf2e665b,500\n\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,long\n#group,false,false,false,false,true,true,true,true\n#default,_result,,,,,,,\n,result,table,_time,_value,_field,_measurement,org_id,status\n,_result,0,2019-09-12T20:00:00Z,9654177,req_bytes,http_request,039e9eb802d3f000,204\n,_result,1,2019-09-12T20:00:00Z,33784154,req_bytes,http_request,03a2c4456f0f5000,204\n,_result,2,2019-09-12T20:00:00Z,870346480,req_bytes,http_request,03b60149f6fb9000,204\n,_result,3,2019-09-12T20:00:00Z,48275,req_bytes,http_request,03c68af671227000,204\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   7,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 7,
							Line:   7,
						},
						File:   "join_missing_on_col_test.flux",
						Source: "inData",
						Start: ast.Position{
							Column: 1,
							Line:   7,
						},
					},
				},
				Name: "inData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   30,
						},
						File:   "join_missing_on_col_test.flux",
						Source: "\"\n#datatype,string,long,dateTime:RFC3339,long,string,string,long\n#group,false,false,false,false,true,true,true\n#default,_result,,,,,,\n,result,table,_time,_value,_field,_measurement,status\n,_result,0,2019-09-12T20:00:00Z,510,resp_bytes,http_request,400\n\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,long\n#group,false,false,false,false,true,true,true,true\n#default,_result,,,,,,,\n,result,table,_time,_value,_field,_measurement,org_id,status\n,_result,1,2019-09-12T20:00:00Z,180654,resp_bytes,http_request,03b60149f6fb9000,200\n,_result,2,2019-09-12T20:00:00Z,144,resp_bytes,http_request,03b60149f6fb9000,500\n,_result,3,2019-09-12T20:00:00Z,152,resp_bytes,http_request,10603619cf2e665b,500\n\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,long\n#group,false,false,false,false,true,true,true,true\n#default,_result,,,,,,,\n,result,table,_time,_value,_field,_measurement,org_id,status\n,_result,0,2019-09-12T20:00:00Z,9654177,req_bytes,http_request,039e9eb802d3f000,204\n,_result,1,2019-09-12T20:00:00Z,33784154,req_bytes,http_request,03a2c4456f0f5000,204\n,_result,2,2019-09-12T20:00:00Z,870346480,req_bytes,http_request,03b60149f6fb9000,204\n,_result,3,2019-09-12T20:00:00Z,48275,req_bytes,http_request,03c68af671227000,204\n\"",
						Start: ast.Position{
							Column: 10,
							Line:   7,
						},
					},
				},
				Value: "\n#datatype,string,long,dateTime:RFC3339,long,string,string,long\n#group,false,false,false,false,true,true,true\n#default,_result,,,,,,\n,result,table,_time,_value,_field,_measurement,status\n,_result,0,2019-09-12T20:00:00Z,510,resp_bytes,http_request,400\n\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,long\n#group,false,false,false,false,true,true,true,true\n#default,_result,,,,,,,\n,result,table,_time,_value,_field,_measurement,org_id,status\n,_result,1,2019-09-12T20:00:00Z,180654,resp_bytes,http_request,03b60149f6fb9000,200\n,_result,2,2019-09-12T20:00:00Z,144,resp_bytes,http_request,03b60149f6fb9000,500\n,_result,3,2019-09-12T20:00:00Z,152,resp_bytes,http_request,10603619cf2e665b,500\n\n#datatype,string,long,dateTime:RFC3339,long,string,string,string,long\n#group,false,false,false,false,true,true,true,true\n#default,_result,,,,,,,\n,result,table,_time,_value,_field,_measurement,org_id,status\n,_result,0,2019-09-12T20:00:00Z,9654177,req_bytes,http_request,039e9eb802d3f000,204\n,_result,1,2019-09-12T20:00:00Z,33784154,req_bytes,http_request,03a2c4456f0f5000,204\n,_result,2,2019-09-12T20:00:00Z,870346480,req_bytes,http_request,03b60149f6fb9000,204\n,_result,3,2019-09-12T20:00:00Z,48275,req_bytes,http_request,03c68af671227000,204\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   42,
					},
					File:   "join_missing_on_col_test.flux",
					Source: "outData = \"\n#datatype,string,long,long,long,string\n#group,false,false,false,false,true\n#default,_result,,,,\n,result,table,datain,dataout,org_id\n,_result,0,9654177,,039e9eb802d3f000\n,_result,1,33784154,,03a2c4456f0f5000\n,_result,2,870346480,180798,03b60149f6fb9000\n,_result,3,48275,,03c68af671227000\n,_result,4,,152,10603619cf2e665b\n\"",
					Start: ast.Position{
						Column: 1,
						Line:   32,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 8,
							Line:   32,
						},
						File:   "join_missing_on_col_test.flux",
						Source: "outData",
						Start: ast.Position{
							Column: 1,
							Line:   32,
						},
					},
				},
				Name: "outData",
			},
			Init: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   42,
						},
						File:   "join_missing_on_col_test.flux",
						Source: "\"\n#datatype,string,long,long,long,string\n#group,false,false,false,false,true\n#default,_result,,,,\n,result,table,datain,dataout,org_id\n,_result,0,9654177,,039e9eb802d3f000\n,_result,1,33784154,,03a2c4456f0f5000\n,_result,2,870346480,180798,03b60149f6fb9000\n,_result,3,48275,,03c68af671227000\n,_result,4,,152,10603619cf2e665b\n\"",
						Start: ast.Position{
							Column: 11,
							Line:   32,
						},
					},
				},
				Value: "\n#datatype,string,long,long,long,string\n#group,false,false,false,false,true\n#default,_result,,,,\n,result,table,datain,dataout,org_id\n,_result,0,9654177,,039e9eb802d3f000\n,_result,1,33784154,,03a2c4456f0f5000\n,_result,2,870346480,180798,03b60149f6fb9000\n,_result,3,48275,,03c68af671227000\n,_result,4,,152,10603619cf2e665b\n",
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   58,
					},
					File:   "join_missing_on_col_test.flux",
					Source: "t_join_missing_on_col = (tables=<-) => {\n    lhs = tables\n        |> range(start: 2019-01-01T00:00:00Z)\n        |> filter(fn: (r) => r._field == \"resp_bytes\")\n        |> keep(columns: [\"_time\", \"org_id\", \"_value\"])\n        |> sum()\n        |> rename(columns: {_value: \"dataout\"})\n    rhs = tables\n        |> range(start: 2019-01-01T00:00:00Z)\n        |> filter(fn: (r) => r._field == \"req_bytes\")\n        |> keep(columns: [\"_time\", \"org_id\", \"_value\"])\n        |> sum()\n        |> rename(columns: {_value: \"datain\"})\n    return join(tables: {lhs: lhs, rhs: rhs}, on: [\"org_id\"])\n}",
					Start: ast.Position{
						Column: 1,
						Line:   44,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 22,
							Line:   44,
						},
						File:   "join_missing_on_col_test.flux",
						Source: "t_join_missing_on_col",
						Start: ast.Position{
							Column: 1,
							Line:   44,
						},
					},
				},
				Name: "t_join_missing_on_col",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   58,
						},
						File:   "join_missing_on_col_test.flux",
						Source: "(tables=<-) => {\n    lhs = tables\n        |> range(start: 2019-01-01T00:00:00Z)\n        |> filter(fn: (r) => r._field == \"resp_bytes\")\n        |> keep(columns: [\"_time\", \"org_id\", \"_value\"])\n        |> sum()\n        |> rename(columns: {_value: \"dataout\"})\n    rhs = tables\n        |> range(start: 2019-01-01T00:00:00Z)\n        |> filter(fn: (r) => r._field == \"req_bytes\")\n        |> keep(columns: [\"_time\", \"org_id\", \"_value\"])\n        |> sum()\n        |> rename(columns: {_value: \"datain\"})\n    return join(tables: {lhs: lhs, rhs: rhs}, on: [\"org_id\"])\n}",
						Start: ast.Position{
							Column: 25,
							Line:   44,
						},
					},
				},
				Body: &ast.Block{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 2,
								Line:   58,
							},
							File:   "join_missing_on_col_test.flux",
							Source: "{\n    lhs = tables\n        |> range(start: 2019-01-01T00:00:00Z)\n        |> filter(fn: (r) => r._field == \"resp_bytes\")\n        |> keep(columns: [\"_time\", \"org_id\", \"_value\"])\n        |> sum()\n        |> rename(columns: {_value: \"dataout\"})\n    rhs = tables\n        |> range(start: 2019-01-01T00:00:00Z)\n        |> filter(fn: (r) => r._field == \"req_bytes\")\n        |> keep(columns: [\"_time\", \"org_id\", \"_value\"])\n        |> sum()\n        |> rename(columns: {_value: \"datain\"})\n    return join(tables: {lhs: lhs, rhs: rhs}, on: [\"org_id\"])\n}",
							Start: ast.Position{
								Column: 40,
								Line:   44,
							},
						},
					},
					Body: []ast.Statement{&ast.VariableAssignment{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 48,
									Line:   50,
								},
								File:   "join_missing_on_col_test.flux",
								Source: "lhs = tables\n        |> range(start: 2019-01-01T00:00:00Z)\n        |> filter(fn: (r) => r._field == \"resp_bytes\")\n        |> keep(columns: [\"_time\", \"org_id\", \"_value\"])\n        |> sum()\n        |> rename(columns: {_value: \"dataout\"})",
								Start: ast.Position{
									Column: 5,
									Line:   45,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 8,
										Line:   45,
									},
									File:   "join_missing_on_col_test.flux",
									Source: "lhs",
									Start: ast.Position{
										Column: 5,
										Line:   45,
									},
								},
							},
							Name: "lhs",
						},
						Init: &ast.PipeExpression{
							Argument: &ast.PipeExpression{
								Argument: &ast.PipeExpression{
									Argument: &ast.PipeExpression{
										Argument: &ast.PipeExpression{
											Argument: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 17,
															Line:   45,
														},
														File:   "join_missing_on_col_test.flux",
														Source: "tables",
														Start: ast.Position{
															Column: 11,
															Line:   45,
														},
													},
												},
												Name: "tables",
											},
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 46,
														Line:   46,
													},
													File:   "join_missing_on_col_test.flux",
													Source: "tables\n        |> range(start: 2019-01-01T00:00:00Z)",
													Start: ast.Position{
														Column: 11,
														Line:   45,
													},
												},
											},
											Call: &ast.CallExpression{
												Arguments: []ast.Expression{&ast.ObjectExpression{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 45,
																Line:   46,
															},
															File:   "join_missing_on_col_test.flux",
															Source: "start: 2019-01-01T00:00:00Z",
															Start: ast.Position{
																Column: 18,
																Line:   46,
															},
														},
													},
													Properties: []*ast.Property{&ast.Property{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 45,
																	Line:   46,
																},
																File:   "join_missing_on_col_test.flux",
																Source: "start: 2019-01-01T00:00:00Z",
																Start: ast.Position{
																	Column: 18,
																	Line:   46,
																},
															},
														},
														Key: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 23,
																		Line:   46,
																	},
																	File:   "join_missing_on_col_test.flux",
																	Source: "start",
																	Start: ast.Position{
																		Column: 18,
																		Line:   46,
																	},
																},
															},
															Name: "start",
														},
														Value: &ast.DateTimeLiteral{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 45,
																		Line:   46,
																	},
																	File:   "join_missing_on_col_test.flux",
																	Source: "2019-01-01T00:00:00Z",
																	Start: ast.Position{
																		Column: 25,
																		Line:   46,
																	},
																},
															},
															Value: parser.MustParseTime("2019-01-01T00:00:00Z"),
														},
													}},
													With: nil,
												}},
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 46,
															Line:   46,
														},
														File:   "join_missing_on_col_test.flux",
														Source: "range(start: 2019-01-01T00:00:00Z)",
														Start: ast.Position{
															Column: 12,
															Line:   46,
														},
													},
												},
												Callee: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 17,
																Line:   46,
															},
															File:   "join_missing_on_col_test.flux",
															Source: "range",
															Start: ast.Position{
																Column: 12,
																Line:   46,
															},
														},
													},
													Name: "range",
												},
											},
										},
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 55,
													Line:   47,
												},
												File:   "join_missing_on_col_test.flux",
												Source: "tables\n        |> range(start: 2019-01-01T00:00:00Z)\n        |> filter(fn: (r) => r._field == \"resp_bytes\")",
												Start: ast.Position{
													Column: 11,
													Line:   45,
												},
											},
										},
										Call: &ast.CallExpression{
											Arguments: []ast.Expression{&ast.ObjectExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 54,
															Line:   47,
														},
														File:   "join_missing_on_col_test.flux",
														Source: "fn: (r) => r._field == \"resp_bytes\"",
														Start: ast.Position{
															Column: 19,
															Line:   47,
														},
													},
												},
												Properties: []*ast.Property{&ast.Property{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 54,
																Line:   47,
															},
															File:   "join_missing_on_col_test.flux",
															Source: "fn: (r) => r._field == \"resp_bytes\"",
															Start: ast.Position{
																Column: 19,
																Line:   47,
															},
														},
													},
													Key: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 21,
																	Line:   47,
																},
																File:   "join_missing_on_col_test.flux",
																Source: "fn",
																Start: ast.Position{
																	Column: 19,
																	Line:   47,
																},
															},
														},
														Name: "fn",
													},
													Value: &ast.FunctionExpression{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 54,
																	Line:   47,
																},
																File:   "join_missing_on_col_test.flux",
																Source: "(r) => r._field == \"resp_bytes\"",
																Start: ast.Position{
																	Column: 23,
																	Line:   47,
																},
															},
														},
														Body: &ast.BinaryExpression{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 54,
																		Line:   47,
																	},
																	File:   "join_missing_on_col_test.flux",
																	Source: "r._field == \"resp_bytes\"",
																	Start: ast.Position{
																		Column: 30,
																		Line:   47,
																	},
																},
															},
															Left: &ast.MemberExpression{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 38,
																			Line:   47,
																		},
																		File:   "join_missing_on_col_test.flux",
																		Source: "r._field",
																		Start: ast.Position{
																			Column: 30,
																			Line:   47,
																		},
																	},
																},
																Object: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 31,
																				Line:   47,
																			},
																			File:   "join_missing_on_col_test.flux",
																			Source: "r",
																			Start: ast.Position{
																				Column: 30,
																				Line:   47,
																			},
																		},
																	},
																	Name: "r",
																},
																Property: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 38,
																				Line:   47,
																			},
																			File:   "join_missing_on_col_test.flux",
																			Source: "_field",
																			Start: ast.Position{
																				Column: 32,
																				Line:   47,
																			},
																		},
																	},
																	Name: "_field",
																},
															},
															Operator: 17,
															Right: &ast.StringLiteral{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 54,
																			Line:   47,
																		},
																		File:   "join_missing_on_col_test.flux",
																		Source: "\"resp_bytes\"",
																		Start: ast.Position{
																			Column: 42,
																			Line:   47,
																		},
																	},
																},
																Value: "resp_bytes",
															},
														},
														Params: []*ast.Property{&ast.Property{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 25,
																		Line:   47,
																	},
																	File:   "join_missing_on_col_test.flux",
																	Source: "r",
																	Start: ast.Position{
																		Column: 24,
																		Line:   47,
																	},
																},
															},
															Key: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 25,
																			Line:   47,
																		},
																		File:   "join_missing_on_col_test.flux",
																		Source: "r",
																		Start: ast.Position{
																			Column: 24,
																			Line:   47,
																		},
																	},
																},
																Name: "r",
															},
															Value: nil,
														}},
													},
												}},
												With: nil,
											}},
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 55,
														Line:   47,
													},
													File:   "join_missing_on_col_test.flux",
													Source: "filter(fn: (r) => r._field == \"resp_bytes\")",
													Start: ast.Position{
														Column: 12,
														Line:   47,
													},
												},
											},
											Callee: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 18,
															Line:   47,
														},
														File:   "join_missing_on_col_test.flux",
														Source: "filter",
														Start: ast.Position{
															Column: 12,
															Line:   47,
														},
													},
												},
												Name: "filter",
											},
										},
									},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 56,
												Line:   48,
											},
											File:   "join_missing_on_col_test.flux",
											Source: "tables\n        |> range(start: 2019-01-01T00:00:00Z)\n        |> filter(fn: (r) => r._field == \"resp_bytes\")\n        |> keep(columns: [\"_time\", \"org_id\", \"_value\"])",
											Start: ast.Position{
												Column: 11,
												Line:   45,
											},
										},
									},
									Call: &ast.CallExpression{
										Arguments: []ast.Expression{&ast.ObjectExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 55,
														Line:   48,
													},
													File:   "join_missing_on_col_test.flux",
													Source: "columns: [\"_time\", \"org_id\", \"_value\"]",
													Start: ast.Position{
														Column: 17,
														Line:   48,
													},
												},
											},
											Properties: []*ast.Property{&ast.Property{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 55,
															Line:   48,
														},
														File:   "join_missing_on_col_test.flux",
														Source: "columns: [\"_time\", \"org_id\", \"_value\"]",
														Start: ast.Position{
															Column: 17,
															Line:   48,
														},
													},
												},
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 24,
																Line:   48,
															},
															File:   "join_missing_on_col_test.flux",
															Source: "columns",
															Start: ast.Position{
																Column: 17,
																Line:   48,
															},
														},
													},
													Name: "columns",
												},
												Value: &ast.ArrayExpression{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 55,
																Line:   48,
															},
															File:   "join_missing_on_col_test.flux",
															Source: "[\"_time\", \"org_id\", \"_value\"]",
															Start: ast.Position{
																Column: 26,
																Line:   48,
															},
														},
													},
													Elements: []ast.Expression{&ast.StringLiteral{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 34,
																	Line:   48,
																},
																File:   "join_missing_on_col_test.flux",
																Source: "\"_time\"",
																Start: ast.Position{
																	Column: 27,
																	Line:   48,
																},
															},
														},
														Value: "_time",
													}, &ast.StringLiteral{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 44,
																	Line:   48,
																},
																File:   "join_missing_on_col_test.flux",
																Source: "\"org_id\"",
																Start: ast.Position{
																	Column: 36,
																	Line:   48,
																},
															},
														},
														Value: "org_id",
													}, &ast.StringLiteral{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 54,
																	Line:   48,
																},
																File:   "join_missing_on_col_test.flux",
																Source: "\"_value\"",
																Start: ast.Position{
																	Column: 46,
																	Line:   48,
																},
															},
														},
														Value: "_value",
													}},
												},
											}},
											With: nil,
										}},
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 56,
													Line:   48,
												},
												File:   "join_missing_on_col_test.flux",
												Source: "keep(columns: [\"_time\", \"org_id\", \"_value\"])",
												Start: ast.Position{
													Column: 12,
													Line:   48,
												},
											},
										},
										Callee: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 16,
														Line:   48,
													},
													File:   "join_missing_on_col_test.flux",
													Source: "keep",
													Start: ast.Position{
														Column: 12,
														Line:   48,
													},
												},
											},
											Name: "keep",
										},
									},
								},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 17,
											Line:   49,
										},
										File:   "join_missing_on_col_test.flux",
										Source: "tables\n        |> range(start: 2019-01-01T00:00:00Z)\n        |> filter(fn: (r) => r._field == \"resp_bytes\")\n        |> keep(columns: [\"_time\", \"org_id\", \"_value\"])\n        |> sum()",
										Start: ast.Position{
											Column: 11,
											Line:   45,
										},
									},
								},
								Call: &ast.CallExpression{
									Arguments: nil,
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 17,
												Line:   49,
											},
											File:   "join_missing_on_col_test.flux",
											Source: "sum()",
											Start: ast.Position{
												Column: 12,
												Line:   49,
											},
										},
									},
									Callee: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 15,
													Line:   49,
												},
												File:   "join_missing_on_col_test.flux",
												Source: "sum",
												Start: ast.Position{
													Column: 12,
													Line:   49,
												},
											},
										},
										Name: "sum",
									},
								},
							},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 48,
										Line:   50,
									},
									File:   "join_missing_on_col_test.flux",
									Source: "tables\n        |> range(start: 2019-01-01T00:00:00Z)\n        |> filter(fn: (r) => r._field == \"resp_bytes\")\n        |> keep(columns: [\"_time\", \"org_id\", \"_value\"])\n        |> sum()\n        |> rename(columns: {_value: \"dataout\"})",
									Start: ast.Position{
										Column: 11,
										Line:   45,
									},
								},
							},
							Call: &ast.CallExpression{
								Arguments: []ast.Expression{&ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 47,
												Line:   50,
											},
											File:   "join_missing_on_col_test.flux",
											Source: "columns: {_value: \"dataout\"}",
											Start: ast.Position{
												Column: 19,
												Line:   50,
											},
										},
									},
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 47,
													Line:   50,
												},
												File:   "join_missing_on_col_test.flux",
												Source: "columns: {_value: \"dataout\"}",
												Start: ast.Position{
													Column: 19,
													Line:   50,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 26,
														Line:   50,
													},
													File:   "join_missing_on_col_test.flux",
													Source: "columns",
													Start: ast.Position{
														Column: 19,
														Line:   50,
													},
												},
											},
											Name: "columns",
										},
										Value: &ast.ObjectExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 47,
														Line:   50,
													},
													File:   "join_missing_on_col_test.flux",
													Source: "{_value: \"dataout\"}",
													Start: ast.Position{
														Column: 28,
														Line:   50,
													},
												},
											},
											Properties: []*ast.Property{&ast.Property{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 46,
															Line:   50,
														},
														File:   "join_missing_on_col_test.flux",
														Source: "_value: \"dataout\"",
														Start: ast.Position{
															Column: 29,
															Line:   50,
														},
													},
												},
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 35,
																Line:   50,
															},
															File:   "join_missing_on_col_test.flux",
															Source: "_value",
															Start: ast.Position{
																Column: 29,
																Line:   50,
															},
														},
													},
													Name: "_value",
												},
												Value: &ast.StringLiteral{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 46,
																Line:   50,
															},
															File:   "join_missing_on_col_test.flux",
															Source: "\"dataout\"",
															Start: ast.Position{
																Column: 37,
																Line:   50,
															},
														},
													},
													Value: "dataout",
												},
											}},
											With: nil,
										},
									}},
									With: nil,
								}},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 48,
											Line:   50,
										},
										File:   "join_missing_on_col_test.flux",
										Source: "rename(columns: {_value: \"dataout\"})",
										Start: ast.Position{
											Column: 12,
											Line:   50,
										},
									},
								},
								Callee: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 18,
												Line:   50,
											},
											File:   "join_missing_on_col_test.flux",
											Source: "rename",
											Start: ast.Position{
												Column: 12,
												Line:   50,
											},
										},
									},
									Name: "rename",
								},
							},
						},
					}, &ast.VariableAssignment{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 47,
									Line:   56,
								},
								File:   "join_missing_on_col_test.flux",
								Source: "rhs = tables\n        |> range(start: 2019-01-01T00:00:00Z)\n        |> filter(fn: (r) => r._field == \"req_bytes\")\n        |> keep(columns: [\"_time\", \"org_id\", \"_value\"])\n        |> sum()\n        |> rename(columns: {_value: \"datain\"})",
								Start: ast.Position{
									Column: 5,
									Line:   51,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 8,
										Line:   51,
									},
									File:   "join_missing_on_col_test.flux",
									Source: "rhs",
									Start: ast.Position{
										Column: 5,
										Line:   51,
									},
								},
							},
							Name: "rhs",
						},
						Init: &ast.PipeExpression{
							Argument: &ast.PipeExpression{
								Argument: &ast.PipeExpression{
									Argument: &ast.PipeExpression{
										Argument: &ast.PipeExpression{
											Argument: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 17,
															Line:   51,
														},
														File:   "join_missing_on_col_test.flux",
														Source: "tables",
														Start: ast.Position{
															Column: 11,
															Line:   51,
														},
													},
												},
												Name: "tables",
											},
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 46,
														Line:   52,
													},
													File:   "join_missing_on_col_test.flux",
													Source: "tables\n        |> range(start: 2019-01-01T00:00:00Z)",
													Start: ast.Position{
														Column: 11,
														Line:   51,
													},
												},
											},
											Call: &ast.CallExpression{
												Arguments: []ast.Expression{&ast.ObjectExpression{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 45,
																Line:   52,
															},
															File:   "join_missing_on_col_test.flux",
															Source: "start: 2019-01-01T00:00:00Z",
															Start: ast.Position{
																Column: 18,
																Line:   52,
															},
														},
													},
													Properties: []*ast.Property{&ast.Property{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 45,
																	Line:   52,
																},
																File:   "join_missing_on_col_test.flux",
																Source: "start: 2019-01-01T00:00:00Z",
																Start: ast.Position{
																	Column: 18,
																	Line:   52,
																},
															},
														},
														Key: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 23,
																		Line:   52,
																	},
																	File:   "join_missing_on_col_test.flux",
																	Source: "start",
																	Start: ast.Position{
																		Column: 18,
																		Line:   52,
																	},
																},
															},
															Name: "start",
														},
														Value: &ast.DateTimeLiteral{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 45,
																		Line:   52,
																	},
																	File:   "join_missing_on_col_test.flux",
																	Source: "2019-01-01T00:00:00Z",
																	Start: ast.Position{
																		Column: 25,
																		Line:   52,
																	},
																},
															},
															Value: parser.MustParseTime("2019-01-01T00:00:00Z"),
														},
													}},
													With: nil,
												}},
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 46,
															Line:   52,
														},
														File:   "join_missing_on_col_test.flux",
														Source: "range(start: 2019-01-01T00:00:00Z)",
														Start: ast.Position{
															Column: 12,
															Line:   52,
														},
													},
												},
												Callee: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 17,
																Line:   52,
															},
															File:   "join_missing_on_col_test.flux",
															Source: "range",
															Start: ast.Position{
																Column: 12,
																Line:   52,
															},
														},
													},
													Name: "range",
												},
											},
										},
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 54,
													Line:   53,
												},
												File:   "join_missing_on_col_test.flux",
												Source: "tables\n        |> range(start: 2019-01-01T00:00:00Z)\n        |> filter(fn: (r) => r._field == \"req_bytes\")",
												Start: ast.Position{
													Column: 11,
													Line:   51,
												},
											},
										},
										Call: &ast.CallExpression{
											Arguments: []ast.Expression{&ast.ObjectExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 53,
															Line:   53,
														},
														File:   "join_missing_on_col_test.flux",
														Source: "fn: (r) => r._field == \"req_bytes\"",
														Start: ast.Position{
															Column: 19,
															Line:   53,
														},
													},
												},
												Properties: []*ast.Property{&ast.Property{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 53,
																Line:   53,
															},
															File:   "join_missing_on_col_test.flux",
															Source: "fn: (r) => r._field == \"req_bytes\"",
															Start: ast.Position{
																Column: 19,
																Line:   53,
															},
														},
													},
													Key: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 21,
																	Line:   53,
																},
																File:   "join_missing_on_col_test.flux",
																Source: "fn",
																Start: ast.Position{
																	Column: 19,
																	Line:   53,
																},
															},
														},
														Name: "fn",
													},
													Value: &ast.FunctionExpression{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 53,
																	Line:   53,
																},
																File:   "join_missing_on_col_test.flux",
																Source: "(r) => r._field == \"req_bytes\"",
																Start: ast.Position{
																	Column: 23,
																	Line:   53,
																},
															},
														},
														Body: &ast.BinaryExpression{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 53,
																		Line:   53,
																	},
																	File:   "join_missing_on_col_test.flux",
																	Source: "r._field == \"req_bytes\"",
																	Start: ast.Position{
																		Column: 30,
																		Line:   53,
																	},
																},
															},
															Left: &ast.MemberExpression{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 38,
																			Line:   53,
																		},
																		File:   "join_missing_on_col_test.flux",
																		Source: "r._field",
																		Start: ast.Position{
																			Column: 30,
																			Line:   53,
																		},
																	},
																},
																Object: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 31,
																				Line:   53,
																			},
																			File:   "join_missing_on_col_test.flux",
																			Source: "r",
																			Start: ast.Position{
																				Column: 30,
																				Line:   53,
																			},
																		},
																	},
																	Name: "r",
																},
																Property: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 38,
																				Line:   53,
																			},
																			File:   "join_missing_on_col_test.flux",
																			Source: "_field",
																			Start: ast.Position{
																				Column: 32,
																				Line:   53,
																			},
																		},
																	},
																	Name: "_field",
																},
															},
															Operator: 17,
															Right: &ast.StringLiteral{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 53,
																			Line:   53,
																		},
																		File:   "join_missing_on_col_test.flux",
																		Source: "\"req_bytes\"",
																		Start: ast.Position{
																			Column: 42,
																			Line:   53,
																		},
																	},
																},
																Value: "req_bytes",
															},
														},
														Params: []*ast.Property{&ast.Property{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 25,
																		Line:   53,
																	},
																	File:   "join_missing_on_col_test.flux",
																	Source: "r",
																	Start: ast.Position{
																		Column: 24,
																		Line:   53,
																	},
																},
															},
															Key: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 25,
																			Line:   53,
																		},
																		File:   "join_missing_on_col_test.flux",
																		Source: "r",
																		Start: ast.Position{
																			Column: 24,
																			Line:   53,
																		},
																	},
																},
																Name: "r",
															},
															Value: nil,
														}},
													},
												}},
												With: nil,
											}},
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 54,
														Line:   53,
													},
													File:   "join_missing_on_col_test.flux",
													Source: "filter(fn: (r) => r._field == \"req_bytes\")",
													Start: ast.Position{
														Column: 12,
														Line:   53,
													},
												},
											},
											Callee: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 18,
															Line:   53,
														},
														File:   "join_missing_on_col_test.flux",
														Source: "filter",
														Start: ast.Position{
															Column: 12,
															Line:   53,
														},
													},
												},
												Name: "filter",
											},
										},
									},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 56,
												Line:   54,
											},
											File:   "join_missing_on_col_test.flux",
											Source: "tables\n        |> range(start: 2019-01-01T00:00:00Z)\n        |> filter(fn: (r) => r._field == \"req_bytes\")\n        |> keep(columns: [\"_time\", \"org_id\", \"_value\"])",
											Start: ast.Position{
												Column: 11,
												Line:   51,
											},
										},
									},
									Call: &ast.CallExpression{
										Arguments: []ast.Expression{&ast.ObjectExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 55,
														Line:   54,
													},
													File:   "join_missing_on_col_test.flux",
													Source: "columns: [\"_time\", \"org_id\", \"_value\"]",
													Start: ast.Position{
														Column: 17,
														Line:   54,
													},
												},
											},
											Properties: []*ast.Property{&ast.Property{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 55,
															Line:   54,
														},
														File:   "join_missing_on_col_test.flux",
														Source: "columns: [\"_time\", \"org_id\", \"_value\"]",
														Start: ast.Position{
															Column: 17,
															Line:   54,
														},
													},
												},
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 24,
																Line:   54,
															},
															File:   "join_missing_on_col_test.flux",
															Source: "columns",
															Start: ast.Position{
																Column: 17,
																Line:   54,
															},
														},
													},
													Name: "columns",
												},
												Value: &ast.ArrayExpression{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 55,
																Line:   54,
															},
															File:   "join_missing_on_col_test.flux",
															Source: "[\"_time\", \"org_id\", \"_value\"]",
															Start: ast.Position{
																Column: 26,
																Line:   54,
															},
														},
													},
													Elements: []ast.Expression{&ast.StringLiteral{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 34,
																	Line:   54,
																},
																File:   "join_missing_on_col_test.flux",
																Source: "\"_time\"",
																Start: ast.Position{
																	Column: 27,
																	Line:   54,
																},
															},
														},
														Value: "_time",
													}, &ast.StringLiteral{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 44,
																	Line:   54,
																},
																File:   "join_missing_on_col_test.flux",
																Source: "\"org_id\"",
																Start: ast.Position{
																	Column: 36,
																	Line:   54,
																},
															},
														},
														Value: "org_id",
													}, &ast.StringLiteral{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 54,
																	Line:   54,
																},
																File:   "join_missing_on_col_test.flux",
																Source: "\"_value\"",
																Start: ast.Position{
																	Column: 46,
																	Line:   54,
																},
															},
														},
														Value: "_value",
													}},
												},
											}},
											With: nil,
										}},
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 56,
													Line:   54,
												},
												File:   "join_missing_on_col_test.flux",
												Source: "keep(columns: [\"_time\", \"org_id\", \"_value\"])",
												Start: ast.Position{
													Column: 12,
													Line:   54,
												},
											},
										},
										Callee: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 16,
														Line:   54,
													},
													File:   "join_missing_on_col_test.flux",
													Source: "keep",
													Start: ast.Position{
														Column: 12,
														Line:   54,
													},
												},
											},
											Name: "keep",
										},
									},
								},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 17,
											Line:   55,
										},
										File:   "join_missing_on_col_test.flux",
										Source: "tables\n        |> range(start: 2019-01-01T00:00:00Z)\n        |> filter(fn: (r) => r._field == \"req_bytes\")\n        |> keep(columns: [\"_time\", \"org_id\", \"_value\"])\n        |> sum()",
										Start: ast.Position{
											Column: 11,
											Line:   51,
										},
									},
								},
								Call: &ast.CallExpression{
									Arguments: nil,
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 17,
												Line:   55,
											},
											File:   "join_missing_on_col_test.flux",
											Source: "sum()",
											Start: ast.Position{
												Column: 12,
												Line:   55,
											},
										},
									},
									Callee: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 15,
													Line:   55,
												},
												File:   "join_missing_on_col_test.flux",
												Source: "sum",
												Start: ast.Position{
													Column: 12,
													Line:   55,
												},
											},
										},
										Name: "sum",
									},
								},
							},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 47,
										Line:   56,
									},
									File:   "join_missing_on_col_test.flux",
									Source: "tables\n        |> range(start: 2019-01-01T00:00:00Z)\n        |> filter(fn: (r) => r._field == \"req_bytes\")\n        |> keep(columns: [\"_time\", \"org_id\", \"_value\"])\n        |> sum()\n        |> rename(columns: {_value: \"datain\"})",
									Start: ast.Position{
										Column: 11,
										Line:   51,
									},
								},
							},
							Call: &ast.CallExpression{
								Arguments: []ast.Expression{&ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 46,
												Line:   56,
											},
											File:   "join_missing_on_col_test.flux",
											Source: "columns: {_value: \"datain\"}",
											Start: ast.Position{
												Column: 19,
												Line:   56,
											},
										},
									},
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 46,
													Line:   56,
												},
												File:   "join_missing_on_col_test.flux",
												Source: "columns: {_value: \"datain\"}",
												Start: ast.Position{
													Column: 19,
													Line:   56,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 26,
														Line:   56,
													},
													File:   "join_missing_on_col_test.flux",
													Source: "columns",
													Start: ast.Position{
														Column: 19,
														Line:   56,
													},
												},
											},
											Name: "columns",
										},
										Value: &ast.ObjectExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 46,
														Line:   56,
													},
													File:   "join_missing_on_col_test.flux",
													Source: "{_value: \"datain\"}",
													Start: ast.Position{
														Column: 28,
														Line:   56,
													},
												},
											},
											Properties: []*ast.Property{&ast.Property{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 45,
															Line:   56,
														},
														File:   "join_missing_on_col_test.flux",
														Source: "_value: \"datain\"",
														Start: ast.Position{
															Column: 29,
															Line:   56,
														},
													},
												},
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 35,
																Line:   56,
															},
															File:   "join_missing_on_col_test.flux",
															Source: "_value",
															Start: ast.Position{
																Column: 29,
																Line:   56,
															},
														},
													},
													Name: "_value",
												},
												Value: &ast.StringLiteral{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 45,
																Line:   56,
															},
															File:   "join_missing_on_col_test.flux",
															Source: "\"datain\"",
															Start: ast.Position{
																Column: 37,
																Line:   56,
															},
														},
													},
													Value: "datain",
												},
											}},
											With: nil,
										},
									}},
									With: nil,
								}},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 47,
											Line:   56,
										},
										File:   "join_missing_on_col_test.flux",
										Source: "rename(columns: {_value: \"datain\"})",
										Start: ast.Position{
											Column: 12,
											Line:   56,
										},
									},
								},
								Callee: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 18,
												Line:   56,
											},
											File:   "join_missing_on_col_test.flux",
											Source: "rename",
											Start: ast.Position{
												Column: 12,
												Line:   56,
											},
										},
									},
									Name: "rename",
								},
							},
						},
					}, &ast.ReturnStatement{
						Argument: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 61,
											Line:   57,
										},
										File:   "join_missing_on_col_test.flux",
										Source: "tables: {lhs: lhs, rhs: rhs}, on: [\"org_id\"]",
										Start: ast.Position{
											Column: 17,
											Line:   57,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 45,
												Line:   57,
											},
											File:   "join_missing_on_col_test.flux",
											Source: "tables: {lhs: lhs, rhs: rhs}",
											Start: ast.Position{
												Column: 17,
												Line:   57,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 23,
													Line:   57,
												},
												File:   "join_missing_on_col_test.flux",
												Source: "tables",
												Start: ast.Position{
													Column: 17,
													Line:   57,
												},
											},
										},
										Name: "tables",
									},
									Value: &ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 45,
													Line:   57,
												},
												File:   "join_missing_on_col_test.flux",
												Source: "{lhs: lhs, rhs: rhs}",
												Start: ast.Position{
													Column: 25,
													Line:   57,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 34,
														Line:   57,
													},
													File:   "join_missing_on_col_test.flux",
													Source: "lhs: lhs",
													Start: ast.Position{
														Column: 26,
														Line:   57,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 29,
															Line:   57,
														},
														File:   "join_missing_on_col_test.flux",
														Source: "lhs",
														Start: ast.Position{
															Column: 26,
															Line:   57,
														},
													},
												},
												Name: "lhs",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 34,
															Line:   57,
														},
														File:   "join_missing_on_col_test.flux",
														Source: "lhs",
														Start: ast.Position{
															Column: 31,
															Line:   57,
														},
													},
												},
												Name: "lhs",
											},
										}, &ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 44,
														Line:   57,
													},
													File:   "join_missing_on_col_test.flux",
													Source: "rhs: rhs",
													Start: ast.Position{
														Column: 36,
														Line:   57,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 39,
															Line:   57,
														},
														File:   "join_missing_on_col_test.flux",
														Source: "rhs",
														Start: ast.Position{
															Column: 36,
															Line:   57,
														},
													},
												},
												Name: "rhs",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 44,
															Line:   57,
														},
														File:   "join_missing_on_col_test.flux",
														Source: "rhs",
														Start: ast.Position{
															Column: 41,
															Line:   57,
														},
													},
												},
												Name: "rhs",
											},
										}},
										With: nil,
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 61,
												Line:   57,
											},
											File:   "join_missing_on_col_test.flux",
											Source: "on: [\"org_id\"]",
											Start: ast.Position{
												Column: 47,
												Line:   57,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 49,
													Line:   57,
												},
												File:   "join_missing_on_col_test.flux",
												Source: "on",
												Start: ast.Position{
													Column: 47,
													Line:   57,
												},
											},
										},
										Name: "on",
									},
									Value: &ast.ArrayExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 61,
													Line:   57,
												},
												File:   "join_missing_on_col_test.flux",
												Source: "[\"org_id\"]",
												Start: ast.Position{
													Column: 51,
													Line:   57,
												},
											},
										},
										Elements: []ast.Expression{&ast.StringLiteral{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 60,
														Line:   57,
													},
													File:   "join_missing_on_col_test.flux",
													Source: "\"org_id\"",
													Start: ast.Position{
														Column: 52,
														Line:   57,
													},
												},
											},
											Value: "org_id",
										}},
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 62,
										Line:   57,
									},
									File:   "join_missing_on_col_test.flux",
									Source: "join(tables: {lhs: lhs, rhs: rhs}, on: [\"org_id\"])",
									Start: ast.Position{
										Column: 12,
										Line:   57,
									},
								},
							},
							Callee: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 16,
											Line:   57,
										},
										File:   "join_missing_on_col_test.flux",
										Source: "join",
										Start: ast.Position{
											Column: 12,
											Line:   57,
										},
									},
								},
								Name: "join",
							},
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 62,
									Line:   57,
								},
								File:   "join_missing_on_col_test.flux",
								Source: "return join(tables: {lhs: lhs, rhs: rhs}, on: [\"org_id\"])",
								Start: ast.Position{
									Column: 5,
									Line:   57,
								},
							},
						},
					}},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 35,
								Line:   44,
							},
							File:   "join_missing_on_col_test.flux",
							Source: "tables=<-",
							Start: ast.Position{
								Column: 26,
								Line:   44,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 32,
									Line:   44,
								},
								File:   "join_missing_on_col_test.flux",
								Source: "tables",
								Start: ast.Position{
									Column: 26,
									Line:   44,
								},
							},
						},
						Name: "tables",
					},
					Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 35,
								Line:   44,
							},
							File:   "join_missing_on_col_test.flux",
							Source: "<-",
							Start: ast.Position{
								Column: 33,
								Line:   44,
							},
						},
					}},
				}},
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 112,
							Line:   61,
						},
						File:   "join_missing_on_col_test.flux",
						Source: "_join_missing_on_col = () =>\n    ({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_join_missing_on_col})",
						Start: ast.Position{
							Column: 6,
							Line:   60,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 26,
								Line:   60,
							},
							File:   "join_missing_on_col_test.flux",
							Source: "_join_missing_on_col",
							Start: ast.Position{
								Column: 6,
								Line:   60,
							},
						},
					},
					Name: "_join_missing_on_col",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 112,
								Line:   61,
							},
							File:   "join_missing_on_col_test.flux",
							Source: "() =>\n    ({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_join_missing_on_col})",
							Start: ast.Position{
								Column: 29,
								Line:   60,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 112,
									Line:   61,
								},
								File:   "join_missing_on_col_test.flux",
								Source: "({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_join_missing_on_col})",
								Start: ast.Position{
									Column: 5,
									Line:   61,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 111,
										Line:   61,
									},
									File:   "join_missing_on_col_test.flux",
									Source: "{input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_join_missing_on_col}",
									Start: ast.Position{
										Column: 6,
										Line:   61,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 46,
											Line:   61,
										},
										File:   "join_missing_on_col_test.flux",
										Source: "input: testing.loadStorage(csv: inData)",
										Start: ast.Position{
											Column: 7,
											Line:   61,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 12,
												Line:   61,
											},
											File:   "join_missing_on_col_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 7,
												Line:   61,
											},
										},
									},
									Name: "input",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 45,
													Line:   61,
												},
												File:   "join_missing_on_col_test.flux",
												Source: "csv: inData",
												Start: ast.Position{
													Column: 34,
													Line:   61,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 45,
														Line:   61,
													},
													File:   "join_missing_on_col_test.flux",
													Source: "csv: inData",
													Start: ast.Position{
														Column: 34,
														Line:   61,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 37,
															Line:   61,
														},
														File:   "join_missing_on_col_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 34,
															Line:   61,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 45,
															Line:   61,
														},
														File:   "join_missing_on_col_test.flux",
														Source: "inData",
														Start: ast.Position{
															Column: 39,
															Line:   61,
														},
													},
												},
												Name: "inData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 46,
												Line:   61,
											},
											File:   "join_missing_on_col_test.flux",
											Source: "testing.loadStorage(csv: inData)",
											Start: ast.Position{
												Column: 14,
												Line:   61,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 33,
													Line:   61,
												},
												File:   "join_missing_on_col_test.flux",
												Source: "testing.loadStorage",
												Start: ast.Position{
													Column: 14,
													Line:   61,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 21,
														Line:   61,
													},
													File:   "join_missing_on_col_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 14,
														Line:   61,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 33,
														Line:   61,
													},
													File:   "join_missing_on_col_test.flux",
													Source: "loadStorage",
													Start: ast.Position{
														Column: 22,
														Line:   61,
													},
												},
											},
											Name: "loadStorage",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 83,
											Line:   61,
										},
										File:   "join_missing_on_col_test.flux",
										Source: "want: testing.loadMem(csv: outData)",
										Start: ast.Position{
											Column: 48,
											Line:   61,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 52,
												Line:   61,
											},
											File:   "join_missing_on_col_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 48,
												Line:   61,
											},
										},
									},
									Name: "want",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 82,
													Line:   61,
												},
												File:   "join_missing_on_col_test.flux",
												Source: "csv: outData",
												Start: ast.Position{
													Column: 70,
													Line:   61,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 82,
														Line:   61,
													},
													File:   "join_missing_on_col_test.flux",
													Source: "csv: outData",
													Start: ast.Position{
														Column: 70,
														Line:   61,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 73,
															Line:   61,
														},
														File:   "join_missing_on_col_test.flux",
														Source: "csv",
														Start: ast.Position{
															Column: 70,
															Line:   61,
														},
													},
												},
												Name: "csv",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 82,
															Line:   61,
														},
														File:   "join_missing_on_col_test.flux",
														Source: "outData",
														Start: ast.Position{
															Column: 75,
															Line:   61,
														},
													},
												},
												Name: "outData",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 83,
												Line:   61,
											},
											File:   "join_missing_on_col_test.flux",
											Source: "testing.loadMem(csv: outData)",
											Start: ast.Position{
												Column: 54,
												Line:   61,
											},
										},
									},
									Callee: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 69,
													Line:   61,
												},
												File:   "join_missing_on_col_test.flux",
												Source: "testing.loadMem",
												Start: ast.Position{
													Column: 54,
													Line:   61,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 61,
														Line:   61,
													},
													File:   "join_missing_on_col_test.flux",
													Source: "testing",
													Start: ast.Position{
														Column: 54,
														Line:   61,
													},
												},
											},
											Name: "testing",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 69,
														Line:   61,
													},
													File:   "join_missing_on_col_test.flux",
													Source: "loadMem",
													Start: ast.Position{
														Column: 62,
														Line:   61,
													},
												},
											},
											Name: "loadMem",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 110,
											Line:   61,
										},
										File:   "join_missing_on_col_test.flux",
										Source: "fn: t_join_missing_on_col",
										Start: ast.Position{
											Column: 85,
											Line:   61,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 87,
												Line:   61,
											},
											File:   "join_missing_on_col_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 85,
												Line:   61,
											},
										},
									},
									Name: "fn",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 110,
												Line:   61,
											},
											File:   "join_missing_on_col_test.flux",
											Source: "t_join_missing_on_col",
											Start: ast.Position{
												Column: 89,
												Line:   61,
											},
										},
									},
									Name: "t_join_missing_on_col",
								},
							}},
							With: nil,
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 112,
						Line:   61,
					},
					File:   "join_missing_on_col_test.flux",
					Source: "test _join_missing_on_col = () =>\n    ({input: testing.loadStorage(csv: inData), want: testing.loadMem(csv: outData), fn: t_join_missing_on_col})",
					Start: ast.Position{
						Column: 1,
						Line:   60,
					},
				},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   3,
					},
					File:   "join_missing_on_col_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   3,
						},
						File:   "join_missing_on_col_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "testing",
			},
		}},
		Name: "join_missing_on_col_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 22,
						Line:   1,
					},
					File:   "join_missing_on_col_test.flux",
					Source: "package universe_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 22,
							Line:   1,
						},
						File:   "join_missing_on_col_test.flux",
						Source: "universe_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "main",
			},
		},
	}},
	Package: "main",
	Path:    "",
}}
